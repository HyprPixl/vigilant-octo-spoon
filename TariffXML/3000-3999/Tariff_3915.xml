<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C003501</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>680</tariff_id>
    <tariff_title>Agreements</tariff_title>
    <tariff_export_date>2025-09-16T20:08Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Shared Facilities Agreement</record_title>
      <record_content_desc>Rising Tree</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1100000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-08-29</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>RISING TREE
SHARED FACILITIES AGREEMENT



BY AND AMONG



RISING TREE WIND FARM LLC

RISING TREE WIND FARM II LLC

AND

RISING TREE WIND FARM III LLC


EXECUTED AS OF DECEMBER 3, 2014


Table of Contents
ARTICLE I DEFINITIONS, INTERPRETATIONS AND EXHIBITS	5
1.1	Definitions	6
1.2	Interpretation	6
1.3	Incorporation of Recitals and Exhibits	6
ARTICLE II TERM OF AGREEMENT	6
2.1	Term	6
2.2	Payments on Termination	6
2.3	Survival	7
ARTICLE III SHARED FACILITIES AND REAL PROPERTY	7
3.1	Declaration of Intention.  .	7
3.2	Shared Facilities	7
3.3	Shared Real Property	7
3.4	Shared Assets Groups	7
3.5	Access	8
3.6	Shared Permits.  .	8
ARTICLE IV CONSTRUCTION AND OWNERSHIP OF AND RIGHT TO USE SHARED ASSETS	9
4.1	Undivided Ownership Interests	9
4.2	Undivided Use Interests	9
4.3	Construction; Reimbursement of Costs	10
4.4	Additional Phases	12
4.5	Additional Shared Facilities	12
4.6	No Additional Co-Owners	13
ARTICLE V METERING, MEASUREMENT OF ENERGY DELIVERIES AND LOSSES	13
5.1	Measurement	13
5.2	Losses on Transmission Line	13
5.3	Meter Testing and Repair	14
ARTICLE VI OPERATION AND MAINTENANCE OF SHARED FACILITIES.	14
6.1	Engagement of Operator	14
6.2	Standards for Operator's Performance	14
6.3	O&amp;M Services	15
6.4	Scheduled Maintenance	16
6.5	Unplanned Outages	16
6.6	Emergency Conditions	16
6.7	O&amp;M Costs	16
6.8	Budgeting Process	16
6.9	Extraordinary Maintenance	17
6.10	Responsibility for O&amp;M Costs	17
6.11	Books and Records	18
6.12	Disputes	18
6.13	No Waiver of Right to Audit	18
6.14	Obligations	18
6.15	Risk of Loss; Indemnity	18
6.16	Limitations on Operator's Authority	19
6.17	Replacement of Operator.	19
ARTICLE VII DAMAGE TO, DESTRUCTION OR FAILURE OF SHARED FACILITIES	19
7.1	Damage or Destruction	19
ARTICLE VIII CESSATION OF OPERATIONS BY A CO-OWNER	20
8.1	Co-Owner Ceasing Operations	20
8.2	Co-Owner Last Using Shared Facilities	20
8.3	Procedure for Transfer by a Co-Owner of its Ownership Interest.  .	21
8.4	Change in Ownership Interest	21
ARTICLE IX RELATIONSHIP OF OPERATOR AND CO-OWNERS	21
9.1	Actions Taken by Operator	21
9.2	Limitations on Operator's Authority	22
9.3	Costs and Expenses	22
9.4	Obligations under Shared Real Property Agreements; Exercise of Options	22
9.5	Consent or Approval	23
9.6	Condemnation Awards	23
9.7	Transfer or Encumbrance of Interest in Shared Assets	23
9.8	Additional Co-Owner Rights	23
ARTICLE X COVENANTS	24
10.1	No Interference.	24
10.2	Interconnection Rights.  .	24
10.3	Interconnection Agreement.	24
10.4	Shared Real Property Agreements..	24
10.5	No Waste.	25
10.6	No Liens.	25
10.7	Standard of Performance.	25
ARTICLE XI INSURANCE; WAIVER	25
11.1	Insurance Responsibilities	25
11.2	Waiver	25
ARTICLE XII TAXES	25
12.1	Operator Payment of Property Taxes and Assessments	25
12.2	Reimbursement Obligations	25
12.3	Transfer Taxes, Sales and Use Taxes	25
12.4	Construction of Shared Assets.	25
ARTICLE XIII EVENTS OF DEFAULT; REMEDIES	25
13.1	Defaults	25
13.2	Remedies Upon Default	25
ARTICLE XIV LENDER PROTECTION	25
14.1	Right to Encumber and Assign	25
14.2	Co-Owners' Obligations	25
14.3	Lender Obligations	25
14.4	Lender's Right to Possession, Right to Acquire and Right to Assign	25
14.5	Opportunity to Cure	25
14.6	New Agreement	25
14.7	Lender Consent	25
14.8	Estoppel Certificates	25
ARTICLE XV INDEMNIFICATION	25
15.1	Co-Owner Indemnification	25
15.2	Cross-Indemnity	25
ARTICLE XVI WAIVER OF RIGHTS TO PARTITION	25
ARTICLE XVII MISCELLANEOUS PROVISIONS	25
17.1	Covenants Run with the Land	25
17.2	Force Majeure	25
17.3	FERC Filing and Acceptance..	25
17.4	Assignment	25
17.5	Actions By Co-Owners	25
17.6	Entire Agreement	25
17.7	Amendment	25
17.8	Further Assurances	25
17.9	Severability	25
17.10	Joint Preparation	25
17.11	No Waiver	25
17.12	Governing Law	25
17.13	Dispute Resolution Procedures	25
17.14	Relationship of the Co-Owners	25
17.15	No Third Party Rights	25
17.16	No Dedication of Facilities	25
17.17	Notices	25
17.18	Counterparts	25
17.19	Timing for Performance	25
17.20	Waiver of Consequential Damages	25
17.21	Survival	25
17.22	Memorandum	25
17.23	Other Agreements.	25

EXHIBITS
Exhibit A - Schedule of Definitions
Exhibit B - Shared Facilities, Shared Real Property and Shared Permits
Exhibit C - Interests and Proportionate Shares
Exhibit D - Material Project Agreements
Exhibit E - Dispute Resolution Provisions
Exhibit F - Form of Joinder
Exhibit G - Form of Memorandum

RISING TREE
SHARED FACILITIES AGREEMENT

      THIS RISING TREE SHARED FACILITIES AGREEMENT ("Agreement") is made and entered into this 3rd day of December, 2014 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners".
RECITALS
A.	The Co-Owners are developing a multi-phase wind powered electric generating facility generally known as the Rising Tree Wind Farm located on real property in Kern County, California (the "Rising Tree Wind Farm").  The Rising Tree Wind Farm is intended to be developed in multiple phases, each of which is considered a separate project and will be owned by a separate project company.
B.	The installed nameplate generating capacity of each phase of the Rising Tree Wind Farm (each of which is referred to herein as a "Facility" and collectively as the "Facilities"), will be approximately:
RST I Facility:	79.2 MW
RST II Facility:	19.8 MW
RST III Facility:	99 MW

C.	The Co-Owners own or will own undivided interests in certain real and personal property acquired or to be acquired for their respective Facilities and wish to share the use and cost of certain electrical transmission, communications structures and other facilities and associated real property rights, and to engage Operator to operate, maintain, repair and manage the foregoing, all in accordance with and subject to the terms and conditions of this Agreement.
D.	The Co-Owners are also parties to that certain Amended and Restated Large Generator Interconnection Agreement Co-Tenancy Agreement dated October 24, 2014 (the "LGIA Co-Tenancy Agreement") with respect to the Interconnection Agreement.
      NOW THEREFORE, in consideration of the recitals, the premises, covenants and conditions contained herein, and other good and valuable consideration, the receipt and sufficiency of which the Co-Owners acknowledge, the Co-Owners agree as follows:
ARTICLE I 
DEFINITIONS, INTERPRETATIONS AND EXHIBITS
      1.1 Definitions
.  As used in this Agreement, including the Recitals, and except as required by grammatical usage and apart from proper nouns, each capitalized term has the meaning given to it in this Agreement and in the Schedule of Definitions attached as Exhibit A.
      1.2 Interpretation
.  In this Agreement, unless a clear, contrary intention appears:  (a) the singular includes the plural and vice versa; (b) reference to any Person includes such Person's successors and assigns but, in the case of a Co-Owner, only if such assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity; (c) reference to any gender includes each other gender; (d) reference to any agreement (including this Agreement), document or instrument means such agreement, document or instrument as amended or modified and in effect from time to time in accordance with the terms thereof and, if applicable, the terms of this Agreement; (e) reference to any Law means such Law as amended, modified, codified, or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (f) reference to any Section means such Section of this Agreement, and references in any Section or definition to any clause means such clause of such Section or definition; (g) "hereunder," "hereof," "hereto" and words of similar import shall be deemed references to this Agreement as a whole and not to any particular Section or other provision of this Agreement; (h) "including" means including without limiting the generality of any description such term; and (i) relative to the determination of any period of time, "from" means "from and including", "to" means "to but excluding" and "through" means "through and including".
      1.3 Incorporation of Recitals and Exhibits
.  The Recitals set forth in this Agreement and the Exhibits and Attachments attached hereto are incorporated into this Agreement by reference for all purposes.
ARTICLE II 
TERM OF AGREEMENT
      2.1 Term
.  This Agreement is effective as of the earlier of the Execution Date and any later date this Agreement is accepted by FERC (the "Effective Date" and shall remain in force and effect until, subject to obtaining any necessary FERC approvals, (i) the earliest of (v) the date that is thirty-five (35) years after the Effective Date, (w) the expiration date of the Interconnection Agreement, (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
      2.2 Payments on Termination
.  Upon termination of this Agreement, the Co-Owners shall pay Operator any remaining balance owed for Operator's costs incurred or irrevocably committed to be incurred pursuant to this Agreement as of the date of termination, within sixty (60) days following receipt of an invoice from Operator requiring such payment; provided that Operator shall use commercially reasonable efforts to minimize such costs.
      2.3 Survival
.  Any obligations of one Co-Owner to another, including payment obligations and indemnity obligations, as a result of this Agreement which accrued prior to or as a result of termination of this Agreement shall survive termination of this Agreement.
ARTICLE III 
SHARED FACILITIES AND REAL PROPERTY
      3.1 Declaration of Intention.  The Co-Owners hereby declare that, subject to the last sentence of Section 4.1, they own and hold title to the Shared Facilities and the Shared Real Property as tenants in common and that each Co-Owner has an undivided interest in the Shared Facilities and the Shared Real Property, expressly on and subject to the terms, conditions, limitations and requirements set forth in this Agreement.  Nothing contained in this Agreement will be deemed to constitute the Co-Owners as partners or joint venturers.
      3.2 Shared Facilities
.  The Co-Owners plan to procure, install and construct, or have procured, installed and constructed, certain facilities for electrical transmission, interconnection, communications structures and other facilities, as more particularly described in Exhibit B, which may be altered or reconstructed in accordance with this Agreement, for shared use by the Co-Owners (collectively, the "Shared Facilities") for the purposes set forth in Exhibit B; provided, that certain of the Shared Facilities will used and shared by all of the Co-Owners and certain of the Shared Facilities will only be used and shared by a limited group of the Co-Owners as described in Exhibit B (each a "Shared Facilities Group").  The initial Shared Facilities Groups shall be the RST Shared Facilities Group, which will be used and shared by all Co-Owners, and the RST I/II Shared Facilities Group, which will be used and shared by Rising Tree I and Rising Tree II; provided that additional Shared Facilities Groups may be created in connection with the construction of the Additional Phase, as described in Section 4.4.
      3.3 Shared Real Property
.  The Shared Facilities in each Shared Facilities Group are or will be located on, or have or will have the benefit of, certain real property and real property rights that are described on Exhibit B (collectively, the "Shared Real Property") and that were granted pursuant to certain deeds, easements, leases, options or other instruments and agreements also described on Exhibit B (collectively, the "Shared Real Property Agreements").  The Shared Real Property shall be used for the purposes and uses described on Exhibit B.  In addition to the use of the Shared Real Property for Shared Facilities and other Shared Assets, to the extent permitted under the Shared Real property Agreements, the Shared Real Property may be occupied and used by any of the Co-Owners in the applicable Shared Assets Group for facilities other than Shared Facilities, such as collection and transmission lines separately owned by such Co-Owner, so long as such occupancy and use does not adversely affect the use of such Shared Real Property for the Shared Facilities.  
      3.4 Shared Assets Groups
.  Each Shared Facilities Group, combined with the Shared Real Property corresponding to the Shared Facilities in such Shared Facilities Group described under the same section in Exhibit B shall be referred to herein as a "Shared Assets Group".  The initial Shared Assets Groups shall be the RST Shared Assets Group, which will be used and shared by all Co-Owners, and the RST I/II Shared Assets Group, which will be used and shared by Rising Tree I and Rising Tree II; provided that additional Shared Assets Groups may be created in connection with the construction of the Additional Phase, as described in Section 4.4.
      3.5 Access
.  Each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Ownership Interest as necessary (i) to inspect such Shared Facilities, (ii) to ensure that Operator is meeting its obligations with respect to operation, maintenance and repair of such Shared Facilities, (iii) to make any necessary repairs to such Shared Facilities not timely made by Operator or in the event of an Emergency Condition, in each case as necessary to ensure that Co-Owner's Facility remains operational, and (iv) to exercise any other rights of a Co-Owner under this Agreement; and (b) over any Shared Real Property in which such Co-Owner has an Ownership Interest or as necessary or appropriate to exercise any of its rights hereunder with respect to the Shared Facilities; provided that, subject to the provisions of Section 13.1.4, if such Co-Owner is not the Operator, it shall (i) provide reasonable notice to Operator, and (ii) not unreasonably interfere with Operator's operation, maintenance or repair of the Shared Facilities or of another Co-Owner's Facility.
      3.6 Shared Permits.  The construction, operation and use of certain of the Shared Facilities in each Shared Facilities Group, as well as the construction, operation and use of certain portions of each Co-Owner's Facilities, will be subject to certain shared Governmental Authorizations as set forth in parts A.3 and B.3 of Exhibit B (the "Shared Permits"), not all of which apply to the Shared Facilities.  The Shared Permits may be issued in the name of one or more of the Co-Owners, but shall, to the extent they apply to the Shared Facilities, and to the fullest extent allowed by Applicable Law, be held, used and exercised for the mutual benefit of the Co-Owners in the applicable Shared Assets Group and to facilitate the construction, use, operation, maintenance and repair of the Shared Facilities as provided herein.  The Shared Permits shall be administered in the same manner as the Shared Facilities as provided in Section 4.3.3, and, to the extent they do apply to the Shared Facilities, the Co-Owners in each Shared Asset Group shall indemnify and hold Rising Tree I and/or Operator, as applicable, from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits relating to such Shared Asset Group, except to the extent resulting from the gross negligence or willful misconduct of Rising Tree I and/or Operator, as applicable.  To the extent the Shared Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, they shall be administered by Operator, and the Co-Owners to whose Facilities or other property such Shared Permits apply shall indemnify and hold Operator harmless from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits, except to the extent resulting from the gross negligence or willful misconduct of Operator, but the costs of such administration shall be borne by such Co-Owners and shall not be included in the O&amp;M Services provided hereunder.  Notwithstanding the foregoing, each Co-Owner in the applicable Shared Asset Group to which a Shared Permit relates shall have the right, in the case of Emergency Condition or if necessary to prevent the termination or revocation of a Shared Permit, to step in and exercise rights, perform duties and obligations and take actions under such Shared Permit as may be necessary to avoid or mitigate such Emergency Condition or termination or revocation of a Shared Permit, and shall be entitled to the same indemnification as Rising Tree I or Operator would have been under the circumstances; provided, however, that any Co-Owner exercising such step-in rights shall also indemnify and hold the other Co-Owners in the applicable Shared Assets Group from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of its gross negligence or willful misconduct in the exercise of such step-in rights.
      3.7	Third Party Rights.  The Co-Owners and the Operator acknowledge that, in addition to any requirements or restrictions in the Shared Real Property Agreements, their rights to construct, use and operate the Shared Facilities is subject to certain rights in favor of third parties and/or Affiliates as described on Exhibit B.  No Co-Owner or Operator will interfere with such third party rights in exercising its rights and performing its obligations hereunder.
ARTICLE IV 
CONSTRUCTION AND OWNERSHIP OF AND RIGHT TO USE SHARED ASSETS
      4.1 Undivided Ownership Interests
.  Each Co-Owner of Shared Facilities and/or Shared Real Property in each Shared Assets Group (a "Granting Co-Owner") hereby grants, assigns, transfers and conveys to itself and to each of the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Facilities and/or Shared Real Property (collectively, the "Underlying Granting Documents"), to the extent that such grant, assignment, transfer and conveyance does not violate, invalidate or require any consent which has not been obtained under any of the Underlying Granting Documents, such that each such Co-Owner in a Shared Assets Group shall own an undivided interest, as a tenant-in-common, in all of the Shared Facilities and Shared Real Property in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B and shall be entitled to the full benefits of all rights associated with such Shared Assets Group granted, created or conveyed pursuant to the Underlying Granting Documents to the fullest extent permitted thereunder and under Applicable Laws (such undivided interest of each Co-Owner in such Shared Assets Group and related rights and benefits being referred to in this Agreement as its "Ownership Interest").  Upon termination of this Agreement, all of the various rights and interests under the Underlying Granting Documents will, without the need for further action by any party, revert to the Co-Owner or Co-Owners to whom they were originally granted prior to the Effective Date.
      4.2 Undivided Use Interests
.  Each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group (an "Undivided Use Interest"), which right shall be shared with the other Co-Owners in the Shared Assets Groups in accordance with their respective Proportionate Shares.  A Co-Owner's Undivided Use Interest is exercisable upon the Commissioning Date of its Facility by such Co-Owner by providing written notice to Operator and to the other Co-Owners in the same Shared Assets Group that the Commissioning Date has occurred, provided that such Co-Owner has made the payment or payments set forth in Section 4.3, and that no Event of Default has occurred and is continuing with respect to such Co-Owner.  For the avoidance of doubt, each Co-Owner whose Facility has not reached its Commissioning Date as of the Effective Date (and thus whose Proportionate Share in all Shared Assets Groups is 0%) shall be deemed not to have exercised its Undivided Use Interest in any Shared Assets Group (and as a result shall not be required to bear costs or expenses related to any Shared Assets Group nor have the right to vote on matters unless otherwise set forth herein), but shall have the right to exercise its Undivided Use Interest as set forth in this Agreement.
      4.2.1 Transmission Line.  Each Co-Owner of a Transmission Line shall be entitled to use its Proportionate Share of the Delivery Capability of the Transmission Line.  In the event of (i) a partial curtailment of Delivery Capability by the CAISO or the Transmission Owner, (ii) a de-rating of the Transmission Line, (iii) a curtailment as determined by the Operator to be necessary to maintain, repair, replace, remove, investigate, inspect or test the Transmission Line, any Shared Facility or any Facility, or (iv) Emergency Conditions, each Co-Owner's right to use the Delivery Capability of the Transmission Line will be reduced pro rata in accordance with its Ownership Interest for the duration of the curtailment or de-rating; provided, however, that Operator shall be authorized to curtail on a non-pro rata, but equitable and reasonable basis (a) if such non-pro rata allocation is necessary to comply with directions from the CAISO or the Transmission Owner and does not violate the terms of the Interconnection Agreement, or (b) to the extent that the need for curtailment (including Emergency Conditions) can be attributed to a particular Facility.  In the event that the Delivery Capability of the Transmission Line exceeds the capacity provided in the applicable Interconnection Agreement, with Transmission Owner's and the CAISO's written consent and approval, each Co-Owner's right to use the Delivery Capability of the Transmission Line will be increased pro rata in accordance with its Ownership Interest for so long as the Delivery Capability is in excess of the capacity provided in the Interconnection Agreement with Transmission Owner's and CAISO's written consent and approval.
      4.2.2 Excess Capability.  No Co-Owner shall have the right to use more than its Proportionate Share of the Delivery Capability of the Transmission Line.  However, during periods in which a Co-Owner is not utilizing its full Proportionate Share of the Delivery Capability of the Transmission Line, the other Co-Owners may use more than their full Undivided Use Interests therein without additional costs beyond its Proportionate Share of O&amp;M Costs, subject to the operating limits of the Shared Facilities, so long as such use does not interfere with or adversely affect any other Co-Owner's energy schedules and deliveries; provided that (i) prior to any Co-Owner using more than its Proportionate Share of the Delivery Capability of the Transmission Line, the Co-Owners shall have obtained all necessary Governmental Authorizations, including FERC acceptance for filing of an effective transmission services agreement for such usage to the extent required, and (ii) any Co-Owner using more than its Proportionate Share of the Delivery Capability of the Transmission Line shall surrender such excess Delivery Capability promptly when it is needed by the Co-Owner entitled thereto and shall indemnify and hold harmless the other Co-Owners for Losses resulting from a failure or delay in surrendering such excess Delivery Capability..
      4.3 Construction; Reimbursement of Costs
.  
      4.3.1 Subject to its right to reimbursement as set forth herein, Rising Tree I will design, permit and construct all of the Shared Facilities in accordance with Applicable Laws, Good Utility Practice and the description of the Shared Facilities on Exhibit B attached hereto.  Upon completion, testing and commissioning of each applicable group of Shared Facilities, Rising Tree I will assign, transfer and convey such Shared Facilities to the Co-Owners in the applicable Shared Asset Group in accordance with their respective Proportionate Shares, including rights under construction and supply contracts and contractor, supplier and/or manufacturer warranties related to such Shared Facilities, which warranties may be enforced as provided below.  HOWEVER, NOTWITHSTANDING ANYTHING HEREIN TO THE CONTRARY, RISING TREE I SHALL HAVE NO LIABILITY TO THE OTHER CO-OWNERS FOR ANY DEFECT IN THE DESIGN, CONSTRUCTION OR UTILITY OF ANY OF THE SHARED FACILITIES.  RISING TREE I MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE CONDITION, USE OR FITNESS OF ANY OF THE SHARED REAL PROPERTY OR WITH RESPECT TO THE DESIGN, CONSTRUCTION, OPERATION OR UTILITY OF ANY OF THE SHARED FACILITIES, AND HEREBY DISCLAIMS ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY OF ANY KIND WITH RESPECT TO THE SHARED REAL PROPERTY OR THE SHARED FACILITIES.  Each of the Co-Owners agrees that they will look solely to the designers, contractors, suppliers, manufacturers and other Persons who participated in the design and/or construction of the Shared Facilities with respect to any defects or breaches of contract or warranty.  
      4.3.2 Rising Tree II and Rising Tree III shall each reimburse Rising Tree I for all costs and expenses incurred by Rising Tree I in designing, permitting and constructing the Shared Facilities in accordance with their respective Proportionate Shares of the costs of the Shared Facilities in each Shared Facilities Group of which they are members, in accordance with their Proportionate Shares in each such Shared Assets Group; provided, however, that for purposes of this Section 4.3.2, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date.  Such reimbursement shall be made within fifteen (15) days after receipt of (i) a notice from Rising Tree I that "Final Completion" or its equivalent for the Shared Facilities in such Shared Assets Group has occurred under the construction contract therefor, and (ii) a statement of the amount to be reimbursed (including appropriate supporting documentation)
      4.3.3 Each Co-Owner intends that all rights under construction and supply contracts and contractor, supplier and/or manufacturer warranties related to any Shared Facilities shall be held by the applicable Co-Owners in such Shared Assets Group, and each Co-Owner shall cooperate with each other to ensure enforceability by any of such Co-Owners or by Operator as agent for the Co-Owners; provided that enforcement of any such contract or warranty shall only be done by Rising Tree I until the completion of all of the Shared Facilities and by Operator thereafter, unless Rising Tree I or Operator, as applicable, has failed to do so within ninety (90) days after written notice from any other Co-Owner setting forth the reasons that such contract or warranty has been breached and must be enforced, unless there is a dispute regarding such enforcement, in which event the other Co-Owner's shall not exercise such rights until such dispute is resolved.
      4.3.4 To the extent that it does not otherwise have the necessary real property interests and rights, Rising Tree I shall have, and each of the other Co-Owners shall and hereby do grant to Rising Tree I, the benefit of and the right to use all of the Shared Real Property, subject to any restrictions or limitations in the Underlying Granting Documents, for the purpose of constructing, installing, testing and commissioning the Shared Facilities.
      4.3.5 Notwithstanding the fact that the design, construction, testing and commissioning of the Shared Facilities is being done by Rising Tree I, the Co-Owners agree that they will share the risks thereof among themselves in accordance with their respective Proportionate Shares.  Accordingly, each of the Co-Owners will indemnify and hold Rising Tree I harmless from and against its Proportionate Share of any claims, demands, costs, obligations and liabilities by or to third parties as a result of the design, construction, testing and commissioning of the Shared Facilities, except to the extent resulting from the gross negligence or willful misconduct of Rising Tree I; provided, however, that for purposes of this Section 4.3.5, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date. 
      4.4 Additional Phases
.  Additional generating facilities, whether owned by a Co-Owner or its Affiliate or by another Person (each an "Additional Phase") may be connected to the Shared Facilities and may use the Shared Assets, to the extent compatible with the existing Shared Facilities and Transmission Owner's interconnection facilities, subject to the terms and conditions of this Agreement and any required FERC approvals, but only upon the unanimous written approval of all of the Co-Owners and their respective Lenders and subject to the receipt of all necessary consents and approvals from Governmental Authorities, owners of any Shared Real Property, the Transmission Owner, CAISO and other necessary Persons.  The owner of such Additional Phase shall execute a joinder, the form of which is attached as Exhibit F hereto, and the Co-Owners shall execute an appropriate amendment to this Agreement to reflect the Undivided Use Interest of the Additional Phase in the applicable Shared Assets Groups and such other matters as the Co-Owners and the owner of the Additional Phase may agree.  Any such amendment to this Agreement shall be filed with FERC under Section 205 of the FPA, consistent with Section 17.3 hereof, and shall not become effective until accepted by FERC.  Notwithstanding anything contained herein to the contrary, the owner of the Additional Phase shall bear any incremental costs and expenses of modifying and upgrading the applicable existing Shared Facilities or acquiring additional Shared Real Property to accommodate the connection of its generating facility.
      4.5 Additional Shared Facilities
.  Once the Shared Facilities described on Exhibit B have been constructed, no Co-Owner may modify, add to or remove any of the Shared Facilities, except (i) as may be required by Applicable Laws and after not less than thirty (30) days written notice to the other Co-Owners, or (ii) with the prior written consent of all Co-Owners, and their respective Lenders (such consent of the Co-Owners not to be unreasonably withheld). In either case, the Co-Owner proposing to modify, add to or remove any of the Shared Facilities shall obtain a report by a qualified independent engineer reasonably acceptable to all Co-Owners finding that such modifications, additions or removals will not adversely affect the operation, performance, reliability or maintenance costs of any Facility (except as may be agreed by the owner of such Project).  In connection with the approval of any such modifications, additions or removals of Shared Facilities, the Co-Owners shall negotiate in good faith and agree on (a) the design and construction of such modifications and/or additional Shared Facilities and/or the plan of removal of such Shared Facilities, as applicable, (b) the allocation of design and construction costs of the modifications and/or additional Shared Facilities and/or the costs of removal of such Shared Facilities, as applicable, among the Co-Owners, and (c) the allocation of costs associated with the operation and maintenance of the modified Shared Facilities and/or the additional Shared Facilities among the Co-Owners; provided that no Co-Owner shall be required to reimburse any other Co-Owner for any costs incurred in the construction, removal, operation or maintenance of any modified, additional and/or removed Shared Facilities unless it has expressly agreed to do so in writing.
      4.6 No Additional Co-Owners
.  Except as provided herein, no Person may become a Co-Owner under this Agreement or an additional co-owner of any of the Shared Facilities, the Shared Real Property or the Shared Real Property Agreements without the prior written consent of all of the Co-Owners.  Any Person becoming a Co-Owner under this Agreement shall execute a joinder, the form of which is attached as Exhibit F hereto and such other amendments as the Co-Owners have determined may be necessary.
ARTICLE V 
METERING, MEASUREMENT OF ENERGY DELIVERIES AND LOSSES
      5.1 Measurement
.  Energy transmitted on the Transmission Line shall be measured for each Facility in each Settlement Interval by the revenue meter for such Facility.  However, if and for the period that there is an equipment failure or other event that prevents or interferes with the operation of the separate metering, energy transmitted on the Transmission Line shall be measured and allocated between the Facilities in each Settlement Interval in proportion to their respective Metered Energy during such Settlement Interval as follows:
Facility Energy = (Facility Metered Energy/Total Metered Energy) x POI Metered Energy
where, for purposes of the above formula:
Facility Energy = the Energy allocated to the Facility in the Settlement Interval
Facility Metered Energy = Metered Energy for such Facility in the Settlement Interval
Total Metered Energy = total Metered Energy for all Facilities in the Settlement Interval
POI Metered Energy = the amount of Energy measured by the CAISO at the Point of Interconnection in the Settlement Interval
      5.2 Losses on Transmission Line
.  Line Losses will be automatically allocated among the Co-Owners through the measurement of energy deliveries as described in Section 5.1, which is net of losses or in accordance with the formula set forth in Section 5.1, which includes Line Losses in the measurement of POI Metered Energy.  
      5.3 Meter Testing and Repair
. 
      5.3.1 Inspection and Testing.  Each Co-Owner will cause its revenue meter to be inspected and tested upon its installation and at least once every twenty-four (24) months thereafter, or more frequently if required by CAISO rules or the CAISO Tariff, by the Interconnection Agreement, or by any power purchase agreement to which a Co-Owner is a party, and at any other reasonable time upon Operator's request, which may not be made more than twice each year.  Operator will pay the costs of such inspection and testing (which shall be considered an O&amp;M Cost), unless the results of the test show the Co-Owner's meter to be inaccurate by more than [two-tenths of one percent (0.2%)]1, in which case the Co-Owner who owns the meter will pay the costs of the inspection and test.  Each Co-Owner will give the other Co-Owners reasonable advance notice of tests of its meter and the other Co-Owners have the right to witness such tests.
      5.3.2 Calibration or Repair.  If a test shows a Co-Owner's meter to be inaccurate, the owner of the meter will use commercially reasonable efforts to cause its meter to be calibrated, repaired or replaced as soon as reasonably practical.  If a test shows a Co-Owner's meter to be inaccurate by more than [two-tenths of one percent (0.2%)], an adjustment will be made correcting all measurements made by the meter found to be inaccurate for the actual period during which inaccurate measurements were made, if such period can be determined, or, if not, the period immediately preceding the meter test equal to the lesser of one-half the time from the date of the last test of the inaccurate meter or one hundred eighty (180) days.  Such adjustments will be reflected as charges or credits, as applicable, on the invoices for O&amp;M Services rendered monthly by Operator to the Co-Owners.
ARTICLE VI 
OPERATION AND MAINTENANCE OF SHARED FACILITIES.
      6.1 Engagement of Operator
.  The Co-Owners hereby engage Operator to manage, operate, maintain and repair the Shared Facilities, to administer and take all necessary actions under the Shared Real Property Agreements, to administer and take all necessary actions under the Shared Permits, and to perform other duties pertaining to the Shared Assets (the "O&amp;M Services"), all as set forth in this Agreement; provided, however, that to the extent do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, the administration of such Shared Permits shall not be included in O&amp;M Services, but shall be paid for separately by the Co-Owners benefiting from such Shared Permits in proportion to their respective benefits.  Operator accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  Operator's authority shall be limited to performing the O&amp;M Services and such other services as may be approved by all of the Co-Owners and shall be further limited as provided in Section 6.16.
      6.2 Standards for Operator's Performance
.  Operator shall perform the O&amp;M Services in accordance with Good Utility Practice, the Material Project Agreements, the Shared Real Property Agreements, this Agreement and all other agreements relating to ownership, construction, operation and maintenance of the Shared Facilities, Applicable Laws and requirements of Governmental Authorities, including without limitation all Hazardous Materials Laws and all Environmental Laws, and all safety policies and procedures (collectively, the "Performance Standard").
      6.3 O&amp;M Services
.  Operator shall provide or cause to be provided the following services (and such other services as may be agreed from time to time by the Co-Owners and Operator) on behalf of each of the Co-Owners who have an Undivided Use Interest from and after the date each such Co-Owner has notified Operator of its exercised right to an Undivided Use Interest in the Shared Assets pursuant to Section 4.2 (the "O&amp;M Services Commencement Date"):
      (a) manage, supervise, operate, inspect, repair and maintain the Shared Assets in accordance with the Performance Standard and the Approved Budget, including the day to day management of the Shared Assets;
      (b) pay and collect amounts due in connection with the Shared Assets including but not limited to taxes and assessments pursuant to Section 12.2, and maintain one or more bank accounts wherein funds received by the Operator in connection with its duties herein shall be maintained;
      (c) expend monies necessary for the management, operation, maintenance and repair of the Shared Facilities;
      (d) notify each Co-Owner of any material notice (or any other material information that would reasonably be expected to affect the Co-Owners) received by Operator, whether from any Co-Owner, another Person or a Governmental Authority;
      (e) manage compliance with the Co-Owners' rights in the Shared Real Property in accordance with the Shared Real Property Agreements, including timely exercising options under the Shared Real Property Agreements to acquire property, enter into a lease or extend a lease term [in accordance with instructions from the Co-Owners, and making payments required under the Shared Real Property Agreements; provided that the Operator shall have no right to amend the Shared Real Property Agreements; 
      (f) manage performance by the Co-Owners under  the Material Project Agreements and to coordinate with the "Manager" under the LGIA Co-Tenancy Agreement in the performance of its and the Co-Owners' obligations thereunder; 
      (g) give and receive notices and communicate with the CAISO and the Transmission Owner with respect to the Shared Facilities and the commissioning, operation, maintenance and repair of the Shared Facilities; 
      (h) manage compliance of the Shared Facilities and Shared Real Property with all applicable Environmental Laws and Permits; and
      (i) with respect to the Shared Real Property and the Shared Facilities located on the Shared Real Property, oversee all investigations, studies, clean up, corrective action or response or remedial action required by any Governmental Authority now or hereafter authorized to regulate environmental or other matters or by any consent decree or court or administrative order now or hereafter applicable to the use, operation or ownership of the Shared Real Property by a Co-Owner or the Shared Facilities located on the Shared Real Property.
      6.4 Scheduled Maintenance
.   Operator shall schedule maintenance and any planned outages of the Shared Facilities so as to minimize interference with the Co-Owners' scheduled energy deliveries.  Maintenance and any planned outages of the Shared Facilities shall be scheduled, to the maximum extent possible, during scheduled maintenance outages of the Co-Owners' Facilities.  Each Co-Owner will provide to the Operator and the other Co-Owners by [January 1] of each year a schedule of planned maintenance outages on such Co-Owner's Facility for the subsequent twelve- month period.  Scheduled outages of the Shared Facilities will be subject to the approval of all affected Co-Owners, such approval not to be unreasonably withheld.  Operator will seek to limit the duration of any outage, planned or unplanned, to the maximum extent reasonably possible consistent with Applicable Laws and Good Utility Practice.
      6.5 Unplanned Outages
.  Operator will notify the Co-Owners of all emergency or unplanned outages of any of the Shared Facilities as soon as practicable, in accordance with Good Utility Practice, and will provide an estimated time of return of the Shared Facilities to service, or if not known, will keep the Co-Owners advised regarding the status of same.
      6.6 Emergency Conditions
.  In the event of an emergency condition involving the Shared Assets that could be reasonably expected by Operator to result in possible personal injury, loss of life, damage to or destruction of property, or danger to the public (an "Emergency Condition"), the Operator shall, without the need for prior notification of the Co-Owners, take such action as may be reasonable and necessary, as determined in the sole discretion of the Operator, including curtailing energy deliveries on the Transmission Line as provided in Section 4.2.1, to prevent, avoid or mitigate such loss, and shall, as soon as reasonably practicable, report any such emergency, including the Operator's response thereto, to the Co-Owners, and  Operator shall be compensated by the Co-Owners for the costs of taking such actions in proportion to their Ownership Interest in the Shared Assets so affected. 
      6.7 O&amp;M Costs
.  Costs of performing O&amp;M Services (the "O&amp;M Costs") shall include all payments made and expenses incurred by Operator in performing O&amp;M Services (at cost and without markup), including but not limited to related overhead and applicable taxes, and costs (except insurance costs) related to ownership of the Shared Assets and shall be allocated among the Co-Owners as provided in Section 6.10.  O&amp;M Costs shall not include any costs related to use of any of the Shared Facilities by Persons other than Co-Owners, including without limitation any costs or expenses related to portions of the Shared Facilities leased or subleased to such Persons (including the sublease of a portion of the operations and maintenance building to Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC).
      6.8 Budgeting Process
.  Each year during the term of this Agreement, Operator will prepare a forecast budget of O&amp;M Costs for the following calendar year and will provide a copy to the Co-Owners by October 31.  The forecast budget shall separately allocate costs and expenses to each Shared Assets Group to the extent reasonably practical.  The forecast budget must be approved by two-thirds of the Co-Owners (based on their respective Proportionate Shares), such consent not to be unreasonably withheld.  The Co-Owners will have thirty (30) days after receipt to review and approve the forecast budget and discuss any concerns with the forecast budget with Operator.  If two-thirds or more of the Co-Owners (based on their respective Proportionate Shares) approve the forecast budget, it shall be deemed approved for all purposes hereunder and shall be binding on all Co-Owners.  In the event less than two-thirds of the Co-Owners (based on their respective Proportionate Shares) approve the forecast budget, the matter will be submitted to dispute resolution pursuant to Exhibit E; provided, however, that pending resolution of any such dispute, the forecast budget shall be the operative budget for the Shared Facilities except that the aggregate O&amp;M Costs in each category of expenses shall be limited to one hundred twenty-five percent (125%) of the amount for such category in the previous Annual O&amp;M Budget.  After approval of and, if applicable, resolution of any disputes, the forecast budget (such approved forecast budget, the "Annual O&amp;M Budget"), each Co-Owner shall pay Operator 1/12 of its Proportionate Share of the Annual O&amp;M Budget plus any applicable costs or charges payable for Extraordinary Maintenance by the fifth (5th) day of each calendar month during the ensuing calendar year.  Operator shall reconcile the actual amounts paid for O&amp;M Costs to the forecast budget after the end of the calendar year as provided in Section 6.10.  
      6.9 Extraordinary Maintenance
.  Each Co-Owner agrees to reimburse Operator for its Proportionate Share of the costs of any maintenance or other services required in the event of unusual or catastrophic circumstances, to the extent such costs were not included in the forecast budget for O&amp;M Services ("Extraordinary Maintenance").  In such event, Operator will prepare a forecast budget for such Extraordinary Maintenance for the Co-Owners' review and performance of the Extraordinary Maintenance will be subject to the Co-Owners' prior approval, not to be unreasonably withheld, unless immediate action is required due to an Emergency Condition pursuant to Section 6.6.  On or before the tenth (10th) day of the month after the month in which any Extraordinary Maintenance costs are incurred, Operator shall invoice the Co-Owners for their respective Undivided Use Interest of such costs.  Any amounts so invoiced will be at the same time as the next monthly payment on account of the Annual O&amp;M Budget as provided in Section 6.8.
      6.10 Responsibility for O&amp;M Costs
.  Each Co-Owner shall be responsible for its Proportionate Share of O&amp;M Costs, including the costs of any Extraordinary Maintenance incurred by Operator, with respect to each Shared Assets Group as to which it is a Co-Owner; provided that, except in the case of Emergency Conditions, Operator will not incur O&amp;M Costs in any major category of O&amp;M Costs or in the aggregate that exceed the budgeted amount for such category or the total amount of O&amp;M Costs, as applicable, by more than ten percent (10%) of the amounts shown on the Annual O&amp;M Budget without the written consent of at least two-thirds of the applicable Co-Owners (based on their respective Proportionate Shares).  Within sixty (60) days after the end of each calendar year, Operator shall invoice the Co-Owners for, or shall refund to the Co-Owners, as applicable, their Proportionate Shares of the difference between the Annual O&amp;M Budget and the actual amount of O&amp;M Costs paid or incurred in such calendar year.  Any invoice for such amounts shall be paid within thirty (30) days after receipt.  The invoices shall be delivered to Co-Owners as set forth in Section 17.15.  Any amounts not paid when due shall be deemed delinquent and shall accrue interest at the then-effective prime rate of interest published under "Money Rates" by The Wall Street Journal, plus two percent per annum from the due date to the date of payment (the "Late Payment Rate").  In the event that any due date falls upon a weekend day or bank holiday, such payment shall be due and payable on the first Business Day immediately thereafter.
      6.11 Books and Records
.   Operator shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Owner or its authorized representative at the cost and expense of such Co-Owner and at reasonable times during regular business hours, upon reasonable notice to Operator.
      6.12 Disputes
.  If a Co-Owner disputes the accuracy of all or any portion of an invoice, such Co-Owner shall, nevertheless, pay the full amount of the invoice (including the disputed portion) and submit to Operator a written statement detailing the items disputed.  If the Co-Owner and Operator are unable to resolve the disputed items, the matter will be resolved in accordance with the dispute resolution provisions in Exhibit E.  If the Co-Owner prevails with respect to the disputed amounts, Operator shall refund the Co-Owner the disputed amounts, including interest on the disputed amounts at the Late Payment Rate.
      6.13 No Waiver of Right to Audit
.  Any payment made by a Co-Owner pursuant to this Agreement shall not constitute a waiver of any right of such Co-Owner to question or contest the accuracy of any charge, or to request and receive from Operator sufficient data to audit any charge concerning which a Co-Owner has a question or which is or may be contested, provided, however, that a Co-Owner must initiate any audit or data request no later than twelve (12) months after the Due Date of any such bill or charge and bear reasonable costs associated with such audit, and provided further that if as a result of the audit a determination is made that errors were made by Operator, Operator shall, in addition to correcting the error,  reimburse the costs of the audit to the Co-Owners. 
      6.14 Obligations
.  The Operator shall have no liability for any obligations except those expressly stated in this Agreement, and nothing in this Agreement shall obligate the Operator to perform any duties or assume any liabilities under any agreement to which the Operator is not directly a party unless such duties are also expressly stated in this Agreement or otherwise expressly agreed to by Operator, and then only to such extent.  The Co-Owners acknowledge that the Operator's performance under this Agreement is dependent upon the Co-Owners having complied with their obligations under this Agreement (including with respect to payment) and the Operator having timely and appropriate access to all parts of the Shared Assets and access to all documents as reasonably required by the Operator.
      6.15 Risk of Loss; Indemnity
.  
      6.15.1 As between the Co-Owners and the Operator, the Co-Owners shall be responsible for the risk of loss to the Shared Facilities or any portion thereof during the repair, management, operation and maintenance of the Shared Facilities, regardless of cause, except to the extent such loss is caused in whole or in part by the fraud or willful misconduct of the Operator.
      6.15.2 Operator shall not be liable to any Co-Owner for any act performed in good faith by Operator in the discharge of its duties hereunder as Operator or in the exercise of its powers and authority hereunder as Operator, including damages arising out of any curtailment of use of the Shared Facilities or the disconnection of, or the election not to disconnect, a Facility from the Shared Facilities, unless Operator's acts or omissions constitute fraud or willful misconduct.
      6.15.3 Each Co-Owner shall, pro rata in accordance with its Proportionate Interest, indemnify and hold harmless Operator and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in its reasonable judgment, in good faith, or in reasonable reliance on advice of Operator's attorneys or accountants, in connection with the Shared Facilities, the Shared Real Property or this Agreement (other than as a result of the fraud or willful misconduct of Operator), including reasonable attorneys' fees incurred by Operator in connection with the defense of any action based on any such alleged act or omission.
      6.16 Limitations on Operator's Authority
.   Notwithstanding anything herein to the contrary, Operator shall have no authority to and shall not (i) amend or terminate any Material Project Agreement or enter into, amend or terminate any other contract or agreement on behalf of the Co-Owners, (ii) create any lien or security interest on or in any Shared Facilities, Shared Real Property or any other asset of any or all of the Co-Owners, except as expressly permitted under Section 10.1.6, (iii) buy, sell, convey or otherwise dispose of any Shared Facilities or Shared Real Property, (iv) incur any debt or other obligations on behalf of any or all of the Co-Owners, except in connection with the O&amp;M Services or as provided in this Agreement or another written agreement among Operator and the Co-Owners, or (v) enter into leases or subleases of or grant licenses or other rights with respect to any Shared Facilities or Shared Real Estate except with the written approval of all of the Co-Owners.
      6.17 Replacement of Operator.
.   Operator may only be removed upon the vote of two-thirds of the Co-Owners (based on their respective Proportionate Shares).  Any new Operator must be approved by the unanimous vote of the Co-Owners.
ARTICLE VII 
DAMAGE TO, DESTRUCTION OR FAILURE OF SHARED FACILITIES
      7.1 Damage or Destruction
.  In the event of any damage or destruction to, or other failure of all or any part of the Shared Facilities that affects the business operations of one or more Co-Owners in a Shared Assets Group (each an "Affected Party"), such Affected Party shall, subject to any contrary requirements in Material Project Agreements or Applicable Law, take all commercially reasonable actions as may be necessary or appropriate to repair or replace the affected Shared Facilities or other facilities in order to restore the affected Shared Facilities or other facilities to substantially the same condition (or better) as before such damage or destruction (and any costs associated with such actions, after accounting for recoveries under any applicable insurance policies, will be shared by the Co-Owners in such Shared Assets Group pro rata based on their Ownership Interests, as applicable).  Following any such damage, destruction or failure, if (i) the Affected Party fails to diligently proceed with the repair or replacement of the affected Shared Facilities or other facilities in accordance with the preceding sentence, or (ii) the Affected Party notifies the other Co-Owners that it does not intend to repair or replace the affected Shared Facilities or other facilities, then in either such case, the other Co-Owners in the relevant Shared Assets Group shall have the right to repair or replace the affected Shared Facilities or other facilities (or a portion thereof sufficient to serve such other Co-Owners' requirements) and continue the operation and maintenance thereof for the remainder of the Term; provided that, in such event the Affected Party shall be obligated to the Co-Owners funding the repair or replacement of the Shared Facilities or other facilities to the extent of its Proportionate Share of the costs of repair or replacement; and provided further, that such other Co-Owners shall not unreasonably interfere with the business operations of the Affected Party.  In all events, the Co-Owners shall cooperate with each other in good faith to minimize the cost of repair or replacement of the Shared Facilities and minimize the impact thereof on the Co-Owners and their respective business operations.
ARTICLE VIII 
CESSATION OF OPERATIONS BY A CO-OWNER
      8.1 Co-Owner Ceasing Operations
.  In the event a Co-Owner decides to shut down, decommission, abandon or cease operation of its Facility (such Co-Owner, a "Co-Owner Ceasing Business Operations"), it shall provide the other Co-Owners with at least six (6) months' prior written notice of such shut-down, abandonment, decommissioning, or cessation of operations.  The Co-Owner Ceasing Business Operations shall reasonably cooperate with the other Co-Owners in order to minimize any interference with such other Co-Owners' business operations, and the Co-Owner Ceasing Business Operations shall, at the request of the other Co-Owners, take such actions as may be necessary or appropriate, consistent with Good Utility Practice, to safely disconnect its Facility from the Shared Facilities and to cease using the Shared Facilities and the Shared Real Property, including granting such rights and executing and delivering such agreements, assignments, and instruments as may be necessary to transfer and convey its Ownership Interest in the Shared Assets in the applicable Shared Asset Group(s) to the other Co-Owners in accordance with Section 8.3, subject to obtaining any necessary FERC approvals, and compliance with requirements of any other Governmental Authority and Applicable Law.  The remaining Co-Owners in the Shared Asset Group will assume decommissioning obligations for the Shared Facilities in accordance with their Proportionate Share of the Shared Assets acquired from the Co-Owner Ceasing Business Operations.  The Co-Owner Ceasing Business Operations shall also grant to the other Co-Owners such rights and interests as may reasonably be necessary to enable to enable the remaining Co-Owners to continue using, operating, and maintaining the Shared Facilities as they have been used, including if necessary the construction of such additional facilities as may be necessary to replace Shared Facilities which are no longer usable.  After such abandonment, decommissioning, shut down or cessation of business operations by the Co-Owner Ceasing Business Operations, the other Co-Owners shall assume and be responsible for all costs, liabilities and expenses associated with the use, operation, maintenance (and ownership and decommissioning, if applicable) of the Shared Facilities (and any other facilities that may become Shared Facilities).  
      8.2 Co-Owner Last Using Shared Facilities
.  The Co-Owner(s) last using the Shared Facilities (as confirmed in writing by the Co-Owners pursuant to the last two sentences of this Section 8.2) shall have the obligation to decommission such Shared Facilities to the extent contractually required or pursuant to Applicable Law (the "Decommissioning Obligation"); provided, however, that if two or more Co-Owners discontinue using the Shared Facilities contemporaneously, such Co-Owners shall share in any Decommissioning Obligation on a basis reflecting their Ownership Interests in such Shared Facilities, where applicable.  If a Co-Owner determines that it no longer desires to utilize the Shared Facilities, it shall provide such notice to the other Co-Owners (the "Last Use Notice") at least six (6) months prior to the date on which it will cease to utilize the Shared Facilities, in which case such Co-Owner shall, as of such specified date and subject to any required FERC notifications or obtaining any necessary FERC approvals, have no further right to utilize the Shared Facilities.  The Co-Owner(s) that receive(s) such Last Use Notice shall, within forty-five (45) days of such receipt, either (i) agree that it or they also no longer desire to utilize the Shared Facilities, in which case the Co-Owners shall be deemed to have discontinued use of the Shared Facilities contemporaneously and shall share in any Decommissioning Obligation as set forth above, or (ii) state that it or they intend(s) to continue to utilize the Shared Facilities, in which case such Co-Owner(s) shall assume the Decommissioning Obligation.  
      8.3 Procedure for Transfer by a Co-Owner of its Ownership Interest.  The consideration for transfer of a Co-Owner's Ownership Interest in its Shared Assets to other Co-Owner(s) pursuant to the foregoing shall be an amount equal to the fair market value of the Shared Assets.  The fair market value of the Shared Assets shall be determined by agreement of the Co-Owners of the Shared Assets being transferred, or if they are unable to agree, by appraisal conducted by an appraisal conducted by an appraiser selected jointly by such Co-Owners.  If the Co-Owners are unable to agree on a single appraiser, then each Co-Owner shall select an appraiser, and such appraisers shall select an independent appraiser to determine fair market value of the Shared Assets.  Such determination of the fair market value shall be final and binding on the Co-Owners.    
      8.4 Change in Ownership Interest
. In the event of a change in the Ownership Interests of the Co-Owners in a Shared Asset Group, each Co-Owner's Ownership Interest and/or Undivided Use Interest, and the Co-Owners' reimbursement percentages for O&amp;M Costs (including taxes) will be adjusted, and this Agreement shall be amended to reflect such adjustment.  Any change in Ownership Interest of a Co-Owner shall be subject to required FERC approvals and any other filings with or approvals by Governmental Authorities and compliance with Applicable Laws.  
ARTICLE IX 
RELATIONSHIP OF OPERATOR AND CO-OWNERS
      9.1 Actions Taken by Operator
.  Except as provided in Section 9.8, Operator is authorized to take all actions or activities on behalf of the Co-Owners that the Co-Owners have the right or obligation to take or perform with respect to the construction, installation, operation, maintenance, repair, restoration, removal and/or replacement of the Shared Assets, and Operator shall take and perform such actions and activities in lieu of the Co-Owners.  A Co-Owner and its invitees shall have the right to inspect the Shared Facilities and the Shared Real Property to the full extent permitted by the Shared Real Property Agreements, provided however, that such inspection shall not unreasonably interfere with the construction, installation, operation, maintenance, repair, restoration, removal and/or replacement of the Shared Facilities, and any Persons inspecting the Shared Facilities shall abide by any and all safety rules and procedures established by Operator that are not inconsistent with this Agreement or otherwise applicable to the Project, as communicated by the Operator prior to their access to the Shared Facilities; and provided further Operator may require that such Co-Owner and its invitees must be accompanied by Operator.
      9.2 Limitations on Operator's Authority
.  Operator shall not, without the prior approval of all of the Co-Owners, take any of the following actions;
      9.2.1	Create or cause to be created any lien, security interest or charge on the Shared Facilities or the Shared Real Property;
      9.2.2	Amend or modify the terms of this Agreement;
      9.2.3	Sell, assign, mortgage, encumber, convey or otherwise transfer all or any portion of any estate, right, title or interest of the Co-Owners in the Shared Facilities and/or the Shared Real Property, except for disposal of used, obsolete or worn out equipment that is being replaced or in connection with the decommissioning the Shared Facilities and the winding up of this Agreement;
      9.2.4	Borrow any funds or incur any indebtedness on behalf of the Co-Owners;
      9.2.5	Incur expenses on behalf of the Co-Owners except in accordance with this Agreement;
      9.2.6	Enter into any contracts or commitments in excess of Five Hundred Thousand Dollars ($500,000) or with a duration of greater than one (1) year, except as provided in the Annual O&amp;M Budget and/or the approved budget for Extraordinary Maintenance; or
      9.2.7	Compromise any claim, demand or legal proceeding where the liability is not fully covered by insurance.
      9.3 Costs and Expenses
.  Except with respect to the design and construction of the Shared Facilities, which is covered in Section 4.3, Operator's costs and expenses incurred in the exercise of rights and performance of obligations on behalf of the Co-Owners under the Shared Real Property Agreements and this Agreement shall be considered reimbursable O&amp;M Costs for purposes of this Agreement.
      9.4 Obligations under Shared Real Property Agreements; Exercise of Options
.  
      9.4.1	Operator's obligation to perform obligations under the Shared Real Property Agreements shall include the obligation to fulfill indemnity obligations; provided that, Operator's costs in performance of such obligations shall be subject to indemnification pursuant to Section 6.15 and Article XV.  If, pursuant to Article XV, the cost of performance would ultimately be required to be paid entirely by a Co-Owner (i.e., the indemnified claims are solely due to negligence of such Co-Owner), the Co-Owner shall instead assume the direct obligation to perform such indemnity obligations and Operator shall have no obligation to do so. 
      9.4.2	Operator shall monitor the dates for the exercise of all options and other elections under the Shared Real Property Agreements, shall notify the Co-Owners of the deadlines for exercising such options or elections not less than [sixty (60)] days before such deadlines, and shall seek the decision of the Co-Owners with respect to the exercise of such options or other elections in a timely manner.  No option or other election shall be exercised except with the consent of at least two-thirds  of the Co-Owners (based on their respective Proportionate Shares).
      9.5 Consent or Approval
.  Operator shall not grant any consent or approval of the Co-Owners required under of any of the Shared Real Property Agreements or Material Project Agreements without the prior written consent of all of the affected Co-Owners, which shall not be unreasonably withheld or delayed.
      9.6 Condemnation Awards
.  Any condemnation or similar awards to which the Co-Owners shall become entitled under the Shared Real Property Agreements or with respect to the Shared Facilities shall be used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities unless such repair, restoration or replacement is not feasible, the condemnation or other award is insufficient to complete such repair, restoration or replacement, or all of the Co-Owners agree otherwise in writing.  If such condemnation or other awards are not used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities, they shall be divided among the Co-Owners in proportion to their respective Ownership Interests in the affected Shared Real Property and/or Shared Facilities, provided that if such sums are in reimbursement of or compensation for specific costs or damages incurred by the Co-Owners in ratios different from that of their Ownership Interests, then such different ratios shall be used in apportionment of such sums among the Co-Owners.
      9.7 Transfer or Encumbrance of Interest in Shared Assets
.  Notwithstanding anything to the contrary contained in this Agreement or the Shared Real Property Agreements, and without limiting the other requirements and limitations in this Agreement with respect thereto, including Section 10.6 and Article XIV, in no event shall a Co-Owner assign, transfer or convey, or mortgage, pledge or otherwise encumber its Ownership Interest in any Shared Asset except in connection with a simultaneous assignment, transfer or conveyance, or mortgage, pledge or other encumbrance, of the Facility owned by such Co-Owner and such Co-Owner's interests in this Agreement.  Any such assignment, transfer, conveyance, mortgage, pledge or encumbrance and the rights acquired in connection therewith shall be subject in all respects to the terms and conditions of this Agreement.
      9.8 Additional Co-Owner Rights
.  
      9.8.1 Each Co-Owner shall have the right, in the case of an Emergency Condition that affects such Co-Owner's Facility or the Shared Facilities necessary to serve such Co-Owner's Facility, to make such repairs and to take such other actions with respect to the Shared Facilities as may be reasonably necessary to avoid or mitigate loss as a result of such Emergency Condition; provided, however, that, to the extent that circumstances permit, a Co-Owner shall make reasonable efforts to contact the Operator and to have the Operator repair or otherwise take action with respect to the Shared Facilities before making such repairs or taking such other actions.
      9.8.2 Each Co-Owner shall have the right to participate with the other Co-Owners in connection with any dispute with a landowner or other Co-Owner arising under the Shared Real Property Agreements, and the Co-Owners shall fully cooperate and communicate with one another in that regard.
      9.8.3 If the Operator fails to take any action or perform any of the services it is obligated to do or perform under this Agreement after reasonable notice, and if such failure to act or perform has a material adverse effect on the use or operation of such Co-Owner's Facility or the Shared Facilities necessary to serve such Co-Owner's Facility, such Co-Owner may take such actions as may reasonably be necessary to correct the Operator's failure to act or perform and shall be entitled to recover all reasonable costs of doing so from the Operator; provided that such Co-Owner shall give the other Co-Owners and the Operator not less than ten (10) days prior written notice (in addition to any notice to the Operator seeking to have the Operator take the required action or perform the required services) before taking such actions.
ARTICLE X 
COVENANTS
Each Co-Owner hereby covenants as follows:
      10.1 No Interference.  Except as otherwise set forth in this Agreement, each Co-Owner's use of the Shared Assets shall not interfere in any material respect with the use and enjoyment by the other Co-Owners of the Shared Assets or other rights arising under this Agreement to the extent provided in this Agreement, including curtailing or diminishing another Co-Owners ability to use its Proportionate Share of the Delivery Capacity of the Transmission Line. 
      10.2  Interconnection Rights.  Each Co-Owner shall be responsible for securing and maintaining such rights as are necessary to interconnect such Co-Owner's Facility with the Transmission Owner's transmission system at the Point of Interconnection.
      10.3 Interconnection Agreement.  The rights and responsibilities of the Co-Owners with respect to the Interconnection Agreement shall be governed by the LGIA Co-Tenancy Agreement.  Nonetheless, a Co-Owner, upon receiving notice of default from the CAISO or Transmission Owner under the Interconnection Agreement, shall provide a copy of such notice of default to the other Co-Owners within 24 hours of receiving such notice.
      10.4 Shared Real Property Agreements.  Each Co-Owner shall provide all other Co-Owners and to each Lender, within 24 hours, a copy of a notice of any default by or disagreement with a landowner, or notice of default by a Co-Owner, under any Shared Real Property Agreement, as well as any communication with such landowner or any other relevant Co-Owner related to the Shared Real Property Agreement or rights or obligations thereunder.
      10.5 No Waste.  No Co-Owner shall use or permit the use of the Shared Assets in any manner that would create waste or nuisance, or that would materially increase the premium, or materially jeopardize the issuance or maintenance of any insurance policy of any Co-Owner relating to the Shared Assets.
      10.6 No Liens.  Subject to Article XIV, no Co-Owner shall create, permit or suffer to exist by, through or under such Co-Owner any liens on the Shared Assets, except for (a) liens for taxes that are not yet delinquent or are being contested in good faith by appropriate proceedings, and (b) mechanic's, materialmen's or other like liens that arise from the construction, reconstruction, ownership or operation of such Shared Assets; provided that if any mechanics' liens or similar liens attached to the Shared Assets, the Co-Owner performing or contracting or causing the engagement of the holder of such attached lien shall, within thirty (30) days after it receives notice of the filing, either bond around such lien or establish appropriate reserves therefor, or otherwise remove such lien from such Shared Assets pursuant to applicable Law (each of (a) and (b), a "Permitted Lien"). 
      10.7 Standard of Performance.  Each Co-Owner shall construct, operate and maintain its Facility and shall perform its obligations under this Agreement in accordance with (a) all Applicable Laws, including the CAISO Tariff, and Permits, (b) Good Utility Practice, (c) the terms and conditions of the Interconnection Agreement and all applicable requirements thereunder, (d) the terms and conditions of the Material Project Agreements to which it is a party, and (e) the terms and conditions of all Shared Real Property Agreements.
ARTICLE XI 
INSURANCE; WAIVER
      11.1 Insurance Responsibilities
.  Operator shall procure and maintain, on behalf of the Co-Owners, all-risk property insurance for the full replacement cost of the Shared Assets, and comprehensive general liability insurance insuring Co-Owners and Operator against claims or losses caused by or arising out of the ownership, operation and maintenance of the Shared Assets, in such amounts and with such coverages as are customary, commercially reasonable and consistent with Good Utility Practice, as well as any additional insurance as may be required under any of the Shared Real Property Agreements or Material Project Agreements.  Procurement of such insurance shall be part of the O&amp;M Services, and the cost thereof shall be O&amp;M Costs.  All Co-Owners shall be named as loss payees or named insureds, as applicable, under such policies.  Operator shall provide certificates of insurance coverage to the Co-Owners upon request. 
      11.2 Waiver
.  Notwithstanding any provision to the contrary in this Agreement, each of the Co-Owners hereby waives any and all rights of recovery, claim, action or cause of action against the other Co-Owners and their Affiliates, for any loss or damage that may occur to the Shared Facilities, or any personal property of such Co-Owner in or non the Shared Real Property, by reason of fire, the elements or any other cause which is required to be insured by property insurance policies obtained pursuant to this Agreement, regardless of cause or origin, including negligence of the other Co-Owner hereto, or its Affiliates, and each Co-Owner shall cause its insurer to waive subrogation  rights against the other Co-Owners.
ARTICLE XII 
TAXES
      12.1 Operator Payment of Property Taxes and Assessments
.  Operator will pay, when due, all real and personal property taxes and assessments, general or special, levied against the Shared Facilities or their operation, or payment obligations in lieu of such taxes, or that are payable pursuant to the Shared Real Property Agreements, subject to Operator's right to contest the validity of such taxes or assessments and a Co-Owner's right to require Operator contest the validity of such taxes or assessments at the Co-Owner's expense.  
      12.2 Reimbursement Obligations
.  Each Co-Owner shall be responsible for, and the Co-Owners will reimburse Operator for such Co-Owner's respective Proportionate Share in one or more Shared Asset Groups in which it has an Ownership Interest, of the taxes and assessments described in Section 12.1 as O&amp;M Costs as provided in Article VI.
      12.3 Transfer Taxes, Sales and Use Taxes
.  In the event of a transfer or sale of all or part of a Co-Owner's Ownership Interest in a Shared Asset, applicable transfer taxes and sales and use taxes will be borne by the purchaser(s) or transferee(s) of such Shared Asset; provided that the non-transferring Co-Owners shall have no obligation with respect to any such transfer taxes or sales and use taxes, and shall be held harmless against same by the transferring Co-Owner (unless they are the purchaser or transferee of such Shared Asset).  
      12.4 Construction of Shared Assets.  In the event of construction of an Additional Phase or other Shared Assets where construction costs are shared by Co-Owners of the Shared Assets, all applicable sales and use taxes and transfer taxes shall be borne by the Co-Owners of such Shared Assets in accordance with their respective Ownership Interests in the Shared Assets.    
ARTICLE XIII 
EVENTS OF DEFAULT; REMEDIES
      13.1 Defaults
.  The occurrence and continuation of any of the following events shall constitute an event of default by a Co-Owner or Operator, as applicable, under this Agreement (an "Event of Default"):
      13.1.1 Payment.  A Co-Owner fails to pay when due any amounts required to by paid by such Co-Owner under this Agreement, and such failure to pay is not cured within ten (10) days following written notice from any other Co-Owner or the Operator specifying the amount to be paid, provided that such period shall be extended with respect to a disputed portion of such amount for so long as the allegedly defaulting Co-Owner is disputing in good faith such amount pursuant to the procedures set forth in Section 6.12.
      13.1.2 Bankruptcy.  If a Co-Owner or the Operator files a petition or otherwise commences, or authorizes or acquiesces in the commencement of, a proceeding or cause under any bankruptcy, insolvency, receivership or similar law for the protection of creditors or suffers the filing of an involuntary bankruptcy petition or proceeding commenced against it, which in the case of an involuntary petition or proceeding remains undismissed and unstayed for sixty (60) days;
      13.1.3 Other Defaults.  A Co-Owner fails to cure any breach or default in the performance of any material covenant or obligation hereunder in any material respect, within thirty (30) days following written notice from any other Co-Owner or Operator specifying the nature of the failure to perform, provided that if the default is not reasonably capable of being cured within thirty (30) days, then the defaulting Co-Owner may be allowed such longer period as the Co-Owners mutually agree (not to exceed ninety (90) days) as may be reasonably necessary under the circumstances to cure such failure so long as the defaulting Co-Owner is pursuing a cure with reasonable diligence; provided, further, that if any covenant or obligation relates to the performance of any covenant or obligation under a Shared Real Property Agreement or Material Project Agreement, such default must be cured no later than [ten (10)] days before the expiration of any cure period in such Shared Real Property Agreement or Material Project Agreement.
      13.1.4 Default by Operator.  Operator fails to perform any of its material operation, maintenance, repair or other obligations in this Agreement, with respect to all or a portion of the Shared Assets, and such failure is not cured within ten (10) days following written notice by a Co-Owner; provided that, that if such failure by Operator creates an Emergency Condition or materially interferes with a Co-Owner's Undivided Use Interest in Shared Facilities in which it has an Ownership Interest, or operation of its Facility, only such advance written notice, if any, as may be reasonably practicable under the circumstances shall be required, but if such advance notice is not provided, written notice thereof shall be provided promptly thereafter by the Co-Owner to Operator; provided further that if the default is not reasonably capable of being cured within ten (10) days, then the defaulting Co-Owner may be allowed such longer period as the Co-Owners mutually agree (not to exceed [ninety (90)] days) as may be reasonably necessary under the circumstances to cure such failure so long as the defaulting Co-Owner is pursuing a cure with reasonable diligence; or
      13.1.5 Assignment; Merger, Consolidation without Assumption of Obligations.  A Co-Owner assigns or otherwise transfers its rights under this Agreement except as expressly permitted hereunder, or consolidates or amalgamates with, or merges with or into, or transfers all or substantially all of its assets to, another entity and, at the time of such consolidation, amalgamation, merger or transfer, the resulting, surviving or transferee entity fails to assume all the obligations of such Co-Owner under this Agreement to which it or its predecessor was a party by operation of law or pursuant to an agreement reasonably satisfactory to the other Co-Owners.
      13.2 Remedies Upon Default
.
      13.2.1 If any default is not cured within the applicable cure period (if any) provided in Section 13.1 by making or tendering the required payment or performance, each non-defaulting Co-Owner shall have the right (i) to cure the default at the expense of the defaulting Co-Owner, in which event the defaulting Co-Owner shall reimburse the curing Co-Owner all of the curing Co-Owner's costs of cure within thirty (30) days of invoice, or curing Co-Owner may offset such costs against any sums then or thereafter owed by the curing Co-Owner to the defaulting Co-Owner; (ii) to enforce specific performance; or (iii) to enforce any other remedy available to the non-defaulting Co-Owner at law or in equity, subject to Section 13.2.5 and Article XVI.
      13.2.2 If Operator defaults pursuant to Section 13.1.4, any Co-Owner may at its option access the Shared Assets and perform (or cause to be performed) operation, maintenance, repair or other duties on behalf of Operator, and Operator shall reimburse such Co-Owner's reasonable costs and expenses incurred by (or on behalf of) such Co-Owner promptly upon Operator's receipt of an invoice accompanied by documentation evidencing such costs and expenses and their reasonableness; 
      13.2.3 In addition to the remedies provided in Section 13.2.1 and 13.2.2, if the defaulting Co-Owner is the Operator, the other Co-Owners (the "Non-Defaulting Co-Owners") shall have the right, by unanimous consent of the Non-Defaulting Co-Owners, to remove the defaulting Co-Owner from its position as Operator and to appoint one of themselves as the Operator for purposes of this Agreement.  The Co-Owners shall cooperate with each other in effecting such transition and provide all notices to third parties and take all other actions deemed necessary or advisable by any of them with respect to such change in status.  Effective as of the date the non-defaulting Co-Owner becomes Operator, it shall assume responsibility for all obligations of Operator thereafter accruing under this Agreement and the defaulting Co-Owner shall have all obligations of a Co-Owner thereafter accruing under this Agreement. 
      13.2.4 Notwithstanding anything contained in this Agreement to the contrary, if a Co-Owner's default under this Agreement creates a material interference with a Non-Defaulting Co-Owner's operations or maintenance of such Non-Defaulting Co-Owner's Facilities, the Non-Defaulting Co-Owner(s) shall have the right to any expedited remedies that may be available hereunder at law or in equity, including the right to cure such default as provided in Section 13.2.1, the right to seek specific performance of this Agreement, and the right to reimbursement of all reasonable costs actually incurred by such Non-Defaulting Co-Owner in effecting such cure.
      13.2.5 In no event shall any Co-Owner be entitled to terminate this Agreement on account of default by another Co-Owner or the Operator hereunder.  None of the bankruptcy or insolvency of a Co-Owner or the Operator, or an Event of Default by a Co-Owner or the Operator under this Agreement shall be grounds for terminating this Agreement.
      13.2.6 The Co-Owners and the Operator agree that damages may be an inadequate remedy for certain Events of Default, and that each Co-Owner and the Operator shall be entitled to seek injunctive and other equitable relief, including specific performance, against any other Co-Owner or the Operator to prevent or remedy such Event of Default.
ARTICLE XIV 
LENDER PROTECTION
      14.1 Right to Encumber and Assign
.  As provided in Section 17.3, each Co-Owner may, upon notice to the other Co-Owners but without the other Co-Owners' consent or approval, mortgage, collaterally assign, or otherwise encumber and grant a security interest in its rights to any party providing debt or equity financing or refinancing (collectively, "Lenders") under this Agreement in and to the Shared Real Property, the Shared Facilities or the electrical and/or transmission capacity of the Shared Facilities in a Shared Assets Group in which it has an Ownership Interest (collectively, the "Security Assets"), which said security interests in all or a part of the Security Assets are collectively referred to herein as "Lenders's Liens".
      14.2 Co-Owners' Obligations
.  Each Co-Owner agrees to consent in writing to financing documents as may reasonably be required by Lenders.  As a precondition to exercising any remedies related to any Event of Default by a Co-Owner under this Agreement, the other Co-Owners shall give written notice of default to each Lender that has given written notice of its Lender's Lien and notice address to the Co-Owners and the Operator at the same time it delivers notice of default to the Co-Owner, specifying in detail the alleged event of default and the required cure.  Each Lender shall have the right, but not the obligation, to cure any Event of Default by the Co-Owner to which it is a Lender and shall have the same amount of time to cure the Event of Default as such Co-Owner plus thirty (30) days in the case of a monetary Event of Default and plus sixty (60) days in the case of all other Events of Default by such Co-Owner; provided that if possession of the property is necessary in order to cure an Event of Default, the cure period shall be extend by up to an additional one hundred eighty (180) days in order to enable the Lender to conduct foreclosure proceedings.  The Lender shall have the right, but not the obligation, to substitute itself for the Co-Owner to which it is the Lender and perform the duties of such Co-Owner hereunder for purposes of curing such event of default.  Each Co-Owner expressly consents to such substitution, agrees to accept such performance and authorizes the Lender (or its employees, agents, representatives or contractors) to enter upon the Shared Real Property and the Shared Facilities to complete such performance with all of the rights and privileges of such Co-Owner hereunder.
      14.3 Lender Obligations
.  Any Lender that does not directly hold an interest under this Agreement, or whose interest is held solely for security purposes, shall have no obligation or liability to any other Co-Owner for performance of a Co-Owner's obligations under this Agreement prior to the time the Lender directly holds an interest in this Agreement, or succeeds to title to a Co-Owner's interest.  A Lender shall be liable to perform obligations of a Co-Owner to another Co-Owner under this Agreement only for and during the period it directly holds such interest.  In the event that a Lender elects to (i) perform a Co-Owner's obligations under this Agreement, (ii) continue operation of the Shared Facilities, (iii) acquire any portion of a Co-Owner's right, title or interest in all or any of the Security Assets or (iv) enter into a new joint ownership agreement as provided in Section 14.6, then such Lender shall not have any personal liability to a Co-Owner in connection therewith, and the sole recourse in the event of default by such Lender shall be to execute against such Lender's interest in the Security  Assets.  Moreover, any Lender who acquires the Security Assets pursuant to foreclosure or an assignment in lieu of foreclosure shall not be liable to perform any obligations under the Agreement to the extent the same are incurred or accrue after such Lender no longer has ownership of the Security Assets.
      14.4 Lender's Right to Possession, Right to Acquire and Right to Assign
.  A Lender shall have the absolute right: (i) to assign its Lender's Lien; (ii) to enforce its Lender's Lien and acquire title to all or any portion of the Security Assets by any lawful means; (iii) to take possession of and operate all or any portion of the Security Assets and to perform all obligations to be performed by the Co-Owner to which it is the Lender, or to cause a receiver to be appointed to do so; and (iv) to acquire all or any portion of the Security Assets by foreclosure or by an assignment in lieu of foreclosure and thereafter without Co-Owners' consent to assign or transfer all or any portion of the Security Assets to a third party.  No Co-Owners' consent shall be required for any of the foregoing, and upon acquisition of the interests of all or any portion of the Security Assets by a Lender or any other third party who acquires the same from or on behalf of the Lender, the Co-Owners shall recognize the Lender or such other party (as the case may be) as the other Co-Owner's proper successor, and this Agreement shall remain in full force and effect.
      14.5 Opportunity to Cure
.  Following acquisition of all or a portion of the Security Assets by the Lender as a result of either foreclosure or acceptance of an assignment in lieu of foreclosure, or by a purchaser at a foreclosure sale, this Agreement shall continue in full force and effect and the Lender or party acquiring title to the Security Assets shall, as promptly as reasonably possible, commence the cure of all defaults under this Agreement and thereafter diligently pursue such cure to completion; provided, however, that the Lender or party acquiring title to the Security Assets shall not be required to cure those defaults which are not susceptible of being cured or performed by such Co-Owner ("Non-Curable Defaults").  Non-Curable Defaults shall be deemed waived by Co-Owners upon completion of foreclosure proceedings or acquisition of a Co-Owner's interest in the Shared Assets by such Co-Owner.  If a Lender is prohibited by any process or injunction issued by any court or by reason of any action of any court having jurisdiction over any bankruptcy or insolvency proceeding involving another Co-Owner from commencing or prosecuting the appropriate judicial or non-judicial proceedings, then any cure period for commencing such proceedings shall be extended for the period of such prohibition.
      14.6 New Agreement
.  In the event that this Agreement is rejected or disaffirmed pursuant to bankruptcy law or any other law affecting creditors' rights, then, so long as a Lender has cured any such monetary event of default and is making commercially reasonable efforts to cure any such non-monetary event of default as provided herein, the non-defaulting Co-Owners shall, immediately upon written request from such Lender received within sixty (60) days after any such event, without demanding additional consideration therefor, enter into a new shared facilities agreement with such Lender, which new shared facilities agreement shall (i) contain the same covenants, agreements, terms, provisions and limitations as this Agreement (except for any requirements that have been fulfilled by the Co-Owners prior to such termination, foreclosure, rejection or disaffirmance), and (ii) be for a term commencing on the date of such termination, foreclosure, rejection or disaffirmance and continuing for the remaining term of this Agreement before giving effect to such termination, foreclosure, rejection or disaffirmance.  At the option of the Lender, the new shared facilities agreement may be executed by a designee of such Lender, with the Lender assuming the burdens and obligations of the defaulting Co-Owner hereunder.  If more than one Lender makes a written request for a new shared facilities agreement pursuant hereto, then the same shall be delivered to the Lender whose lien is senior in priority.
      14.7 Lender Consent
.  Notwithstanding any provision of this Agreement to the contrary, the Co-Owners shall not accept a termination of this Agreement without the prior written consent of each Lender.
      14.8 Estoppel Certificates
.  Each Co-Owner shall execute estoppel certificates certifying as to truthful matters, including without limitation that no default then exists under this Agreement, if such be the case; consents to assignment; and non-disturbance agreements as another Co-Owner or any Lender may reasonably request from time to time.  The Co-Owners shall cooperate in amending this Agreement from time to time to include any provision that may be reasonably requested by a Lender to preserve a Lender's Lien.
ARTICLE XV 
INDEMNIFICATION
      15.1 Co-Owner Indemnification
.  Operator and each Co-Owner ("Indemnitor") agrees to indemnify, defend and hold harmless the other Co-Owners and such other Co-Owners' Affiliates, equity owners, Affiliates of its equity owners and each of their respective officers, directors, stockholders, employees, agents, successors and assigns (collectively, "Indemnitees") from and against any and all losses, damages, expenses, injuries, liabilities, judgments, claims, demands, taxes or penalties, including but not limited to attorneys' fees and court costs ("Losses") sustained or incurred by Indemnitees to the extent caused by the negligence or willful misconduct of Indemnitor, its agents or contractors, or caused by Indemnitor's breach of any of its obligations under this Agreement, including but not limited to Losses incurred by reason of physical damage to the property of third parties or bodily injury, including death, of third persons.  In the event a Loss is caused by the joint or concurrent negligence of one or more of the Co-Owners, the Loss shall be borne by each such Co-Owner in proportion to its degree of negligence.
      15.2 Cross-Indemnity
.  The Co-Owners intend that the obligations set forth in Section 15.1 include the duty of a Co-Owner ("Cross-Indemnitor"), in the event another Co-Owner or Co-Owners ("Cross-Indemnitee") sustains or incurs any Loss as the result of the joint and several liability of Cross-Indemnitor and Cross-Indemnitee to a third party, such that the Cross-Indemnitee shall be entitled to recover from the Cross-Indemnitor the Cross-Indemnitor's share of any and all Losses sustained or incurred by Cross-Indemnitee. 
ARTICLE XVI 
WAIVER OF RIGHTS TO PARTITION
      Each Co-Owner hereby waives any rights it may have to partition the Shared Facilities, the Shared Real Property or any component thereof or any component thereof during the term of this Agreement, whether by partition in kind or by sale and division of the proceeds, and each Co-Owner further agrees that it will not resort to any action at law or in equity to partition the Shared Facilities, the Shared Real Property or any component thereof, and it waives the benefits of laws that may now or hereafter authorize such partition for the term of this Agreement.
ARTICLE XVII 
MISCELLANEOUS PROVISIONS
      17.1 Covenants Run with the Land
.  The Co-Owners hereby agree that all of the covenants, consents and agreements contained in this Agreement touch and concern the real estate described in this Agreement and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Co-Owner's present or future estate or interest therein and upon each of the Co-Owners, their respective successors and assigns as holders of an estate or interest in said real estate (including any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Co-Owners and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein and any other fee and leasehold estates acquired by any Co-Owner, its successors and assigns for its respective Facility.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
      17.2 Force Majeure
.  If a Co-Owner is delayed or rendered wholly or partially unable to perform its obligations hereunder due to an event of Force Majeure, that Co-Owner (the "Claiming Party") will be excused from whatever performance is affected by the event of Force Majeure to the extent so affected, provided, however, that: (i) the Claiming Party shall give the other Co-Owners notice describing the particulars of the occurrence promptly after the occurrence of the Force Majeure, and, in no event more than three (3) days after the Claiming Party becomes aware of such occurrence; (ii) within five (5) days after giving the notice described in clause (i) above, the Claiming Party shall give the other Co-Owners its best estimate of the expected duration of the event and probable impact on the performance of the Claiming Party's obligations hereunder, and shall continue to furnish timely regular reports with respect thereto during the continuation of the Force Majeure; (iii) the suspension of performance shall be of no greater scope and of no longer duration than is reasonably required by the Force Majeure; (iv) no default of a Co-Owner which arose before the occurrence of the Force Majeure event causing the suspension of performance shall be excused as a result of the occurrence, but so long as the Claiming Party shall have commenced and is diligently continuing to attempt to cure such default prior to the occurrence of the Force Majeure, the cure period (if any) with respect to such default shall be extended on a day-for-day basis to the extent a cure is prevented as a direct result of the Force Majeure; (v) the Claiming Party shall exercise all reasonable efforts to mitigate or limit damages to the other Co-Owners; and (vi) the Claiming Party shall use all reasonable efforts to continue to perform its obligations hereunder and to correct or cure the event or condition excusing performance.  In resolving any dispute between the Co-Owners, the burden of proof as to whether a Force Majeure has occurred and whether the Force Majeure excuses the Claiming Party from performance under this Agreement shall be upon the Claiming Party.
      17.3 FERC Filing and Acceptance.	  The Co-Owners acknowledge and agree that: (i) this Agreement will be publicly available through its filing with FERC for acceptance under Section 205 of the FPA; (ii) subsequent amendments to this Agreement that involve FERC-jurisdictional transmission facilities or service must be filed with and accepted by FERC, and the effectiveness of such amendments will be contingent on such FERC acceptance; (iii) changes in ownership contemplated by this Agreement may be subject to prior FERC approval; and (iv) disconnections or terminations contemplated by this Agreement may require prior FERC approval.  Promptly after the Execution Date or after any amendment to the Agreement, the Co-Owners will prepare a draft filing to seek acceptance by FERC of the Agreement or such amendment and the Co-Owners will cooperate to make any changes to the filing requested by the other Co-Owners and will file the Agreement or such amendment for acceptance by FERC.  Contemporaneously with the filing of this Agreement with FERC, the Co-Owners will apply to FERC for regulatory waivers exempting the Co-Owners from compliance with FERC Order Nos. 888, 889 and 890, and FERC's regulations at 18 C.F.R.  35.28, and 18 C.F.R. Parts 37 and 358.  Each Co-Owner agrees that it will not oppose acceptance of the Agreement or an amendment by FERC, or the granting by FERC of the waivers described in the preceding sentence, and that it will reasonably cooperate with the other Co-Owners to address any issues raised by FERC in connection with the filings described in this Section 17.3.  Subject to the terms and conditions set forth herein, the Co-Owners agree to execute and deliver all documents reasonably necessary for this Agreement to comply with FERC requirements.
      17.4 Assignment
.  This Agreement will be binding on and inure to the benefit of the Co-Owners and their respective successors and permitted assigns.  All transfers, conveyances, assignments of Shared Facilities or Shared Real property will be subject to the terms and conditions of this Agreement, whether or not explicitly stated.  Each Co-Owner may, at any time and from time to time, upon notice but without the other Co-Owners' consent or approval, (i) subject to compliance with Section 9.7, transfer or assign this Agreement and the rights and obligations under this Agreement to a Person that acquires all or substantially all of such Co-Owner's assets, including such Co-Owner's Shared Assets, and agrees to assume all obligations of that Co-Owner under this Agreement (a "Permitted Assignee"); and/or (ii) create Lender's Liens pursuant to Article XIV.  Otherwise, no Co-Owner shall transfer or assign all or any part of its right, title and interest in or to this Agreement or any of its rights hereunder without the prior consent of all of the other Co-Owners; provided, further, that if FERC approval is required for any such assignment or transfer, it shall not be effective unless and until FERC approval has been obtained.  For purposes of this Agreement, a Change of Control of a Co-Owner shall be considered an assignment by such Co-Owner of its rights and interests under this Agreement and shall be subject to the requirements hereunder with respect to assignments.  Any Permitted Assignee shall assume all of the obligations of the assigning Co-Owner hereunder and shall execute any documents which may reasonably be required by the other Co-Owners, or by Lenders, including but not limited to any document in connection with a governmental permit, approval, authorization, entitlement or other consent.  Under no circumstances shall any Lender or Permitted Assignee have any greater rights of ownership or use of the Shared Assets than the rights granted to the Co-Owners in this Agreement.  Any assignment permitted under this Agreement shall release the assigning Co-Owner from obligations accruing after the date that liability is assumed by a transferee, but the assigning Co-Owner shall continue to be liable to the other Co-Owners for all performance due by the assigning Co-Owner for matters that have accrued and are unsatisfied as of the date of the assignment.  Any purported assignment in contravention of this Section 17.3 will be void.
      17.5 Actions By Co-Owners.  Unless expressly provided otherwise, voting by the Co-Owners shall be in proportion to their respective Proportionate Shares, so that the weight of each Co-Owner's vote is proportional to the nameplate capacities of their respective Facilities.
      17.6 Entire Agreement
.  This Agreement is the Co-Owners' complete and final expression of agreement regarding the matters addressed in this Agreement and supersedes all prior agreements, representations, understandings, offers and communications, whether oral or written, regarding such matters.
      17.7 Amendment
.  This Agreement can be amended only by a mutually agreeable written amendment executed by an authorized representative of each Co-Owner.
      17.8 Further Assurances
.  Each Co-Owner agree to execute and deliver any additional instruments, agreements or amendments, and to take such other actions as may be necessary or reasonably requested by the other Co-Owners to effectuate or evidence this Agreement and which are not inconsistent with the provisions hereof, do not adversely affect the rights of other Co-Owners, violate the terms and spirit of this Agreement, and which do not involve assumptions of obligations or materially affect the cost of performance, other than those provided for in this Agreement, in order to give full effect to and carry out the intent of this Agreement, including cooperating in confirming the grant or assignment of property rights or the reservation or retention of property rights. 
      17.9 Severability
.  If any provision of this Agreement is held invalid or unenforceable, all other provisions will not be affected.  With respect to the provision held invalid or unenforceable, the Co-Owners agree to cooperate to amend this Agreement as necessary to effect the Co-Owners' original intent as closely as possible.
      17.10 Joint Preparation
.  This Agreement or any uncertainty or ambiguity therein shall not be construed against any one Co-Owner, but rather shall be construed as though all Co-Owners jointly prepared this Agreement.
      17.11 No Waiver
.  If on any occasion a Co-Owner does not insist upon the performance of any term, condition or provision of this Agreement, such forbearance will not operate or be construed as an acceptance of any variation in any term, condition or provision of this Agreement or relinquishment of any right under this Agreement.  No waiver by a Co-Owner of any right or of any default by the other Co-Owners under this Agreement will be effective unless it is in writing and signed by the waiving Co-Owner, and no waiver will operate or be construed as a waiver of any other or further right or as a waiver of any future default, whether of like or different character or nature.
      17.12 Governing Law
.  This Agreement shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      17.13 Dispute Resolution Procedures
.  Disputes among the Co-Owners shall be resolved in accordance with the procedures set forth in Exhibit E.
      17.14 Relationship of the Co-Owners
.  This Agreement will not be interpreted or construed to (i) create an association, joint venture or partnership among the Co-Owners or impose any partnership obligation or liability on any Co-Owner, or (ii) create any agency relationship among the Co-Owners or impose any fiduciary duty of any kind on any Co-Owner, or (iii) create a lease of any property of any kind.  Subject to Operator's provision of O&amp;M Services, no Co-Owner will have any right, power or authority to enter into any agreement or undertaking for, or act on behalf of, or to act as or be an agent or representative of, or otherwise to bind, the other Co-Owners.  Each Co-Owner waives any and all rights that it may otherwise have under Applicable Laws or legal precedents to make any claims or take any action against the other Co-Owners or any of its Affiliates in respect of this Agreement based on any theory of agency, fiduciary duty or other special standard of care.
      17.15 No Third Party Rights
.  Except with respect to the rights of Lenders as set forth in Article XIV, the covenants contained herein are made solely for the benefit of the Co-Owners and the Operator, and shall not be construed as benefiting any Person that is not a Co-Owner or the Operator.
      17.16 No Dedication of Facilities
.  Any undertaking by one Co-Owner to the other Co-Owners under this Agreement shall not constitute the dedication of the electric facilities or any portion thereof or any other property of the undertaking Co-Owner to the public or to the other Co-Owners, and it is understood and agreed that any such undertaking by a Co-Owner will cease upon the termination of its obligations hereunder.  Nothing herein shall constitute a dedication or an offer to dedicate any Shared Facilities or Shared Real Property to the public or for public service.
      17.17 Notices
.  Except as otherwise provided in this Agreement, all notices and other communications to be given or made under this Agreement will be in writing, will be addressed as specified below, and will either be personally delivered or sent by courier service, by registered or certified mail, or by facsimile.
If to Rising Tree I:
Rising Tree Wind Farm LLC
808 Travis, Suite 700
Houston, TX 77002
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail: leslie.freiman@edpr.com
If to Rising Tree II:
Rising Tree Wind Farm II LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail:  leslie.freiman@edpr.com
If to Rising Tree III:
Rising Tree Wind Farm III LLC
808 Travis, Suite 700
Houston, TX 77002
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail:  leslie.freiman@edpr.com

All notices will be deemed delivered (i) when presented personally, (ii) if given by facsimile or by e-mail, on dispatch to the receiving Co-Owner's facsimile number or e-mail address specified above (with confirmation) unless dispatched after the recipient's normal business hours on a Business Day or dispatched on any day other than a Business Day, in which case such notice shall be deemed to have been delivered on the next Business Day, so long as a copy of such facsimile or email is also delivered by United States mail, postage prepaid, registered or certified, return receipt requested, or by a nationally recognized overnight private courier service; (iii) upon receipt if delivered by a nationally recognized overnight private courier service to each receiving Co-Owner at the applicable address specified above (or such other address as the receiving Co-Owner may have specified by notice delivered to the delivering Co-Owner), or (iv) five (5) days after being deposited in a United States Postal Service receptacle, postage prepaid, registered or certified, return receipt requested, addressed to the receiving Co-Owner(s) at the address specified above (or such other address as such receiving Co-Owner may have specified by notice delivered to the delivering Co-Owner at its address or facsimile number specified above).  A Co-Owner may change any or all of its address, facsimile number or e-mail address, to which notices and communications are to be sent by giving notice as required by this Section 17.15.
      17.18 Counterparts
.  This Agreement may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument.  It will not be necessary in making proof of this Agreement to produce or account for more than one counterpart.
      17.19 Timing for Performance
.  Notwithstanding anything herein to the contrary, if the time for performing an obligation under this Agreement expires on a day that is not a Business Day, the time for performing shall be extended until that time on the next Business Day.
      17.20 Waiver of Consequential Damages
.  EACH OF THE CO-OWNERS AND OPERATOR EXPRESSLY WAIVES AND IN NO EVENT SHALL ANY OF THE CO-OWNERS, OPERATOR OR ANY OF THEIR RESPECTIVE OFFICERS, DIRECTORS, MEMBERS, PARTNERS, SHAREHOLDERS, EMPLOYEES, AGENTS OR AFFILIATES BECOME LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES OF ANY NATURE WHATSOEVER CONNECTED WITH OR RESULTING FROM PERFORMANCE OR NON-PERFORMANCE OF THIS AGREEMENT, OR OTHERWISE.  THIS WAIVER INCLUDES, WITHOUT LIMITATION, DAMAGES OR CLAIMS IN THE NATURE OF LOST REVENUES, INCOME, [TAX PREFERENCES] [please explain] OR PROFITS, LOSS OF USE, OR COST OF CAPITAL, IRRESPECTIVE OF WHETHER SUCH DAMAGES ARE REASONABLY FORESEEABLE AND IRRESPECTIVE OF WHETHER SUCH CLAIMS ARE BASED UPON NEGLIGENCE, STRICT LIABILITY, CONTRACT, OPERATION OF LAW OR OTHERWISE.
      17.21 Survival
.  Notwithstanding any other provision of this Agreement, the provisions of Article I, Sections 2.2 and 2.3, Article XII (Taxes), Article XV (Indemnification), and Article XVII shall survive the termination of this Agreement.
      17.22 Memorandum.  Each Co-Owner agrees to sign and acknowledge the Memorandum of Rising Tree Shared Facilities Agreement ("Memorandum") in the form attached hereto as Exhibit G.  Operator shall record the Memorandum promptly in the Office of the County Recorder of Kern County, California at the expense of the Co-Owners.
      17.23 Other Agreements.  The rights and obligations of the Co-Owners and Operator hereunder are independent of and in addition to any rights and obligations of such parties under the LGIA Co-Tenancy Agreement.  
Signatures follow on next page
      
To evidence its acceptance of this Agreement, and intending to be legally bound, each Co-Owner has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:


EXHIBIT A
SCHEDULE OF DEFINITIONS
Additional Phase means the additional generation facilities owned by a Co-Owner, its Affiliate or another Person that have been approved by the Co-Owners to be connected to and to use the Shared Facilities.
Affected Party has the meaning given in Section 7.1.
Affiliate means, with respect to any Co-Owner, any Person directly or indirectly controlling, controlled by or under common control with such Co-Owner.  The term "control" and correlative terms includes the possession, directly or indirectly and whether acting alone or in conjunction with others, of the authority to direct or cause the direction of the management or policies of a Person. 
Agreement has the meaning set forth in the Preamble.  
Annual O&amp;M Budget has the meaning given in Section 6.8.
Applicable Laws means all applicable constitutional provisions, statutes, acts, codes, laws, rules, regulations, ordinances, orders, interpretations, permits, treaties, judgments, decrees, rulings, decisions, injunctions, writs and orders of a Governmental Authority.
Business Day means any day except a Saturday, Sunday or other days on which state or federal banks in [Los Angeles, California] are closed or authorized to be closed.  A Business Day shall begin at 8:00 a.m. and end at 5:00 p.m. PPT.
CAISO means the California Independent System Operation Corporation or its successor agency.
CAISO Tariff means the California Independent System Operator Corporation, Fifth Replacement FERC Electric Tariff (Open Access Transmission Tariff), as it may be amended, supplemented or replaced (in whole or in part) from time to time.
Capital Improvements means any additions, modifications or substitutions to the Shared Facilities or Shared Real Property which, in accordance with generally accepted accounting principles, should be capitalized.
Change of Control means, with respect to any Person, the change, in one transaction or a series of transactions, of the direct or indirect ownership of fifty percent (50%) or more of the equity ownership interests of such Person other than solely for financing purposes. 
Claiming Party has the meaning given in Section 17.2.
Commissioning Date means, as applicable, the date of commissioning of the first wind turbine of the Facility or Additional Phase in question.
Co-Owner or Co-Owners has the meaning given in the Preamble.
Co-Owner Ceasing Business Operations has the meaning given in Section 8.1.
Cross Indemnitee has the meaning given in Section 15.2.
Cross Indemnitor has the meaning given in Section 15.2.
Decommissioning Obligation has the meaning given in Section 8.1.
Delivery Capability means the amount of electrical energy that can be delivered to the Point of Interconnection at any instant of time. 
Effective Date has the meaning given in Section 3.1.
Emergency Condition has the meaning given in Section 6.6.
Environmental Laws means all Applicable Laws relating to (i) facility siting, land use and environmental matters; (ii) the control of any pollutant, or protection of the air, water, or land; (iii) solid, gaseous or liquid waste generation, handling, treatment, storage, disposal or transportation; (iv) exposure to hazardous, toxic or other harmful substances; and (v) the protection and enhancement of the environment.  Environmental Laws includes laws which relates to environmental quality, health, safety, pollution, contamination, cleanup, or the protection of human health, ambient air, waters (including ground waters) or land, and: the Clean Air Act, 42 U.S.C. 7401 et seq. (CAA), the Clean Water Act, 33 U.S.C.  1251 et seq. (CWA), the National Environmental Policy Act, 42 U.S.C.  4321 et seq., the Endangered Species Act, 16 U.S.C.  1531 et seq., the Resource Conservation Recovery Act, 42 U.S.C. 6901 et seq. (RCRA), the Safe Drinking Water Act. 42 U.S.C. 300f et seq., the Comprehensive Environmental Response, Compensation, and Liability Act as amended by the Superfund Amendments and Reauthorization Act, 32 U.S.C. 9601 et seq. (CERCLA), the Federal Insecticide, Fungicide and Rodenticide Act, 7 U.S.C.  136 et seq., the Hazardous Substances Transportation Act, 49 U.S.C. 1801 et seq., the Toxic Substances Control Act, 15 U.S.C. 2601 et seq. (TSCA), and the Emergency Planning and Community Right-to-Know Act, 42 U.S.C. 11001 et seq., any state or local laws relating to permits, local land use control ordinances or similar laws, and any state or local laws implementing or substantially equivalent to the foregoing federal requirements, and other similar laws.
Event of Default has the meaning as given in Section 13.1.
Extraordinary Maintenance has the meaning given in Section 6.9.
Facility and Facilities have the meanings given in Recital B.
FERC means the Federal Energy Regulatory Commission and any successor.  
Fiber Optic Facilities has the meaning given in Exhibit B.
Force Majeure means an event or circumstance which prevents a Co-Owner from performing its obligations under this Agreement, which event or circumstance is not within the reasonable control of, or a result of the negligence of, the Claiming Party, and which, by the exercise of commercially reasonable efforts, the Claiming Party is unable to overcome or avoid or cause to be avoided.  Force Majeure includes the following: fires; storms; earthquakes; floods; lightning; landslides; volcanic eruptions; hurricanes; tidal waves; epidemics; explosions; cyclones; tornadoes; acts of God; tempests; other natural disasters; strikes, work stoppages, walkouts, lockouts and other labor difficulties; civil disturbances; sabotage; vandalism; labor, material and equipment shortages (including spare parts shortages); equipment failure or breakdown; interruptions to transportation; acts of military authorities; court actions; war (declared or not); riot; public disorder; condemnation of property; quarantine; actions, failures to act or delays in acting by any Governmental Authority; and late delivery or non-delivery of machinery, equipment, fuel, materials, components, parts or consumables and delay in the performance or the non-performance by a Co-Owner's contractors or subcontractors, in each case as a result of an event or occurrence that is otherwise an event of Force Majeure.  A Co-Owner will not claim Force Majeure based on (i) the loss of market for a Facility's electrical output, (ii) the economic infeasibility of generating electricity from a Co-Owner's Facility, or (iii) its inability to make a payment obligation.
FPA means the Federal Power Act, as amended, and the regulations of FERC thereunder.
Good Utility Practice means any of the practices, methods and acts engaged in or approved by a significant portion of the electric utility industry during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method or act to the exclusion of all others, but rather to be acceptable practices, methods or acts generally accepted in the region in which the Facilities are located.  Good Utility Practice shall include, but not be limited to, NERC criteria, rules, guidelines and standards, criteria, rules, guidelines and standards, and the CAISO's criteria, rules, guidelines and standards, where applicable, as they may be amended from time to time, including the rules, guidelines and criteria of any successor organization to the foregoing entities.  When applied to the Co-Owners in their operation of their Facilities, the term Good Utility Practice shall also include standards applicable to an independent power producer connecting to the distribution or transmission facilities or system of a utility.
Governmental Authority means any federal, state, local, tribal or foreign governmental authority (including any regulatory authority); a state, province, commonwealth, territory or district thereof; a county or parish; a city, town, township, village or other municipality; a district, ward or other subdivision of any of the foregoing; an executive, legislative or other governing body of any of the foregoing; any agency, authority, board, department, system, service, office, commission, committee, council or other administrative body of any of the foregoing; any court or other judicial body; and any officer, official or other representative of any of the foregoing, or quasi-governmental entity acting under delegated authority, having or asserting jurisdiction over a Co-Owner, the subject matter of this Agreement, or this Agreement.
Granting Co-Owner has the meaning given in Section 4.1.
Hazardous Materials Laws means any applicable law or regulation relating to any substance, material or waste classified as hazardous or toxic, or which is regulated as waste.
Indemnitees has the meaning given in Section 15.1.
Indemnitor has the meaning given in Section 15.1. 
Interconnection Agreement means that certain Large Generator Interconnection Agreement dated as of March 27, 2013, by and among the CAISO, the Transmission Owner, the Co-Owners (in the case of Rising Tree III, as successor to Addison Wind Resources, LLC), and Rising Tree I, as manager.
Last Use Notice has the meaning given in Section 8.1.
Late Payment Rate has the meaning set forth in Section 6.10.
Lenders has the meaning given in Section 14.1.
Lender's Liens has the meaning given in Section 14.1. 
LGIA Co-Tenancy Agreement has the meaning given in Recital D.
Line Losses means loss of electric energy transmitted on Transmission Line.
Losses has the meaning given in Section 15.1.
Material Project Agreements means the Interconnection Agreement, this Agreement, the LGIA Co-Tenancy Agreement, purchase or warranty agreements relating to Shared Facilities, and certain other agreements related to the construction, operation and use of the Shared Facilities, as set forth on Exhibit D, and such other agreements to be included upon the mutual agreement of the Co-Owners.
Memorandum has the meaning given in Section 17.20.  
Metered Energy means the amount of electric energy measured at a given point, such as at the o
MW means megawatts.
NERC means the North American Electric Reliability Corporation and its successors.
Non-Curable Defaults has the meaning given in Section 14.5.
Non-Defaulting Co-Owner has the meaning given in Section 13.2.3.
O&amp;M Costs has the meaning given in Section 6.7.  
O&amp;M Facility means an operation and maintenance building and related facilities for a Facility, including equipment and systems housed therein.
O&amp;M Services has the meaning given in Section 6.1. 
O&amp;M Services Commencement Date has the meaning given in Section 6.3.
Operator means the Co-Owner or other Person engaged by the Co-Owners to manage, operate, maintain and repair the Shared Facilities and to perform other duties pertaining to the Shared Assets as set forth in the Agreement.   The Operator shall initially be Rising Tree I or an Affiliate designated by it, subject to replacement pursuant to Sections 6.17 and 13.2.2.
Ownership Interest means the undivided interest of a Co-Owner in a Shared Asset Group, as set forth in Exhibit B. 
Performance Standard has the meaning given in Section 6.2.
Permit means any permit, license, approval, consent, right to use, franchise or similar authorization from any Governmental Authority.
Permitted Assignee has the meaning given in Section 17.3.
Person means any natural person, corporation, general partnership, limited partnership, limited liability company, proprietorship, other business organization, trust, union, association or Governmental Authority.
Point of Interconnection means the point at which the Transmission Line interconnects to the Southern California Edison 220 kV Wind Hub Substation, as more particularly described in the Interconnection Agreement.
PPT or Prevailing Pacific Time means the then applicable time in the Pacific time zone.
Project Substation means the "Project Substation" as described on Exhibit B.
Proportionate Share means, as applied with respect to the sharing and allocation of costs, rights, interest, obligations and/or liabilities related to a Shared Assets Group among its Co-Owners, the proportion of a Facility's installed nameplate capacity connected to such Shared Assets Group bears to the aggregate installed nameplate capacity of all such Facilities using such Shared Assets at the time; provided that, for the purpose of such calculation, the installed nameplate capacity of:  (1) any Facility that has not yet achieved its Commissioning Date shall be deemed to be 0 MW; and (2) any Facility that has achieved its Commissioning Date shall be deemed to be the portion of the expected nameplate capacity set forth in Recital B that is expected to be connected to such Shared Assets Group.  In this Agreement, except as otherwise expressly provided, a reference to a Proportionate Share with respect to a given Co-Owner shall mean the Proportionate Share of such Co-Owner in each of the Shared Assets Groups in which such Co-Owner has an Undivided Use Interest.
RST I Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree I.  
RST II Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree II.  
RST III Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree III.  
RST Shared Facilities has the meaning given in Exhibit B.
RST I/II Shared Facilities has the meaning given in Exhibit B.
Security Assets has the meaning given in Section 14.1.
Settlement Interval has the meaning given in the CAISO Tariff.
Shared Assets means any or all of the Shared Facilities and the Shared Real Property in a Shared Assets Group.
Shared Assets Group has the meaning given in Section 3.4.
Shared Facilities has the meaning given in Section 3.2.
Shared Facilities Group has the meaning given in Section 3.2.
Shared Permits has the meaning given in Section 3.6.
Shared Real Property has the meaning given in Section 3.3.
Shared Real Property Agreements means the easement agreements or conveyance documents described in Exhibit B.
Transmission Line has the meaning given in Exhibit B.  
Transmission Owner means Southern California Edison Company, its successors and assignees.
Underlying Granting Documents has the meaning given in Section 4.1.
Undivided Use Interest has the meaning given in Section 4.2.

EXHIBIT B

SHARED FACILITIES, SHARED REAL PROPERTY AND SHARED PERMITS

A. Assets Jointly Owned and Shared by All Co-Owners (RST Shared Facilities Group)
1. Shared Facilities
a.	Project Substation:  See Exhibit B-1 attached hereto.
b.	Transmission Line:  See Exhibit B-2 attached hereto.
c.	Roads
d.	O&amp;M Building
e.	Condor Detection Tower
2. Shared Real Property
a.	Project Substation:  
The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22
b.	Transmission Line:  
   Tract 1
The East half of the East half of Section 9, Township 11 North, Range 13 West, San Bernardino Base and Meridian in the unincorporated area of the County of Kern, State of California, as per the official plat thereof on file in the Office of the Surveyor General, approved September 19, 1856.

Excepting therefrom one half of all oil, gas and other hydrocarbon substances and minerals in and under said land, as excepted in deed dated December 1, 1955 from M&amp;R Sheep Company, recorded March 22, 1956 in Book 2581, Page 233 of Official Records.

APN:  237-022-13

	Tract 2

A strip of land one hundred seventy-five (175) feet in width, situated in the Southeast 1/4 of Section 17, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to Residual Ranch Corporation, in Book 6070, Pages 1209-1210, recorded on November 25, 1987, Kern County Deed Records, and being more particularly described as follows:

That strip of land, within the East 1,900 feet of said property, being one hundred seventy-five (175) feet in width, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648), said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.  

APN:  237-031-04
	
Tract 3

The East Half of the Northeast Quarter of Section 16, Township 11 North, Range 13 West, San Bernardino Meridian in the County of Kern, State of California, according to the official plat of said land by the Surveyor General dated September 19, 1856.

Excepting therefrom said land an undivided 1/16th of all coal, oil, oil shale, gas, phosphate, sodium and other mineral deposits in said land as reserved to the State of California, by the provision of an act of the legislation, statutes of 1921 page 404 and amendments thereto.

Also excepting therefrom half of all oil, hydrocarbons and similar minerals but without the right of entry to depth of 500 feet from the surface thereon in and to the property. As granted to J. J. Kessler, a married man, in deed recorded August 23, 1956 in Book 2654, page 300 of official records.

APN:  237-031-08

Tract 4

A strip of land, one hundred seventy-five (175) feet in width, situated in the South 1/2 of Section 16, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to The Muriel Pollia Foundation, by Document No. 0207220631, recorded on November 2, 2007, Kern County Deed Records, and being more particularly described as follows:

The East one hundred seventy-five (175) feet of said South 1/2, Section 16, together with that one hundred seventy-five (175) foot strip, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648) said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.

APN:  237-031-38

Tract 5

The West half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded August 14, 1963 in Book 3634, Page 835 of Official Records. 

APN:  237-141-01

Tract 6

The East half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded September 20, 1967 in Book 4090, Page 851 of Official Records. 

APN:  237-141-02

Tract 7

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

Tract 8

The East half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America recorded in Book 3259, Page 641 of Official Records.

APN:  237-141-04

Tract 9

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

Tract 10

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 864, Official Records.

APN:  237-141-20

Tract 11

The West half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom all oil, gas and other mineral deposits, in and under said land, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 863, Official Records.

APN:  237-141-21

Tract 12

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

   APN:  237-141-22
   
c.	Collection and Distribution Lines:  
   Tract 1

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22

   Tract 2

The East half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so Patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in patent recorded December 7, 1962 in Book 3552, Page(s) 966 of Official Records.

APN:  237-141-25

   Tract 3

The West half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 23, 1990 on Book 6422, Page 2386 of Official Records.

APN:  237-141-26

   Tract 4

The East half of the Southwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded January 4, 1962 on Book 3449, Page 44 of Official Records.

APN:  237-141-27
   
   Tract 5

The East half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Except therefrom all oil, gas and other hydrocarbon substances, as reserved in Book 3326, Page 982, of Official Records.

APN:  237-142-25

   Tract 6

The West half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-26

   Tract 7

The West half of the Southwest quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom to the United States all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved in patent recorded June 29, 1990 in Book 6400, Page 2360 of Official Records.

APN:  237-142-32

   Tract 8

The West half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting and reserving to the United States all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, in patent recorded August 29, 1961 in Book 3410, Page 214, of Official Records.

APN:  237-152-01

   Tract 9

The East half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent recorded April 21, 1960 in Book 3260, Page 842, of Official Records.

APN:  237-152-02

   Tract 10

The West half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent dated January 14, 1960 Patent No. 1203755 and recorded August 17, 1960 in Book 3293, Page 949, of Official Records.

APN:  237-152-03

   Tract 11

The East half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Except all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, as reserved by the United States of America in the patent recorded October 26, 1960 in Book 3314, Page 880, of Official Records.

APN:  237-152-04

   Tract 12

The West half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-05

   Tract 13

The East half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Except all oil, gas and other mineral deposits, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved by the United States of America in patent recorded April 5, 1960 in Book 3256, Page 18 of Official Records.

APN:  237-152-06

   Tract 14

The North half of the West half of the Northeast quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded June 16, 1960 in Book 3276, Page 51, of Official Records.

APN:  237-152-33

   Tract 15

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01

   Tract 16

The West half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, as per Certificate of Compliance No. 446 recorded May 28, 1982 in Book 5462, Page 1483 of Official Records.

Except 50% of all oil and mineral rights as reserved in records of said County.

APN:  237-284-02
   
   Tract 17

The East half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official map of said land on file in the Bureau of Land Management and approved by the Surveyor General on September 19, 1856.

Except therefrom one-half of all oil, gas and minerals and hydrocarbon substances in and under said land, as excepted in Deed dated August 4, 1955 from M&amp;R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 289, of Official Records.  Said deed provides in part:

The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the Second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the Grantor its successors and assigns from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent of neighboring lands and/or from conducting sub-surface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the Grantors in said Deed.

Excepting therefrom the Northeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section and the Southeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section as reconveyed by Document recorded in Book 5101, Page 2245 of Official Records.

APN:  237-284-05

   Tract 18

The West half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289 of Official Records.

APN:  237-284-06

   Tract 19

The East half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land together with the rights incidental thereto, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289, of Official Records.

APN:  237-284-07

   Tract 20

The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05
d.	Roads:
   Tract 1

The East half of the East half of Section 9, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area of the County of Kern, State of California, as per the official plat thereof on file in the Office of the Surveyor General, approved September 19, 1856.

Excepting therefrom one half of all oil, gas and other hydrocarbon substances and minerals in and under said land, as excepted in deed dated December 1, 1955 from M&amp;R Sheep Company, recorded March 22, 1956 in Book 2581, Page 233 of Official Records.

APN:  237-022-13

   Tract 2
   
The East Half of the Northeast Quarter of Section 16, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat of said land by the Surveyor General dated September 19, 1856.

Excepting therefrom said land an undivided 1/16th of all coal, oil, oil shale, gas, phosphate, sodium and other mineral deposits in said land as reserved to the State of California, by the provision of an act of the legislation, statutes of 1921 page 404 and amendments thereto.

Also excepting therefrom half of all oil, hydrocarbons and similar minerals but without the right of entry to depth of 500 feet from the surface thereon in and to the property. As granted to J. J. Kessler, a married man, in deed recorded August 23, 1956 in Book 2654, Page 300 of Official records.

APN:  237-031-08

   Tract 3

A strip of land, one hundred seventy-five (175) feet in width, situated in the South 1/2 of Section 16, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to The Muriel Pollia Foundation, by Document No. 0207220631, recorded on November 2, 2007, Kern County Deed Records, and being more particularly described as follows:

The East one hundred seventy-five (175) feet of said South 1/2, Section 16, together with that one hundred seventy-five (175) foot strip, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648) said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.

APN:  237-031-38

   Tract 4

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01

Tract 5

The West half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded August 14, 1963 in Book 3634, Page 835 of Official Records. 

APN:  237-141-01

   Tract 6

The East half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded September 20, 1967 in Book 4090, Page 851 of Official Records. 

APN:  237-141-02

   Tract 7

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

   Tract 8

The East half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America recorded in Book 3259, Page 641 of Official Records.

APN:  237-141-04

   Tract 9

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

   Tract 10

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, page 864, Official Records.

APN:  237-141-20

   Tract 11

The West half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom all oil, gas and other mineral deposits, in and under said land, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 863, Official Records.

APN:  237-141-21

   Tract 12

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22
   
   Tract 13

The East half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom all oil, gas and other mineral deposits in the land so Patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in patent recorded December 7, 1962 in Book 3552, Page(s) 966 of Official Records.

APN:  237-141-25

   Tract 14

The West half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 23, 1990 on Book 6422, Page 2386 of Official Records.

APN:  237-141-26

   Tract 15

The East half of the Southwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded January 4, 1962 on Book 3449, Page 44 of Official Records.

APN:  237-141-27

   Tract 16

The East half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Except therefrom all oil, gas and other hydrocarbon substances, as reserved in Book 3326, Page 982, of Official Records.

APN:  237-142-25

   Tract 17

The West half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-26

   Tract 18

The West half of the Southwest quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom to the United States all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved in patent recorded June 29, 1990 in Book 6400, Page 2360 of Official Records.

APN:  237-142-32

   Tract 19

The West half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting and reserving to the United States all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, in patent recorded August 29, 1961 in Book 3410, Page 214, of Official Records.

APN:  237-152-01

   Tract 20

The East half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent recorded April 21, 1960 in Book 3260, Page 842, of Official Records.

APN:  237-152-02

   Tract 21

The West half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent dated January 14, 1960 Patent No. 1203755 and recorded August 17, 1960 in Book 3293, Page 949, of Official Records.

APN:  237-152-03

   Tract 22

The East half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Except all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, as reserved by the United States of America in the patent recorded October 26, 1960 in Book 3314, Page 880, of Official Records.

APN:  237-152-04

   Tract 23

The West half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-05

   Tract 24

The East half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Except all oil, gas and other mineral deposits, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved by the United States of America in patent recorded April 5, 1960 in Book 3256, Page 18 of Official Records.

APN:  237-152-06

   Tract 25

The North half of the West half of the Northeast quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded June 16, 1960 in Book 3276, Page 51, of Official Records.

APN:  237-152-33

   Tract 26

The Southwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat of the survey of said land, approved by the Surveyor General October 7, 1936.

Except one half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by the M &amp; R Sheep Co. in deed dated August 4, 1955, recorded in Book 2519, Page 298 of Official Records.

APN:  237-185-07

   Tract 27

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01
   
   Tract 28

The West half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, as per Certificate of Compliance No. 446 recorded May 28, 1982 in Book 5462, Page 1483 of Official Records.

Except 50% of all oil and mineral rights as reserved in records of said County.

APN:  237-284-02

   Tract 29

The East half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official map of said land on file in the Bureau of Land Management and approved by the Surveyor General on September 19, 1856.

Except therefrom one-half of all oil, gas and minerals and hydrocarbon substances in and under said land, as excepted in Deed dated August 4, 1955 from M&amp;R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 289, of Official Records.  Said deed provides in part:

The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the Second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the Grantor its successors and assigns from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent of neighboring lands and/or from conducting sub-surface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the Grantors in said Deed.

Excepting therefrom the Northeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section and the Southeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section as reconveyed by Document recorded in Book 5101, Page 2245 of Official Records.

APN:  237-284-05

   Tract 30

The West half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289 of Official Records.

APN:  237-284-06

   Tract 31

The East half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land together with the rights incidental thereto, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289, of Official Records.

APN:  237-284-07			
Tract 32
The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05		
e.	Crossing Agreements:
(i) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(ii) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm II LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(iii) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm III LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines..
(iv) Letter of Crossing Consent dated February 26, 2014 from AT&amp;T to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for crossing of AT&amp;T's infrastructure.
(v) Letter of Crossing Consent dated May 14, 2014 from PG&amp;E to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for road and transmission line crossing of PG&amp;E's pipelines.
(vi) Letter of Crossing Consent dated September 10, 2014 from PG&amp;E to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for fiber optic line crossing of PG&amp;E's pipelines.
(vii) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(viii) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm II LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(ix) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm III LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(x) Letter of Crossing Consent dated May 28, 2014 from SCE to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for crossing of SCE's overhead distribution lines.
f.	Neighbor Agreements
   Tract 1

Lot 28 of Section 2, Township 11 North, Range 13 West, San Bernardino Base and Meridian in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-121-22

   Tract 2

Lot 49 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-01

   Tract 3

Lot 63 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-19

   Tract 4

Lot 59 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-23
   
   Tract 5

The east half of the northeast quarter of the southeast quarter of the southwest quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-131-24

   Tract 6

The West half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.

APN:  237-132-19
   
   Tract 7

The East half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.

APN:  237-142-20

   Tract 8

The East half of the Northwest quarter of the Southeast quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-132-22

   Tract 9

That portion of the West half of the Southeast quarter of the Southeast quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the un-incorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:

Beginning at the Northeast corner of the West half of the Southeast quarter of the Southeast quarter of the Southeast quarter of said Section 2; Thence Southerly 132 feet; Thence Westerly 165 feet; Thence Northerly 132 feet; Thence Easterly 165 feet to the point of beginning.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America, in Patent recorded February 24, 1960 in Book 3242, Page 151 of Official Records.

APN:  237-132-26

   Tract 10

That portion of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:

Beginning at a point 165 feet west of the northeast corner of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2; thence west 165 feet; thence southerly 132 feet; thence easterly 165 feet; thence northerly 132 feet, to the beginning point.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as reserved by the United States of America, in Patent recorded February 24, 1960 in book 3242 page 151 of Official Records.

APN:  237-132-27
   
   Tract 11

The east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the Official Plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom that portion within the following described land:

That portion of the east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.BM., in the County of Kern, State of California, according to the Official Plat thereof, lying southeasterly of a line that lies 100 feet northwesterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 2, distant thereon South 8923'25" west, 1.75 feet from the southeast corner of said section; Thence north 4747'57" east 2.40 to a point in the easterly line of said section, distant thereon north 100'54" east 1.59 feet from said southeast section corner.

Basis of bearings is Lambert Projection, North American 1927 DATUM, California Zone 5.

Together with all of the grantors right, title and interest in and to all water and water rights, whether surface or subsurface or of any other kind, including all appurtenant water rights, and all water and water rights in any wise incident to the real property herein described or used thereon or in connection therewith by deed recorded February 14, 1967 in book 4024, page 678 of Official Records.

Also except therefrom all oil, gas and other mineral deposits in and under said land together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in Patent recorded February 9, 1960, in Book 3237, Page 339 of Official Records.

APN:  237-132-41

Tract 12

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

   Tract 13

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

   Tract 14

The West half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

APN:  237-141-14

   Tract 15

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, page 864, Official Records.

APN:  237-141-20
   
   Tract 16

The East half of the Northeast quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-20

   Tract 17

The West half of the Northeast quarter of the Northeast quarter of the Southwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-151-07

   Tract 18

The East half of the Northwest quarter of the Southeast quarter of the Southwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-151-22

   Tract 19

The East half of the Southwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-15

   Tract 25

The West half of the Southwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

APN:  237-152-16
g.	O&amp;M Building
The Southwest quarter of the Southeast quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California.

Except an undivided 1/2 interest in 50% of the oil, gas, minerals and other hydrocarbon substances, affecting said land as reserved by deeds of record.

By a document entitled "Order Settling First Account and Report of Executors, for Preliminary Distribution in the matter of the estate of Oscar Rudnick, deceased, filed in the Superior Court of the State of California for the County of Kern, Case No. 15776, the decedents interest in the above mineral exception was distributed to Sophie Rudnick, Marcus Rudnick and Frances A. Moore, Trustees of the Testamentary Trust created by the decedents Will by document recorded January 12, 1979 in book 5168, page 797 of Official Records.

APN:  237-185-05
h.	Laydown Area
The Northwest quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances under and in said land reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 and recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded on Book 5954, Page 2192 of Official Records.

AND

The Northwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded in Book 5954, Page 2192 of Official Records.

AND

The Southwest quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded in Book 5954, Page 2192 of Official Records.

APN 237-185-01
i.	Condor Detection Tower
The East half of the Southwest quarter of the Northeast quarter of fractional Section 18, Township 11 North, Range 14 West, S.B.M., according to the Official Plat of the survey of said land on file in the Office of the Bureau of Land Management and approved on November 21, 1894.
APN 237-083-09
3. Shared Permits
a. Kern County Substation Building permit No. K201403609 issued August 29, 2014.
b. Kern County Transmission Line Building Permit No. K201404234 issued August 14, 2014.
c. Kern County Encroachment Permit for filming of roads. Permit No. 0353-14 issued April 9, 2014.
d. Kern County Encroachment Permit for boring under Oak Creek Road. Permit No. 0626-14 issued June 12, 2014.
e. Kern County Encroachment Permit for private access. Permit No. 0363-14 issued April 9, 2014.
f. Kern County Encroachment Permit for transmission line private access. Permit No. 0809-14 issued August 6, 2014.
g. Kern County Encroachment Permit for transmission line construction. Permit No. 0477-14 issued May 8, 2014.
h. Kern County Encroachment Permit for trenching in Kern County franchise. Permit No. 1201-14 dated November 5, 2014.
i. Eagle Take Permit; yet to be issued by the US Fish and Wildlife Service.  [does not relate to Shared Facilities]
j. Authority to construct 125-kw emergence generator issued by Kern County Air Pollution Control District on October 8, 2014.
k. Kern County Ordinance No. F589 granting Rising Tree Wind Farm LLC a franchise to construct, install, maintain, operate, repair, renew and remove underground fiber optic cable dated November 4, 2014. [Partial assignment to Rising Tree II and Rising Tree III pending.]
4. Third Party Rights
a.	O&amp;M Building:  Rights of Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC (collectively, the "Sublessees") under that certain Sublease Agreement dated [_____], 2014 by and between the Co-Owners, as sublessors, and the Sublessees, as sublessees.
B. Assets Jointly Owned and Shared by Rising Tree I and Rising Tree II (RST I/II Shared Facilities Group)
1. Shared Facilities
a.	Roads
b.	Meteorological Tower
2. Shared Real Property
a.	Collection and Distribution Lines:  
   Tract 1

The South half of the South half of the West half of the Southeast quarter of fractional Section 36, Township 12 North, Range 13 West, San Bernardino Meridian,  in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  224-440-31

   Tract 2

The Southeast quarter of the Northwest quarter of that portion of the North half of the Northeast quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat  thereof,  lying  northerly  of  the northwesterly line of that certain strip of land 200 feet in width conveyed to the City of Los Angeles, a municipal corporation by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds.

Except therefrom that portion of said land deeded to the City of Los Angeles, a municipal corporation by deed recorded April 18, 1968 in Book 4151, Page 400 of Official Records.

APN:  237-261-03

   Tract 3

The South half of the Northwest quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, excepting from the South half of the Northwest quarter of the Southwest quarter of said Section 1, that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by Deed recorded March 13, 1920 in Book 346, Page 421 of Deeds; also excepting therefrom that portion thereof conveyed to the City of Los Angeles in deed recorded June 19, 1968 on Book 4171, Page 256 of Official Records.

APN:  237-261-06

   Tract 4

The North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Excepting therefrom any portion of said land as deeded to the City of Los Angeles, a municipal corporation for Los Angeles Aqueduct by deed recorded April 18, 1969 in Book 4151, Page 393, Official Records.

APN:  237-261-13

   Tract 5

Parcel 4 of Parcel Map No. 4120, in the unincorporated area, County of Kern, State of California, as per map recorded January 4, 1978 in Book 20, Page 6 of Maps of Parcel Maps, in the Office of the County Recorder of said County.

APN:  237-261-22

   Tract 6

The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23

   Tract 7

All that portion of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area of the County of Kern, State of California, being more particularly described as follows:

Commencing at the Southwest corner of said Section, thence North 01 degrees 01 minutes 12 seconds East on and along the West line of said Section a distance of 138.81 feet to a point in the Northerly boundary of the Los Angeles Aqueduct, as conveyed to the City of Los Angeles in the Deed recorded May 31, 1968 in Book 4165, Page 434 of Official Records, said point also being the True Point of Beginning; thence continuing North 01 degree 01 minutes 12 seconds East on an along said West line a distance of 1203.21 feet to a point on the North line of the Southwest quarter of the Southwest quarter of said Section; thence North 89 degrees 24 minutes 52 seconds East on and along said North line a distance of 1,187.00 feet to a point on the Northerly boundary of said Los Angeles Aqueduct, said point also being the beginning on a non-tangent 3450.51 foot radius curve, from which point the radius point bears South 59 degrees 13 minutes 37 seconds East; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 03 degrees 20 minutes 01 seconds an arc distance of 200.76 feet to the beginning of a 386.96 foot radius reverse curve; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 20 degrees 21 minutes 40 seconds an arc distance of 137.51 feet; thence South 47 degrees 48 feet 02 seconds West on and along said Northerly boundary a distance of 1386.61 feet to the True Point of Beginning.

APN:  237-261-30 (formerly 237-261-10)

   Tract 8

A tract of land situated in the North half of the North half of the East half of the East half of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property described in Book 4769, Page 798, recorded on February 8, 1973, Kern County Deed Records, and being more particularly described as follows:

That portion of said property lying northwest of that property described in Book 4198, Page 429, Kern County Deed Records.

APN:  237-285-03

   Tract 9

The Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

EXCEPT:
Parcel No. 80 comprising of that portion of the Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat thereof, lying southeasterly of a line that lies 100 feet northeasterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 11, distant thereon North 89 degrees 30 minutes 21 seconds East 769.74 feet from the Southwest corner of said Section; thence North 29 degrees 11 minutes 48 seconds East 1740.84 feet to the beginning of a curve concave southeasterly and having a radius of 455.19 feet; thence northeasterly along said curve through an angle of 47 degrees 47 minutes 43 seconds, an arc length of 379.71 feet to the beginning of a reverse curve concave northwesterly and having a radius of 250.04 feet; a radial line at said point of reverse curvature bears North 13 degrees 00 minutes 29 seconds West; thence northeasterly along said reverse curve, through an angle of 52 degrees 16 minutes 18 seconds, an arc length of 228.11 feet; thence North 24 degrees 43 minutes 13 seconds East 560.81 feet to the beginning of a curve concave southeasterly and having a radius of 365.06 feet; thence northeasterly along said curve, through an angle of 37 degrees 05 minutes 38 seconds, an arc length of 236.34 feet; thence North 61 degrees 48 minutes 51 seconds East 723.23 feet to the beginning of a curve concave northwesterly and having a radius of 310.16 feet; thence northeasterly along said curve through an angle of 56 degrees 26 minutes 27 seconds, an arc length of 305.54 feet to the beginning of a reverse curve, concave southeasterly and having a radius of 765.12 feet, a radial line at said point of reverse curvature bears South 84 degrees 37 minutes 36 seconds East; thence Northeasterly along said reverse curve through an angle of 34 degrees 44 minutes 57 seconds, an arc length of 464.03 feet; thence North 40 degrees 07 minutes 21 seconds East feet to the beginning of a curve concave Southeasterly and having a radius of 2000.30 feet; thence Northeasterly along said curve, through an angle of 7 degrees 40 minutes 36 seconds, an arc length of 268.01 feet; thence North 47 degrees 47 minutes 57 seconds East 1564.62 feet to a point in the Northerly line of said Section 11, distant thereon South 89 degrees 23 minutes 25 seconds West 1.75 feet from the Northeast corner of said Section.

APN:  237-285-04

   Tract 10

The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05

b.	Roads
   Tract 1

The South half of the South half of the West half of the Southeast quarter of fractional Section 36, Township 12 North, Range 13 West, San Bernardino Meridian,  in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  224-440-31

   Tract 2

The east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the Official Plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom that portion within the following described land:

That portion of the east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.BM., in the County of Kern, State of California, according to the Official Plat thereof, lying southeasterly of a line that lies 100 feet northwesterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 2, distant thereon South 8923'25" west, 1.75 feet from the southeast corner of said section; Thence north 4747'57" east 2.40 to a point in the easterly line of said section, distant thereon north 100'54" east 1.59 feet from said southeast section corner.

Basis of bearings is Lambert Projection, North American 1927 DATUM, California Zone 5.

Together with all of the grantors right, title and interest in and to all water and water rights, whether surface or subsurface or of any other kind, including all appurtenant water rights, and all water and water rights in any wise incident to the real property herein described or used thereon or in connection therewith by deed recorded February 14, 1967 in book 4024, page 678 of Official Records.

Also except therefrom all oil, gas and other mineral deposits in and under said land together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in Patent recorded February 9, 1960, in Book 3237, Page 339 of Official Records.

APN:  237-132-41

   Tract 3

The Southeast quarter of the Northwest quarter of that portion of the North half of the Northeast quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat  thereof,  lying  northerly  of  the northwesterly line of that certain strip of land 200 feet in width conveyed to the City of Los Angeles, a municipal corporation by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds.

Except therefrom that portion of said land deeded to the City of Los Angeles, a municipal corporation by deed recorded April 18, 1968 in Book 4151, Page 400 of Official Records.

APN:  237-261-03

   Tract 4

The South half of the Northwest quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, excepting from the South half of the Northwest quarter of the Southwest quarter of said Section 1, that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by Deed recorded March 13, 1920 in Book 346, Page 421 of Deeds; also excepting therefrom that portion thereof conveyed to the City of Los Angeles in deed recorded June 19, 1968 on Book 4171, Page 256 of Official Records.

APN:  237-261-06

   Tract 5

The North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Excepting therefrom any portion of said land as deeded to the City of Los Angeles, a municipal corporation for Los Angeles Aqueduct by deed recorded April 18, 1969 in Book 4151, Page 393, Official Records.

APN:  237-261-13
   
   Tract 6

Parcel 4 of Parcel Map No. 4120, in the unincorporated area, County of Kern, State of California, as per map recorded January 4, 1978 in Book 20, Page 6 of Maps of Parcel Maps, in the Office of the County Recorder of said County.

APN:  237-261-22

   Tract 7

The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23
   
   Tract 8

All that portion of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area of the County of Kern, State of California, being more particularly described as follows:

Commencing at the Southwest corner of said Section, thence North 01 degrees 01 minutes 12 seconds East on and along the West line of said Section a distance of 138.81 feet to a point in the Northerly boundary of the Los Angeles Aqueduct, as conveyed to the City of Los Angeles in the Deed recorded May 31, 1968 in Book 4165, Page 434 of Official Records, said point also being the True Point of Beginning; thence continuing North 01 degree 01 minutes 12 seconds East on an along said West line a distance of 1203.21 feet to a point on the North line of the Southwest quarter of the Southwest quarter of said Section; thence North 89 degrees 24 minutes 52 seconds East on and along said North line a distance of 1,187.00 feet to a point on the Northerly boundary of said Los Angeles Aqueduct, said point also being the beginning on a non-tangent 3450.51 foot radius curve, from which point the radius point bears South 59 degrees 13 minutes 37 seconds East; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 03 degrees 20 minutes 01 seconds an arc distance of 200.76 feet to the beginning of a 386.96 foot radius reverse curve; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 20 degrees 21 minutes 40 seconds an arc distance of 137.51 feet; thence South 47 degrees 48 feet 02 seconds West on and along said Northerly boundary a distance of 1386.61 feet to the True Point of Beginning.

APN:  237-261-30 (formerly 237-261-10)

   Tract 9

A tract of land situated in the North half of the North half of the East half of the East half of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property described in Book 4769, Page 798, recorded on February 8, 1973, Kern County Deed Records, and being more particularly described as follows:

That portion of said property lying northwest of that property described in Book 4198, Page 429, Kern County Deed Records.

APN:  237-285-03
   
   Tract 10

The Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

EXCEPT:
Parcel No. 80 comprising of that portion of the Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat thereof, lying southeasterly of a line that lies 100 feet northeasterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 11, distant thereon North 89 degrees 30 minutes 21 seconds East 769.74 feet from the Southwest corner of said Section; thence North 29 degrees 11 minutes 48 seconds East 1740.84 feet to the beginning of a curve concave southeasterly and having a radius of 455.19 feet; thence northeasterly along said curve through an angle of 47 degrees 47 minutes 43 seconds, an arc length of 379.71 feet to the beginning of a reverse curve concave northwesterly and having a radius of 250.04 feet; a radial line at said point of reverse curvature bears North 13 degrees 00 minutes 29 seconds West; thence northeasterly along said reverse curve, through an angle of 52 degrees 16 minutes 18 seconds, an arc length of 228.11 feet; thence North 24 degrees 43 minutes 13 seconds East 560.81 feet to the beginning of a curve concave southeasterly and having a radius of 365.06 feet; thence northeasterly along said curve, through an angle of 37 degrees 05 minutes 38 seconds, an arc length of 236.34 feet; thence North 61 degrees 48 minutes 51 seconds East 723.23 feet to the beginning of a curve concave northwesterly and having a radius of 310.16 feet; thence northeasterly along said curve through an angle of 56 degrees 26 minutes 27 seconds, an arc length of 305.54 feet to the beginning of a reverse curve, concave southeasterly and having a radius of 765.12 feet, a radial line at said point of reverse curvature bears South 84 degrees 37 minutes 36 seconds East; thence Northeasterly along said reverse curve through an angle of 34 degrees 44 minutes 57 seconds, an arc length of 464.03 feet; thence North 40 degrees 07 minutes 21 seconds East feet to the beginning of a curve concave Southeasterly and having a radius of 2000.30 feet; thence Northeasterly along said curve, through an angle of 7 degrees 40 minutes 36 seconds, an arc length of 268.01 feet; thence North 47 degrees 47 minutes 57 seconds East 1564.62 feet to a point in the Northerly line of said Section 11, distant thereon South 89 degrees 23 minutes 25 seconds West 1.75 feet from the Northeast corner of said Section.

APN:  237-285-04

c.	Meteorological Tower
The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23
3. Shared Permits
a. Kern County Grading Permit No. K201402123: Issued July 25, 2014
b. Incidental Take Permit 2081-2014-023-04: Issued to Rising Tree Wind Farm LLC and Rising Tree Wind Farm II LLC by California Department of Fish and Wildlife
c. Notice of Applicability under Waste Discharge Requirements WDID No. 6B151403004: Issued to Rising Tree Wind Farm LLC and Rising Tree Wind Farm II LLC by Lahontan Regional Water Quality Control Board

4. Third Party Rights
None



EXHIBIT B-1

PROJECT SUBSTATION SHARED FACILITIES

* One (1) 230kV Dead End Structure including the following equipment and material:
o Tapered Tubular Structural Steel and associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Lightning Surge Arrestors, 180kV, 144kV MCOV
o Three (3) Compression Tees, 795 ACSR to NEMA 4-Hole Pad
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Six (6) Welded Terminal Adaptors, 1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle
o Five Hundred (500) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* Three (3) 230kV Single Phase Bus Supports, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle

* One (1) 230kV, 1200A, Ganged 3-Phase, Motor Operated Disconnect Switch including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor, associated hardware, and switch grounding platform
o Six (6) Station Post Insulators, 230kV, TR-308
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Sixty (60) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* One (1) 230kV, Metering Station, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Equipment control wiring and interconnecting conduit including Junction Boxes
o Three (3) 230kV, 600:5 Single Ratio Dual Winding, Instrument Current Transformers
o Three (3) 230kV, 1200/2000:1:1 Dual Winding, Instrument Potential Transformers
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Cable Spacer Tees, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Aluminum Cable Support Brackets
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor

* 230kV Substation Summation Bus including the following equipment and material:
o One (1) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Three (3) Station Post Insulators, 230kV, TR-308
* Three (3) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Three (3) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Thirteen (13) 230kV, Single Phase Low Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Thirteen (13) Station Post Insulators, 230kV, TR-308
* Thirteen (13) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Six (6) 230kV, Single Phase High Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Six (6) Station Post Insulators, 230kV, TR-308
* Six (6) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Four (4) 230kV, Three Phase High Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Twelve (12) Station Post Insulators, 230kV, TR-308
* Twelve (12) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Three (3) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Nine (9) Station Post Insulators, 230kV, TR-308
* Nine (9) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Nine (9) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Ninety (90) Feet of 1272 kcmil AAC (Narcissus) conductor
o Nine (9) 230kV, Aluminum A-Frames, which includes:
* Eighteen (18) Tee Connector, 4" IPS Main to 3" IPS Tap, 15
* Nine (9) Tee Connector, 4" IPS Main to 2-3" IPS Taps, 15
* Two Hundred Ten (210) Feet of 3" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 4" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 795 kcmil ACSR (Drake) Conductor

* Above and Below Ground Raceways including the following materials
o Conduits, fittings, and connectors connecting shared facility equipment or apparatus to other Substation components located within the Substation
o Cable Trench, Trench Covers, Trench Hangers, and Trench Grounding Materials

* Substation Ground Grid including the following materials
o Twenty Three Thousand (23,000) Feet of #4/0 kcmil 19 Strand, Bare Copper 
o Exothermic Cross connections ~ including molds, shots, and accessories
o Exothermic Tee connections ~ including molds, shots, and accessories
o Exothermic Lug connections ~ including molds, shots, and accessories

* Substation Lighting and Lightning Protection including the following materials
o Eight (8) Static Masts, 90' Tall with provision for yard lighting
o Fifteen (15) 400W, HPS Flood Lights

* Substation Fencing including the following materials
o Fifteen Hundred (1500) Feet of fence, 8' tall, 7' mesh with three strands of barbed wire
o Fence posts, gates, hangers, and grounding materials



EXHIBIT B-2

TRANSMISSION LINE SHARED FACILITIES

3.99-mile 220kV generation tie-line, optical ground wire on the generation tie-line for the primary telecommunications path, single-mode fiber optic cable for the diverse telecommunications path, appurtenant structures, and facilities, including the following:

* Forty Two (42) transmission structures including the following materials:
o Forty Two (42) tubular steel poles
o One Hundred Twenty (120) 230kV 30K Insulators
o One Hundred Twenty (120) Suspension Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty (40) 230kV 50K Insulators
o Forty (40) Dead End Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty Five (45) OPGW Hardware Assemblies
o Four (4) Dead End Hardware Assemblies for 3/8" Shield Wire
o Structure grounding rods and associated hardware
o Structure signage
* Seventy Thousand Two Hundred (70,200) Feet of 795 KCMIL ACSR "Drake" Conductor
* Twenty Three Thousand (23,000) Feet of 48 Fiber, Single Mode OPGW, DNO 6211
* Three (3) OPGW "Coyote" Splices including splice case, splices and mounting hardware. 
* One Thousand Four Hundred and Fifty (1,450) Bird Flight Diverters
* Two Hundred (200) Feet of 3/8" HS 7-Strand Shield Wire
* Twenty Five Thousand Five Hundred (25,500) Feet of ADSS Fiber Optic Cable
* Twenty Two Thousand (22,000) Feet of 1 1/4" inner duct


      
      
EXHIBIT C
INTERESTS AND PROPORTIONATE SHARES
A.	Undivided Ownership Interests
      The Ownership Interest of each Co-Owner in each Shared Assets Group shall be as set forth in Table C below.  
B.	Proportionate Shares
      The Proportionate Share of each Co-Owner shall be as set forth in Table C below. 
C.	Shared Asset Groups
RST Shared Facilities Group (All Co-Owners)
Equipment Name
RST I
RST II
RST III
Project Substation
40%
10%
50%
Transmission Line
40%
10%
50%
Fiber Optic Facilities
40%
10%
50%
Roads [in Sections 9, 10, 11, 15 and 16]
40%
10%
50%
O&amp;M Facility
40%
10%
50%
[other]
40%
10%
50%

RST I/II Shared Facilities Group (Rising Tree I and Rising Tree II only)
Equipment Name
RST I
RST II



Roads [in Sections 1, 2, 35 and 36]
80%
20%
Met Tower RST 1-B/RST 2
80%
20%


      

EXHIBIT D

MATERIAL PROJECT AGREEMENTS
(Certain Other Agreements Relating to the Construction, 
Operation and Use of the Shared Facilities)

1.  A High Voltage Operations and Maintenance Agreement to be entered into by and between the Co-Owners and EDP Renewables North America LLC (or one of its Affiliates).  [expected to be signed before December 31, 2014]

2.  A Services Agreement for a Remote Operations Control Center to be entered into by and between the Co-Owners and EDP Renewables North America LLC (or one of its Affiliates).  [expected to be signed before December 31, 2014]



EXHIBIT E

DISPUTE RESOLUTION PROCEDURES
1.	Consideration by the Authorized Representatives.
      All questions concerning interpretation of this Agreement, the acceptable fulfillment of the Co-Owners' respective obligations hereunder, as well as all other questions regarding this Agreement in each case that cannot readily be resolved by the Co-Owners shall be resolved in accordance with this Exhibit E.  In the event that the authorized representatives of the Co-Owners cannot reach agreement on any question arising under this Agreement, such dispute shall be referred to senior officers of the Co-Owners pursuant to Paragraph 2 below.
2.	Negotiations by Senior Officers.
      Any disputes arising pursuant to this Agreement that cannot be resolved by the authorized representatives of the Co-Owners within fourteen (14) days after receipt of notice of such dispute (specifically referencing this Exhibit E) shall be referred to the vice president or other senior officer of each of the Co-Owners having executive responsibility for such Co-Owner's Facility.  If such senior officers, negotiating in good faith, fail to reach an agreement within a reasonable period of time, not exceeding twenty (20) days after such referral, then any Co-Owner to such dispute may institute proceedings as set forth in Paragraph 3 below.
3.	Formal Dispute Resolution.
      (a)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners, the Co-Owners shall engage in non-binding mediation of such dispute.  Such mediation shall be conducted (i) in Houston, Texas, (ii) within thirty (30) days of a Co-Owner instituting dispute resolution under this Paragraph 3, (iii) by a single, impartial mediator who is selected by the mutual agreement of the Co-Owners, and (iv) in accordance with such procedures as may be adopted by such mediator.  Such mediation shall not, without the express agreement of the Co-Owners at the time, extend for a period of more than two (2) days.  Each Co-Owner may be represented by persons of such Co-Owner's choice during such mediation.  Nothing herein shall be deemed to grant any mediator the authority to impose a resolution of any dispute being mediated.  Any information introduced, proposals made or positions taken in the mediation shall be deemed to be confidential and for settlement purposes only and may not be introduced by the other Co-Owner in any subsequent litigation of the matters subject to mediation.  The Co-Owners shall share the costs of the mediator, including any fees and meeting room rentals.
      (b)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners and the Co-Owners have not otherwise resolved such dispute through mediation pursuant to Paragraph 3(a), a Co-Owner may submit the matter at issue for resolution in an action brought before the courts of the State of California in Kern County or in the United States District Court for the Eastern District of California, which courts shall have non-exclusive jurisdiction with respect to such matters.  FOR PURPOSES OF THE FOREGOING, BY EXECUTION OF THIS AGREEMENT, EACH CO-OWNER HEREBY IRREVOCABLY ACCEPTS FOR ITSELF AND IN RESPECT OF ITS PROPERTY, GENERALLY AND UNCONDITIONALLY, THE NON-EXCLUSIVE JURISDICTION OF SUCH COURTS AND EACH CO-OWNER HEREBY CONSENTS TO THE SERVICE OF PROCESS OUT OF ANY SUCH ACTION OR PROCEEDING BY THE MAILING OF COPIES THEREOF BY REGISTERED OR CERTIFIED MAIL, POSTAGE PREPAID, TO SUCH PERSON IN ACCORDANCE WITH THE NOTICE PROVISIONS OF THIS AGREEMENT.
      4.	Specific Performance.  Notwithstanding anything to the contrary contained in this Agreement, if, due to a material breach or threatened material breach or default or threatened default, a Co-Owner is suffering or will suffer irreparable harm for which monetary damages are inadequate, such Co-Owner may petition a court of competent jurisdiction for injunctive relief, specific performance or other equitable relief.
      5.	Continuing Obligations.  Notwithstanding the foregoing, all terms, conditions, and obligations of the Co-Owners contained in this Agreement shall continue and remain in effect during the course of any dispute resolution, or other proceeding pursuant hereto, and each of the Co-Owners shall proceed with performance of its obligations pending the resolution of the question, dispute or claim.
      6.	Matters Not Subject to Dispute Resolution.  Notwithstanding anything to the contrary in this Agreement, no dispute that concerns a matter, decision or other issue that is to be decided by a Co-Owner acting in its sole discretion shall be subject to the dispute resolution provisions of this Exhibit E.


EXHIBIT F
FORM OF JOINDER
TO
RISING TREE SHARED FACILITIES AGREEMENT
      Reference is hereby made to the Rising Tree  Shared Facilities Agreement dated June [__], 2010 by and among Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC and Rising Tree Wind Farm III LLC ("SFA"). Unless otherwise indicated, capitalized terms used but not defined herein shall have the meaning ascribed to them in the SFA, as the context dictates.
      By its execution below, the undersigned, [insert name and form/jurisdiction of New Co-Owner] (the "New Co-Owner"), agrees to become, and does hereby become, a Co-Owner with respect to the [describe Project (or portion thereof) being added (the "New Project") under the SFA, and agrees to be bound by the SFA from and after the date hereof. Without limiting the foregoing, from and after the date hereof, all references in the SFA to the owner of the New Project shall be deemed to refer to New Co-Owner.
      By its execution below, New Co-Owner covenants, represents and warrants as follows:
      1.	New Co-Owner will expressly assume in writing all obligations as a Co-Owner under the SFA with respect to the New Project and its Ownership Interest and Undivided Use Interest (if applicable) to the extent of the New Project, in each case arising on or after the date hereof;
      2.	The aforementioned New Project is in accordance with Section 4.4 of the SFA; and
      3.	New Co-Owner will comply with all covenants and obligations contained in the SFA.
[signature page follows.]

SIGNATURE PAGE TO
JOINDER
TO
RISING TREE SHARED FACILITIES AGREEMENT

      IN WITNESS WHEREOF, the undersigned has executed and delivered this joinder to the SFA as of this _____ day of _________________, 20__.

[INSERT NAME OF NEW CO-OWNER]


	
By:
Name:
Title:

EXHIBIT G
FORM OF MEMORANDUM

RECORDING REQUESTED BY
AND WHEN RECORDED MAIL TO:

RISING TREE WIND FARM LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
													
MEMORANDUM OF
SHARED FACILITIES AGREEMENT AND
GRANT OF RIGHTS
      THIS MEMORANDUM OF SHARED FACILITIES AGREEMENT AND GRANT OF RIGHTS (this "Memorandum"), is made and entered into as of December 3, 2014 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.   Rising Tree I, Rising Tree II and Rising Tree III are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners". The Co-Owners are collectively referred to herein as "Parties" and individually as a "Party".
A.	The Parties have entered into that certain unrecorded Rising Tree Shared Facilities Agreement of even date herewith (the "Agreement"), which affects (i) certain real property more particularly described in Exhibit A attached hereto and made a part hereof (such real property collectively, the "Property").
B.	The Parties have executed and acknowledged this Memorandum and are recording the same for the purpose of providing constructive notice of the Agreement and the Parties' rights thereunder.  Capitalized terms used and not defined herein have the meaning given the same in the Agreement.
NOW, THEREFORE, the Parties hereby agree as follows:
1.	Grant of Rights.  Subject to the terms and conditions of use set forth in the Agreement and the terms and conditions in each of the Shared Real Property Agreements:
      (a) each Co-Owner of Shared Facilities and/or Shared Real Property in a Shared Assets Group (a "Granting Co-Owner") hereby sells, grants, assigns, transfers and conveys to the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such Shared Assets Group, including such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Asset Group, such that each such Co-Owner shall own an undivided interest, as a tenant-in-common, in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B attached to the Agreement; 
      (b) each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group equal to its Proportionate Share therein, which right is exercisable upon the Commissioning Date of its Facility, all as more particularly set forth in the Agreement.  In addition, each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Undivided Use Interest as provided in the Agreement, and (b) over any Shared Real Property underlying or required for the use of the Shared Facilities in which such Co-Owner has an Undivided Use Interest, subject to the terms and conditions contained in the Agreement. 
2.	Term. This Agreement is effective as of the Effective Date and shall remain in force and effect until (i) the earliest of (v) the date that is thirty-five (35) years after the Effective Date, (w) the expiration date of the Interconnection Agreement,  (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
3.	Other Provisions. The rights granted hereunder are of the nature, and are subject to the requirements and limitations, set forth in the Agreement. The Agreement also contains various covenants, obligations and rights of the Parties, including, without limitation, provisions relating to use, conduct of operations, assignment, ownership of improvements, fees, default, cure rights and lender protections.
4.	Purpose of this Memorandum. The terms, conditions and covenants of the Agreement are incorporated herein by reference as though fully set forth herein. This Memorandum does not supersede, modify, amend or otherwise change the terms, conditions or covenants of the Agreement, and this Memorandum shall not be used in interpreting the terms, conditions or covenants of the Agreement. In the event of any conflict between this Memorandum and the Agreement, the Agreement shall control.
5.	Binding on Successors and Assigns.  The Parties hereby agree that all of the covenants, consents and agreements contained in the Agreement touch and concern the Property and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Party's present or future estate or interest therein and upon each of the Parties, their respective successors and assigns as holders of an estate or interest in said real estate (including without limitation, any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Parties and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
6.	Counterparts. This Memorandum may be executed in counterparts, each of which shall be deemed an original and all of which when taken together shall constitute one and the same document.
[SIGNATURES ON NEXT PAGE]
       
IN WITNESS WHEREOF, the Parties have caused this Memorandum to be executed as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC
 __________________________________________
By:
Title:


	
By:
Title:
[Add notarial acknowledgments]

EXHIBIT A
DESCRIPTION OF THE PROPERTY


FIRST AMENDMENT TO
RISING TREE SHARED FACILITIES AGREEMENT
      THIS FIRST AMENDMENT TO RISING TREE SHARED FACILITIES AGREEMENT ("Amendment") is made and entered into this 29th day of June, 2015, by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners".
RECITALS
      A.	The Co-Owners have previously entered into that certain Rising Tree Shared Facilities Agreement dated December 3, 2014 (the "Agreement") with respect to the shared facilities and shared real property used in connection with each phase of a three phase wind powered electric generating facility generally known as the Rising Tree Wind Farm located on real property in Kern County, California (the "Rising Tree Wind Farm").  
      B.	A memorandum of the Agreement was recorded in the Official Records of Kern County, California on December 10, 2014, as Instrument No. 0214152759.
      C.	The Co-Owners now wish to amend the Agreement in certain respects to clarify the ownership and use of certain Shared Facilities and Shared Permits and to make other changes in and corrections to the Agreement.
      NOW, THEREFORE, for good and valuable consideration, the receipt of which is hereby acknowledged, the Co-Owners agree as follows:
      1.	Definitions.  Except as otherwise defined herein, capitalized terms used in this Amendment will have the meanings defined in the Agreement, and the rules of interpretation in the Agreement shall apply to this Amendment.
      2.	Shared Real Property.  Section 3.3 of the Agreement is amended by putting a comma after "collection and transmission lines" in the third to last line of that section and inserting the words "fiber optic cable and other communications facilities" immediately thereafter.
      3.	Shared Permits.  Section 3.6 of the Agreement is amended and restated in its entirety as follows:
      3.6	Shared Permits.  The construction, operation and use of certain of the Shared Facilities in each Shared Facilities Group, as well as the construction, operation and use of certain portions of each Co-Owner's Facilities, will be subject to certain shared Governmental Authorizations as set forth in parts A.3 and B.3 of Exhibit B (the "Shared Permits"), not all of which apply to the Shared Facilities.  The Shared Permits may be issued in the name of one or more of the Co-Owners, but shall, to the extent they apply to the Shared Facilities, and to the fullest extent allowed by Applicable Law, be held, used and exercised for the mutual benefit of the Co-Owners in the applicable Shared Assets Group and to facilitate the construction, use, operation, maintenance and repair of the Shared Facilities as provided herein.  The Shared Permits shall be administered in the same manner as the Shared Facilities as provided in Section 4.3.3, and, to the extent they do apply to the Shared Facilities, the Co-Owners in each Shared Asset Group shall indemnify and hold Rising Tree I and/or Operator, as applicable, harmless from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits relating to such Shared Asset Group, except to the extent resulting from the breach by Rising Tree I and/or Operator of its obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement, as applicable, or gross negligence or willful misconduct of Rising Tree I and/or Operator, as applicable.  To the extent the Shared Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, the Shared Permits shall be administered by Operator, but the Co-Owners shall take such actions as are required by the Operator or otherwise to ensure that each such Facility is operated in compliance with the requirements of such Shared Permit.  Regardless of whether or not the Shared Permits apply to Shared Facilities, Operator shall have access to all real property and real property rights, including Shared Real property and real property or real property rights owned, leased, held or otherwise controlled by any of the Co-Owners in order to administer and perform the requirements of the Shared Permits.  To the extent that events occurring at or with respect to a particular Facility constitute violations of a Shared Permit or require modifications to the Facilities owned by other Co-Owners or to the operations of such Facilities, each Co-Owner whose Facility is responsible for such violations or the requirement for such modifications shall indemnify and hold Operator and each other Co-Owner harmless from and against any claims, demands, costs, losses, obligations and liabilities, including costs imposed by or liabilities or obligations to Governmental Authorities or other third parties and lost revenues due to curtailment or other remedies ordered by a Governmental Authority, as a result of such events, including actions or omissions under, failure to comply with or violations of the Shared Permits by such Co-Owner, except to the extent resulting from the breach of obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement by or gross negligence or willful misconduct of Operator or the Co-Owner seeking to be indemnified.  If the violations of the Shared Permits or the events requiring modification of Facilities are the responsibility of more than one Co-Owner, the foregoing indemnity obligations will be equitably apportioned among the responsible Co-Owners, considering all of the facts and circumstances relating to the violations or modifications in question.  The costs of administration of the Shared Permits in connection with any violations, claimed violations or required modifications shall be borne by the responsible Co-Owners and shall not be included in the O&amp;M Services provided hereunder.  For purposes of the foregoing indemnity obligation, and notwithstanding anything in Section 17.20 or elsewhere in this Agreement to the contrary, lost revenues (including lost production tax credits and other lost tax benefits and credits) shall be considered direct, not consequential, damages and shall be recoverable by the affected Co-Owner.  Notwithstanding the foregoing, each Co-Owner in the applicable Shared Asset Group to which a Shared Permit relates shall have the right, in the case of Emergency Condition or if necessary to prevent the termination or revocation of a Shared Permit, to step in and exercise rights, perform duties and obligations and take actions under such Shared Permit as may be necessary to avoid or mitigate such Emergency Condition or termination or revocation of a Shared Permit, and shall be entitled to the same indemnification as Rising Tree I or Operator would have been under the circumstances; provided, however, that any Co-Owner exercising such step-in rights shall also indemnify and hold the other Co-Owners in the applicable Shared Assets Group from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of its gross negligence or willful misconduct in the exercise of such step-in rights.
      4.	Undivided Use Interests.  Section 4.2 of the Agreement is amended and restated in its entirety as follows:
      4.2	Undivided Use Interests.  Each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group (an "Undivided Use Interest"), which right shall be shared with the other Co-Owners in the Shared Assets Groups in accordance with their respective Proportionate Shares.  A Co-Owner's Undivided Use Interest is exercisable (a) with respect to Shared Assets constituting roads or, if applicable, the meteorological tower, as of the Execution Date, and (b) with respect to other Shared Assets, upon the Mechanical Completion Date of its Facility by such Co-Owner by providing written notice to Operator and to the other Co-Owners in the same Shared Assets Group that the Mechanical Completion Date has occurred, provided that such Co-Owner has made the payment or payments set forth in Section 4.3, and that no Event of Default has occurred and is continuing with respect to such Co-Owner.  For the avoidance of doubt, each Co-Owner whose Facility has not reached its Mechanical Completion Date as of the Effective Date (and thus whose Proportionate Share in all Shared Assets Groups is 0%) shall be deemed not to have exercised its Undivided Use Interest in any Shared Assets Group except with respect to roads or, if applicable, the meteorological tower (and as a result shall not be required to bear costs or expenses related to any Shared Assets Group except for road maintenance nor have the right to vote on matters unless otherwise set forth herein), but shall have the right to exercise its Undivided Use Interest as set forth in this Agreement.
      5.	Construction of Shared Facilities.  Section 4.3.1 of the Agreement is amended and restated in its entirety as follows:
      4.3.1	Subject to its right to reimbursement as set forth herein, Rising Tree I will design, permit and construct all of the Shared Facilities in accordance with Applicable Laws, Good Utility Practice and the description of the Shared Facilities on Exhibit B attached hereto.  Notwithstanding anything contained to the contrary in this Agreement, as of June 30, 2015, the date on which the initial portion of the payment by the other Co-Owners of reimbursement amounts due to Rising Tree I as provided in Section 4.3.2 shall occur, Rising Tree I will be deemed to have assigned, transferred and conveyed such Shared Facilities to the Co-Owners (including Rising Tree I) in the applicable Shared Asset Group in accordance with their respective Proportionate Shares, including rights under construction and supply contracts  (including the agreements set forth on Exhibit D) and contractor, supplier and/or manufacturer warranties related to such Shared Facilities, which warranties may be enforced as provided below.  HOWEVER, NOTWITHSTANDING ANYTHING HEREIN TO THE CONTRARY, RISING TREE I SHALL HAVE NO LIABILITY TO THE OTHER CO-OWNERS FOR ANY DEFECT IN THE DESIGN, CONSTRUCTION OR UTILITY OF ANY OF THE SHARED FACILITIES.  RISING TREE I MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE CONDITION, USE OR FITNESS OF ANY OF THE SHARED REAL PROPERTY OR WITH RESPECT TO THE DESIGN, CONSTRUCTION, OPERATION OR UTILITY OF ANY OF THE SHARED FACILITIES, AND HEREBY DISCLAIMS ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY OF ANY KIND WITH RESPECT TO THE SHARED REAL PROPERTY OR THE SHARED FACILITIES.  Each of the Co-Owners agrees that they will look solely to the designers, contractors, suppliers, manufacturers and other Persons who participated in the design and/or construction of the Shared Facilities with respect to any defects or breaches of contract or warranty.
      6.	Reimbursable Costs. Section 4.3.2 is amended and restated in its entirety as follows:
      	4.3.2  Rising Tree II and Rising Tree III shall each reimburse Rising Tree I for all costs and expenses incurred by Rising Tree I in designing, permitting and constructing the Shared Facilities in accordance with their respective Proportionate Shares of the costs of the Shared Facilities in each Shared Facilities Group of which they are members, in accordance with their Proportionate Shares in each such Shared Assets Group; provided, however, that for purposes of this Section 4.3.2, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date. Such reimbursements shall be made within fifteen (15) days after receipt of one or more notices from Rising Tree I, which notices shall be accompanied by  a statement of the amount to be reimbursed (including appropriate supporting documentation). 7.	Additional Co-Owners.  Section 4.6 is amended and restated in its entirety as follows:
      4.6	No Additional Co-Owners.  Except as provided herein, including Section 17.4, no Person may become a Co-Owner under this Agreement or an additional co-owner of any of the Shared Facilities, the Shared Real Property or the Shared Real Property Agreements without the prior written consent of all of the Co-Owners.  Any Person becoming a Co-Owner under this Agreement (including an assignee under Section 17.4) shall execute a joinder, the form of which is attached as Exhibit F hereto and, except for an assignee pursuant to Section 17.4, such other amendments as the Co-Owners have determined may be necessary.
      8.	Measurement.  The first paragraph of Section 5.1 is amended and restated in its entirety as follows:
      5.1	Measurement.  Energy transmitted on the Transmission Line shall be measured for each Facility in each Settlement Interval by the revenue meter for such Facility.  However, if and for the period that there is an equipment failure or other event that prevents or interferes with the operation of the separate metering, energy transmitted on the Transmission Line shall be measured and allocated between the Facilities in each Settlement Interval in proportion to their respective Metered Energy as measured by the Facility's check meter or other available meter(s) during such Settlement Interval as set forth below.  In the event that no meter data is available, such allocation shall be made in a reasonable manner on the basis of whatever data and information is available.
      9.	Engagement of Operator.  Section 6.1 is amended and restated in its entirety as follows:
      6.1	Engagement of Operator.  The Co-Owners hereby engage Operator to manage, operate, maintain and repair the Shared Facilities, to administer and take all necessary actions under the Shared Real Property Agreements, to administer and take all necessary actions under the Shared Permits, and to perform other duties pertaining to the Shared Assets (the "O&amp;M Services"), all as set forth in this Agreement; provided, however, that to the extent one or more Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by more than one of the Co-Owners, Operator will still administer and take all necessary actions under such separate Permits, but the administration of and actions taken under such separate Permits shall not be included in O&amp;M Services, but shall be paid for separately by the Co-Owners benefiting from such Shared Permits in proportion to their respective benefits.  Operator accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  Operator's authority shall be limited to performing the O&amp;M Services and such other services as may be approved by all of the Co-Owners and shall be further limited as provided in Section 6.16.
      10.	Scheduled Maintenance.  Section 6.4 is amended and restated in its entirety as follows:
      6.4	Scheduled Maintenance.  Operator shall schedule maintenance and any planned outages of the Shared Facilities so as to minimize interference with the Co-Owners' scheduled energy deliveries.  Maintenance and any planned outages of the Shared Facilities shall be scheduled, to the maximum extent possible, during scheduled maintenance outages of the Co-Owners' Facilities.  Each Co-Owner will provide to the Operator and the other Co-Owners no later than fifteen (15) Business Days after January 1 of each year a schedule of planned maintenance outages on such Co-Owner's Facility for the subsequent twelve- month period.  Scheduled outages of the Shared Facilities will be subject to the approval of all affected Co-Owners, such approval not to be unreasonably withheld.  Operator will seek to limit the duration of any outage, planned or unplanned, to the maximum extent reasonably possible consistent with Applicable Laws and Good Utility Practice.
      11.	Disputes.  Section 6.12 is amended and restated in its entirety as follows:
      6.12	Disputes.  If a Co-Owner disputes the accuracy of all or any portion of an invoice, such Co-Owner shall, nevertheless, pay the full amount of the invoice (including the disputed portion) and submit to Operator a written statement detailing the items disputed; provided, however, that if the third party contract under which the costs and expenses invoiced were incurred permits the withholding of disputed payments, and if Operator has not already paid such third party for such costs and expenses, a Co-Owner may dispute the accuracy of all or a part of an invoice by submitting a written notice of dispute and a written statement detailing the items disputed and may withhold payment to the extent allowed under the third party contract until the earlier of the resolution of the dispute or the time when payment may no longer be withheld under the third party contract, at which point the Co-Owner disputing the accuracy of an invoice shall promptly pay the disputed amount to Operator as provided above.  If the Co-Owner and Operator are unable to resolve the disputed items, the matter will be resolved in accordance with the dispute resolution provisions in Exhibit E.  If the Co-Owner prevails with respect to the disputed amounts, Operator shall refund the Co-Owner the disputed amounts, including interest on the disputed amounts at the Late Payment Rate.
      12.	Risk of Loss; Indemnity. Section 6.15 is amended and restated in its entirety as follows:
	6.15.1  As between the Co-Owners and the Operator, the Co-Owners shall be responsible for the risk of loss to the Shared Facilities or any portion thereof during the repair, management, operation and maintenance of the Shared Facilities, regardless of cause, except to the extent such loss is caused in whole or in part by the gross negligence, fraud or willful misconduct of the Operator.
	6.15.2   Operator shall not be liable to any Co-Owner for any act performed in good faith by Operator in the discharge of its duties hereunder as Operator or in the exercise of its powers and authority hereunder as Operator, including damages arising out of any curtailment of use of the Shared Facilities or the disconnection of, or the election not to disconnect, a Facility from the Shared Facilities, unless Operator has materially breached its obligations hereunder or Operator's acts or omissions constitute, gross negligence fraud or willful misconduct.
	6.15.3  Each Co-Owner shall, pro rata in accordance with its Proportionate Interest, indemnify and hold harmless Operator and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in its reasonable judgment, in good faith, or in reasonable reliance on advice of Operator's attorneys or accountants, in connection with the Shared Facilities, the Shared Real Property or this Agreement (other than as a result of the gross negligence, fraud or willful misconduct of Operator or a breach by Operator of its obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement), including reasonable attorneys' fees incurred by Operator in connection with the defense of any action based on any such alleged act or.
      13.	Limitations on Operator's Authority.  Section 6.16 is amended and restated in its entirety as follows:
      6.16	Limitations on Operator's Authority.  Notwithstanding anything herein to the contrary and in addition to the limitations set forth in Section 9.2, Operator shall have no authority to and shall not (i) amend, assign or terminate any Material Project Agreement or enter into, amend, assign or terminate any other contract or agreement on behalf of the Co-Owners, (ii) create any lien or security interest on or in any Shared Facilities, Shared Real Property or any other asset of any or all of the Co-Owners, except as expressly permitted under Section 10.6, (iii) buy, sell, convey or otherwise dispose of any Shared Facilities or Shared Real Property, (iv) incur any debt or other obligations on behalf of any or all of the Co-Owners, except short term accounts payable in connection with the O&amp;M Services or as provided in a separate written agreement among Operator and all of the Co-Owners, (v) enter into leases or subleases of or grant licenses or other rights with respect to any Shared Facilities or Shared Real Estate, or (vi) terminate or reduce any insurance coverage below that which is required under the Material Project Agreements, except in each case with the written approval of all of the Co-Owners.
      14.	Replacement of Operator.	Section 6.17 is amended and restated in its entirety as follows:
      6.17	Replacement of Operator. Operator may be removed upon the vote, without the participation of the Co-Owner that is Operator at such time, of (i) two-thirds of the Co-Owners (based on their respective Proportionate Shares) or (ii) a majority of the Co-Owners (based on their respective Proportionate Shares), upon their reasonable determination that there is Cause for removal. Notwithstanding anything contained in this Agreement to the contrary, the appointment of any new Operator under this Agreement, whether as a result of any removal of the existing Operator under this Section 6.17 or otherwise (including as a result of a transfer or assignment under Section 17.4) must be approved by a majority vote of the Co-Owners (without the participation, for the avoidance of doubt, of any Co-Owner which is being removed as the Operator under this Section 6.17).
      15.	Condemnation Awards.  Section 9.6 is amended and restated in its entirety as follows:
      9.6	Condemnation Awards.  Any condemnation or similar awards to which the Co-Owners shall become entitled under the Shared Real Property Agreements or with respect to the Shared Facilities shall be used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities unless such repair, restoration or replacement is not feasible, the condemnation or other award is insufficient to complete such repair, restoration or replacement, or all of the Co-Owners agree otherwise in writing.  If such condemnation or other awards are not used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities, they shall be divided among the Co-Owners in proportion to their respective Ownership Interests in the affected Shared Real Property and/or Shared Facilities, provided that if such sums are in reimbursement of or compensation for specific costs or damages incurred by the Co-Owners in ratios different from that of their Ownership Interests, then such different ratios shall be used in apportionment of such sums among the Co-Owners.  If the Co-Owners are unable to agree on whether or not a repair, restoration or replacement is feasible, the condemnation or other award shall be divided among and distributed to the Co-Owners as provided in the preceding sentence, and a Co-Owner wishing to do so may repair, restore or replace the affected Shared Real Property and/or Shared Facilities for its own account and use, but at its own expense, and no other Co-Owner shall have the right to use such repaired, restored or replaced property or facilities unless and until it has reimbursed the Co-Owner that effected the repair, restoration or replacement for the other Co-Owner's Proportionate Share of the costs of such repair, restoration or replacement.  Any property or facilities whose repair, restoration or replacement is paid for by less than all of the Co-Owners shall not become Shared Real Property and/or Shared Facilities, as applicable, under this Agreement unless and until such costs have been paid (including reimbursements) by all Co-Owners in accordance with their respective Proportionate Shares.
      16.	Default by Operator. Section 13.1.4 is amended and restated in its entirety as follows:
      13.1.4 Default by Operator. Operator fails to perform any of its material operation, maintenance, repair or other obligations in this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement, and such failure is not cured within ten (10) days following written notice by a Co-Owner; provided that, that if such failure by Operator creates an Emergency Condition or materially interferes with a Co-Owner's Undivided Use Interest in Shared Facilities in which it has an Ownership Interest, or operation of its Facility, only such advance written notice, if any, as may be reasonably practicable under the circumstances shall be required, but if such advance notice is not provided, written notice thereof shall be provided promptly thereafter by the Co-Owner to Operator; provided further that if the default is not reasonably capable of being cured within ten (10) days, then the Operator may be allowed such longer period as the Co-Owners mutually agree (not to exceed sixty (60) days) as may be reasonably necessary under the circumstances to cure such failure so long as the Operator is pursuing a cure with reasonable diligence.
      17.	The first sentence of Section 13.2.3 is amended and restated in its entirety as follows:
      	In addition to the remedies provided in Section 13.2.1 and 13.2.2, if the defaulting Co-Owner is the Operator, the other Co-Owners (the "Non-Defaulting Co-Owners") shall have the right, by a majority vote of the Non-Defaulting Co-Owners (based on their respective Proportionate Shares), to remove the defaulting Co-Owner from its position as Operator and to appoint one of themselves as the Operator for purposes of this Agreement. 
      18.	Assignment. Section 17.4 is amended and restated in its entirety as follows:
      	17.4 Assignment. This Agreement will be binding on and inure to the benefit of the Co-Owners and their respective successors and permitted assigns. All transfers, conveyances, assignments of Shared Facilities or Shared Real property will be subject to the terms and conditions of this Agreement, whether or not explicitly stated. Each Co-Owner may, at any time and from time to time, upon notice but without the other Co-Owners' consent or approval, (i) subject to compliance with Section 9.7, transfer or assign this Agreement and the rights and obligations under this Agreement to a Person that acquires all or substantially all of such Co-Owner's assets, including such Co-Owner's Shared Assets, and agrees to assume all obligations of that Co-Owner under this Agreement (a "Permitted Assignee"); and/or (ii) create Lender's Liens pursuant to Article XIV, provided, that, for the avoidance of doubt, any such assignment shall in all events be subject to compliance with Section 6.17 and no assignee that assumes any Co-Owner's (including any Co-Owner that is currently Operator) interest in this Agreement shall become Operator, except in compliance with Section 6.17. Otherwise, no Co-Owner shall transfer or assign all or any part of its right, title and interest in or to this Agreement or any of its rights hereunder without the prior consent of all of the other Co-Owners; provided, further, that if FERC approval is required for any such assignment or transfer, it shall not be effective unless and until FERC approval has been obtained. For purposes of this Agreement, a Change of Control of a Co-Owner shall be considered an assignment by such Co-Owner of its rights and interests under this Agreement and shall be subject to the requirements hereunder with respect to assignments. Any Permitted Assignee shall assume all of the obligations of the assigning Co-Owner hereunder and shall execute any documents which may reasonably be required by the other Co-Owners, or by Lenders, including but not limited to any document in connection with a governmental permit, approval, authorization, entitlement or other consent. Under no circumstances shall any Lender or Permitted Assignee have any greater rights of ownership or use of the Shared Assets than the rights granted to the Co-Owners in this Agreement. Any assignment permitted under this Agreement shall release the assigning Co-Owner from obligations accruing after the date that liability is assumed by a transferee, but the assigning Co-Owner shall continue to be liable to the other Co-Owners for all performance due by the assigning Co-Owner for matters that have accrued and are unsatisfied as of the date of the assignment. Any purported assignment in contravention of this Section 17.3 will be void.
      19.	Notices. Section 17.17 is amended by adding the following notice information to the existing addresses set forth for Rising Tree III:
      	with further copies to:
      
JPM Capital Corporation
10 South Dearborn, 12th Floor
Mail Code ILI 0502
Chicago, Illinois 60603-2003
Attention:  President
Telephone:  (312) 732-3416
            Email:  jpmcc.energy@jpmorgan.com and joel.spenadel@jpmorgan.com
            
Bankers Commercial Corporation 
445 South Figueroa Street, G14-200
Los Angeles, CA 90071
Attention:  2015 Vento XIII Account Officer

      20.	Amended Memorandum.  Each Co-Owner agrees to sign and acknowledge an Amended Memorandum of Rising Tree Shared Facilities Agreement ("Amended Memorandum") in the form attached to this Amendment as Exhibit E.  After it has been sighned and acknowledged by all of the Co-owners, Operator shall record the Amended Memorandum promptly in the Office of the County Recorder of Kern County, California at the expense of the Co-Owners.
      21.	Minor Additional Amendments.  The following sections are hereby amended as follows:
      (a)	Section 5.3 is hereby amended by deleting the brackets in Sections 5.3.1 and 5.3.2 and by deleting footnote 1 in Section 5.3.1.
      (b)	Section 6.10 is amended by changing "Section 17.15" to "Section 17.17" in the thirteenth (13th) line of that section.
      (c)	Section 6.13 is amended by changing "Due Date" to "due date" in the sixth (6th) line of that section.
      (d)	Section 9.1 is amended by replacing "Section 9.8" in the first line of the section with "Sections 6.16, 9.2 and 9.8".
      (e)	Section 9.2 is amended by adding the phrase "In addition to the limitations set forth in Section 6.16," at the beginning of that section.
      (f)	Section 14.1 is amended by replacing the phrase "any party providing debt or equity financing or refinancing" in the fourth (4th) line of that section with the phrase "any party providing debt, tax equity or other equity financing or refinancing".
      (g)	Section 17.3 is amended by replacing the reference to "Section 17.3" in the first line of the section with "Section 17.4".
      22.	Amendments to Definitions.
      (a)	The following definitions in Exhibit A to the Agreement are amended and restated in their entireties as follows:
      Material Project Agreements means the Interconnection Agreement, this Agreement, the LGIA Co-Tenancy Agreement, the Shared Real Property Agreements, purchase or warranty agreements relating to Shared Facilities, and such other agreements to be included upon the mutual agreement of the Co-Owners, including those on Exhibit D.
      Metered Energy means the amount of electric energy measured at a given point.
      Operator means the Co-Owner or other Person engaged by the Co-Owners to manage, operate, maintain and repair the Shared Facilities and to perform other duties pertaining to the Shared Assets as set forth in the Agreement.  If the Operator is a Co-Owner, references to "Operator" shall mean the Co-Owner acting only in its capacity as Operator and not in any other capacity.  The Operator shall initially be Rising Tree I or an Affiliate designated by it, subject to replacement pursuant to Sections 6.17 and 13.2.2. 
      (b)	The following definitions are added to Exhibit A to the Agreement in the appropriate alphabetical order:
      Cause means with respect the Operator, acting in the capacity as such, fraud, willful misappropriation of funds, gross negligence, or willful misconduct or a willful violation of a material provision of this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement applicable to the Operator, solely in that capacity.
      Mechanical Completion Date means the date that the first wind turbine of the Facility or Additional Phase in question is mechanically complete and ready to energized, commissioned and tested.
      23.	Amendments to Exhibits.
      a.	Exhibit A to the Agreement is amended by deleting the definition of "Fiber Optic Facilities".
      b.	Exhibit B to the Agreement is amended in the following respects:
      (i)	Section A.1 of Exhibit B is amended and restated in its entirety as set forth in Section 1 of Exhibit B attached hereto.
      (ii)	The heading to Section A.2.c of Exhibit B is amended and restated in its entirety to be "Collection and Distribution Lines (including fiber optic cable and other communications facilities)".
      (iii)	Tract 21 as set forth in Section 2.a of Exhibit B attached hereto shall be added to the end of Section A.2.c of Exhibit B.
      (iv) 	The legal description of Tract 7 in Section A.2.f of Exhibit B is amended and restated in its entirety as set forth in Section 3.a of Exhibit B attached hereto, and certain parcels of real property are added to Section A.2.f of Exhibit as provided in Section 3.c of Exhibit B attached hereto. The name of Tract Number 25 in Section A.2.f of Exhibit B is amended to be Tract Number 20.
      (v)	Sections A.2.j and A.2.k as set forth in Section 2 of Exhibit B attached hereto are added to Exhibit B to the Agreement after Section A.2.i and before Section A.3.
      (vi)	Section A.3.k of Exhibit B is amended and restated in its entirety as follows: "k.  Kern County Ordinance No. F589 granting Rising Tree Wind Farm LLC a franchise to construct, install, maintain, operate, repair, renew and remove underground fiber optic cable dated November 4, 2014, as partially assigned to Rising Tree Wind Farm II LLC and Rising Tree Wind Farm III LLC on March 17, 2015."
      (vii)	Section A.4.a of Exhibit B is amended and restated in its entirety as set forth in Section 4 of Exhibit B attached hereto
      (viii)	Section B.1.b of Exhibit B is amended and restated in its entirety as follows: "b.  Meteorological Tower, including instrumentation, power loop and fiber optic cable and associated splice boxes, junction boxes and terminations from the Control Building (described on Exhibit B-1) to the tower."
      (ix)	The heading to Section B.2.a of Exhibit B is amended and restated in its entirety to be "Collection and Distribution Lines (including fiber optic cable and other communications facilities)".
      c.	Exhibit B-1 to the Agreement is amended and restated in its entirety as set forth on Exhibit B-1 attached hereto.
      d.	Exhibit B-2 to the Agreement is amended and restated in its entirety as set forth on Exhibit B-2 attached hereto.
      e.	Exhibit C to the Agreement is amended and restated in its entirety as set forth on Exhibit C attached hereto.
      f.	Exhibit D to the Agreement is amended and restated in its entirety as set forth on Exhibit D attached hereto.
      24.	No Other Amendment.  Except as expressly set forth in this Amendment, the Agreement is unmodified and continues in full force and effect.  From and after the date hereof, references to the Agreement will be understood to refer to the Agreement as amended by this Amendment.
      25.	Governing Law. This Amendment shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      26.	Counterparts. This Amendment may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument. It will not be necessary in making proof of this Amendment to produce or account for more than one counterpart.
      
[The next page is the signature page.]
      To evidence its acceptance of this Amendment, and intending to be legally bound, each Co-Owner has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:


EXHIBIT B
AMENDMENTS TO EXHIBIT B TO THE AGREEMENT
1.	Amended and restated Section A.1:
1.	Shared Facilities
a.	Project Substation:  See Exhibit B-1 attached hereto.
b.	Transmission Line:  See Exhibit B-2 attached hereto.
c.	Supervisory Control and Data Acquisition (SCADA) System, as further described on Exhibit B-2 attached hereto, excluding feeder relays, breakers and collection system fiber optic cables for the individual wind turbine generators
d.	Roads
e.	O&amp;M Building
f.	Condor Detection Tower
g.	Meteorological Tower, including instrumentation, power loop and fiber optic cable and associated splice boxes, junction boxes and terminations from the Control Building (described on Exhibit B-1) to the tower
h.	Environmental Mitigation Parcels
2.	Addition to Section A.2.c;
a.	The following parcels are added to Section A.2.c:
Tract 21
The Southwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat of the survey of said land, approved by the Surveyor General October 7, 1936.
Except one half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by the M &amp; R Sheep Co. in deed dated August 4, 1955, recorded in Book 2519, Page 298 of Official Records.
APN:  237-185-07
3.	Amended and restated description in Section A.2.f;
a.	The description of Tract 7 is amended and restated in its entirety as follows:
   Tract 7
The East half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.
APN:  237-132-20
b.	The name of Tract Number 25 is amended to be Tract Number 20.
c.	The following parcels are added to Section A.2.f:
Tract 21
That portion of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:
Starting at the northwest corner of the west half of the southeast quarter of the southeast quarter of the southeast quarter of said Section 2; thence in a southerly direction, 132 feet to the point of beginning; thence easterly 330 feet; thence Southerly 132 feet; thence westerly 330 feet; thence northerly 132 feet to the point of beginning.
Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938 as reserved by the United States of America, in Patent recorded February 24, 1960 in Book 3242, Page 151 of Official Records.
APN 237-132-28
3.	New Sections A.2.j and A.2.k:
j.	Meteorological Tower (RST-3A)
Tract 1
The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.
Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.
APN:  237-284-01
k.	Environmental Mitigation Parcels
 Tract 1
The northwest quarter of the southwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.
Except therefrom 1/2 of all oil, gas and minerals and hydrocarbon substances, in and under said land, as excepted in deed dated August 4, 1955 from M &amp; R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 283 of Official Records; which further provides as follows:
The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the grantor, its successors and assigns, from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent or neighboring lands and/or from conducting subsurface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the grantors in said deed.
APN:  237-286-01
Tract 2
The west 1/2 of the southwest 1/4 of the northeast 1/4 of the southeast 1/4 of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.
Excepting therefrom all oil, gas and other mineral deposits, in said land, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 13, 1960 in Book 3302, Page 499 of Official Records.
APN:  237-152-12



4.	Amended and restated Section A.4.a:
a.	O&amp;M Building:  Rights of Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC (collectively, the "Sublessees") under that certain Sublease Agreement dated February 6, 2015 by and between the Co-Owners, as sublessors, and the Sublessees, as sublessees.  


EXHIBIT B-1
PROJECT SUBSTATION SHARED FACILITIES
* One (1) 230kV Dead End Structure including the following equipment and material:
o Tapered Tubular Structural Steel and associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Lightning Surge Arrestors, 180kV, 144kV MCOV
o Three (3) Compression Tees, 795 ACSR to NEMA 4-Hole Pad
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Six (6) Welded Terminal Adaptors, 1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle
o Five Hundred (500) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* Three (3) 230kV Single Phase Bus Supports, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle

* One (1) 230kV, 1200A, Ganged 3-Phase, Motor Operated Disconnect Switch including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor, associated hardware, and switch grounding platform
o Six (6) Station Post Insulators, 230kV, TR-308
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Sixty (60) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* One (1) 230kV, Metering Station, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Equipment control wiring and interconnecting conduit including Junction Boxes
o Three (3) 230kV, 600:5 Single Ratio Dual Winding, Instrument Current Transformers
o Three (3) 230kV, 1200/2000:1:1 Dual Winding, Instrument Potential Transformers
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Cable Spacer Tees, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Aluminum Cable Support Brackets
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor

* 230kV Substation Summation Bus including the following equipment and material:
o One (1) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Three (3) Station Post Insulators, 230kV, TR-308
* Three (3) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Three (3) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Thirteen (13) 230kV, Single Phase Low Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Thirteen (13) Station Post Insulators, 230kV, TR-308
* Thirteen (13) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Six (6) 230kV, Single Phase High Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Six (6) Station Post Insulators, 230kV, TR-308
* Six (6) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Four (4) 230kV, Three Phase High Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Twelve (12) Station Post Insulators, 230kV, TR-308
* Twelve (12) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Three (3) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Nine (9) Station Post Insulators, 230kV, TR-308
* Nine (9) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Nine (9) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Ninety (90) Feet of 1272 kcmil AAC (Narcissus) conductor
o Nine (9) 230kV, Aluminum A-Frames, which includes:
* Eighteen (18) Tee Connector, 4" IPS Main to 3" IPS Tap, 15
* Nine (9) Tee Connector, 4" IPS Main to 2-3" IPS Taps, 15
* Two Hundred Ten (210) Feet of 3" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 4" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 795 kcmil ACSR (Drake) Conductor

* Above and Below Ground Raceways including the following materials
o Conduits, fittings, and connectors connecting shared facility equipment or apparatus to other Substation components located within the Substation
o Cable Trench, Trench Covers, Trench Hangers, and Trench Grounding Materials

* Substation Ground Grid including the following materials
o Twenty Three Thousand (23,000) Feet of #4/0 kcmil 19 Strand, Bare Copper 
o Exothermic Cross connections ~ including molds, shots, and accessories
o Exothermic Tee connections ~ including molds, shots, and accessories
o Exothermic Lug connections ~ including molds, shots, and accessories
* Substation Lighting and Lightning Protection including the following materials
o Eight (8) Static Masts, 90' Tall with provision for yard lighting
o Fifteen (15) 400W, HPS Flood Lights

* Substation Fencing including the following materials
o Fifteen Hundred (1500) Feet of fence, 8' tall, 7' mesh with three strands of barbed wire
o Fence posts, gates, hangers, and grounding materials

* Control Building and all equipment and fixtures located therein except feeder relays, breakers and collection system fiber optic cables for the individual wind turbine generators


EXHIBIT B-2
TRANSMISSION LINE SHARED FACILITIES
3.99-mile 220kV generation tie-line, optical ground wire on the generation tie-line for the primary telecommunications path, including one or more single-mode fiber optic cables for the diverse telecommunications path and SCADA System, appurtenant structures, and facilities, including the following:
* Forty Two (42) transmission structures including the following materials:
o Forty Two (42) tubular steel poles
o One Hundred Twenty (120) 230kV 30K Insulators
o One Hundred Twenty (120) Suspension Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty (40) 230kV 50K Insulators
o Forty (40) Dead End Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty Five (45) OPGW Hardware Assemblies
o Four (4) Dead End Hardware Assemblies for 3/8" Shield Wire
o Structure grounding rods and associated hardware
o Structure signage
* Seventy Thousand Two Hundred (70,200) Feet of 795 KCMIL ACSR "Drake" Conductor
* Twenty Three Thousand (23,000) Feet of 48 Fiber, Single Mode OPGW, DNO 6211
* Three (3) OPGW "Coyote" Splices including splice case, splices and mounting hardware. 
* One Thousand Four Hundred and Fifty (1,450) Bird Flight Diverters
* Two Hundred (200) Feet of 3/8" HS 7-Strand Shield Wire
* Twenty Five Thousand Five Hundred (25,500) Feet of ADSS Fiber Optic Cable
* Twenty Two Thousand (22,000) Feet of 1 1/4" inner duct
* Splice box/pull box, including splices, for cable to AT&amp;T
* Carbon fiber junction (CFJ) pedestal
* Fifty (50) feet of 2" Schedule 40 PVC conduit to/from CFJ pedestal to house both fiber optic cable and copper conductors


EXHIBIT C
INTERESTS AND PROPORTIONATE SHARES
A.	Undivided Ownership Interests
      The Ownership Interest of each Co-Owner in each Shared Assets Group shall be as set forth in Table C below.  
B.	Proportionate Shares
      The Proportionate Share of each Co-Owner shall be as set forth in Table C below. 
C.	Shared Asset Groups
RST Shared Facilities Group (All Co-Owners)
Equipment Name
RST I
RST II
RST III
Project Substation
40%
10%
50%
Transmission Line
40%
10%
50%
Roads in Sections 9, 10, 11, 15 and 16
40%
10%
50%
O&amp;M Facility
40%
10%
50%
Environmental Mitigation Parcels
70%
15%
15%
All other Shared Facilities
40%
10%
50%

RST I/II Shared Facilities Group (Rising Tree I and Rising Tree II only)
Equipment Name
RST I
RST II



Roads in Sections 1, 2, 35 and 36
80%
20%
Met Tower RST 1-B/RST 2
80%
20%

EXHIBIT D
MATERIAL PROJECT AGREEMENTS
High Voltage Engineering, Procurement and Construction Contract by and between Blattner Energy Inc., a Minnesota corporation and Rising Tree I, dated as of February 3, 2015.
Operations and Maintenance Facility Engineering, Procurement and Construction Contract, dated as of January 22, 2015, between Rising Tree I, and Wattenbarger Wells Construction, Inc. DBA WWCI, a California corporation

EXHIBIT E
FORM OF AMENDED MEMORANDUM

RECORDING REQUESTED BY
AND WHEN RECORDED MAIL TO:

RISING TREE WIND FARM LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
													

AMENDED MEMORANDUM OF
SHARED FACILITIES AGREEMENT AND
GRANT OF RIGHTS
      THIS AMENDED MEMORANDUM OF SHARED FACILITIES AGREEMENT AND GRANT OF RIGHTS (this "Memorandum"), is made and entered into as of June 29, 2015 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.   Rising Tree I, Rising Tree II and Rising Tree III are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners". The Co-Owners are collectively referred to herein as "Parties" and individually as a "Party".
      A.	The Parties have entered into that certain unrecorded Rising Tree Shared Facilities Agreement dated December 3, 2014 (the "Agreement"), which affects (i) certain real property more particularly described in Exhibit A attached hereto and made a part hereof (such real property collectively, the "Property").  A memorandum of the Agreement was recorded in the Official Records of Kern County, California on December 10, 2014, as Instrument No. 0214152759.
      B.	The Parties have entered into a First Amendment to Rising Tree Shared Facilities Agreement of even date herewith (the "Amendment").  References herein to the Agreement mean the Agreement as amended by the First Amendment, unless the context requires otherwise.
      C.	The Parties have executed and acknowledged this Amended Memorandum and are recording the same for the purpose of providing constructive notice of the Agreement, as amended, and the Parties' rights thereunder.  Capitalized terms used and not defined herein have the meaning given the same in the Agreement.
NOW, THEREFORE, the Parties hereby agree as follows:
      1.	Grant of Rights.  Subject to the terms and conditions of use set forth in the Agreement and the terms and conditions in each of the Shared Real Property Agreements:
      (c) each Co-Owner of Shared Facilities and/or Shared Real Property in a Shared Assets Group (a "Granting Co-Owner") hereby sells, grants, assigns, transfers and conveys to the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such Shared Assets Group, including such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Asset Group, such that each such Co-Owner shall own an undivided interest, as a tenant-in-common, in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B attached to the Agreement; 
      (d) each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group equal to its Proportionate Share therein, which right is exercisable upon the Commissioning Date of its Facility, all as more particularly set forth in the Agreement.  In addition, each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Undivided Use Interest as provided in the Agreement, and (b) over any Shared Real Property underlying or required for the use of the Shared Facilities in which such Co-Owner has an Undivided Use Interest, subject to the terms and conditions contained in the Agreement. 
      2.	Term. This Agreement is effective as of December 3, 2014 and shall remain in force and effect until (i) the earliest of (v) December 3, 2049, (w) the expiration date of the Interconnection Agreement,  (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
      3.	Other Provisions. The rights granted hereunder are of the nature, and are subject to the requirements and limitations, set forth in the Agreement. The Agreement also contains various covenants, obligations and rights of the Parties, including, without limitation, provisions relating to use, conduct of operations, assignment, ownership of improvements, fees, default, cure rights and lender protections.
      4.	Purpose of this Memorandum. The terms, conditions and covenants of the Agreement are incorporated herein by reference as though fully set forth herein. This Memorandum does not supersede, modify, amend or otherwise change the terms, conditions or covenants of the Agreement, and this Memorandum shall not be used in interpreting the terms, conditions or covenants of the Agreement. In the event of any conflict between this Memorandum and the Agreement, the Agreement shall control.
      5.	Binding on Successors and Assigns.  The Parties hereby agree that all of the covenants, consents and agreements contained in the Agreement touch and concern the Property and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Party's present or future estate or interest therein and upon each of the Parties, their respective successors and assigns as holders of an estate or interest in said real estate (including without limitation, any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Parties and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
      6.	Counterparts. This Memorandum may be executed in counterparts, each of which shall be deemed an original and all of which when taken together shall constitute one and the same document.
[SIGNATURES ON NEXT PAGE]
       
IN WITNESS WHEREOF, the Parties have caused this Memorandum to be executed as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC
 __________________________________________
By:
Title:


	
By:
Title:
[Add notarial acknowledgments]

EXHIBIT A
DESCRIPTION OF THE PROPERTY





1 Conform to percentage in section 5.3.2.
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------

Execution Copy








	-2-






	A-6



	B-43


	C-1




	D-1


	E-2


F-2


G-5

18


EXECUTION VERSION






	B-3







B-2-1


C-1


D-1



E-5</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>553</filing_id>
      <filing_title>Amended SFA</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-08-29</current_effective_date>
      <ferc_order_date>2015-08-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Co-Tenancy Agreement</record_title>
      <record_content_desc>Rising Tree</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-08-29</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AMENDED AND RESTATED
LARGE GENERATOR INTERCONNECTION AGREEMENT

CO-TENANCY AGREEMENT

by and among

Rising Tree Wind Farm LLC, 

Rising Tree Wind Farm II LLC,

Rising Tree Wind Farm III LLC,



and 
Rising Tree Wind Farm LLC, as the Manager

October 24, 2014 

ARTICLE I	DEFINITIONS	2
1.1	Certain Definitions	2
ARTICLE II	CO-TENANCY RIGHTS AND OBLIGATIONS	5
2.1	Assignment of Interconnection Rights	5
2.2	Use of LGIA	5
2.3	Maximum Capacity	5
2.4	Curtailment	5
2.5	LGIA Expenses	6
2.6	Liquidated Damages; Credits; Refunds	6
2.7	Joint and Several Liability	7
2.8	Projected Capacity	7
2.9	Indemnity	7
2.10	Taxes	7
2.11	Operation and Management	7
2.12	Events of Default; Default	8
2.13	Remedies	8
2.14	Disconnection	9
2.15	Equitable Relief	9
2.16	Dispute Resolution	9
2.17	Effect of Force Majeure	11
2.18	Notice of Default	11
2.19	Tax Classification; No Partnership	11
ARTICLE III	MANAGER	11
3.1	Appointment of Manager; Manager Services	11
3.2	Communications	12
3.3	Indemnification of Manager	12
3.4	Books and Records; Reporting Requirements	12
3.5	Replacement of Manager	13
3.6	Management Fee	13
3.7	Discrimination	13
3.8	Performance	13
3.9	Limitation of Liability	13
ARTICLE IV	TRANSFERABILITY	13
4.1	General Restriction	13
4.2	Co-Tenant's Right to Encumber	14
4.3	Certain Rights of Financing Party	14
4.4	FERC Approval	15
4.5	Number of Co-Tenants	15
ARTICLE V	MISCELLANEOUS PROVISIONS	15
5.1	Notices	15
5.2	Choice of Law	15
5.3	Entire Agreement	15
5.4	Interpretation	15
5.5	Waiver	16
5.6	Third Party Beneficiaries	16
5.7	Counterparts; Facsimile Signatures	16
5.8	Amendments; Term	16
5.9	Further Assurances	16
5.10	Replacement	16
5.11	WAIVER OF RIGHT TO PARTITION	16

AMENDED AND RESTATED
LARGE GENERATOR INTERCONNECTION AGREEMENT
CO-TENANCY AGREEMENT
         This AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT (this "Agreement") is made and entered into as of October 24, 2014, (the "Effective Date") by and among Rising Tree Wind Farm LLC, a Delaware limited liability company ("RST"), Rising Tree Wind Farm II, LLC, a Delaware limited liability company ("RST II"),  Rising Tree Wind Farm III LLC, a Delaware limited liability company, successor in interest to Addison Energy Resources LLC, a Delaware limited liability company ("RST III") (each a "Co-Tenant" and collectively the "Co-Tenants"); and Rising Tree Wind Farm, LLC (the "Manager"); each also a "Party" and collectively, the "Parties".  
RECITALS
         A.	The Parties executed that certain Large Generator Interconnection Agreement Co-Tenancy Agreement dated as of August 19, 2013 ("Original Agreement").  The Parties desire to amend and restate the Original Agreement as stated herein.
         B.  The Co-Tenants are developing and will construct, own and operate energy projects with an aggregate Nameplate Capacity  of up to 198 MW (collectively, the "Project") in the Mojave and Tehachapi areas of Kern County, California.
         C.	Each Co-Tenant will construct, own, and operate a separate phase (each, a "Phase") of the Project.  
         D.	The Phases to be constructed, owned and operated by each of RST, RST II and RST III are projected to have Nameplate Capacities of 79.2 MW, 19.8 MW and 99 MW, respectively.
         E.	The Co-Tenants, as tenant-in-common, and Manager, as agent for the Co-Tenants, have entered into that certain First Amended Large Generator Interconnection Agreement with Southern California Edison Company ("SCE") and the California Independent System Operator Corporation (the "CAISO"), dated as of September 5, 2014, together with all amendments, agreements, schedules, appendices, exhibits and other documents ancillary thereto (including the Meter Service Agreement and the Participating Generator Agreement) (all as may be amended or supplemented, the "LGIA") for the purpose of securing interconnection rights for the Project and each of the Phases.
         F.	The Parties desire to enter into this Agreement to set forth the rights and obligations of each of the Parties under the LGIA.
         NOW, THEREFORE, in consideration of the foregoing and the agreements and covenants contained herein, and other good and valuable consideration, the receipt and sufficiency of which are hereby acknowledged, the Parties hereto agree as follows:
AGREEMENT
ARTICLE I
DEFINITIONS
1.1	Certain Definitions.  Capitalized words and phrases used herein shall have the following meanings, or the meanings given in the Sections of this Agreement in which they are defined, unless the text expressly or by necessary implication requires otherwise.
      "Active Co-Tenant" means each Co-Tenant which has notified the Manager in writing that its Phase, as of any date of determination, is (or will be, at any time in the subject month) interconnected to and supplying electricity to the Windhub Substation.
      "Agreement" has the meaning given in the preamble to this Agreement.
      "CAISO" has the meaning given in the recitals to this Agreement.
      "Claims" has the meaning given in Section 2.9(a).
      "Co-Tenancy Percentage Interest" means, with respect to each Co-Tenant, the percentage of the Interconnection Capacity, as specifically set forth on Exhibit A hereto, as such exhibit may be amended from time to time.
      "Co-Tenant" has the meaning given in the preamble to this Agreement.
      "Construction Commencement Date" means, with respect to each Co-Tenant, the earlier of: (i) the date that such Co-Tenant commences construction of its Phase and (ii) the date of closing of construction financing for such Co-Tenant's Phase.
      "Distribution Upgrades" has the meaning given in the LGIA.
      "Effective Date" has the meaning given in the preamble to this Agreement.
      "Event of Default" has the meaning given in Section 2.12.
      "FERC" means the Federal Energy Regulatory Commission or any successor agency.
      "Financing Party" means (i) any and all lenders providing senior or subordinated construction, interim or long-term debt financing or refinancing (including hedging counterparties) for the development, construction, purchase or operation of a Phase, and (ii) any and all equity or tax investors providing financing or refinancing for a Phase or purchasing equity ownership interests in a company owning a Co-Tenant or a Phase, including through a lease financing structure, and any trustee or agent acting on behalf of any such lenders, equity or tax investors, or lease equity providers.
      "Force Majeure" means unforeseeable causes, such as acts of God, the enforcement or adoption of legislation or lawful rules, regulations or orders of any governmental body, acts of the public enemy, riots, strikes, or other industrial disturbances, labor or material shortages, fires, explosions or other causes of a similar nature which are beyond the reasonable control of the Parties and which wholly or partly prevents a Party from performing its obligations under this Agreement.
      "FPA" has the meaning given in Section 2.11.
      "Indemnified Co-Tenant" has the meaning given in Section 2.9(a).
      "Indemnifying Co-Tenant" has the meaning given in Section 2.9(a).
      "Interconnection Capacity" means the interconnection capacity expressed in MW provided for pursuant to the LGIA.
      "Interconnection Customer" has the meaning given in the LGIA.
      "Interconnection Customer Interconnection Facilities" has the meaning given in the LGIA.
      "Interconnection Facilities" has the meaning given in the LGIA.
      "Interconnection Rights" means the rights and interests under the LGIA.
      "Interest Rate" means the highest prime rate published in the Wall Street Journal Money Rates Table as of the date of calculation plus 200 basis points.  
      "Laws" means all applicable laws, statutes, ordinances, rules, regulations, decrees, orders, permits, requirements, judgments, decisions and injunctions issued by any governmental authority, including laws relating to health, safety and the environment.
      "LGIA" has the meaning given in the recitals to this Agreement.
      "LGIA Operating Expenses" means all expenses due and payable under the LGIA, including expenses incurred in connection with complying with the LGIA (including affirmative covenants with respect to maintenance of the Project and the Interconnection Customer Interconnection Facilities, communications with CAISO, insurance, and reporting), plus the Management Fee, but excluding the TO Construction Costs.
      "Management Fee" has the meaning given in Section 3.6.
      "Manager" has the meaning given in the preamble to this Agreement.
      "Maximum Nameplate Capacity" means, for each Phase, the corresponding nameplate capacity amount listed in Exhibit A. 
      "Mortgage" has the meaning given in Section 4.2.
      "MW" means a megawatt or megawatts, as the context may require.
      "Nameplate Capacity" means, for each Phase, as of any date of determination, the aggregate sum of the nameplate capacity ratings of each wind turbine generator included in such Phase that has been interconnected to the Windhub Substation pursuant to the LGIA.
      "NERC" means the North American Electric Reliability Council or its successor organization.
      "Network Upgrades" has the meaning given in the LGIA.
      "Participating TO Interconnection Facilities" has the meaning given in the LGIA.
      "Party" and "Parties" have the meanings given in the preamble to this Agreement.
      "Person" means any individual or entity, and the heirs, personal representatives, successors and assigns of such individual or entity where the context so permits.
      "Phase" has the meaning given in the recitals to this Agreement.
      "Phase Controlled Assets" means, for each Co-Tenant, any of the assets comprising its respective Phase or Phases, the corresponding Phase Real Property and related Phase agreements and contractual arrangements.  For the avoidance of doubt, the Phase Controlled Assets shall exclude the LGIA.
      "Phase Real Property" means, for any Phase, the real property on which such Phase is located.
      "Point of Interconnection" has the meaning given in the LGIA.
      "PPA" means a an power purchase Agreement or other form of bundled agreement for the sale of power and renewable energy credits entered into by any Co-Tenant with respect to a Phase (or any replacement thereof).
      "Project" has the meaning given in the recitals to this Agreement.
      "Requesting Co-Tenant" has the meaning given in Section 4.3(d).
      "RST" has the meaning given in the Preamble.
      "RST II" has the meaning given in the Preamble.
      "RST III" has the meaning given in the Preamble.
      "Rules" has the meaning given in Section 2.16(a).
      "SCE" has the meaning given in the recitals to this Agreement.  
      "Sharing Ratio" means, with respect to each Active Co-Tenant, as of any date of determination, the ratio equal to the  Nameplate Capacity of the Active Co-Tenant's Phase divided by the sum of the  Nameplate Capacities of all Active Co-Tenant's Phases. 
      "SFA" has the meaning given in Section 3.5.
      "Third Party Controversy" has the meaning given in Section 2.16(c).
      "TO Construction Costs" has the meaning given in Section 2.5(a).
      "Transfer" means, with respect to any asset, the sale, assignment, transfer, pledge, encumbrance, transfer, or other disposition of, either voluntarily, by operation of law or otherwise, or such asset.
      "Windhub Substation" means the substation owned by SCE (including the revenue meter), located in Mojave, Kern County, California.
ARTICLE II
CO-TENANCY RIGHTS AND OBLIGATIONS
2.1	Assignment of Interconnection Rights.  RST hereby assigns, transfers, conveys and delivers to the Co-Tenants, as tenants in common according to each Co-Tenant's Co-Tenancy Percentage Interest, and the Co-Tenants hereby accept, as tenants in common, all of its right title and interest in and to the Interconnection Rights and the LGIA.  Upon the conveyances described in this Section 2.1, the Co-Tenants shall hold title and interest in and to the Interconnection Rights and the LGIA as tenants-in-common and not as partners or joint venturers.  
2.2	Use of LGIA.  The LGIA shall be held and used solely to permit the interconnection of electricity generated by or on behalf of a Phase owned by a Co-Tenant (or by such Co-Tenant's successors, assigns or affiliates) at the Windhub Substation.  Each Co-Tenant shall have an undivided ownership interest as tenant-in-common in the Interconnection Customer and the LGIA equal to its Co-Tenancy Percentage Interest, and each Active Co-Tenant shall possess an undivided right to enjoy all of the rights of the Interconnection Customer under the LGIA, including use of the Interconnection Customer Interconnection Facilities.  Subject to Section 4.5 and to obtaining all necessary approvals, including, without limitation, from CAISO and SCE, the Parties shall amend this Agreement and the LGIA to add one (1) Co-Tenant proposed by RST III and one (1) Co-Tenant proposed by RST.
2.3	Maximum Capacity.  Only Active Co-Tenants shall have the right to interconnect their Phases at the Windhub Substation.  No Active Co-Tenant shall interconnect its respective Phase to the Windhub Substation to the extent such interconnection will result in such Active Co-Tenant having a Phase with Nameplate Capacity in excess of its Maximum Nameplate Capacity.  To the extent that conditions exist which result in an Active Co-Tenant generating energy from its respective Phase in excess of its Maximum Nameplate Capacity, then such Active Co-Tenant shall curtail the operation of its Phase so as not to exceed its Maximum Nameplate Capacity.  
2.4	Curtailment.  In the event of any curtailment of interconnection or transmission services at the direction of CAISO, such curtailment shall be allocated pro rata among the Active Co-Tenants according to each Active Co-Tenant's Sharing Ratio; provided, however, that the Manager may curtail (to the extent permitted under its operating agreement) on a non-pro rata basis if (a) it reasonably determines that a pro rata allocation among Active Co-Tenants is not practical under the circumstances with respect to the operation of the  Project or that non-pro rata allocation of such curtailment is necessary with respect to the prudent operation of the Project or (b) such allocation is necessary to comply with the LGIA or any PPA, and, in each case, that such non-pro rata allocation will not result in a default under the LGIA or any PPA to which a Co-Tenant is a party.  In the event of any curtailment of interconnection or transmission services other than at the direction of CAISO (including at the direction of SCE as the purchaser under any PPA when the basis of such curtailment is congestion arising from the ordinary course of operations of SCE's transmission system, and as a result of actions or omissions caused by any Active Co-Tenant (including any default under the LGIA or an applicable PPA)), all such curtailment shall be allocated to the applicable Active Co-Tenant and such Active Co-Tenant will be responsible for all costs, liabilities and damages relating to such curtailment.  
2.5	LGIA Expenses.  Each Co-Tenant hereby confirms its obligation to share in the periodic payment of all expenses incurred under the LGIA, and agrees to pay its respective share of such expenses as and when due and payable as follows:
(a)	TO Construction Costs. RST shall  provide initial funding for all payments (including the provision of any payment security required under the LGIA) required to design, procure, and construct the Participating TO Interconnection Facilities pursuant to the LGIA (including Appendix A thereof) ("TO Construction Costs") 
(c)	LGIA Operating Expenses.  RST shall be responsible for payment of all LGIA Operating Expenses until such time as other Co-Tenants become Active Co-Tenants.   
(d)	Payment of LGIA Operating Expenses.  The Manager shall, as authorized agent for each Co-Tenant, administer the collection and payment of the LGIA Operating Expenses.  Each Active Co-Tenant obligated to pay LGIA Operating Expenses shall pay each invoice for LGIA Operating Expenses promptly upon receipt of written notice thereof from the Manager, but in any event within thirty (30) days of such receipt or such earlier time as required by the LGIA. If any Co-Tenant fails to make payment of its required share of the LGIA Operating Expenses when due, the Manager or any other Co-Tenant may make such payments to avoid a breach or default under the LGIA and such paying party shall be entitled to reimbursement by the non-paying Co-Tenant (together with interest on such amounts accrued at the Interest Rate beginning on the date that such payment was due) following delivery of written evidence of such payment having been made.
2.6	Liquidated Damages; Credits; Refunds.  To the extent that the Manager receives any damages, credits or refunds pursuant to the LGIA, the Manager shall promptly remit such damages, credits or refunds to the Active Co-Tenants according to each Active Co-Tenant's Sharing Ratio (unless such damages, credits or refunds accrue to a specific Active Co-Tenant, in which event the Manager shall promptly remit them to such Active Co-Tenant); provided, however, that damages, credits, or refunds allocated to a Co-Tenant shall first be offset against any amounts owing to any other Co-Tenants.
2.7	Joint and Several Liability.  Each Co-Tenant shall be jointly and severally liable for (i) any payments due under the LGIA and (ii) the performance of the obligations and duties imposed on the Interconnection Customer by the LGIA.  
2.8	Projected Capacity.  Each Co-Tenant shall notify the Manager in writing, no later than thirty (30) days before such Co-Tenant's Construction Commencement Date, of the projected Maximum Nameplate Capacity of its Phase.  The Parties hereby agree to amend Exhibit A, if necessary, to reflect each Co-Tenant's projected nameplate capacity as set forth in its notice to the Manager pursuant to this Section 2.8, but subject to Section 2.3.  
2.9	Indemnity. 
(a)	Each Co-Tenant (an "Indemnifying Co-Tenant") shall indemnify, defend and hold harmless the other Co-Tenants (each, an "Indemnified Co-Tenant") from and against any and all losses (including all lost revenues under applicable PPAs and the after tax value of lost production tax credits, if applicable), damages, liabilities, claims, judgments, liens, penalties, costs and expenses, including, without limitation, reasonable attorneys' and consultants' fees (collectively, "Claims"), which may be imposed upon or incurred by such Indemnified Co-Tenant or asserted against such Indemnified Co-Tenant in connection with any breach of this Agreement or the LGIA or resulting from any other negligent action or omission by the Indemnifying Co-Tenant under or in connection with the LGIA and affecting the rights of the Indemnified Co-Tenants thereunder or the Interconnection Facilities.  In addition, each Co-Tenant and the Manager shall be entitled to contribution from any Co-Tenant for costs incurred on behalf of such Co-Tenant or such Co-Tenant's Phase.  
(b)	The Manager shall indemnify, defend, and hold harmless the Co-Tenants from any Claims which may be imposed upon or incurred by such Co-Tenants as a result of fraud, willful misconduct, or gross negligence of the Manager.
2.10	Taxes.  Each Co-Tenant shall pay all real and personal property taxes and assessments, general or special, levied against its Phase or the facilities and fixtures located thereon, except for any taxes or assessments that are LGIA Operating Expenses.  All such taxes and assessments shall be paid before delinquency and before any fine, interest or penalty shall become due or be imposed for their non-payment; provided if a Co-Tenant in good faith contests or disputes such taxes or assessments and furnishes to the other Co-Tenants a bond or other acceptable security in an amount sufficient to discharge all such contested taxes or assessments, such Co-Tenant will not be in default under this Section 2.10 for failing to timely pay such contested taxes or assessments.
2.11	Operation and Management.  
(a)	Each Co-Tenant shall operate and maintain its Phase Controlled Assets acting as a prudent operator and manager and otherwise (a) in accordance with the terms of the LGIA, (b) in accordance with good operating and utility industry practices, (c) in compliance with all applicable Laws, including but not limited to the Federal Power Act, as amended ("FPA"), and all rules, regulations, and orders issued by the FERC pursuant to the FPA, (d) in compliance with the CAISO Tariff, including the rules, protocols, procedures and standards attached thereto, as the same may be amended from time to time and approved by FERC, (e) in compliance with the rules, protocols, procedures and standards of NERC, and (f) without causing a material adverse effect on the LGIA, any Party or any of the other Co-Tenants' respective Phases. 
(b)	Each Co-Tenant shall comply with its obligations under the LGIA, including with respect to its obligations to fund LGIA Operating Expenses.  Each Co-Tenant shall obtain and maintain status as an "exempt wholesale generator" or a "qualifying facility" under applicable Law.
(c)	Each Co-Tenant shall cooperate with and timely respond to Manager as agent for the Co-Tenants under the LGIA, and shall provide Manager such information required by Manager to comply with its obligations under the LGIA.
2.12	Events of Default; Default.  The following shall constitute "Events of Default": 
(a)	a Co-Tenant, after receiving written notice pursuant to Section 2.18 of its default or potential default (including any "Default" under the LGIA), fails to commence and diligently pursue the cure of such default within ten (10) days of receiving such notice, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12(a) if it commences to cure such default within (20) days after receiving notice of the default; and   
(b)	a Party fails to perform its obligations under this Agreement or the LGIA  in any material respect, and such Party fails to cure such default within (i) ten (10) days after receipt of written notice of a payment default, or (ii) twenty (20) days after receipt of written notice of any non-payment default, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12(b) if it commences to cure such default within twenty (20) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed sixty (60) days, including the initial cure period.
2.13	Remedies.  In addition to all other remedies permitted by Law or under this Agreement (all of which shall be cumulative), following an Event of Default, each non-defaulting Party and its Financing Parties or other equity interest holders shall have the right, but not the obligation, to perform the obligations of the defaulting Party, and the defaulting Party shall reimburse the performing Parties for their direct and indirect expenses which they incurred in rendering the performance, plus interest at the Interest Rate. 
2.14	Disconnection.  
(a)	If a Co-Tenant fails to cure any default under this Agreement or the LGIA within twenty five (25) days after receiving notice of such default, the Manager may disconnect the breaching Co-Tenant's Phase from the Windhub Substation (i) after obtaining written approval to do so from those Active Co-Tenants then not in default and having a combined Sharing Ratio in excess of fifty percent (50%) of the combined Sharing Ratio of all Active Co-Tenants then not in default, or (ii) without approval from Active Co-Tenants but only to the extent necessary to prevent or cure a "Default" under the LGIA; provided if the nature of the defaulted obligation or obligations is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then the Manager may not disconnect the defaulting Co-Tenant's Phase if such Co-Tenant commences to cure such default within twenty five (25) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed eighty five (85) days, including the initial cure period; provided further, that in no event shall any cure period hereunder extend beyond any applicable cure period under the LGIA.
(b)	The Manager may also disconnect any Phase, in its sole discretion, in order to prevent damage to the Co-Tenants' Phases, the Interconnection Facilities or the property of SCE or as otherwise needed to prevent or mitigate technical issues affecting the Phases; the Manager shall immediately notify the Co-Tenants of any such disconnection.
2.15	Equitable Relief.  The Parties agree that damages may be an inadequate remedy for a breach by the Manager or any other Party of its respective obligations under this Agreement, and that each Party shall be entitled to seek injunctive and other equitable relief, including specific performance, against any other Party or the Manager to prevent or eliminate such default.
2.16	Dispute Resolution. 
(a)	Arbitration.  If the Parties are unable to resolve a dispute, then any Party may submit such dispute to binding arbitration and the dispute shall be resolved using expedited JAMS arbitration rules (the "Rules") by an arbitrator mutually acceptable to the Parties.  The determination of the arbitrator shall be final and binding upon the Parties.  Each Party involved in the dispute shall pay its ratable share of all costs of such arbitration; provided, however, that the losing Party(ies), if the arbiter clearly designates one in connection with the obligation to pay such costs, shall pay all of the costs of the prevailing Party(ies), including reasonable attorneys' fees and costs.  Notwithstanding any provisions of the Rules, the Parties shall have the right to take depositions and obtain discovery regarding the subject matter of the arbitration, as provided in Title III of Part 4 (commencing with Section 1985) of the California Code of Civil Procedure.  The determination of the arbitrator shall be final and shall not be subject to judicial review; provided, however, that any award or determination rendered by the arbitrators may be entered and enforced in any court of competent jurisdiction.  The arbitration proceedings provided for hereunder are hereby declared to be self-executing, and it shall not be necessary to petition a court to compel arbitration.
(b)	Notice and Selection of Arbitrator.  The Party giving notice of arbitration shall include the name of its proposed arbitrator as part of the notice.  The other Party(ies) involved in the dispute shall, within fifteen (15) days after the receipt of such notice, provide notice either agreeing to such arbitrator or in the alternative, including the name of its proposed arbitrator.  If the Party(ies) upon whom notice of arbitration is served fails to select an arbitrator and advise the other Party(ies) of its selection within fifteen (15) days after receipt of such notice, the arbitrator selected by the Party delivering such initial notice shall serve as the arbitrator.  If any other Party has selected a different arbitrator and if they cannot agree on an arbitrator within fifteen (15) days thereafter, then the arbitrator shall be selected in accordance with the Rules.  Unless otherwise agreed to by the Parties, the arbitration shall not be scheduled for a date that is greater than ninety (90) days from the date the arbitration panel is selected.  
(c)	Third Parties.  If a dispute arises between the Parties hereto which is subject to the arbitration provisions hereunder and there exists or later arises a dispute between the Parties hereto and any other party arising out of or related to the same transaction or series of transactions ("Third-Party Controversy"), any Party hereto involved in the dispute shall be entitled to require that such Third-Party Controversy be consolidated with such arbitration proceedings hereunder; provided, however, that such third party must either (i) be a party to an agreement with one or more of the Parties hereto which provides for arbitration of disputes thereunder in accordance with rules and procedures substantially the same in all material respects as provided for herein; or (ii) consent to arbitration as provided for hereunder.
(d)	Limitations.  Notice of the demand for arbitration shall be filed in writing with the other Parties to this Agreement.  The demand for arbitration shall be made within a reasonable time after the claim, dispute or other matter in question has arisen, and in no event shall it be made after the date when institution of legal or equitable proceedings based on such claim, dispute or other matter in question would be barred by the applicable statutes of limitations.
(e)	Venue.  All arbitration proceedings shall be held in Los Angeles, California.
(f)	Attorneys' Fees.  In the event of any litigation or arbitration for the interpretation or enforcement of this Agreement, or for damages for a default, or that in any other manner relates to this Agreement, the prevailing Party(ies) shall be entitled to reasonable attorneys' fees, arbitration, court and other costs from the non-prevailing Party(ies), including costs and fees on appeal and in any bankruptcy or insolvency proceeding.
(g)	Equitable Relief.  Notwithstanding anything in this Agreement to the contrary, the Parties each may seek injunctive and/or other equitable relief without first resorting to any of the dispute resolution procedures set forth in this Section 2.16, and each Party acknowledges and agrees that money damages may not be entirely suitable to protect the respective interests of the Parties under this Agreement and that each Party may seek such injunctive and/or other equitable relief if the circumstances so require (in such Party's reasonable judgment).
2.17	Effect of Force Majeure.  If, because of an event of Force Majeure, any Party is unable to carry out its obligations under this Agreement, and if such Party promptly gives the other Parties written notice of such Force Majeure in detail, specifying the nature, extent and expected duration of such Force Majeure, the obligations and liabilities of the Party giving such notice and the corresponding obligations and liabilities of any other Party shall be temporarily suspended to the extent made necessary by and during the continuance of such Force Majeure; provided, that (a) a Party may not claim Force Majeure with respect to any payment obligations under this Agreement or the LGIA, and (b) in no event will the suspension of a Party's obligations and liabilities hereunder be permitted to cause a "Default" under the LGIA.  Any disabling effects of such event of Force Majeure shall be eliminated as soon as and to the extent reasonably practicable by the Party claiming Force Majeure. 
2.18	Notice of Default.  Each Co-Tenant and the Manager shall promptly provide written notice to the other Parties upon receiving notice of, or otherwise discovering, any default or potential default under this Agreement or the LGIA.  
2.19	Tax Classification; No Partnership.  The Co-Tenants hereby declare that their relationship is and will be that of tenants-in-common, and that each Co-Tenant will have an undivided interest in and to the Interconnection Rights and the LGIA.  The Co-Tenants hold the interests for investment purposes only, and not for the active conduct of a business.  It is intended and agreed by the Co-Tenants that tenancy-in-common relationship governed by this Agreement is not a partnership within the meaning of Section 761 of the Internal Revenue Code,  and the Treasury Regulations promulgated thereunder.  The Co-Tenants shall take any and all necessary actions to file their respective U.S. federal, state and local income tax returns consistent with the foregoing.  
ARTICLE III
MANAGER
3.1	Appointment of Manager; Manager Services.  Each Co-Tenant hereby appoints the Manager, who shall have no interest in the Interconnection Customer by virtue of its designation as Manager, to act as its agent and representative for all purposes under the LGIA, and the Manager shall have the power to exercise and shall exercise any and all of the rights of the Interconnection Customer under the LGIA and shall coordinate compliance with the LGIA by the Co-Tenants; provided that the Manager may not terminate, amend (except as provided in Section 5.8) or Transfer the LGIA or waive any material rights of the Co-Tenants under the LGIA, without the prior, unanimous written consent of the Co-Tenants.  In addition, each Co-Tenant specifically authorizes the Manager to negotiate and execute on its behalf and on behalf of the Interconnection Customer, and agrees to be bound by the terms of, (i) a CAISO meter service agreement, (ii) a CAISO participating generator agreement and (iii) a SCE retail electricity service agreement.  
3.2	Communications.  The Manager shall be the single point of contact between the Co-Tenants and the CAISO and SCE, and shall be responsible for all administrative obligations of the Interconnection Customer under the LGIA, including billing, issuing payments, providing notices and communicating with, and receiving instructions from, the CAISO and SCE with respect to the Phases and the LGIA.  The Manager shall, promptly upon receipt, provide to each Co-Tenant a copy of any notices or other material communications received by it related to  the LGIA or this Co-Tenancy Agreement. The Manager shall also provide to each Co-Tenant a copy of any notices or other material communications it delivers to the CAISO or SCE related to the LGIA or this Co-Tenancy Agreement.
3.3	Indemnification of Manager.  Each Co-Tenant shall, pro rata in accordance with its Sharing Ratio, defend, indemnify and hold harmless the Manager and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in good faith in connection with its management of the LGIA (other than acts or omissions constituting a material breach by the Manager of this Agreement or the fraud, willful misconduct, or gross negligence of the Manager), including reasonable attorneys' fees incurred by it in connection with the defense of any action based on any such alleged act or omission.  The Manager shall specifically be indemnified by the Co-Tenants and held harmless from any and all actions taken by the Manager in its reasonable judgment, in good faith, or in reasonable reliance on advice of the Manager's attorneys or accountants, and shall be reimbursed by the Co-Tenants for costs related to claims or litigation which arise in connection with the LGIA or this Agreement (other than claims or litigation resulting from a material breach by the Manager of this Agreement or the fraud, willful misconduct, or gross negligence of the Manager).
3.4	Books and Records; Reporting Requirements.  
(a)	Maintenance or Records.  The Manager shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Tenant or its authorized representative at the cost and expense of such Co-Tenant and at reasonable times during regular business hours, upon reasonable notice to the Manager.
(b)	Provision of Records.  The Manager shall, from time to time or at the reasonable request of the Co-Tenants or their Financing Parties, provide reports to the Co-Tenants and their Financing Parties sufficient to keep the Co-Tenants and their Financing Parties reasonably apprised as to significant matters concerning the LGIA and the LGIA Operating Expenses.
3.5	Replacement of Manager.  The Co-Tenants agree that the Manager shall be the same entity as the Manager under the Shared Facilities Agreement to be entered into subsequent to the Effective Date between the Co-Tenants and their permitted assigns, as may be amended from time to time (the "SFA"), and the Manager hereunder shall therefore be replaced as necessary to this end.
3.6	Management Fee.  In consideration of the services provided by Manager hereunder, the Manager shall be paid an annual fee of Five Thousand Dollars ($5000) (the "Management Fee"), payable monthly, in advance, in equal monthly installments, beginning on the date hereof and ending on the termination of this Agreement or the replacement of the Manager.  The Management Fee shall be allocated to the Co-Tenants as an LGIA Operating Expense.  
3.7	Discrimination.  Notwithstanding any other provision herein to the contrary (other than Section 2.4), the Manager shall not Discriminate in providing services or otherwise performing its obligations hereunder among the Co-Tenants.  As used herein, "Discriminate" means a failure by the Manager to provide services hereunder in a manner that treats alike each of the Co-Tenants under substantially similar conditions, and for which dissimilar treatment is not otherwise justified as necessary in accordance with prudent operating and utility industry practices.
3.8	Performance.  The Manager shall perform its obligations under this Agreement (a) in accordance with the terms of the LGIA, (b) in accordance with good operating and utility industry practices, (c) in compliance with all applicable Laws, including but not limited to the FPA, and all rules, regulations, and orders issued by the FERC pursuant to the FPA, (d) in compliance with the CAISO Tariff, including the rules, protocols, procedures and standards attached thereto, as the same may be amended from time to time and approved by FERC, (e) in compliance with the rules, protocols, procedures and standards of NERC, and (f) without causing a material adverse effect on the LGIA, any Party or any of the other Co-Tenants' respective Phases.
3.9	Limitation of Liability.  Except in the case of willful misconduct or gross negligence or indemnification obligations under Section 2.9, in no circumstances shall the aggregate liability of the Manager under this Agreement in any calendar year (whether based on negligence, breach of contract or otherwise) arising out of or in connection with the performance of the obligations of the Manager under this Agreement exceed an amount equal to the Management Fee for that calendar year.
ARTICLE IV
TRANSFERABILITY
4.1	General Restriction.  No Co-Tenant may Transfer its interest in this Agreement to any transferee, unless (i) such Transfer is made together with a Transfer of its applicable Phase Controlled Assets to such transferee, (ii) such transferee is assigned and assumes the Transferring Co-Tenant's entire interest in both this Agreement and the LGIA, subject to the terms thereof, pursuant to an agreement reasonably satisfactory to the other Co-Tenants, (iii) such Transfer is in compliance with the terms of the LGIA, and (iv) such Transfer does not have a material adverse effect on the performance of obligations under the LGIA. 
4.2	Co-Tenant's Right to Encumber.  Notwithstanding anything in Section 4.1 to the contrary, each Co-Tenant may, at any time and from time to time during the term of this Agreement, encumber, mortgage or hypothecate to any Financing Party by deed of trust or mortgage or other security instrument, (the "Mortgage") all or part of such Co-Tenant's interest under this Agreement and the other documents entered into in connection with this Agreement, including, without limitation, the LGIA, without the consent of the other Co-Tenants.  
4.3	Certain Rights of Financing Party.  Should any Co-Tenant incur any encumbrance in accordance with Section 4.2 of this Agreement, and should the Parties receive notice thereof pursuant to Section 5.1 hereof, the Parties hereby expressly stipulate and agree between themselves and on behalf of, and for the benefit of, the Financing Party as follows:
(a)	Modification of Agreement.  They will not modify this Agreement or allow this Agreement to be modified in any way nor cancel this Agreement without the written consent of the Financing Party, which consent may not be unreasonably withheld or delayed.
(b)	Performance by Financing Party.  The Financing Party shall have the right to do any act or thing required of the encumbering Co-Tenant under this Agreement, and any such act or thing performed by the Financing Party shall be as effective to prevent a default under this Agreement and/or a forfeiture of any of such Co-Tenant's rights under this Agreement as if done by the Co-Tenant itself, provided that the Financing Party shall have first given the Co-Tenant such notice and allowed the Co-Tenant to perform or attempt to perform such act or thing for such period of time as may be specified in any documents or instruments executed by the Co-Tenant for the benefit of the Financing Party.  The Financing Party shall have such foreclosure and sale rights and rights to perform or cause to be performed the covenants and agreements of the encumbering Co-Tenant under this Agreement as may be specified in any documents or instruments executed by the Co-Tenant for the benefit of the Financing Party.  Notwithstanding anything contained herein to the contrary, in no event shall a Financing Party be liable for any obligations or liabilities hereunder by virtue of any action or inaction, or otherwise except and to the extent such Financing Party expressly agrees in writing to assume such obligations and liabilities.
(c)	Notice to Financing Party.  If Manager issues or receives any notices regarding potential or actual defaults as described in Section 2.18 herein, the Manager, on behalf of the Co-Tenants, shall promptly deliver a copy of such notice to all Financing Parties of which it has received notice.
(d)	Consents to Assignment.  Each Co-Tenant and the Manager hereby agrees that it shall, no later than five (5) business days after a request by any other Co-Tenant (the "Requesting Co-Tenant") (or its Financing Party), execute such consents or estoppel certificates as are reasonably requested by the Requesting Co-Tenant or its Financing Party.
4.4	FERC Approval.  Notwithstanding anything in Section 4.1 or 4.2 to the contrary, no Transfer of any Co-Tenant's interests in this Agreement shall be effective unless and until the Co-Tenant or the Manager has obtained any necessary prior approvals from the FERC to effectuate any changes to this Agreement to reflect such Transfer and the change in the parties to this Agreement.
4.5	Number of Co-Tenants.  Except as otherwise expressly provided in the LGIA, there shall be no more than five (5) Co-Tenants comprising the Interconnection Customer and neither Interconnection Customer nor any Co-Tenant may further subdivide in any manner or form its interest in this LGIA.  The Parties acknowledge that the administrative burden to the CAISO to administer the LGIA would be excessive if the a Co-Tenant were to further subdivide its interests in the LGIA in violation of this Article and any such action would be considered a Breach and, if not cured pursuant to Article 17 of the LGIA, a Default under Article 17 of the LGIA, entitling the CAISO to terminate this LGIA in accordance with such Article 17.
ARTICLE V
MISCELLANEOUS PROVISIONS
5.1	Notices.  Any notice, demand, or communication required or permitted to be given by any provision of this Agreement shall be deemed to have been sufficiently given or served for all purposes if delivered personally or by telecopy to the Party or to an executive officer of the Party to whom the same is directed or, if sent by registered or certified mail, postage and charges prepaid, addressed to the Party's address, as appropriate, which is set forth in this Agreement or to such other address as a Party shall advise the other Parties from time to time in writing.
5.2	Choice of Law.  This Agreement shall in all respects be governed by and construed and enforced in accordance with the internal laws of the State of California, without regard to its choice of law provisions.
5.3	Entire Agreement.  This Agreement sets forth the complete understanding of the Parties hereto with respect to the subject matter hereof and supersedes all prior discussions, agreements, and undertakings relating to the subject matter hereof.
5.4	Interpretation.  All personal pronouns used in this Agreement, whether used in the masculine, feminine or neuter gender, shall include all other genders; the singular shall include the plural; and the plural shall include the singular.  Titles of articles and sections in this Agreement are for convenience only and neither limit nor amplify the provisions of this Agreement.  All references in this Agreement to articles, sections, subsections or paragraphs shall refer to articles, sections, subsections and paragraphs of this Agreement, unless specific reference is made to the articles, sections or other subdivisions of another document or instrument.  The word "including" shall mean "including without limitation".  This Agreement shall not be interpreted in favor of any Party by virtue of said Party not having prepared this Agreement.  The unenforceability, invalidity, or illegality of any provision of this Agreement shall not affect or impair the continuing enforceability or validity of any other part, all of which shall survive and be valid and enforceable.
5.5	Waiver.  No consent or waiver, express or implied by any Party hereto, to or of any breach or default by the other in the performance by the other of its obligations hereunder shall be deemed or construed to be a consent or waiver to or of any other breach or default in the performance by such other Party of the same or any other obligations of such Party hereunder.  Failure on the part of any Party hereto to complain of any act or failure to act of any other Party, or to declare such other Party in default, irrespective of how long such failure continues, shall not constitute a waiver of such Party of its rights hereunder.
5.6	Third Party Beneficiaries.  This Agreement and the terms and provisions hereof are solely and exclusively for the benefit of the Parties hereto.  No third party may rely on any of the provisions herein contained or lay claim to any of the rights of the Parties hereto (other than any Financing Party).
5.7	Counterparts; Facsimile Signatures.  This Agreement may be executed in counterparts each of which when so executed and delivered shall be deemed to be an original and all of which together shall constitute one instrument.  Signatures delivered by facsimile, email or other electronic means shall be binding upon the Parties hereto with the same force and effect as original signatures.
5.8	Amendments; Term.  Except as specifically provided in this Agreement, this Agreement shall not be amended except by the written agreement of the Manager and all the Parties.  In addition, no Party may amend the LGIA except by the written consent of all the Co-Tenants; provided that the Manager may amend the LGIA with respect to non-material, administrative matters, without the consent of the Co-Tenants but with prior written notice, together with a copy of the proposed amendment.  The Manager shall provide to each of the Co-Tenants a copy of the final amendment to the LGIA permitted pursuant to this Section 5.8.  This Agreement shall be in effect for so long as the LGIA is in effect.
5.9	Further Assurances.  Upon the reasonable request of any Party at any time after the Effective Date, the other Parties shall forthwith execute and deliver such further instruments of assignment, transfer, conveyance, endorsement, direction or authorization and other documents as the requesting Party or its or their counsel may reasonably request in order to effectuate the purposes of this Agreement.  Each Party agrees to cooperate fully with the other Parties in assisting it to comply with the terms of this Agreement, including, but not limited to, assistance in obtaining consents, waivers, authorizations, waivers, authorizations, orders and/or approvals of third parties.  
5.10	Replacement.  This Agreement replaces and supersedes the Original Agreement.
      Nothing contained in this Agreement will be deemed to constitute the Co-Tenants as partners or joint venturers.  
5.11	WAIVER OF RIGHT TO PARTITION.  THE CO-TENANTS EACH ACKNOWLEDGE AND AGREE THAT IT WOULD BE PREJUDICIAL TO THE INTERESTS OF THE CO-TENANTS UNDER THIS AGREEMENT IF ANY CO-TENANT WERE TO SEEK PARTITION OR ANY OTHER TYPE OF DIVISION OF THE LGIA, OR FILE AN ACTION FOR SUCH PARTITION OR DIVISION, EXCEPT AS OTHERWISE PROVIDED IN THIS AGREEMENT AND THE LGIA.
         THEREFORE, IN CONSIDERATION OF SUCH FACT AND FOR OTHER GOOD AND VALUABLE CONSIDERATION, EACH OF THE CO-TENANTS HEREBY WAIVES AND RELINQUISHES ANY AND ALL RIGHTS THAT IT MAY HAVE TO SEEK A PARTITION OR ANY OTHER TYPE OF DIVISION OF THE LGIA, EXCEPT AS OTHERWISE PROVIDED IN THIS AGREEMENT AND THE LGIA.
[Signature Page Follows]

         IN WITNESS WHEREOF, the Parties hereto have executed this Agreement as of the date first written above.
Rising Tree Wind Farm LLC
Rising Tree Wind Farm II LLC




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 








Rising Tree Wind Farm III LLC
Rising Tree Wind Farm LLC, as Manager




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 









EXHIBIT A

Maximum Nameplate Capacity and Initial Co-Tenancy Percentage Interest
Phase
Maximum Nameplate
Capacity
Initial Co-Tenancy Percentage Interest (rounded)
Rising Tree Wind Farm LLC Phase
79.2 MW
40%
Rising Tree Wind Farm II Phase
19.8 MW
10%
Rising Tree Wind Farm III LLC Phase
99 MW
50%
         
         
         
FIRST AMENDMENT TO
AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT
      THIS FIRST AMENDMENT TO AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT ("Amendment") is made and entered into this 29th day of June, 2015, by and among Rising Tree Wind Farm LLC ("RST"), Rising Tree Wind Farm II LLC ("RST II"), and Rising Tree Wind Farm III LLC ("RST III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Tenant" and collectively as "Co-Tenants"; and RST (the "Manager"); each also a "Party" and collectively, the "Parties").
RECITALS
      A.	The Co-Tenants, as tenant-in-common, and Manager, as agent for the Co-Tenants, have entered into that certain First Amended Large Generator Interconnection Agreement with Southern California Edison Company ("SCE") and the California Independent System Operator Corporation (the "CAISO"), dated as of September 5, 2014, together with all amendments, agreements, schedules, appendices, exhibits and other documents ancillary thereto (including the Meter Service Agreement and the Participating Generator Agreement) (all as may be amended or supplemented, the "LGIA").
      B.	The Co-Tenants also have previously entered into that certain Amended and Restated Large Generator Interconnection Agreement Co-Tenancy Agreement, dated October 24, 2014 (the "Agreement") in order to set forth the rights and obligations of each of the Parties under the LGIA.  
      C.	The Co-Tenants now wish to amend the Agreement in certain respects to make certain changes in and corrections to the Agreement.
      NOW, THEREFORE, for good and valuable consideration, the receipt of which is hereby acknowledged, the Co-Tenants agree as follows:
      1.	Definitions.  Except as otherwise defined herein, capitalized terms used in this Amendment will have the meanings defined in the Agreement, and the rules of interpretation in the Agreement shall apply to this Amendment.
      1.	Events of Default; Default. Section 2.12 is amend and restated in its entirety as follows:
	2.12 Events of Default; Default. 	The following shall constitute "Events of Default": a Party fails to perform its obligations under this Agreement or the LGIA in any material respect, and such Party fails to cure such default (including any "Default under the LGIA) within (i) ten (10) days after receipt of written notice pursuant to Section 2.18 of a payment default under this Agreement or the LGIA, or (ii) twenty (20) days after receipt of written notice pursuant to Section 2.18 of any non-payment default under this Agreement or the LGIA, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12 if it commences to cure such default within twenty (20) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed eighty-five (85) days, including the initial cure period.
      
      2.	Disconnection. Section 2.14 is amended and restated in its entirety as follows:
      2.14 Disconnection.
      (a)	Upon and during the continuation of any Co-Tenant's Event of Default, the Manager may disconnect the defaulting Co-Tenant's Phase from the Windhub Substation (i) after obtaining written approval to do so from those Active Co-Tenants then not in default and having a combined Sharing Ratio in excess of fifty percent (50%) of the combined Sharing Ratio of all Active Co-Tenants then not in default, or (ii) without approval from Active Co-Tenants but only to the extent necessary to prevent or cure a "Default" under the LGIA; provided that for the purposes of this Section 2.14, in no event shall any cure period under Section 2.12 extend beyond any applicable cure period under the LGIA.
	(b)	The Manager may also disconnect any Phase, in its reasonable discretion and in accordance with the standard of care set forth in Section 3.8, in order to prevent damage to the Co-Tenants' Phases, the Interconnection Facilities or the property of SCE or as otherwise needed to prevent or mitigate technical issues affecting the Phases; the Manager shall immediately notify the Co-Tenants of any such disconnection.
3.	Dispute Resolution. Section 2.16 is amended and restated in its entirety as follows:
      2.16 Dispute Resolution.	Disputes among the Co-Tenants shall be resolved in accordance with the procedures set forth in Exhibit B. 
4.	Replacement of Manager. Section 3.5 is amended and restated in its entirety as follows:
	3.5 Replacement of Manager. The Co-Tenants agree that the Manager shall be the same entity as the Operator (as defined under the SFA) under the Rising Tree Shared Facilities Agreement, dated as of December 3, 2014, by and among the Co-Tenants, as amended by the First Amendment to Rising Tree Shared Facilities Agreement, dated as of June 29, 2015, as may be further amended, restated or otherwise modified  from time to time (the "SFA"), and the Manager hereunder shall therefore be replaced as necessary to this end.
      
      5.	Discrimination. Section 3.7 is hereby amended and restated in its entirety as follows:
	3.7 Discrimination.  Notwithstanding any other provision herein to the contrary, but subject to the Manager's rights under Section 2.4, the Manager shall not Discriminate in providing services or otherwise performing its obligations hereunder among the Co-Tenants. As used herein, "Discriminate" means a failure by the Manager to provide services hereunder in a manner that treats alike each of the Co-Tenants under substantially similar conditions, and for which dissimilar treatment is not otherwise justified as necessary in accordance with prudent operating and utility industry practices.
      6.	General Restriction.	Section 4.1 is hereby amended by adding the following proviso to the end thereof immediately before the period:
      , provided, that, notwithstanding anything contained to the contrary in this  Section 4.1, Section 4.3 or otherwise in this Agreement, the Manager shall not be replaced except as set forth in Section 3.5.
      7.	A new Section 4.6 is hereby added as follows:
      4.6  Co-Tenancy.  The Parties agree that, for the purposes of the LGIA, (i) the entire 198 MW comprising the Project shall be considered to be a single Large Generating Facility (as defined in the LGIA), (ii) no Co-Tenant may have any expectation that the CAISO will treat any portion of the Project as a stand-alone Large Generating Facility or differently from any other portion of the Large Generating Facility, (iii) Co-Tenants shall act as a single entity in undertaking the obligations of Interconnection Customer under the LGIA, (iv) CAISO and SCE shall treat all Co-Tenants comprising the Interconnection Customer as a single entity under the LGIA and bear no obligation or responsibility to any individual Co-Tenant and (v) performance of the Interconnection Customer's obligations under the LGIA shall not be excused by reason of any other Co-Tenant's failure to agree with respect to any obligation of the Interconnection Customer hereunder or thereunder.
      8. 	Notices. Section 5.1 is amended by adding the following sentence to the end of thereof:
      	Any notice, demand or communication delivered to RST III under this Agreement shall be delivered with a copy to:
JPM Capital Corporation
10 South Dearborn, 12th Floor
Mail Code ILI 0502
Chicago, Illinois 60603-2003
Attention:  President
Telephone:  (312) 732-3416
            Email:  jpmcc.energy@jpmorgan.com 
Bankers Commercial Corporation
445 South Figueroa Street, G14-200
Los Angeles, CA 90071
Attn:  2015 Vento XIII Account Officer
      9.	Amendments to Exhibits. The Agreement is hereby amended by attaching Exhibit 1 to this Amendment as Exhibit B (Dispute Resolution provisions) to the Agreement 
      10.	No Other Amendment.  Except as expressly set forth in this Amendment, the Agreement is unmodified and continues in full force and effect.  From and after the date hereof, references to the Agreement will be understood to refer to the Agreement as amended by this Amendment.
      11.	Governing Law. This Amendment shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      12.	Counterparts. This Amendment may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument. It will not be necessary in making proof of this Amendment to produce or account for more than one counterpart.
[The next page is the signature page.]
  To evidence its acceptance of this Amendment, and intending to be legally bound, each Co-Tenant has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:
         
         
EXHIBIT 1
EHIBIT B

DISPUTE RESOLUTION PROCEDURES


         1.	Consideration by the Authorized Representatives.
  All questions concerning interpretation of this Agreement, the acceptable fulfillment of the Co-Owners' respective obligations hereunder, as well as all other questions regarding this Agreement in each case that cannot readily be resolved by the Co-Owners shall be resolved in accordance with this Exhibit E.  In the event that the authorized representatives of the Co-Owners cannot reach agreement on any question arising under this Agreement, such dispute shall be referred to senior officers of the Co-Owners pursuant to Paragraph 2 below.
         2.	Negotiations by Senior Officers.
  Any disputes arising pursuant to this Agreement that cannot be resolved by the authorized representatives of the Co-Owners within fourteen (14) days after receipt of notice of such dispute (specifically referencing this Exhibit B) shall be referred to the vice president or other senior officer of each of the Co-Owners having executive responsibility for such Co-Owner's Facility.  If such senior officers, negotiating in good faith, fail to reach an agreement within a reasonable period of time, not exceeding twenty (20) days after such referral, then any Co-Owner to such dispute may institute proceedings as set forth in Paragraph 3 below.
         3.	Formal Dispute Resolution.
  (a)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners, the Co-Owners shall engage in non-binding mediation of such dispute.  Such mediation shall be conducted (i) in Houston, Texas, (ii) within thirty (30) days of a Co-Owner instituting dispute resolution under this Paragraph 3, (iii) by a single, impartial mediator who is selected by the mutual agreement of the Co-Owners, and (iv) in accordance with such procedures as may be adopted by such mediator.  Such mediation shall not, without the express agreement of the Co-Owners at the time, extend for a period of more than two (2) days.  Each Co-Owner may be represented by persons of such Co-Owner's choice during such mediation.  Nothing herein shall be deemed to grant any mediator the authority to impose a resolution of any dispute being mediated.  Any information introduced, proposals made or positions taken in the mediation shall be deemed to be confidential and for settlement purposes only and may not be introduced by the other Co-Owner in any subsequent litigation of the matters subject to mediation.  The Co-Owners shall share the costs of the mediator, including any fees and meeting room rentals.
  (b)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners and the Co-Owners have not otherwise resolved such dispute through mediation pursuant to Paragraph 3(a), a Co-Owner may submit the matter at issue for resolution in an action brought before the courts of the State of California in Kern County or in the United States District Court for the Eastern District of California, which courts shall have non-exclusive jurisdiction with respect to such matters.  FOR PURPOSES OF THE FOREGOING, BY EXECUTION OF THIS AGREEMENT, EACH CO-OWNER HEREBY IRREVOCABLY ACCEPTS FOR ITSELF AND IN RESPECT OF ITS PROPERTY, GENERALLY AND UNCONDITIONALLY, THE NON-EXCLUSIVE JURISDICTION OF SUCH COURTS AND EACH CO-OWNER HEREBY CONSENTS TO THE SERVICE OF PROCESS OUT OF ANY SUCH ACTION OR PROCEEDING BY THE MAILING OF COPIES THEREOF BY REGISTERED OR CERTIFIED MAIL, POSTAGE PREPAID, TO SUCH PERSON IN ACCORDANCE WITH THE NOTICE PROVISIONS OF THIS AGREEMENT.
  4.	Specific Performance.  Notwithstanding anything to the contrary contained in this Agreement, if, due to a material breach or threatened material breach or default or threatened default, a Co-Owner is suffering or will suffer irreparable harm for which monetary damages are inadequate, such Co-Owner may petition a court of competent jurisdiction for injunctive relief, specific performance or other equitable relief.
  5.	Continuing Obligations.  Notwithstanding the foregoing, all terms, conditions, and obligations of the Co-Owners contained in this Agreement shall continue and remain in effect during the course of any dispute resolution, or other proceeding pursuant hereto, and each of the Co-Owners shall proceed with performance of its obligations pending the resolution of the question, dispute or claim.
  6.	Matters Not Subject to Dispute Resolution.  Notwithstanding anything to the contrary in this Agreement, no dispute that concerns a matter, decision or other issue that is to be decided by a Co-Owner acting in its sole discretion shall be subject to the dispute resolution provisions of this Exhibit B.



 

1


EXECUTION VERSION 




TABLE OF CONTENTS
(continued)
Page


-ii-



TABLE OF CONTENTS

Page


-i-





	17

 




3


















EXECUTION VERSION</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>554</filing_id>
      <filing_title>Amended Co-Tenancy Agmnt</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-08-29</current_effective_date>
      <ferc_order_date>2015-08-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>