<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001184</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>105</tariff_id>
    <tariff_title>WestConnect Point-to-Point Regional Transmission Tariff</tariff_title>
    <tariff_export_date>2025-09-16T19:58Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>WestConnect Point-to-Point Regional Transmission Tariff</record_title>
      <record_content_desc>Volume No. 5</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name>WestConnect Point-to-Point Regional Transmission Tariff</record_narrative_name>
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-07-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>TUCSON ELECTRIC POWER COMPANY

FERC Electric Tariff, Volume No. 5
WestConnect Point-To-Point
Regional Transmission Tariff

WESTCONNECT
POINT-TO-POINT 
REGIONAL TRANSMISSION SERVICE 
TARIFF

Article I. 
Preamble
            Tucson Electric Power Company (the "Transmission Provider"), in coordination with the other RTPs (as defined below) will provide Regional Transmission Service pursuant to the applicable terms and conditions of this WestConnect Point-To-Point Regional Transmission Service Tariff (the "Regional Tariff") commencing on the Effective Date (as defined below) and ending on the earlier of the date when this Regional Tariff is terminated or the Transmission Provider withdraws this Regional Tariff in accordance with its terms.  

Article II. 
Definitions
In addition to terms defined elsewhere in this Regional Tariff and unless the context otherwise requires, capitalized and defined terms used herein shall have the meanings given to them below:

		"Administrative Charge" has the meaning set forth in Section 7.1(f).

		"Balancing Authority" means the responsible entity that integrates resource plans ahead of time, maintains load-interchange-generation balance within a Balancing Authority Area, and supports interconnection frequency in real time.  The Balancing Authority shall be either the Transmission Provider or a designee of the Transmission Provider.

            "Balancing Authority Area" means the collection of generation, transmission, and loads within the metered boundaries of the Balancing Authority.  The Balancing Authority maintains load-resource balance within this area.

		"Billing Agent" means an independent third party retained by the RTPs to act as billing agent for Regional Transactions.
            
            "Commission" means the Federal Energy Regulatory Commission or any successor thereto.

            "Curtail" or "Curtailment" means a reduction in Regional Transmission Service in response to a transfer capability shortage as a result of emergency or system reliability conditions.

            "Delivering Party" means the entity supplying capacity and energy at Regional Point(s) of Receipt to be transmitted by the RTPs pursuant to this Regional Tariff.
            
            "Effective Date" means [Jurisdictional RTPs use the following language:  the date on which the Commission makes this Regional Tariff effective.]  [Non-jurisdictional RTPs use the following language:  the date on which the Transmission  Provider makes this Tariff effective pursuant to a posting on its OASIS.]  

            "Eligible Customer" is an entity that has met the conditions required of Transmission Customers to take point-to-point transmission service under the respective OATT of each RTP providing service for a particular Regional Transaction.  

            "Good Utility Practice" shall mean any of the practices, methods and acts engaged in or approved by a significant portion of the electric utility industry operating within the western reliability region of the North American Electric Reliability Corporation during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be acceptable practices, methods, or acts generally accepted in the region.

		"Interruption" or "Interrupt" means a reduction in Regional Transmission Service due to economic reasons.

		"Jurisdictional RTP" means an RTP that is subject to the jurisdiction of the Commission under Sections 205 and 206 of the Federal Power Act.

            "Native Load Customers" means the wholesale and retail customers of an RTP on whose behalf the RTP, by statute, franchise, regulatory requirement, or contract, has undertaken an obligation to construct and operate the RTP's Transmission System to meet the reliable electric needs of such customers.

		"Network Customers" means customers receiving transmission service pursuant to the terms of an RTP's Network Integration Transmission Service Agreement under Part III of the RTP's OATT.
            
            "Non-Firm Transmission Service" means hourly non-firm point-to-point transmission service provided by any RTP pursuant to its respective OATT.

            "Non-Jurisdictional RTP" means an RTP that is not subject to the jurisdiction of the Commission under Sections 205 and 206 of the Federal Power Act.
            
"OATT" means, in respect of a particular RTP, the open access transmission tariff of such RTP on file with the Commission or, if such RTP is not required to file such tariff with the Commission, the open access transmission tariff of such RTP posted on its OASIS. 
	
	"Participation Agreement" means that certain WestConnect Amended and Restated Point-to-Point Regional Transmission Service Participation Agreement effective as of the Effective Date (as defined therein) by and among the RTPs.

            "Receiving Party" means the entity receiving capacity and energy made available at, and transmitted by RTPs to, Regional Point(s) of Delivery pursuant to this Regional Tariff.

            "Regional Charge" has the meaning set forth in Section 7.1(a).

            "Regional Point(s) of Delivery" means the point(s) of interconnection on the Regional Transmission System where capacity and energy from the Delivering Party will be made available and delivered to the Receiving Party by the RTPs pursuant to this Regional Tariff.

            "Regional Point(s) of Receipt" means the point(s) of interconnection on the Regional Transmission System where capacity and energy from the Delivering Party will be received by the RTPs for transmission pursuant to this Regional Tariff.

            "Regional Rate" means the highest of the ceiling rates for hourly non-firm transmission service posted on the respective OASIS of the RTPs who would provide Regional Transmission Service, for service under their OATTs at the time of the Regional Transaction.  The Regional Rate is not a discounted rate subject to Schedule 8 of the Commission's pro forma open access transmission tariff and shall not be subject to discount.
            
            "Regional Tariff" means this WestConnect Point-To-Point Regional Transmission Service Tariff as set forth in the preamble.
            
            "Regional Transaction" means a single transaction in which Regional Transmission Service is provided to an Eligible Customer, pursuant to the Regional Tariff.

            "Regional Transmission Service" means hourly non-firm point-to-point transmission service across the Regional Transmission System provided by the Transmission Provider and other RTPs pursuant to this Regional Tariff. 

            "Regional Transmission System" means the aggregate facilities owned, controlled or operated by the RTPs that are used to provide Regional Transmission Service pursuant to this Regional Tariff.
            
            "RTP" means any entity that is a Party to the Participation Agreement, and that is providing Regional Transmission Service pursuant to the Regional Tariff as adopted by such entity.

		"Service Agreement" has the meaning set forth in Section 3.3.

            "Transmission Customer" means an Eligible Customer taking Regional Transmission Service under this Regional Tariff.

            "Transmission System" means, in respect of any RTP, the facilities owned by such RTP that are used to provide Regional Transmission Service pursuant to this Regional Tariff.
            
            "wesTTrans" means the OASIS site of the RTPs, or its successor site.

Article III. 
Nature of Regional Transmission Service
      3.1 Hourly Service
	Regional Transmission Service shall be provided on an hourly basis and can be reserved for up to twenty-four (24) consecutive hours.  Notwithstanding anything to the contrary contained in this Regional Tariff, in no event shall Regional Transmission Service be available on any RTP's Transmission System if the term would extend beyond the date on which that RTP would no longer be an RTP providing Regional Transmission Service pursuant to this Regional Tariff.

      3.2 Reservation Priority

	Regional Transmission Service shall be available from transfer capability in excess of that needed for reliable service to Native Load Customers, Network Customers and other transmission customers taking long-term and short-term firm point-to-point transmission service, or daily, weekly and monthly non-firm transmission service, previously-reserved hourly non-firm transmission service under an RTP's OATT, or service reserved pursuant to a grandfathered agreement, and for margins or reserves required or permitted under applicable reliability standards.  Subject to such availability, Regional Transmission Service shall be available on a first-come, first-served basis (i.e., in the chronological sequence in which each Eligible Customer has reserved such service). 

      3.3 Service Agreements

	Eligible Customers must execute an umbrella service agreement in the form attached hereto as Annex A, or must have executed an umbrella service agreement in the form attached as Annex A to any predecessor to this Regional Tariff (the "Service Agreement"), with all of the RTPs or each RTP whose Transmission System will be used to provide Regional Transmission Service for such Eligible Customer at any time; provided that the umbrella service agreements previously executed by Eligible Customers with RTPs shall be deemed to refer to this Regional Tariff and shall continue in effect and constitute Service Agreements for all purposes of this Regional Tariff until terminated in accordance with their terms.  Executed Service Agreements that contain the information required under this Regional Tariff for service provided by Jurisdictional RTPs shall be filed with the Commission if required by Commission regulations.

      3.4 Curtailment or Interruption of Regional Transmission Service

            (a)  If a Curtailment on the Regional Transmission System, or a portion thereof, is required, then Curtailments will be made on a non-discriminatory basis to the Regional Transaction(s) that effectively relieve the constraint.  When the RTPs determine that an electrical emergency exists on the Regional Transmission System and implement emergency procedures to Curtail Regional Transmission Service, the Transmission Customer shall make the required reductions upon request of the RTPs.  The RTPs reserve the right to Curtail, in whole or in part, Regional Transmission Service provided under this Regional Tariff for reliability reasons when an emergency or other unforeseen condition threatens to impair or degrade the reliability of the Regional Transmission System.  

            (b)	  The RTPs reserve the right to Interrupt, in whole or in part, Regional Transmission Service provided under this Regional Tariff for economic or other reasons in accordance with the product type priority rules established in the RTPs' OATTs.  The RTPs also will discontinue or reduce service to the Transmission Customer to the extent that deliveries for transmission are discontinued or reduced at the Regional Point(s) of Receipt.  
            
            (c)  Where required, Curtailments or Interruptions will be made on a non-discriminatory basis to the transaction(s) that effectively relieve the constraint; provided, however, that Regional Transmission Service shall be subordinate to firm transmission service provided to Native Load Customers, customers taking Firm Point-to-Point transmission service and Network Customers under transactions that are not Regional Transactions.  If multiple transactions require Curtailment or Interruption, to the extent practicable and consistent with Good Utility Practice, Curtailments or Interruptions will be made in accordance with the product type priority rules established in the RTPs' OATTs.  The RTPs will provide advance notice of Curtailment or Interruption where such notice can be provided consistent with Good Utility Practice.
            
            (d)  No credit will be given to Transmission Customers affected by Curtailments or Interruptions of Regional Transmission Service. 

      3.5 Classification of Regional Transmission Service
            (a)	Due to the short term, non-firm nature of the Regional Transmission Service, the Transmission Customer taking Regional Transmission Service may not change its Regional Point(s) of Receipt or Point(s) of Delivery to obtain alternative service on a non-firm basis.  Transmission Customers may not redirect, resell, rollover or convert Regional Transmission Service.
            (b)	The Palo Verde/Hassayampa Common Bus will be treated as a single Regional Point of Receipt and as a single Regional Point of Delivery for transactions scheduled to or from such Common Bus.
		(c)	The Transmission Provider shall provide deliveries of capacity and energy from the Regional Point(s) of Receipt to the Regional Point(s) of Delivery on a non-firm basis only.  Regional Points of Receipt and corresponding capacity reservations shall be as mutually agreed upon by the RTPs for Regional Transmission Service.  The Transmission Customer's reserved capacity shall be the greater of either (1) the sum of the capacity reservations at the Regional Point(s) of Receipt, or (2) the sum of the capacity reservations at the Regional Point(s) of Delivery.  The Transmission Customer will be billed for its reserved capacity.  The Transmission Customer may not exceed its capacity reserved at each Regional Point of Receipt and each Regional Point of Delivery.

		(d)	Eligible Customers requesting Regional Transmission Service for the transmission of power do so with the full realization that such service is subject to availability and to Curtailment or Interruption under the terms of this Regional Tariff.

      3.6 Withdrawal and Termination of the Regional Tariff
      	(a)	The Transmission Provider may withdraw this Regional Tariff, and any other RTP may withdraw its Regional Tariff, (i) at any time prior to the Effective Date, at the sole discretion of the Transmission Provider or the RTP, respectively; (ii) at any time (either before, on or after the Effective Date), due to the occurrence or material risk of adverse regulatory action (subject to any obligations incurred for transactions already consummated under the Regional Tariff in which the withdrawing Transmission Provider or other RTP participated), as determined in the sole discretion of the Transmission Provider or other RTP, including, but not limited, to, conditions that may be imposed by the Commission or any other governmental authority, or as a result of intervenor action or a complaint, on the Regional Transmission Service, such as subjecting the rates, transmission revenue requirements or costs of a Non-Jurisdictional RTP to review under the Federal Power Act, either directly or indirectly, or subjecting an RTP to refunds or the possibility thereof, or (iii) for any reason and at the sole discretion of the withdrawing RTP, upon ninety (90) days prior written notice to the other RTPs effective at any time following the Effective Date.  It shall be a condition precedent to the effectiveness of any withdrawal that the withdrawing Transmission Provider or other RTP pay all amounts due and payable under this Regional Tariff prior to such withdrawal.  The Transmission Provider acknowledges and agrees that this Regional Tariff will continue in effect as to other RTPs notwithstanding the withdrawal of one or more other RTPs.
      
		(b) 	This Regional Tariff will be in effect until the Transmission Provider and the other RTPs mutually agree to terminate Regional Transmission Service or the Transmission Provider has withdrawn this Regional Tariff in accordance with its terms.  

Article IV. 
Regional Transmission Service Terms
      4.1 General Conditions

	The Transmission Provider will provide Regional Transmission Service over its Transmission System to any Eligible Customer that has met the requirements of this Regional Tariff.

      4.2 Calculation of Available Transfer Capability

	Each RTP shall calculate the Available Transfer Capability ("ATC") consistent with the applicable requirements of the Reliability Standards adopted by the North American Electric Reliability Corporation and in accordance with its OATT.

      4.3 Real Power Losses

	Losses will be based on transactions across each Transmission System used in the Regional Transaction, as provided in Section 7.1(e) hereof, and will be monetized at the rate published in the ICE Palo Verde Financial Peak Daily Electricity Price Index or ICE Palo Verde Financial Off-Peak Daily Electricity Price Index ("Palo Verde Index") for the trade date of the transaction, and will be paid for by the Transmission Customer.

Article V. 
Transmission Customer Responsibilities 
      5.1 Conditions Required of Transmission Customers
      Regional Transmission Service shall be provided by the RTPs only if the following conditions are satisfied by the Transmission Customer: 
            (a)		The Transmission Customer has submitted a request for service via the wesTTrans.net OASIS site; 
            (b)	The Transmission Customer qualifies as an Eligible Customer as defined in this Regional Tariff, which includes satisfying the creditworthiness criteria as defined in the OATT of each RTP that will provide the transmission service;
            (c)	The Transmission Customer has arrangements in place for any other transmission service necessary to effect the delivery from the generating source to the Regional Transmission System prior to the time Regional Transmission Service commences; 
            (d)	The Transmission Customer has executed a Service Agreement with the Transmission Provider and each other RTP whose Transmission System will be used for the Regional Transaction; 
            (e)	If the Regional Transmission Service is to be used to serve load within the Balancing Authority Area of an RTP, the Transmission Customer satisfies any requirements for ancillary services under Schedules 3-6 of that RTP's OATT (as the same may be amended or revised from time to time); and
            (f)	If the Regional Transmission Service is to be used to deliver energy from a generator located within an RTP's Balancing Authority Area to load outside that Balancing Authority Area, the Transmission Customer satisfies any requirements for Generator Imbalance Service under Schedule 9 of that RTP's OATT (as the same may be amended or revised from time to time).
5.2 Conditions Applicable to RTPs who Own Facilities Financed by Local Furnishing Bonds or Other Tax-Exempt Bonds

      In addition to the conditions in Section 5.1, Regional Transmission Service shall be provided by the RTPs only if Eligible Customers requesting Regional Transmission Service comply with all special requirements (e.g., Two County Furnishing Bond requirements) applicable to the RTPs that own transmission, distribution or generation facilities financed by local furnishing bonds or other tax-exempt bonds, which special requirements are specified in the RTPs' OATTs.
Article VI. 
Procedures for Arranging Regional Transmission Service 
      6.1 Reservation of Regional Transmission Service
	Requests for Regional Transmission Service shall be submitted no earlier than 0700 MST of the day before the requested Regional Transmission Service is to commence and must be received no later than 1400 MST of such day.  Requests for Regional Transmission Service submitted after 1400 MST of such day will be accommodated if practicable. 
6.2 Processing of Requests for Regional Transmission Service that Would Be more Expensive than Service under Individual OATTs
	If the WestConnect Deal Wizard indicates that a proposed Regional Transaction is more expensive at the Regional Rate than it would be under the combined OATT rates of the RTPs that would provide the requested Regional Transmission Service - i.e., if the WestConnect Regional Transmission Service software shows a negative amount - each segment of the requested transmission path will be processed as a transmission service request under the relevant RTP's individual OATT.  A new submission of transmission service requests for the transaction to each of the relevant RTPs will not be required.  In such cases, each reserved segment of the transaction will be billed by the relevant RTP individually in accordance with its OATT, and will not be billed under this Regional Tariff.
 
      6.3 Determination of Available Transfer Capability
	Following receipt of a transmission service request, all RTPs will make a determination on a non-discriminatory basis of ATC pursuant to Section 4.2.  Such determination shall be made as soon as reasonably practicable after receipt, but not later than 30 minutes after receipt of the transmission service request.
      6.4 Scheduling Regional Transmission Service
	Schedules for Regional Transmission Service must be submitted to the RTPs no later than 1400 MST of the day prior to the day on which such service is to commence.  Schedules for Regional Transmission Service submitted after that time will be accommodated if practicable.  Hour-to-hour schedules of energy to be delivered must be stated in increments of 1 megawatt per hour.  Scheduling changes will be permitted up to 20 minutes before the start of the next clock hour provided that the Delivering Party and Receiving Party also agree to the schedule modification.  The RTPs participating in a Regional Transaction will furnish to the Delivering Party's system operator hour-to-hour schedules equal to those furnished by the Receiving Party and shall deliver the capacity and energy provided by such schedules on a non-firm basis.  Should the Transmission Customer, Delivering Party or Receiving Party revise or terminate any schedule, such party shall immediately notify the RTPs providing the Regional Transmission Service for the transaction, and the RTPs shall have the right to adjust accordingly the schedule for capacity and energy to be received and to be delivered.  A Regional Transaction can be annulled at the request of the Transmission Customer only if all of the RTPs that would participate in the Regional Transaction agree to annul it.  Transmission Customers will not be charged for a reservation of Regional Transmission Service if all of the RTPs that would have participated in providing the service agree to annul it.

      6.5 Tagging Regional Transactions
	Regional Transmission Service is to be utilized and tagged in each case across the Transmission Systems of all of the RTPs involved in the Regional Transaction.  Each Regional Transaction must be tagged with an E-Tag that includes all segments of the Regional Transmission Service reserved.  If a Transmission Customer tags only one of the segments of a reserved path, the E-Tag will not be considered a Regional Transmission Service tag, and will be processed in accordance with the individual RTP's OATT, with appropriate ancillary service charges and losses being assessed.  

Article VII. 
Regional Transmission Service Rates
      7.1 Regional Transmission Service Rates
For each Regional Transaction, Transmission Customer agrees to pay the following charges:

		(a)		Regional Charge.  A charge (in $) equal to the product of (i) the total reserved megawatts for such Regional Transaction (in MWs) multiplied by (ii) the Regional Rate (in $/MW) for such Regional Transaction; plus

		(b)		Ancillary Service 1 Charge.  An Ancillary Service 1 charge (in $) equal to the product of (i) the total megawatts for such Regional Transaction (in MWs) multiplied by (ii) the sum of the rate (in $/MW) for scheduling, system control and dispatch service as each component is specified in the OATT for each RTP that participated in the Regional Transaction, provided that for any such RTP that charges a per-transaction based Ancillary Service 1 rate, the Transmission Customer will  pay that RTP's per-transaction based Ancillary Service 1 rate; plus

		(c)		Ancillary Service 2 Charge.  An Ancillary Service 2 charge (in $) equal to the product of (i) the total megawatts for such Regional Transaction (in MWs) multiplied by (ii) the rate (in $/MW) for reactive supply and voltage control as each component is specified in the OATT of the last RTP (i.e., the RTP that transmits the Transmission Customer's energy to the Regional Point of Delivery) participating in the Regional Transaction; plus

		(d)		Additional Ancillary Services.  Additional Ancillary Services; i.e. Ancillary 3:  Regulation and Frequency Response Service; Ancillary 4:  Energy Imbalance Service; Ancillary 5:  Operating Reserve - Spinning Reserve Service; Ancillary 6:  Operating Reserve - Supplemental Reserve Service; and Ancillary 9 - Generator Imbalance Service, to the extent required in conjunction with a Regional Transaction, as offered in accordance with the appropriate RTP's OATT; plus

		(e)		Losses Charge.  A losses charge (in $) equal to the product of (i) the total megawatts for such Regional Transaction (in MWs) multiplied by (ii) the sum of the loss rates (in %) as each component is specified in the OATT for each RTP that participated in the Regional Transaction (monetized based on the applicable Palo Verde Index price); plus

		(f)		Administrative Charges.  The Administrative Charge is designed to cover the costs of the Billing Agent and is set at $1.26 per MWh.  The Administrative Charge shall not be changed prior to July 1, 2018. 

These charges shall not be discounted.

      7.2	Payment to Billing Agent Account

	All charges for Regional Transmission Service provided for in this Regional Tariff shall be billed to the Transmission Customer by the Billing Agent and paid by the Transmission Customer to the Billing Agent.  The Billing Agent will also be responsible for making any refunds to which the Transmission Customer may be entitled in respect of a Regional Transaction. 

Article VIII.
Dispute Resolution and Governing Law

8.1 Internal Dispute Resolution Procedures  

      Any dispute between a Transmission Customer and an RTP involving transmission service under this Regional Tariff (excluding applications for changes to the Regional Tariff, or to any Service Agreement entered into by a Jurisdictional RTP under the Regional Tariff or its predecessor, which shall be presented directly to the Commission for resolution) shall be referred to a designated senior representative of the RTP and a senior representative of the Transmission Customer for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days (or such other period as the Transmission Customer and the RTP may agree upon) by mutual agreement, such dispute may be submitted to arbitration and resolved in accordance with the arbitration procedures set forth below.

8.2 External Arbitration Procedures
      
      Any arbitration initiated under this Regional Tariff shall be conducted before a single neutral arbitrator appointed by the parties to the dispute (hereinafter, the "Parties").  If the Parties fail to agree upon a single arbitrator within ten (10) days of the referral of the dispute to arbitration, each of the Parties shall choose one arbitrator who shall sit on a three-member arbitration panel.  The two arbitrators so chosen shall within twenty (20) days select a third arbitrator to chair the arbitration panel.  In either case, the arbitrators shall be knowledgeable in electric utility matters, including electric transmission and bulk power issues, and shall not have any current or past substantial business or financial relationships with any party to the arbitration (except prior arbitration).  The arbitrator(s) shall provide each of the Parties an opportunity to be heard and, except as otherwise provided herein, shall generally conduct the arbitration in accordance with the Commercial Arbitration Rules of the American Arbitration Association and any applicable Commission regulations. 
      
8.3 Arbitration Decisions  

      Unless otherwise agreed, the arbitrator(s) shall render a decision within ninety (90) days of appointment and shall notify the Parties in writing of such decision and the reasons therefor.  The arbitrator(s) shall be authorized only to interpret and apply the provisions of the Regional Tariff and any Service Agreement entered into under the Regional Tariff (or its predecessor) and shall have no power to modify or change any of the above in any manner.  The decision of the arbitrator(s) shall be final and binding upon the Parties, and judgment on the award may be entered in any court having jurisdiction.  The decision of the arbitrator(s) may be appealed solely on the grounds that the conduct of the arbitrator(s), or the decision itself, violated the standards set forth in the Federal Arbitration Act and/or the Administrative Dispute Resolution Act.  The final decision of the arbitrator must also be filed with the Commission if it affects jurisdictional rates, terms and conditions of service or facilities.
      
8.4 Costs  

      Each Party shall be responsible for its own costs incurred during the arbitration process and for the following costs, if applicable:
      
1. the cost of the arbitrator chosen by the Party to sit on the three member panel and one half of the cost of the third arbitrator chosen; or
2. one half the cost of the single arbitrator jointly chosen by the Parties.


8.5 Rights Under The Federal Power Act; Governing Law
  
		(a)	Nothing in this section shall restrict the rights of any party to file a complaint with the Commission under relevant provisions of the Federal Power Act.
		(b)	The validity, interpretation and performance of this Regional Tariff and each of its provisions shall be governed by federal law and/or by the law of the state in which the Transmission Provider has its principal place of business (unless preempted by federal law).

ANNEX A
Form of Service Agreement for
WestConnect Point-To-Point Regional Transmission Service Tariff

1.0 This Service Agreement, dated as of [_______________] (this "Service Agreement"), is entered into by and between [_______________]1("RTP" and collectively, with other transmission providers providing service in a Regional Transaction, the "RTPs") and [_______________]2 (the "Transmission Customer").  Capitalized terms used but not defined herein shall have the meanings assigned to them in the RTP's WestConnect Point-To-Point Regional Transmission Service Tariff (the "Regional Tariff").

2.0 The Transmission Customer has been determined by the RTP to be a Transmission Customer under the Regional Tariff.  

3.0 Service under this Service Agreement shall be provided by the RTP upon request by an authorized representative of the Transmission Customer.

4.0 The Transmission Customer agrees: (a) to supply information that the RTP deems reasonably necessary in accordance with Good Utility Practice in order to provide any requested Regional Transmission Service; and (b) to provide information to the RTPs and the Billing Agent pursuant to and in accordance with the Regional Tariff in connection with any requested Regional Transmission Service.

5.0 The RTP agrees to provide and the Transmission Customer agrees to take and pay for the requested Regional Transmission Service in accordance with the provisions of the Regional Tariff and this Service Agreement.

6.0 Regional Transmission Service under this Service Agreement shall commence on the later of (a) the requested commencement date, or (b) such other date as the requested Regional Transmission Service is permitted to become effective by the Commission, if applicable.  Regional Transmission Service under this Service Agreement shall terminate on such date as is mutually agreed upon by the Transmission Customer and the RTP, but no later than the earliest to occur of (i) the date of withdrawal of the Regional Tariff by the RTP, or (ii) the date of termination of the Regional Tariff by the RTPs.

7.0 Transmission Customer acknowledges and agrees that the RTP may withdraw at any time its Regional Tariff in accordance with the terms and conditions thereof and that effective upon withdrawal this Service Agreement shall automatically terminate solely with respect to the RTP, without any action by any party hereto.  


8.0 
Any notice or request made to or by a party regarding this Service Agreement shall be made to the representative(s) of the other party or parties as indicated below:

RTP:
Name: _______________________________	
Address: ____________________________	
Address 2: ____________________________	
City, ST Zip: 	
Attention: ___________________________	



Transmission Customer:
Name: _________________________________
Address: _______________________________
Address 2: ____________________________	
City, ST Zip: 	
Attention: ______________________________

9.0 The Regional Tariff is incorporated and made a part of this Service Agreement.

IN WITNESS WHEREOF, the parties have caused this Service Agreement to be executed by their respective authorized officials.

RTP:  

By:	________________________________________	
	Name	

	________________________________________
      Printed Name	
      
      ________________________________________
      Title
      
      ________________________________________
      Date

Transmission Customer:

By:	________________________________________	
	Name	

	________________________________________
      Printed Name	
      
      ________________________________________
      Title
      
      ________________________________________
      Date
      
 

1 Include name of applicable RTP.
2 Include name of Eligible Customer requesting Regional Transmission Service.
---------------

------------------------------------------------------------



---------------

------------------------------------------------------------



11




Schedule 8.2-12</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>91</filing_id>
      <filing_title>WestConnect Point-to-Point Regional Transmission Tariff</filing_title>
      <filing_type>390</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2013-07-01</current_effective_date>
      <ferc_order_date>2013-06-28</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>