<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C003787</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>682</tariff_id>
    <tariff_title>Agreements</tariff_title>
    <tariff_export_date>2025-09-16T20:08Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Shared Facilities Agreement</record_title>
      <record_content_desc>Rising Tree II</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1100000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-08-29</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjBcZGVmZjBcc3RzaGZkYmNoMFxzdHNoZmxvY2gwXHN0c2hmaGljaDBcc3RzaGZiaTBcZGVmbGFuZzEwMzNcZGVmbGFuZ2ZlMTAzM1x0aGVtZWxhbmcxMDMzXHRoZW1lbGFuZ2ZlMFx0aGVtZWxhbmdjczB7XGZvbnR0Ymx7XGYwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsO30NCntcZjJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjA3MDMwOTAyMDIwNTAyMDQwNH1Db3VyaWVyIE5ldzt9e1xmM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNTAxMDIwMTA3MDYwMjA1MDd9U3ltYm9sO317XGY0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1IZWx2ZXRpY2E7fQ0Ke1xmNVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwNDA5MDIwMjA1MDIwNDA0fUNvdXJpZXI7fXtcZjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDQwNTA1MDIwMzA0fVRtcyBSbW47fXtcZjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDMwMjA0fUhlbHY7fQ0Ke1xmOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNjA1MDYwMjAzMDR9TmV3IFlvcms7fXtcZjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAwMDAwMDAwMDAwMDAwMDAwMDAwfVN5c3RlbTt9e1xmMTBcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTAwMDAwMDAwMDAwMDAwMDAwMH1XaW5nZGluZ3M7fQ0Ke1xmMTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMDIwNjA5MDQwMjA1MDgwMzA0fU1TIE1pbmNob3tcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc5NlwnYmVcJzkyXCdhOX07fXtcZjEyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMjlcZnBycTJ7XCpccGFub3NlIDAyMDMwNjAwMDAwMTAxMDEwMTAxfUJhdGFuZ3tcKlxmYWx0IFwnYjlcJ2Q5XCdjNVwnYzF9O30NCntcZjEzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjAxMDYwMDAzMDEwMTAxMDEwMX1TaW1TdW57XCpcZmFsdCBcJ2NiXCdjZVwnY2NcJ2U1fTt9e1xmMTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9UE1pbmdMaVV7XCpcZmFsdCBcJ2I3XCc3M1wnYjJcJ2QzXCdhOVwnZmFcJ2M1XCdlOX07fQ0Ke1xmMTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDcwMjA1MDgwMjA0fU1TIEdvdGhpY3tcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwMDAwMDEwMTAxMDEwMX1Eb3R1bXtcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjE3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1TaW1IZWl7XCpcZmFsdCBcJ2JhXCdkYVwnY2NcJ2U1fTt9e1xmMThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzZcZnBycTF7XCpccGFub3NlIDAyMDIwNTA5MDAwMDAwMDAwMDAwfU1pbmdMaVV7XCpcZmFsdCBcJ2IyXCdkM1wnYTlcJ2ZhXCdjNVwnZTl9O30NCntcZjE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMDIwNjA5MDQwMzA1MDgwMzA1fU1pbmNob3tcKlxmYWx0IFwnOTZcJ2JlXCc5MlwnYTl9O317XGYyMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwMDAwMDEwMTAxMDEwMX1HdWxpbXtcKlxmYWx0IFwnYjFcJ2JjXCdiOFwnYjJ9O30NCntcZjIxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwNDA1MDUwNTAyMDMwNH1DZW50dXJ5O317XGYyMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9QW5nc2FuYSBOZXc7fXtcZjIzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDMwNDAyMDIwMjAyMDIwNH1Db3JkaWEgTmV3O30NCntcZjI0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDIwMzAzMDIwMn1NYW5nYWw7fXtcZjI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1MYXRoYTt9e1xmMjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMGEwNTAyMDUwMzA2MDMwMzAzfVN5bGZhZW47fQ0Ke1xmMjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVZyaW5kYTt9e1xmMjhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVJhYXZpO317XGYyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9U2hydXRpO30NCntcZjMwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxXGZwcnEye1wqXHBhbm9zZSAwMDAwMDQwMDAwMDAwMDAwMDAwMH1TZW5kbnlhO317XGYzMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9R2F1dGFtaTt9e1xmMzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVR1bmdhO30NCntcZjMzXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwODA2MDAwMDAwMDAwMDAwMDB9RXN0cmFuZ2VsbyBFZGVzc2E7fXtcZjM0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDQwNjAzMDIwNH1DYW1icmlhIE1hdGg7fXtcZjM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsIFVuaWNvZGUgTVM7fQ0Ke1xmMzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDQwNTAzMDUwNDA2MDMwMjA0fUNhbWJyaWE7fXtcZjM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO317XGYzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9VGFob21hO30NCntcZjM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNjAyMDIwMjAzMDIwNH1BcmlhbCBOYXJyb3c7fXtcZjQwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDQwNDAzMDMwMTAxMDgwM31HYXJhbW9uZDt9e1xmNDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzO30NCntcZjQyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEwe1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1UaW1lcyBOZXcgUm9tYW4gQm9sZHtcKlxmYWx0IFRpbWVzIE5ldyBSb21hbn07fXtcZjQzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMCBUaW1lc05ld1JvbWFuUFNNVHtcKlxmYWx0IFRpbWVzIE5ldyBSb21hbn07fQ0Ke1xmNDRcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1NYXJsZXR0O317XGY0NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjAzMDYwMDAwMDEwMTAxMDEwMX1AQmF0YW5nO317XGY0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwMzA2MDkwMDAxMDEwMTAxMDF9QmF0YW5nQ2hlO30NCntcZjQ3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjAzMDYwOTAwMDEwMTAxMDEwMX1AQmF0YW5nQ2hlO317XGY0OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjAzMDYwMDAwMDEwMTAxMDEwMX1HdW5nc3VoO317XGY0OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjAzMDYwMDAwMDEwMTAxMDEwMX1AR3VuZ3N1aDt9DQp7XGY1MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwMzA2MDkwMDAxMDEwMTAxMDF9R3VuZ3N1aENoZTt9e1xmNTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjlcZnBycTF7XCpccGFub3NlIDAyMDMwNjA5MDAwMTAxMDEwMTAxfUBHdW5nc3VoQ2hlO317XGY1MlxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMDEwMTAxMDEwMTAxMDEwMTAxfURhdW5QZW5oO30NCntcZjUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1Eb2tDaGFtcGE7fXtcZjU0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzA0MDEwMjAyMDEwNH1FdXBoZW1pYTt9e1xmNTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVZhbmk7fQ0Ke1xmNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwMDAxMDEwMTAxMDF9QEd1bGltO317XGY1N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwYjA2MDkwMDAxMDEwMTAxMDF9R3VsaW1DaGU7fXtcZjU4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTAwMDEwMTAxMDEwMX1AR3VsaW1DaGU7fQ0Ke1xmNTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwMDAxMDEwMTAxMDF9QERvdHVtO317XGY2MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwYjA2MDkwMDAxMDEwMTAxMDF9RG90dW1DaGU7fXtcZjYxXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTAwMDEwMTAxMDEwMX1ARG90dW1DaGU7fQ0Ke1xmNjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwODA2MDMwOTAyMDUwMjA0fUltcGFjdDt9e1xmNjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUlza29vbGEgUG90YTt9e1xmNjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUthbGluZ2E7fQ0Ke1xmNjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAzMDMwNDA0MDYwMjAzfUthcnRpa2E7fXtcZjY2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31LaG1lciBVSTt9e1xmNjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUxhbyBVSTt9DQp7XGY2OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDQwNTA0MDIwMjA0fUx1Y2lkYSBDb25zb2xlO317XGY2OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDAwMDAyMDAwNH1NYWxndW4gR290aGljO317XGY3MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDAwMDAyMDAwNH1ATWFsZ3VuIEdvdGhpYzt9DQp7XGY3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAzMDUwNDA0MDIwNH1NZWlyeW87fXtcZjcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fUBNZWlyeW87fXtcZjczXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fU1laXJ5byBVSTt9DQp7XGY3NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAzMDUwNDA0MDIwNH1ATWVpcnlvIFVJO317XGY3NVxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMDEwMTAwMDEwMTAxMDEwMTAxfU1pY3Jvc29mdCBIaW1hbGF5YTt9e1xmNzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9TWljcm9zb2Z0IEpoZW5nSGVpO30NCntcZjc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fUBNaWNyb3NvZnQgSmhlbmdIZWk7fXtcZjc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAzMDIwMjA0MDIwMjA0fU1pY3Jvc29mdCBZYUhlaTt9DQp7XGY3OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDIwNDAyMDIwNH1ATWljcm9zb2Z0IFlhSGVpO317XGY4MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNlxmcHJxMXtcKlxwYW5vc2UgMDIwMjA1MDkwMDAwMDAwMDAwMDB9QE1pbmdMaVU7fXtcZjgxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBQTWluZ0xpVTt9DQp7XGY4MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjAyMDUwMDAwMDAwMDAwMDAwMH1NaW5nTGlVX0hLU0NTO317XGY4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjAyMDUwMDAwMDAwMDAwMDAwMH1ATWluZ0xpVV9IS1NDUzt9e1xmODRcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9TWluZ0xpVS1FeHRCO30NCntcZjg1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBNaW5nTGlVLUV4dEI7fXtcZjg2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfVBNaW5nTGlVLUV4dEI7fXtcZjg3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBQTWluZ0xpVS1FeHRCO30NCntcZjg4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfU1pbmdMaVVfSEtTQ1MtRXh0Qjt9e1xmODlcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9QE1pbmdMaVVfSEtTQ1MtRXh0Qjt9DQp7XGY5MFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDAwNTAwMDAwMDAwMDAwMDAwfU1vbmdvbGlhbiBCYWl0aTt9e1xmOTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDcwMjA1MDgwMjA0fUBNUyBHb3RoaWM7fXtcZjkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAwMDcwMjA1MDgwMjA0fU1TIFBHb3RoaWM7fQ0Ke1xmOTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9QE1TIFBHb3RoaWM7fXtcZjk0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAwMDcwMjA1MDgwMjA0fU1TIFVJIEdvdGhpYzt9e1xmOTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9QE1TIFVJIEdvdGhpYzt9DQp7XGY5NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOFxmcHJxMXtcKlxwYW5vc2UgMDIwMjA2MDkwNDAyMDUwODAzMDR9QE1TIE1pbmNobzt9e1xmOTdcZmJpZGkgXGZyb21hblxmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDAwNDAyMDUwODAzMDR9TVMgUE1pbmNobzt9e1xmOThcZmJpZGkgXGZyb21hblxmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDAwNDAyMDUwODAzMDR9QE1TIFBNaW5jaG87fQ0Ke1xmOTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDUwMDAzMDIwMDA5MDAwMH1NViBCb2xpO317XGYxMDBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfU1pY3Jvc29mdCBOZXcgVGFpIEx1ZTt9e1xmMTAxXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMDA1MDQwNzAzMDAwMjAwMDN9TnlhbGE7fQ0Ke1xmMTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgUGhhZ3NQYTt9e1xmMTAzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMjA3MDEwMDAwMDAwMH1QbGFudGFnZW5ldCBDaGVyb2tlZTt9DQp7XGYxMDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTA0MDIwMDAwMDAwMDAzfVNlZ29lIFNjcmlwdDt9e1xmMTA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31TZWdvZSBVSTt9e1xmMTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDcwMjA0MDIwNDAyMDIwM31TZWdvZSBVSSBTZW1pYm9sZDt9DQp7XGYxMDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJIExpZ2h0O317XGYxMDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJIFN5bWJvbDt9e1xmMTA5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjAxMDYwMDAzMDEwMTAxMDEwMX1AU2ltU3VuO30NCntcZjExMFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwMzAxMDEwMTAxMDF9TlNpbVN1bjt9e1xmMTExXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTAzMDEwMTAxMDEwMX1ATlNpbVN1bjt9e1xmMTEyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1TaW1TdW4tRXh0Qjt9DQp7XGYxMTNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzRcZnBycTF7XCpccGFub3NlIDAyMDEwNjA5MDYwMTAxMDEwMTAxfUBTaW1TdW4tRXh0Qjt9e1xmMTE0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgVGFpIExlO317XGYxMTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNob25hciBCYW5nbGE7fQ0Ke1xmMTE2XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwMDA1MDAwMDAwMDAwMDAwMDB9TWljcm9zb2Z0IFlpIEJhaXRpO317XGYxMTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fU1pY3Jvc29mdCBTYW5zIFNlcmlmO30NCntcZjExOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9QXBhcmFqaXRhO317XGYxMTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDAwMDAwMDAwMDAwMDAwMH1FYnJpbWE7fXtcZjEyMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9R2lzaGE7fQ0Ke1xmMTIxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1Lb2tpbGE7fXtcZjEyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9TGVlbGF3YWRlZTt9e1xmMTIzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMDAwMDAwMDAwMDAwMDAwMDB9TWljcm9zb2Z0IFVpZ2h1cjt9DQp7XGYxMjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwMTAwMDEwMTAxMDEwMTAxfU1vb2xCb3Jhbjt9e1xmMTI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1VdHNhYWg7fXtcZjEyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9VmlqYXlhO30NCntcZjEyN1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9QW5kYWx1czt9e1xmMTI4XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwMjA0MDIwNDA0MDYwMzAyMDN9QXJhYmljIFR5cGVzZXR0aW5nO317XGYxMjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVNpbXBsaWZpZWQgQXJhYmljO30NCntcZjEzMFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwMzA5MDIwMjA1MDIwNDA0fVNpbXBsaWZpZWQgQXJhYmljIEZpeGVkO317XGYxMzFcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDAwMDAwMDAwMDAwMDAwMH1TYWtrYWwgTWFqYWxsYTt9DQp7XGYxMzJcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRyYWRpdGlvbmFsIEFyYWJpYzt9e1xmMTMzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTc3XGZwcnEye1wqXHBhbm9zZSAwMjAxMDgwMzAyMDEwNDAzMDIwM31BaGFyb25pO317XGYxMzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMntcKlxwYW5vc2UgMDIwZTA1MDIwNjA0MDEwMTAxMDF9RGF2aWQ7fQ0Ke1xmMTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTJ7XCpccGFub3NlIDAyMGUwNTAzMDYwMTAxMDEwMTAxfUZyYW5rUnVlaGw7fXtcZjEzNlxmYmlkaSBcZm5pbFxmY2hhcnNldDE3N1xmcHJxMntcKlxwYW5vc2UgMDIwMTA1MDIwNjAxMDEwMTAxMDF9TGV2ZW5pbSBNVDt9e1xmMTM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDUwMTAxMDEwMTAxfU1pcmlhbTt9DQp7XGYxMzhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzdcZnBycTF7XCpccGFub3NlIDAyMGIwNTA5MDUwMTAxMDEwMTAxfU1pcmlhbSBGaXhlZDt9e1xmMTM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTJ7XCpccGFub3NlIDAyMGUwNTAyMDUwMTAxMDEwMTAxfU5hcmtpc2ltO317XGYxNDBcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzdcZnBycTF7XCpccGFub3NlIDAyMDMwNTA5MDUwMTAxMDEwMTAxfVJvZDt9DQp7XGYxNDFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzRcZnBycTF7XCpccGFub3NlIDAyMDEwNjA5MDYwMTAxMDEwMTAxfUZhbmdTb25nO317XGYxNDJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzRcZnBycTF7XCpccGFub3NlIDAyMDEwNjA5MDYwMTAxMDEwMTAxfUBGYW5nU29uZzt9e1xmMTQzXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1AU2ltSGVpO30NCntcZjE0NFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwNjAxMDEwMTAxMDF9S2FpVGk7fXtcZjE0NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwNjAxMDEwMTAxMDF9QEthaVRpO317XGYxNDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fUFuZ3NhbmFVUEM7fQ0Ke1xmMTQ3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1Ccm93YWxsaWEgTmV3O317XGYxNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUJyb3dhbGxpYVVQQzt9e1xmMTQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDMwNDAyMDIwMjAyMDIwNH1Db3JkaWFVUEM7fQ0Ke1xmMTUwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1EaWxsZW5pYVVQQzt9e1xmMTUxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1FdWNyb3NpYVVQQzt9e1xmMTUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1GcmVlc2lhVVBDO30NCntcZjE1M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9SXJpc1VQQzt9e1xmMTU0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1KYXNtaW5lVVBDO317XGYxNTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fUtvZGNoaWFuZ1VQQzt9DQp7XGYxNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUxpbHlVUEM7fXtcZjE1N1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDEzNlxmcHJxMXtcKlxwYW5vc2UgMDMwMDA1MDkwMDAwMDAwMDAwMDB9REZLYWktU0I7fXtcZjE1OFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDEzNlxmcHJxMXtcKlxwYW5vc2UgMDMwMDA1MDkwMDAwMDAwMDAwMDB9QERGS2FpLVNCO30NCntcZjE1OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDIwMzA1MDQwMjAyMDR9THVjaWRhIFNhbnMgVW5pY29kZTt9e1xmMTYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMGEwNDAyMDEwMjAyMDIwNH1BcmlhbCBCbGFjazt9e1xmMTYxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBlMDUwMjAzMDMwMzAyMDIwNH1DYW5kYXJhO30NCntcZjE2MlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMGYwNzAyMDMwMzAyMDIwMjA0fUNvbWljIFNhbnMgTVM7fXtcZjE2M1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDIwMjA0MDMwMjA0fUNvbnNvbGFzO317XGYxNjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDMwNjAyMDUwMzA2MDMwMzAzfUNvbnN0YW50aWE7fQ0Ke1xmMTY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDIwNDAyMDIwNH1Db3JiZWw7fXtcZjE2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDMwMjAxMDIwMjAyMDR9RnJhbmtsaW4gR290aGljIE1lZGl1bTt9e1xmMTY3XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDA0MDYwNTA1MTAwMjAyMGQwMn1HYWJyaW9sYTt9DQp7XGYxNjhcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDQwNTAyMDUwNDA1MDIwMzAzfUdlb3JnaWE7fXtcZjE2OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDIwNTA1MDUwMzAzMDR9UGFsYXRpbm8gTGlub3R5cGU7fXtcZjE3MFxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwNjAwMDAwMDAwMDAwMDAwfVNlZ29lIFByaW50O30NCntcZjE3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDMwMjAyMDIwMjAyMDR9VHJlYnVjaGV0IE1TO317XGYxNzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fVZlcmRhbmE7fXtcZjE3M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMzAxMDIwMTA1MDkwNjA3MDN9V2ViZGluZ3M7fQ0Ke1xmMTc0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDMwMjAyMDIwNDAzMDIwNH1DYWxpYnJpIExpZ2h0O317XGYxNzVcZmJpZGkgXGZyb21hblxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDUwMTAyMDEwMjA1MDIwMjAyfU1UIEV4dHJhO317XGYxNzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDIwMTAyMDEwNTA3MDcwNzA3fVdpbmdkaW5ncyAyO30NCntcZjE3N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNDAxMDIwMTA4MDcwNzA3MDd9V2luZ2RpbmdzIDM7fXtcZjE3OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1AQXJpYWwgVW5pY29kZSBNUzt9e1xmMTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwMjA1MDMwNTAzMDMwNH1Cb29rIEFudGlxdWE7fQ0Ke1xmMTgwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjAyMDIwMjAyMDIwNH1DZW50dXJ5IEdvdGhpYzt9e1xmMTgxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA1MDYwNDA1MDUwNTAyMDIwNH1Cb29rbWFuIE9sZCBTdHlsZTt9DQp7XGYxODJcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTAxMDEwMTAxMDEwMTAxMDEwMX1Cb29rc2hlbGYgU3ltYm9sIDc7fXtcZjE4M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9TVMgUmVmZXJlbmNlIFNhbnMgU2VyaWY7fQ0Ke1xmMTg0XGZiaWRpIFxmbmlsXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMDA1MDAwMDAwMDAwMDAwMDB9TVMgUmVmZXJlbmNlIFNwZWNpYWx0eTt9e1xmbG9tYWpvclxmMzE1MDBcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9DQp7XGZkYm1ham9yXGYzMTUwMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZoaW1ham9yXGYzMTUwMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYTt9DQp7XGZiaW1ham9yXGYzMTUwM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZsb21pbm9yXGYzMTUwNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmRibWlub3JcZjMxNTA1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmhpbWlub3JcZjMxNTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO30NCntcZmJpbWlub3JcZjMxNTA3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjE4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9e1xmMTg2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGYxODhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZjE4OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjE5MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmMTkxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO30NCntcZjE5MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjE5M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjE5NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEFyaWFsIENFO317XGYxOTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBDeXI7fQ0Ke1xmMTk4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZjE5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEFyaWFsIFR1cjt9e1xmMjAwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQXJpYWwgKEhlYnJldyk7fXtcZjIwMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEFyaWFsIChBcmFiaWMpO30NCntcZjIwMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEFyaWFsIEJhbHRpYzt9e1xmMjAzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQXJpYWwgKFZpZXRuYW1lc2UpO317XGYyMDVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ291cmllciBOZXcgQ0U7fXtcZjIwNlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBDb3VyaWVyIE5ldyBDeXI7fQ0Ke1xmMjA4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIENvdXJpZXIgTmV3IEdyZWVrO317XGYyMDlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ291cmllciBOZXcgVHVyO317XGYyMTBcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzdcZnBycTEgQ291cmllciBOZXcgKEhlYnJldyk7fXtcZjIxMVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3OFxmcHJxMSBDb3VyaWVyIE5ldyAoQXJhYmljKTt9DQp7XGYyMTJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQ291cmllciBOZXcgQmFsdGljO317XGYyMTNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjNcZnBycTEgQ291cmllciBOZXcgKFZpZXRuYW1lc2UpO317XGYyOTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIE1TIE1pbmNobyBXZXN0ZXJue1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzk2XCdiZVwnOTJcJ2E5fTt9DQp7XGYyOTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgTVMgTWluY2hvIENFe1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzk2XCdiZVwnOTJcJ2E5fTt9e1xmMjk2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIE1TIE1pbmNobyBDeXJ7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnOTZcJ2JlXCc5MlwnYTl9O30NCntcZjI5OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBNUyBNaW5jaG8gR3JlZWt7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnOTZcJ2JlXCc5MlwnYTl9O317XGYyOTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgTVMgTWluY2hvIFR1cntcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc5NlwnYmVcJzkyXCdhOX07fQ0Ke1xmMzAyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIE1TIE1pbmNobyBCYWx0aWN7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnOTZcJ2JlXCc5MlwnYTl9O317XGYzMDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgQmF0YW5nIFdlc3Rlcm57XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9DQp7XGYzMDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBCYXRhbmcgQ0V7XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9e1xmMzA2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQmF0YW5nIEN5cntcKlxmYWx0IFwnYjlcJ2Q5XCdjNVwnYzF9O317XGYzMDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBCYXRhbmcgR3JlZWt7XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9DQp7XGYzMDlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBCYXRhbmcgVHVye1wqXGZhbHQgXCdiOVwnZDlcJ2M1XCdjMX07fXtcZjMxMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIEJhdGFuZyBCYWx0aWN7XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9e1xmMzE3XGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMiBTaW1TdW4gV2VzdGVybntcKlxmYWx0IFwnY2JcJ2NlXCdjY1wnZTV9O30NCntcZjMyN1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBQTWluZ0xpVSBXZXN0ZXJue1wqXGZhbHQgXCdiN1wnNzNcJ2IyXCdkM1wnYTlcJ2ZhXCdjNVwnZTl9O317XGYzMzdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIE1TIEdvdGhpYyBXZXN0ZXJue1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fQ0Ke1xmMzM1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIE1TIEdvdGhpYyBDRXtcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYzMzZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgTVMgR290aGljIEN5cntcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O30NCntcZjMzOFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBNUyBHb3RoaWMgR3JlZWt7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9e1xmMzM5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIE1TIEdvdGhpYyBUdXJ7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9DQp7XGYzNDJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgTVMgR290aGljIEJhbHRpY3tcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYzNDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgRG90dW0gV2VzdGVybntcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjM0NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIERvdHVtIENFe1wqXGZhbHQgXCdiNVwnYjhcJ2JmXCdmMn07fXtcZjM0NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIERvdHVtIEN5cntcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O317XGYzNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBEb3R1bSBHcmVla3tcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjM0OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIERvdHVtIFR1cntcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O317XGYzNTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBEb3R1bSBCYWx0aWN7XCpcZmFsdCBcJ2I1XCdiOFwnYmZcJ2YyfTt9e1xmMzU3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBTaW1IZWkgV2VzdGVybntcKlxmYWx0IFwnYmFcJ2RhXCdjY1wnZTV9O30NCntcZjM2N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgTWluZ0xpVSBXZXN0ZXJue1wqXGZhbHQgXCdiMlwnZDNcJ2E5XCdmYVwnYzVcJ2U5fTt9e1xmMzg3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEd1bGltIFdlc3Rlcm57XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9e1xmMzg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgR3VsaW0gQ0V7XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9DQp7XGYzODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBHdWxpbSBDeXJ7XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9e1xmMzg4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgR3VsaW0gR3JlZWt7XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9e1xmMzg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgR3VsaW0gVHVye1wqXGZhbHQgXCdiMVwnYmNcJ2I4XCdiMn07fQ0Ke1xmMzkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgR3VsaW0gQmFsdGlje1wqXGZhbHQgXCdiMVwnYmNcJ2I4XCdiMn07fXtcZjM5NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIENlbnR1cnkgQ0U7fXtcZjM5NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIENlbnR1cnkgQ3lyO317XGYzOThcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBDZW50dXJ5IEdyZWVrO30NCntcZjM5OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIENlbnR1cnkgVHVyO317XGY0MDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBDZW50dXJ5IEJhbHRpYzt9e1xmNDE0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgQW5nc2FuYSBOZXcgKFRoYWkpO317XGY0MjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBDb3JkaWEgTmV3IChUaGFpKTt9DQp7XGY0NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBTeWxmYWVuIENFO317XGY0NDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBTeWxmYWVuIEN5cjt9e1xmNDQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgU3lsZmFlbiBHcmVlazt9e1xmNDQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgU3lsZmFlbiBUdXI7fQ0Ke1xmNDUyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgU3lsZmFlbiBCYWx0aWM7fXtcZjUyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIENhbWJyaWEgTWF0aCBDRTt9e1xmNTI2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQ2FtYnJpYSBNYXRoIEN5cjt9e1xmNTI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2FtYnJpYSBNYXRoIEdyZWVrO30NCntcZjUyOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIENhbWJyaWEgTWF0aCBUdXI7fXtcZjUzMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIENhbWJyaWEgTWF0aCBCYWx0aWM7fXtcZjUzM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIENhbWJyaWEgTWF0aCAoVmlldG5hbWVzZSk7fXtcZjUzN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIFdlc3Rlcm47fQ0Ke1xmNTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgVW5pY29kZSBNUyBDRTt9e1xmNTM2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgVW5pY29kZSBNUyBDeXI7fXtcZjUzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgR3JlZWs7fXtcZjUzOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgVHVyO30NCntcZjU0MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKEhlYnJldyk7fXtcZjU0MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKEFyYWJpYyk7fXtcZjU0MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgQmFsdGljO30NCntcZjU0M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKFZpZXRuYW1lc2UpO317XGY1NDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIChUaGFpKTt9e1xmNTQ1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBDRTt9e1xmNTQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQ2FtYnJpYSBDeXI7fQ0Ke1xmNTQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2FtYnJpYSBHcmVlazt9e1xmNTQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBUdXI7fXtcZjU1MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIENhbWJyaWEgQmFsdGljO317XGY1NTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDYW1icmlhIChWaWV0bmFtZXNlKTt9DQp7XGY1NTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBDYWxpYnJpIENFO317XGY1NTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9e1xmNTU4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FsaWJyaSBHcmVlazt9e1xmNTU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBUdXI7fQ0Ke1xmNTYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBCYWx0aWM7fXtcZjU2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIENhbGlicmkgKFZpZXRuYW1lc2UpO317XGY1NjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBUYWhvbWEgQ0U7fXtcZjU2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFRhaG9tYSBDeXI7fQ0Ke1xmNTY4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgVGFob21hIEdyZWVrO317XGY1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBUYWhvbWEgVHVyO317XGY1NzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBUYWhvbWEgKEhlYnJldyk7fXtcZjU3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIFRhaG9tYSAoQXJhYmljKTt9DQp7XGY1NzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBUYWhvbWEgQmFsdGljO317XGY1NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBUYWhvbWEgKFZpZXRuYW1lc2UpO317XGY1NzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBUYWhvbWEgKFRoYWkpO317XGY1NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBBcmlhbCBOYXJyb3cgQ0U7fQ0Ke1xmNTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgTmFycm93IEN5cjt9e1xmNTc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgTmFycm93IEdyZWVrO317XGY1NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBBcmlhbCBOYXJyb3cgVHVyO317XGY1ODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBBcmlhbCBOYXJyb3cgQmFsdGljO30NCntcZjU4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEdhcmFtb25kIENFO317XGY1ODZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBHYXJhbW9uZCBDeXI7fXtcZjU4OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEdhcmFtb25kIEdyZWVrO317XGY1ODlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBHYXJhbW9uZCBUdXI7fQ0Ke1xmNTkyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgR2FyYW1vbmQgQmFsdGljO317XGY1OTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBDRTt9e1xmNTk2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgQ3lyO317XGY1OThcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBHcmVlazt9DQp7XGY1OTlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBUdXI7fXtcZjYwMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIChIZWJyZXcpO317XGY2MDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyAoQXJhYmljKTt9e1xmNjAyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgQmFsdGljO30NCntcZjYwM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIChWaWV0bmFtZXNlKTt9e1xmNjM3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBCYXRhbmcgV2VzdGVybjt9e1xmNjM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQEJhdGFuZyBDRTt9e1xmNjM2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQEJhdGFuZyBDeXI7fQ0Ke1xmNjM4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQEJhdGFuZyBHcmVlazt9e1xmNjM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQEJhdGFuZyBUdXI7fXtcZjY0MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIEBCYXRhbmcgQmFsdGljO317XGY2NDdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEJhdGFuZ0NoZSBXZXN0ZXJuO30NCntcZjY0NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBCYXRhbmdDaGUgQ0U7fXtcZjY0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBCYXRhbmdDaGUgQ3lyO317XGY2NDhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQmF0YW5nQ2hlIEdyZWVrO317XGY2NDlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQmF0YW5nQ2hlIFR1cjt9DQp7XGY2NTJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQmF0YW5nQ2hlIEJhbHRpYzt9e1xmNjU3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAQmF0YW5nQ2hlIFdlc3Rlcm47fXtcZjY1NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBAQmF0YW5nQ2hlIENFO317XGY2NTZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQEJhdGFuZ0NoZSBDeXI7fQ0Ke1xmNjU4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEBCYXRhbmdDaGUgR3JlZWs7fXtcZjY1OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBAQmF0YW5nQ2hlIFR1cjt9e1xmNjYyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIEBCYXRhbmdDaGUgQmFsdGljO317XGY2NjdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgR3VuZ3N1aCBXZXN0ZXJuO30NCntcZjY2NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEd1bmdzdWggQ0U7fXtcZjY2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEd1bmdzdWggQ3lyO317XGY2NjhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBHdW5nc3VoIEdyZWVrO317XGY2NjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBHdW5nc3VoIFR1cjt9DQp7XGY2NzJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBHdW5nc3VoIEJhbHRpYzt9e1xmNjc3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBHdW5nc3VoIFdlc3Rlcm47fXtcZjY3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEBHdW5nc3VoIENFO317XGY2NzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBAR3VuZ3N1aCBDeXI7fQ0Ke1xmNjc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQEd1bmdzdWggR3JlZWs7fXtcZjY3OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIEBHdW5nc3VoIFR1cjt9e1xmNjgyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQEd1bmdzdWggQmFsdGljO317XGY2ODdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEd1bmdzdWhDaGUgV2VzdGVybjt9DQp7XGY2ODVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgR3VuZ3N1aENoZSBDRTt9e1xmNjg2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEd1bmdzdWhDaGUgQ3lyO317XGY2ODhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgR3VuZ3N1aENoZSBHcmVlazt9e1xmNjg5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEd1bmdzdWhDaGUgVHVyO30NCntcZjY5MlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBHdW5nc3VoQ2hlIEJhbHRpYzt9e1xmNjk3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAR3VuZ3N1aENoZSBXZXN0ZXJuO317XGY2OTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQEd1bmdzdWhDaGUgQ0U7fXtcZjY5NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBAR3VuZ3N1aENoZSBDeXI7fQ0Ke1xmNjk4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEBHdW5nc3VoQ2hlIEdyZWVrO317XGY2OTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQEd1bmdzdWhDaGUgVHVyO317XGY3MDJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQEd1bmdzdWhDaGUgQmFsdGljO317XGY3MjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBEb2tDaGFtcGEgKFRoYWkpO30NCntcZjc0N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBAR3VsaW0gV2VzdGVybjt9e1xmNzQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQEd1bGltIENFO317XGY3NDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBAR3VsaW0gQ3lyO317XGY3NDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBAR3VsaW0gR3JlZWs7fQ0Ke1xmNzQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQEd1bGltIFR1cjt9e1xmNzUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQEd1bGltIEJhbHRpYzt9e1xmNzU3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBHdWxpbUNoZSBXZXN0ZXJuO317XGY3NTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgR3VsaW1DaGUgQ0U7fQ0Ke1xmNzU2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEd1bGltQ2hlIEN5cjt9e1xmNzU4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEd1bGltQ2hlIEdyZWVrO317XGY3NTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgR3VsaW1DaGUgVHVyO317XGY3NjJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgR3VsaW1DaGUgQmFsdGljO30NCntcZjc2N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQEd1bGltQ2hlIFdlc3Rlcm47fXtcZjc2NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBAR3VsaW1DaGUgQ0U7fXtcZjc2NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBAR3VsaW1DaGUgQ3lyO317XGY3NjhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQEd1bGltQ2hlIEdyZWVrO30NCntcZjc2OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBAR3VsaW1DaGUgVHVyO317XGY3NzJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQEd1bGltQ2hlIEJhbHRpYzt9e1xmNzc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBEb3R1bSBXZXN0ZXJuO317XGY3NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBARG90dW0gQ0U7fQ0Ke1xmNzc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQERvdHVtIEN5cjt9e1xmNzc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQERvdHVtIEdyZWVrO317XGY3NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBARG90dW0gVHVyO317XGY3ODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBARG90dW0gQmFsdGljO30NCntcZjc4N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgRG90dW1DaGUgV2VzdGVybjt9e1xmNzg1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIERvdHVtQ2hlIENFO317XGY3ODZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgRG90dW1DaGUgQ3lyO317XGY3ODhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgRG90dW1DaGUgR3JlZWs7fQ0Ke1xmNzg5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIERvdHVtQ2hlIFR1cjt9e1xmNzkyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIERvdHVtQ2hlIEJhbHRpYzt9e1xmNzk3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBARG90dW1DaGUgV2VzdGVybjt9e1xmNzk1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIEBEb3R1bUNoZSBDRTt9DQp7XGY3OTZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQERvdHVtQ2hlIEN5cjt9e1xmNzk4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEBEb3R1bUNoZSBHcmVlazt9e1xmNzk5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEBEb3R1bUNoZSBUdXI7fXtcZjgwMlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBARG90dW1DaGUgQmFsdGljO30NCntcZjgwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEltcGFjdCBDRTt9e1xmODA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgSW1wYWN0IEN5cjt9e1xmODA4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgSW1wYWN0IEdyZWVrO317XGY4MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBJbXBhY3QgVHVyO30NCntcZjgxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEltcGFjdCBCYWx0aWM7fXtcZjg2NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBMdWNpZGEgQ29uc29sZSBDRTt9e1xmODY2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEx1Y2lkYSBDb25zb2xlIEN5cjt9e1xmODY4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEx1Y2lkYSBDb25zb2xlIEdyZWVrO30NCntcZjg2OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBMdWNpZGEgQ29uc29sZSBUdXI7fXtcZjg3N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNYWxndW4gR290aGljIFdlc3Rlcm47fXtcZjg4N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBATWFsZ3VuIEdvdGhpYyBXZXN0ZXJuO317XGY4OTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWVpcnlvIFdlc3Rlcm47fQ0Ke1xmODk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWVpcnlvIENFO317XGY4OTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNZWlyeW8gQ3lyO317XGY4OThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNZWlyeW8gR3JlZWs7fXtcZjg5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1laXJ5byBUdXI7fQ0Ke1xmOTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWVpcnlvIEJhbHRpYzt9e1xmOTA3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNZWlyeW8gV2VzdGVybjt9e1xmOTA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1laXJ5byBDRTt9e1xmOTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1laXJ5byBDeXI7fQ0Ke1xmOTA4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1laXJ5byBHcmVlazt9e1xmOTA5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1laXJ5byBUdXI7fXtcZjkxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNZWlyeW8gQmFsdGljO317XGY5MTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWVpcnlvIFVJIFdlc3Rlcm47fQ0Ke1xmOTE1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWVpcnlvIFVJIENFO317XGY5MTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNZWlyeW8gVUkgQ3lyO317XGY5MThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNZWlyeW8gVUkgR3JlZWs7fXtcZjkxOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1laXJ5byBVSSBUdXI7fQ0Ke1xmOTIyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWVpcnlvIFVJIEJhbHRpYzt9e1xmOTI3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNZWlyeW8gVUkgV2VzdGVybjt9e1xmOTI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1laXJ5byBVSSBDRTt9e1xmOTI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1laXJ5byBVSSBDeXI7fQ0Ke1xmOTI4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1laXJ5byBVSSBHcmVlazt9e1xmOTI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1laXJ5byBVSSBUdXI7fXtcZjkzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNZWlyeW8gVUkgQmFsdGljO317XGY5NDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIFdlc3Rlcm47fQ0Ke1xmOTQ4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIEdyZWVrO317XGY5NTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1pY3Jvc29mdCBKaGVuZ0hlaSBXZXN0ZXJuO317XGY5NThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATWljcm9zb2Z0IEpoZW5nSGVpIEdyZWVrO30NCntcZjk2N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgV2VzdGVybjt9e1xmOTY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWljcm9zb2Z0IFlhSGVpIENFO317XGY5NjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgQ3lyO317XGY5NjhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgR3JlZWs7fQ0Ke1xmOTY5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgTWljcm9zb2Z0IFlhSGVpIFR1cjt9e1xmOTc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgV2VzdGVybjt9e1xmOTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBDRTt9e1xmOTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBDeXI7fQ0Ke1xmOTc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBHcmVlazt9e1xmOTc5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBUdXI7fXtcZjk4N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQE1pbmdMaVUgV2VzdGVybjt9e1xmOTk3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBQTWluZ0xpVSBXZXN0ZXJuO30NCntcZjEwMDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVV9IS1NDUyBXZXN0ZXJuO317XGYxMDE3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBNaW5nTGlVX0hLU0NTIFdlc3Rlcm47fXtcZjEwMjdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVS1FeHRCIFdlc3Rlcm47fXtcZjEwMzdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgQE1pbmdMaVUtRXh0QiBXZXN0ZXJuO30NCntcZjEwNDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgUE1pbmdMaVUtRXh0QiBXZXN0ZXJuO317XGYxMDU3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBQTWluZ0xpVS1FeHRCIFdlc3Rlcm47fXtcZjEwNjdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVV9IS1NDUy1FeHRCIFdlc3Rlcm47fQ0Ke1xmMTA3N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBATWluZ0xpVV9IS1NDUy1FeHRCIFdlc3Rlcm47fXtcZjEwOTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBNUyBHb3RoaWMgV2VzdGVybjt9e1xmMTA5NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBATVMgR290aGljIENFO317XGYxMDk2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEBNUyBHb3RoaWMgQ3lyO30NCntcZjEwOThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQE1TIEdvdGhpYyBHcmVlazt9e1xmMTA5OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBATVMgR290aGljIFR1cjt9e1xmMTEwMlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBATVMgR290aGljIEJhbHRpYzt9e1xmMTEwN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNUyBQR290aGljIFdlc3Rlcm47fQ0Ke1xmMTEwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIE1TIFBHb3RoaWMgQ0U7fXtcZjExMDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNUyBQR290aGljIEN5cjt9e1xmMTEwOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFBHb3RoaWMgR3JlZWs7fXtcZjExMDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNUyBQR290aGljIFR1cjt9DQp7XGYxMTEyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTVMgUEdvdGhpYyBCYWx0aWM7fXtcZjExMTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1TIFBHb3RoaWMgV2VzdGVybjt9e1xmMTExNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBNUyBQR290aGljIENFO317XGYxMTE2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1TIFBHb3RoaWMgQ3lyO30NCntcZjExMThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATVMgUEdvdGhpYyBHcmVlazt9e1xmMTExOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBNUyBQR290aGljIFR1cjt9e1xmMTEyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNUyBQR290aGljIEJhbHRpYzt9e1xmMTEyN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNUyBVSSBHb3RoaWMgV2VzdGVybjt9DQp7XGYxMTI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTVMgVUkgR290aGljIENFO317XGYxMTI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgTVMgVUkgR290aGljIEN5cjt9e1xmMTEyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFVJIEdvdGhpYyBHcmVlazt9e1xmMTEyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1TIFVJIEdvdGhpYyBUdXI7fQ0Ke1xmMTEzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIE1TIFVJIEdvdGhpYyBCYWx0aWM7fXtcZjExMzdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1TIFVJIEdvdGhpYyBXZXN0ZXJuO317XGYxMTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1TIFVJIEdvdGhpYyBDRTt9e1xmMTEzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNUyBVSSBHb3RoaWMgQ3lyO30NCntcZjExMzhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATVMgVUkgR290aGljIEdyZWVrO317XGYxMTM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1TIFVJIEdvdGhpYyBUdXI7fXtcZjExNDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBATVMgVUkgR290aGljIEJhbHRpYzt9e1xmMTE0N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQE1TIE1pbmNobyBXZXN0ZXJuO30NCntcZjExNDVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQE1TIE1pbmNobyBDRTt9e1xmMTE0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBATVMgTWluY2hvIEN5cjt9e1xmMTE0OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBATVMgTWluY2hvIEdyZWVrO317XGYxMTQ5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEBNUyBNaW5jaG8gVHVyO30NCntcZjExNTJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQE1TIE1pbmNobyBCYWx0aWM7fXtcZjExNTdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTVMgUE1pbmNobyBXZXN0ZXJuO317XGYxMTU1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgTVMgUE1pbmNobyBDRTt9e1xmMTE1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIE1TIFBNaW5jaG8gQ3lyO30NCntcZjExNThcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBNUyBQTWluY2hvIEdyZWVrO317XGYxMTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgTVMgUE1pbmNobyBUdXI7fXtcZjExNjJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBNUyBQTWluY2hvIEJhbHRpYzt9e1xmMTE2N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBATVMgUE1pbmNobyBXZXN0ZXJuO30NCntcZjExNjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBATVMgUE1pbmNobyBDRTt9e1xmMTE2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEBNUyBQTWluY2hvIEN5cjt9e1xmMTE2OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEBNUyBQTWluY2hvIEdyZWVrO317XGYxMTY5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQE1TIFBNaW5jaG8gVHVyO30NCntcZjExNzJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBATVMgUE1pbmNobyBCYWx0aWM7fXtcZjExOTVcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMzhcZnBycTIgTnlhbGEgQ0U7fXtcZjExOTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjJcZnBycTIgTnlhbGEgVHVyO317XGYxMjAyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTg2XGZwcnEyIE55YWxhIEJhbHRpYzt9DQp7XGYxMjI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgU2NyaXB0IENFO317XGYxMjI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgU2Vnb2UgU2NyaXB0IEN5cjt9e1xmMTIyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFNjcmlwdCBHcmVlazt9e1xmMTIyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFNlZ29lIFNjcmlwdCBUdXI7fQ0Ke1xmMTIzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFNlZ29lIFNjcmlwdCBCYWx0aWM7fXtcZjEyMzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBVSSBDRTt9e1xmMTIzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFVJIEN5cjt9e1xmMTIzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFVJIEdyZWVrO30NCntcZjEyMzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBTZWdvZSBVSSBUdXI7fXtcZjEyNDFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBTZWdvZSBVSSAoQXJhYmljKTt9e1xmMTI0MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFNlZ29lIFVJIEJhbHRpYzt9e1xmMTI0M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIFNlZ29lIFVJIChWaWV0bmFtZXNlKTt9DQp7XGYxMjQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgQ0U7fXtcZjEyNDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCBDeXI7fXtcZjEyNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCBHcmVlazt9e1xmMTI0OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFNlZ29lIFVJIFNlbWlib2xkIFR1cjt9DQp7XGYxMjUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgQmFsdGljO317XGYxMjUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgKFZpZXRuYW1lc2UpO317XGYxMjU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgTGlnaHQgQ0U7fQ0Ke1xmMTI1NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFVJIExpZ2h0IEN5cjt9e1xmMTI1OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFVJIExpZ2h0IEdyZWVrO317XGYxMjU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgU2Vnb2UgVUkgTGlnaHQgVHVyO317XGYxMjYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgTGlnaHQgQmFsdGljO30NCntcZjEyNjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBTZWdvZSBVSSBMaWdodCAoVmlldG5hbWVzZSk7fXtcZjEyNzdcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEyIEBTaW1TdW4gV2VzdGVybjt9e1xmMTI4N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgTlNpbVN1biBXZXN0ZXJuO317XGYxMjk3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBATlNpbVN1biBXZXN0ZXJuO30NCntcZjEzMDdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIFNpbVN1bi1FeHRCIFdlc3Rlcm47fXtcZjEzMTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBTaW1TdW4tRXh0QiBXZXN0ZXJuO317XGYxMzU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgQ0U7fXtcZjEzNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgU2FucyBTZXJpZiBDeXI7fQ0Ke1xmMTM1OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1pY3Jvc29mdCBTYW5zIFNlcmlmIEdyZWVrO317XGYxMzU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgVHVyO317XGYxMzYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgKEhlYnJldyk7fQ0Ke1xmMTM2MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIE1pY3Jvc29mdCBTYW5zIFNlcmlmIChBcmFiaWMpO317XGYxMzYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgQmFsdGljO317XGYxMzYzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgKFZpZXRuYW1lc2UpO30NCntcZjEzNjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBNaWNyb3NvZnQgU2FucyBTZXJpZiAoVGhhaSk7fXtcZjEzNzVcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMzhcZnBycTIgRWJyaW1hIENFO317XGYxMzc5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIEVicmltYSBUdXI7fXtcZjEzODJcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgRWJyaW1hIEJhbHRpYzt9DQp7XGYxMzkwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgR2lzaGEgKEhlYnJldyk7fXtcZjE0MTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBMZWVsYXdhZGVlIChUaGFpKTt9e1xmMTQyMVxmYmlkaSBcZm5pbFxmY2hhcnNldDE3OFxmcHJxMiBNaWNyb3NvZnQgVWlnaHVyIChBcmFiaWMpO317XGYxNDYxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgQW5kYWx1cyAoQXJhYmljKTt9DQp7XGYxNDY1XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjM4XGZwcnEyIEFyYWJpYyBUeXBlc2V0dGluZyBDRTt9e1xmMTQ2OVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE2MlxmcHJxMiBBcmFiaWMgVHlwZXNldHRpbmcgVHVyO317XGYxNDcxXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTc4XGZwcnEyIEFyYWJpYyBUeXBlc2V0dGluZyAoQXJhYmljKTt9DQp7XGYxNDcyXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTg2XGZwcnEyIEFyYWJpYyBUeXBlc2V0dGluZyBCYWx0aWM7fXtcZjE0ODFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBTaW1wbGlmaWVkIEFyYWJpYyAoQXJhYmljKTt9e1xmMTQ5MVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3OFxmcHJxMSBTaW1wbGlmaWVkIEFyYWJpYyBGaXhlZCAoQXJhYmljKTt9DQp7XGYxNDk1XGZiaWRpIFxmbmlsXGZjaGFyc2V0MjM4XGZwcnEyIFNha2thbCBNYWphbGxhIENFO317XGYxNDk5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIFNha2thbCBNYWphbGxhIFR1cjt9e1xmMTUwMVxmYmlkaSBcZm5pbFxmY2hhcnNldDE3OFxmcHJxMiBTYWtrYWwgTWFqYWxsYSAoQXJhYmljKTt9e1xmMTUwMlxmYmlkaSBcZm5pbFxmY2hhcnNldDE4NlxmcHJxMiBTYWtrYWwgTWFqYWxsYSBCYWx0aWM7fQ0Ke1xmMTUxMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRyYWRpdGlvbmFsIEFyYWJpYyAoQXJhYmljKTt9e1xmMTU5N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgRmFuZ1NvbmcgV2VzdGVybjt9e1xmMTYwN1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQEZhbmdTb25nIFdlc3Rlcm47fXtcZjE2MTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBTaW1IZWkgV2VzdGVybjt9DQp7XGYxNjI3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBLYWlUaSBXZXN0ZXJuO317XGYxNjM3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAS2FpVGkgV2VzdGVybjt9e1xmMTY1NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjIyXGZwcnEyIEFuZ3NhbmFVUEMgKFRoYWkpO317XGYxNjY0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMjJcZnBycTIgQnJvd2FsbGlhIE5ldyAoVGhhaSk7fQ0Ke1xmMTY3NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIEJyb3dhbGxpYVVQQyAoVGhhaSk7fXtcZjE2ODRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBDb3JkaWFVUEMgKFRoYWkpO317XGYxNjk0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgRGlsbGVuaWFVUEMgKFRoYWkpO317XGYxNzA0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgRXVjcm9zaWFVUEMgKFRoYWkpO30NCntcZjE3MTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBGcmVlc2lhVVBDIChUaGFpKTt9e1xmMTcyNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIElyaXNVUEMgKFRoYWkpO317XGYxNzM0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgSmFzbWluZVVQQyAoVGhhaSk7fXtcZjE3NDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDIyMlxmcHJxMiBLb2RjaGlhbmdVUEMgKFRoYWkpO30NCntcZjE3NTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBMaWx5VVBDIChUaGFpKTt9e1xmMTc1N1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTEgREZLYWktU0IgV2VzdGVybjt9e1xmMTc2N1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTEgQERGS2FpLVNCIFdlc3Rlcm47fXtcZjE3NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIENFO30NCntcZjE3NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIEN5cjt9e1xmMTc3OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgR3JlZWs7fXtcZjE3NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIFR1cjt9DQp7XGYxNzgwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgTHVjaWRhIFNhbnMgVW5pY29kZSAoSGVicmV3KTt9e1xmMTc4MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgQmFsdGljO317XGYxNzg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQmxhY2sgQ0U7fXtcZjE3ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBCbGFjayBDeXI7fQ0Ke1xmMTc4OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEFyaWFsIEJsYWNrIEdyZWVrO317XGYxNzg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgQmxhY2sgVHVyO317XGYxNzkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmxhY2sgQmFsdGljO317XGYxNzk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FuZGFyYSBDRTt9DQp7XGYxNzk2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ2FuZGFyYSBDeXI7fXtcZjE3OThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYW5kYXJhIEdyZWVrO317XGYxNzk5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FuZGFyYSBUdXI7fXtcZjE4MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBDYW5kYXJhIEJhbHRpYzt9DQp7XGYxODAzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FuZGFyYSAoVmlldG5hbWVzZSk7fXtcZjE4MDVcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQyMzhcZnBycTIgQ29taWMgU2FucyBNUyBDRTt9e1xmMTgwNlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDIwNFxmcHJxMiBDb21pYyBTYW5zIE1TIEN5cjt9e1xmMTgwOFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE2MVxmcHJxMiBDb21pYyBTYW5zIE1TIEdyZWVrO30NCntcZjE4MDlcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjJcZnBycTIgQ29taWMgU2FucyBNUyBUdXI7fXtcZjE4MTJcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxODZcZnBycTIgQ29taWMgU2FucyBNUyBCYWx0aWM7fXtcZjE4MTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ29uc29sYXMgQ0U7fXtcZjE4MTZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQ29uc29sYXMgQ3lyO30NCntcZjE4MThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQ29uc29sYXMgR3JlZWs7fXtcZjE4MTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ29uc29sYXMgVHVyO317XGYxODIyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIENvbnNvbGFzIEJhbHRpYzt9e1xmMTgyM1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2M1xmcHJxMSBDb25zb2xhcyAoVmlldG5hbWVzZSk7fQ0Ke1xmMTgyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIENvbnN0YW50aWEgQ0U7fXtcZjE4MjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDb25zdGFudGlhIEN5cjt9e1xmMTgyOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIENvbnN0YW50aWEgR3JlZWs7fXtcZjE4MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBDb25zdGFudGlhIFR1cjt9DQp7XGYxODMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ29uc3RhbnRpYSBCYWx0aWM7fXtcZjE4MzNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDb25zdGFudGlhIChWaWV0bmFtZXNlKTt9e1xmMTgzNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENvcmJlbCBDRTt9e1xmMTgzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIENvcmJlbCBDeXI7fQ0Ke1xmMTgzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENvcmJlbCBHcmVlazt9e1xmMTgzOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENvcmJlbCBUdXI7fXtcZjE4NDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBDb3JiZWwgQmFsdGljO317XGYxODQzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ29yYmVsIChWaWV0bmFtZXNlKTt9DQp7XGYxODQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgRnJhbmtsaW4gR290aGljIE1lZGl1bSBDRTt9e1xmMTg0NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEZyYW5rbGluIEdvdGhpYyBNZWRpdW0gQ3lyO317XGYxODQ4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgRnJhbmtsaW4gR290aGljIE1lZGl1bSBHcmVlazt9DQp7XGYxODQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgRnJhbmtsaW4gR290aGljIE1lZGl1bSBUdXI7fXtcZjE4NTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBGcmFua2xpbiBHb3RoaWMgTWVkaXVtIEJhbHRpYzt9e1xmMTg1NVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MjM4XGZwcnEyIEdhYnJpb2xhIENFO317XGYxODU2XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQyMDRcZnBycTIgR2FicmlvbGEgQ3lyO30NCntcZjE4NThcZmJpZGkgXGZkZWNvclxmY2hhcnNldDE2MVxmcHJxMiBHYWJyaW9sYSBHcmVlazt9e1xmMTg1OVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MTYyXGZwcnEyIEdhYnJpb2xhIFR1cjt9e1xmMTg2MlxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MTg2XGZwcnEyIEdhYnJpb2xhIEJhbHRpYzt9e1xmMTg2NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEdlb3JnaWEgQ0U7fQ0Ke1xmMTg2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEdlb3JnaWEgQ3lyO317XGYxODY4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgR2VvcmdpYSBHcmVlazt9e1xmMTg2OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIEdlb3JnaWEgVHVyO317XGYxODcyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgR2VvcmdpYSBCYWx0aWM7fQ0Ke1xmMTg3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIENFO317XGYxODc2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgQ3lyO317XGYxODc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgR3JlZWs7fXtcZjE4NzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBQYWxhdGlubyBMaW5vdHlwZSBUdXI7fQ0Ke1xmMTg4MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIEJhbHRpYzt9e1xmMTg4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIChWaWV0bmFtZXNlKTt9e1xmMTg4NVxmYmlkaSBcZm5pbFxmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBQcmludCBDRTt9e1xmMTg4NlxmYmlkaSBcZm5pbFxmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBQcmludCBDeXI7fQ0Ke1xmMTg4OFxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBQcmludCBHcmVlazt9e1xmMTg4OVxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MlxmcHJxMiBTZWdvZSBQcmludCBUdXI7fXtcZjE4OTJcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgUHJpbnQgQmFsdGljO317XGYxODk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgVHJlYnVjaGV0IE1TIENFO30NCntcZjE4OTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBUcmVidWNoZXQgTVMgQ3lyO317XGYxODk4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgVHJlYnVjaGV0IE1TIEdyZWVrO317XGYxODk5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgVHJlYnVjaGV0IE1TIFR1cjt9e1xmMTkwMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFRyZWJ1Y2hldCBNUyBCYWx0aWM7fQ0Ke1xmMTkwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIFZlcmRhbmEgQ0U7fXtcZjE5MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBWZXJkYW5hIEN5cjt9e1xmMTkwOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFZlcmRhbmEgR3JlZWs7fXtcZjE5MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBWZXJkYW5hIFR1cjt9DQp7XGYxOTEyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgVmVyZGFuYSBCYWx0aWM7fXtcZjE5MTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBWZXJkYW5hIChWaWV0bmFtZXNlKTt9e1xmMTkyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENhbGlicmkgTGlnaHQgQ0U7fXtcZjE5MjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIExpZ2h0IEN5cjt9DQp7XGYxOTI4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FsaWJyaSBMaWdodCBHcmVlazt9e1xmMTkyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgTGlnaHQgVHVyO317XGYxOTMyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBMaWdodCBCYWx0aWM7fXtcZjE5MzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIExpZ2h0IChWaWV0bmFtZXNlKTt9DQp7XGYxOTY3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIFdlc3Rlcm47fXtcZjE5NjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBDRTt9e1xmMTk2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIEN5cjt9e1xmMTk2OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIEdyZWVrO30NCntcZjE5NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBUdXI7fXtcZjE5NzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyAoSGVicmV3KTt9e1xmMTk3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIChBcmFiaWMpO30NCntcZjE5NzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBCYWx0aWM7fXtcZjE5NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyAoVmlldG5hbWVzZSk7fXtcZjE5NzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyAoVGhhaSk7fQ0Ke1xmMTk3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEJvb2sgQW50aXF1YSBDRTt9e1xmMTk3NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEJvb2sgQW50aXF1YSBDeXI7fXtcZjE5NzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBCb29rIEFudGlxdWEgR3JlZWs7fXtcZjE5NzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBCb29rIEFudGlxdWEgVHVyO30NCntcZjE5ODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBCb29rIEFudGlxdWEgQmFsdGljO317XGYxOTg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2VudHVyeSBHb3RoaWMgQ0U7fXtcZjE5ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDZW50dXJ5IEdvdGhpYyBDeXI7fXtcZjE5ODhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDZW50dXJ5IEdvdGhpYyBHcmVlazt9DQp7XGYxOTg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2VudHVyeSBHb3RoaWMgVHVyO317XGYxOTkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2VudHVyeSBHb3RoaWMgQmFsdGljO317XGYxOTk1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgQ0U7fXtcZjE5OTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBCb29rbWFuIE9sZCBTdHlsZSBDeXI7fQ0Ke1xmMTk5OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEJvb2ttYW4gT2xkIFN0eWxlIEdyZWVrO317XGYxOTk5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgVHVyO317XGYyMDAyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgQmFsdGljO30NCntcZjIwMTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBDRTt9e1xmMjAxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIE1TIFJlZmVyZW5jZSBTYW5zIFNlcmlmIEN5cjt9e1xmMjAxOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFJlZmVyZW5jZSBTYW5zIFNlcmlmIEdyZWVrO30NCntcZjIwMTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBUdXI7fXtcZjIwMjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBCYWx0aWM7fXtcZjIwMjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiAoVmlldG5hbWVzZSk7fQ0Ke1xmbG9tYWpvclxmMzE1MDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWFqb3JcZjMxNTA5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9tYWpvclxmMzE1MTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9tYWpvclxmMzE1MTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21ham9yXGYzMTUxM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9tYWpvclxmMzE1MTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9tYWpvclxmMzE1MTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21ham9yXGYzMTUxNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWFqb3JcZjMxNTE4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWFqb3JcZjMxNTE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtYWpvclxmMzE1MjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWFqb3JcZjMxNTIyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1ham9yXGYzMTUyM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtYWpvclxmMzE1MjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWFqb3JcZjMxNTI1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1ham9yXGYzMTUyNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWFqb3JcZjMxNTI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBDRTt9e1xmaGltYWpvclxmMzE1MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIEN5cjt9DQp7XGZoaW1ham9yXGYzMTUzMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIENhbWJyaWEgR3JlZWs7fXtcZmhpbWFqb3JcZjMxNTMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBUdXI7fXtcZmhpbWFqb3JcZjMxNTM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fQ0Ke1xmaGltYWpvclxmMzE1MzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDYW1icmlhIChWaWV0bmFtZXNlKTt9e1xmYmltYWpvclxmMzE1MzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWFqb3JcZjMxNTM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZiaW1ham9yXGYzMTU0MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmYmltYWpvclxmMzE1NDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1ham9yXGYzMTU0M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZiaW1ham9yXGYzMTU0NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmYmltYWpvclxmMzE1NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1ham9yXGYzMTU0NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fQ0Ke1xmbG9taW5vclxmMzE1NDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWlub3JcZjMxNTQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9taW5vclxmMzE1NTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9taW5vclxmMzE1NTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21pbm9yXGYzMTU1M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9taW5vclxmMzE1NTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9taW5vclxmMzE1NTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21pbm9yXGYzMTU1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWlub3JcZjMxNTU4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWlub3JcZjMxNTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtaW5vclxmMzE1NjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWlub3JcZjMxNTYyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1pbm9yXGYzMTU2M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtaW5vclxmMzE1NjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWlub3JcZjMxNTY1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1pbm9yXGYzMTU2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWlub3JcZjMxNTY4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FsaWJyaSBDRTt9e1xmaGltaW5vclxmMzE1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9DQp7XGZoaW1pbm9yXGYzMTU3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENhbGlicmkgR3JlZWs7fXtcZmhpbWlub3JcZjMxNTcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBUdXI7fXtcZmhpbWlub3JcZjMxNTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBCYWx0aWM7fQ0Ke1xmaGltaW5vclxmMzE1NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIChWaWV0bmFtZXNlKTt9e1xmYmltaW5vclxmMzE1NzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWlub3JcZjMxNTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZiaW1pbm9yXGYzMTU4MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmYmltaW5vclxmMzE1ODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1pbm9yXGYzMTU4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZiaW1pbm9yXGYzMTU4NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmYmltaW5vclxmMzE1ODVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1pbm9yXGYzMTU4NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fX0NCntcY29sb3J0Ymw7XHJlZDBcZ3JlZW4wXGJsdWUwO1xyZWQwXGdyZWVuMFxibHVlMjU1O1xyZWQwXGdyZWVuMjU1XGJsdWUyNTU7XHJlZDBcZ3JlZW4yNTVcYmx1ZTA7XHJlZDI1NVxncmVlbjBcYmx1ZTI1NTtccmVkMjU1XGdyZWVuMFxibHVlMDtccmVkMjU1XGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkMFxncmVlbjBcYmx1ZTEyODtccmVkMFxncmVlbjEyOFxibHVlMTI4O1xyZWQwXGdyZWVuMTI4XGJsdWUwOw0KXHJlZDEyOFxncmVlbjBcYmx1ZTEyODtccmVkMTI4XGdyZWVuMFxibHVlMDtccmVkMTI4XGdyZWVuMTI4XGJsdWUwO1xyZWQxMjhcZ3JlZW4xMjhcYmx1ZTEyODtccmVkMTkyXGdyZWVuMTkyXGJsdWUxOTI7XHJlZDI1NVxncmVlbjI1NVxibHVlMjU1O1xjaHlwZXJsaW5rXGN0aW50MjU1XGNzaGFkZTI1NVxyZWQwXGdyZWVuMFxibHVlMjU1O317XCpcZGVmY2hwIH17XCpcZGVmcGFwIA0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB9XG5vcWZwcm9tb3RlIHtcc3R5bGVzaGVldHtccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgTm9ybWFsO317XHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazU4IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgaGVhZGluZyAxO317XHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNTkgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDIsSGVhZGluZyAyIENoYXIxLEhlYWRpbmcgMiBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIyLEhlYWRpbmcgMiBDaGFyIENoYXIxLEhlYWRpbmcgMiBDaGFyMSBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIgQ2hhciBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIxIENoYXIxLEhlYWRpbmcgMiBDaGFyIENoYXIgQ2hhcjE7fQ0Ke1xzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDM7fXtcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsM1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFiXGFmMFxhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazYxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgaGVhZGluZyA0O317XHM1XHFsIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsNFxvdXRsaW5lbGV2ZWw0XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNjIgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDU7fXtcczZccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw1XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFiXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNTIgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDY7fXtcczdccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbms2MyBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IGhlYWRpbmcgNzt9e1xzOFxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsN1xvdXRsaW5lbGV2ZWw3XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSANClxhaVxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbms2NCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IGhlYWRpbmcgODt9e1xzOVxxaiBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw4XG91dGxpbmVsZXZlbDhcYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazY1IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgaGVhZGluZyA5O317XCpcY3MxMCBcYWRkaXRpdmUgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3ByaW9yaXR5MSBEZWZhdWx0IFBhcmFncmFwaCBGb250O317XCoNClx0czExXHRzcm93ZFx0cmZ0c1dpZHRoQjNcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0YmxpbmQwXHRibGluZHR5cGUzXHRzY2VsbHdpZHRoZnRzMFx0c3ZlcnRhbHRcdHNicmRydFx0c2JyZHJsXHRzYnJkcmJcdHNicmRyclx0c2JyZHJkZ2xcdHNicmRyZGdyXHRzYnJkcmhcdHNicmRydiANClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQxMSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcWZvcm1hdCBOb3JtYWwgVGFibGU7fXsNClxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbms0NCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgDQpCb2R5IFRleHQ7fXtcczE2XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQm9keSBUZXh0IDM7fXtcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTUgXHNuZXh0MTcgXHNsaW5rMTE5IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBCb2R5IFRleHQgRmlyc3QgSW5kZW50O317XHMxOFxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE4IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBCb2R5IFRleHQgSW5kZW50O317DQpcczE5XHFqIFxmaTE0NDBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24xOCBcc25leHQxOSBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQm9keSBUZXh0IEZpcnN0IEluZGVudCAyO317XHMyMFxxaiBcZmk3MDVcbGk3MjBccmkwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBCb2R5IFRleHQgSW5kZW50IDI7fXtcczIxXHFsIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjEgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IEJvZHkgVGV4dCBJbmRlbnQgMzt9e1xzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMiBcc2xpbms0MyBcc3R5cnNpZDIxNzY3MzYgZm9vdGVyO317DQpcczIzXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjMgXHNsaW5rNzEgXHN0eXJzaWQyMTc2NzM2IGhlYWRlcjt9e1wqXGNzMjQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHBhZ2UgbnVtYmVyO317DQpcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDI1IFxzbGluazQ3IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgVGl0bGU7fXtcczI2XHFsIFxsaTE0NDBccmkxNDQwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjE0NDBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyNiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQmxvY2sgVGV4dDt9e1xzMjdccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTcgXHNuZXh0MjcgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IE5vdGljZXM7fXtcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyOCBcc2xpbms0NiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgU2lnbmF0dXJlO317XHMyOVxxbCBcbGkwXHJpMFxzYTEyMFxzbDQ4MFxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyOSBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQm9keSBUZXh0IDI7fXtcKlx0czMwXHRzcm93ZA0KXHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aEIzXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJsaW5kMFx0YmxpbmR0eXBlM1x0c2NlbGx3aWR0aGZ0czBcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTEgXHNuZXh0MzAgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IFRhYmxlIEdyaWQ7fXsNClxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQyMTc2NzM2IHRvYyAxO317XHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNwcmlvcml0eTM5IFxzdHlyc2lkMjE3NjczNiB0b2MgMjt9e1xzMzNccWwgXGxpNDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQ4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgdG9jIDM7fXtcczM0XHFsIFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHRvYyA0O317XHMzNVxxbCBcbGk5NjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluOTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiB0b2MgNTt9e1xzMzZccWwgXGxpMTIwMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMjAwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiB0b2MgNjt9e1xzMzdccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiB0b2MgNzt9ew0KXHMzOFxxbCBcbGkxNjgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE2ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHRvYyA4O317XHMzOVxxbCBcbGkxOTIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE5MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHRvYyA5O317XHM0MFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXGNicGF0OSBccnRsY2hcZmNzMSANClxhZjM4XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZjM4XGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDQwIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgRG9jdW1lbnQgTWFwO317DQpcczQxXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzOFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGYzOFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ0MSBcc2xpbms0MiBcc3R5cnNpZDU5OTM1OTkgQmFsbG9vbiBUZXh0O30NCntcKlxjczQyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYzOFxhZnMxNiBcbHRyY2hcZmNzMCBcZjM4XGZzMTYgXHNiYXNlZG9uMTAgXHNsaW5rNDEgXHNsb2NrZWQgXHN0eXJzaWQ1OTkzNTk5IEJhbGxvb24gVGV4dCBDaGFyO317XCpcY3M0MyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNiBcbHRyY2hcZmNzMCBcZnMxNiBcc2Jhc2Vkb24xMCBcc2xpbmsyMiBcc2xvY2tlZCBcc3R5cnNpZDE2MTUwNDAzIEZvb3RlciBDaGFyO317XCoNClxjczQ0IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazE1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkNjI5MzI0NSBCb2R5IFRleHQgQ2hhcjt9e1wqXGNzNDUgXGFkZGl0aXZlIFx1bGRiXGNmMiBcc3R5cnNpZDExODc3NTk3IERlbHRhVmlldyBJbnNlcnRpb247fXtcKlxjczQ2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMjggXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQ4NDg1NzMxIFNpZ25hdHVyZSBDaGFyO317XCpcY3M0NyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGtlcm5pbmcyOCBcc2Jhc2Vkb24xMCBcc2xpbmsyNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDk1NzQyNDUgVGl0bGUgQ2hhcjt9e1wqXGNzNDggXGFkZGl0aXZlIA0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YyIFxzYmFzZWRvbjEwIFxzcHJpb3JpdHkwIFxzdHlyc2lkNTEzMTg4MCBIeXBlcmxpbms7fXtcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ0OSBcc3ByaW9yaXR5MCBcc3R5cnNpZDc4NjU1MzMgTWFjUGFjIFRyYWlsZXI7fXtcKlxjczUwIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjE1IFxzYmFzZWRvbjEwIFxzc2VtaWhpZGRlbiBcc3R5cnNpZDE0NzU1NTM3IFBsYWNlaG9sZGVyIFRleHQ7fXsNClxzNTFccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgXHN0eXJzaWQ2NzYzOTk3IA0KTy1Cb2R5IFRleHQgKCksMUJvZHksczE7fXtcKlxjczUyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rNiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDY3NjM5OTcgSGVhZGluZyA2IENoYXI7fXsNClxzNTNccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyNFxsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NTMgXHN1bmhpZGV1c2VkIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzQgXHN0eXJzaWQ2NzYzOTk3IExpc3QgUGFyYWdyYXBoO317XHM1NFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTQgXHNsaW5rNTUgXHNwcmlvcml0eTk0IFxzdHlyc2lkNjgxNzA3MiBmb290bm90ZSB0ZXh0O317XCpcY3M1NSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb24xMCBcc2xpbms1NCBcc2xvY2tlZCBcc3ByaW9yaXR5OTQgXHN0eXJzaWQ2ODE3MDcyIA0KRm9vdG5vdGUgVGV4dCBDaGFyO317XCpcY3M1NiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3VwZXIgXHNiYXNlZG9uMTAgXHN0eXJzaWQ2ODE3MDcyIGZvb3Rub3RlIHJlZmVyZW5jZTt9e1xzNTdccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NyBcc3Fmb3JtYXQgXHNwcmlvcml0eTEgXHN0eXJzaWQyNzY0MDQwIEJvZHk7fXtcKlxjczU4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgDQpIZWFkaW5nIDEgQ2hhcjt9e1wqXGNzNTkgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcdWwgXHNiYXNlZG9uMTAgXHNsaW5rMiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgDQpIZWFkaW5nIDIgQ2hhcixIZWFkaW5nIDIgQ2hhcjEgQ2hhcixIZWFkaW5nIDIgQ2hhciBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIyIENoYXIsSGVhZGluZyAyIENoYXIgQ2hhcjEgQ2hhcixIZWFkaW5nIDIgQ2hhcjEgQ2hhciBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIgQ2hhciBDaGFyIENoYXIgQ2hhcixIZWFkaW5nIDIgQ2hhcjEgQ2hhcjEgQ2hhcixIZWFkaW5nIDIgQ2hhciBDaGFyIENoYXIxIENoYXI7fXtcKlxjczYwIFxhZGRpdGl2ZSANClxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGZzMjYgXHNiYXNlZG9uMTAgXHNsaW5rMyBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyAzIENoYXI7fXtcKlxjczYxIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxmczI4IFxzYmFzZWRvbjEwIFxzbGluazQgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQyNzY0MDQwIEhlYWRpbmcgNCBDaGFyO30NCntcKlxjczYyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWlcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxiXGZzMjZcdWwgXHNiYXNlZG9uMTAgXHNsaW5rNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyA1IENoYXI7fXtcKlxjczYzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGZzMjQgDQpcc2Jhc2Vkb24xMCBcc2xpbms3IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjc2NDA0MCBIZWFkaW5nIDcgQ2hhcjt9e1wqXGNzNjQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rOCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyA4IENoYXI7fXtcKlxjczY1IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYxXGFmczIyIA0KXGx0cmNoXGZjczAgXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rOSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyA5IENoYXI7fXtcKlxjczY2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczE2IFxsdHJjaFxmY3MwIFxmczE2IFxzYmFzZWRvbjEwIFxzdW5oaWRldXNlZCBcc3R5cnNpZDI3NjQwNDAgYW5ub3RhdGlvbiByZWZlcmVuY2U7fXsNClxzNjdccWwgXGxpMFxyaTBcc2EyMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NjcgXHNsaW5rNjggXHN1bmhpZGV1c2VkIFxzdHlyc2lkMjc2NDA0MCBhbm5vdGF0aW9uIHRleHQ7fXtcKlxjczY4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjM3IFxzYmFzZWRvbjEwIFxzbGluazY3IFxzbG9ja2VkIFxzdHlyc2lkMjc2NDA0MCBDb21tZW50IFRleHQgQ2hhcjt9ew0KXHM2OVxxbCBcbGkwXHJpMFxzYTIwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb242NyBcc25leHQ2NyBcc2xpbms3MCBcc3VuaGlkZXVzZWQgXHN0eXJzaWQyNzY0MDQwIGFubm90YXRpb24gc3ViamVjdDt9e1wqXGNzNzAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzNyBcc2Jhc2Vkb242OCBcc2xpbms2OSBcc2xvY2tlZCBcc3R5cnNpZDI3NjQwNDAgQ29tbWVudCBTdWJqZWN0IENoYXI7fXtcKlxjczcxIFxhZGRpdGl2ZSANClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMjMgXHNsb2NrZWQgXHN0eXJzaWQyNzY0MDQwIEhlYWRlciBDaGFyO317XHM3MlxxbCBcbGkwXHJpMFxzbDQ4MFxzbG11bHQxXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3MiBcc3Fmb3JtYXQgXHNwcmlvcml0eTQgXHN0eXJzaWQzNDM4MDc4IE8tQm9keSBUZXh0IChEUyksMkJvZHksczI4O317XHM3M1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzMgXHNxZm9ybWF0IFxzcHJpb3JpdHk3IFxzdHlyc2lkMzQzODA3OCBPLUJvZHkgVGV4dCAoSiksM0JvZHksczEzO317DQpcczc0XHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDc0IFxzcWZvcm1hdCBcc3ByaW9yaXR5MSBcc3R5cnNpZDM0MzgwNzggDQpPLUJvZHkgVGV4dCAuNSIsMUhhbGYsczI7fXtcczc1XHFsIFxmaTcyMFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDc1IFxzcWZvcm1hdCBcc3ByaW9yaXR5NSBcc3R5cnNpZDM0MzgwNzggTy1Cb2R5IFRleHQgLjVcJzk0IChEUyksMkhhbGYsczI5O317XHM3NlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzYgXHNxZm9ybWF0IFxzcHJpb3JpdHk3IFxzdHlyc2lkMzQzODA3OCBPLUJvZHkgVGV4dCAuNVwnOTQgKEopLDNIYWxmLHMxNDt9e1xzNzdccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3NyBcc3Fmb3JtYXQgXHNwcmlvcml0eTIgXHN0eXJzaWQzNDM4MDc4IE8tQm9keSBUZXh0IDEiLDFGdWxsLHMzO317XHM3OFxxbCBcZmkxNDQwXGxpMFxyaTBcc2w0ODBcc2xtdWx0MQ0KXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzggXHNxZm9ybWF0IFxzcHJpb3JpdHk2IFxzdHlyc2lkMzQzODA3OCANCk8tQm9keSBUZXh0IDFcJzk0IChEUyksMkZ1bGwsczMwO317XHM3OVxxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDc5IFxzcWZvcm1hdCBcc3ByaW9yaXR5NyBcc3R5cnNpZDM0MzgwNzggTy1Cb2R5IFRleHQgMVwnOTQgKEopLDNGdWxsLHMxNTt9e1xzODBccWwgXGZpLTM2MFxsaTM2MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdHtcKlxwbiBccG5sdmxib2R5XGlsdmwwXGxzOVxwbnJub3QwXHBuZGVjIH0NClxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOVxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDgwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzIgXHN0eXJzaWQzNDM4MDc4IE8tQnVsbGV0ICgpLDFCdWxsZXQsczQ7fXsNClxzODFccWwgXGZpLTM2MFxsaTEwODBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxMDgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxMFxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDgxIFxzcHJpb3JpdHkzMiBcc3R5cnNpZDM0MzgwNzggTy1CdWxsZXQgLjUiLDJCdWxsZXQsczI2O317XHM4MlxxbCBcZmktMzYwXGxpMTgwMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE4MDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczExXGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0ODIgXHNwcmlvcml0eTMyIFxzdHlyc2lkMzQzODA3OCBPLUJ1bGxldCAxIiwzQnVsbGV0LHMyNzt9e1xzODNccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ4MyBcc3Fmb3JtYXQgXHNwcmlvcml0eTEwIFxzdHlyc2lkMzQzODA3OCBPLUluZGVudCAuNSIsSGFsZiBJbmRlbnQsczU7fXsNClxzODRccWwgXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDg0IFxzcWZvcm1hdCBcc3ByaW9yaXR5MTEgXHN0eXJzaWQzNDM4MDc4IE8tSW5kZW50IDEiLEZ1bGwgSW5kZW50LHM2O317XHM4NVxxbCBcbGkxNDQwXHJpMTQ0MFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODUgXHNwcmlvcml0eTMzIFxzdHlyc2lkMzQzODA3OCBPLVF1b3RlICgpLDFRdW90ZSxzNzt9e1xzODZccWwgXGxpMTQ0MFxyaTE0NDBcc2w0ODBcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODYgXHNwcmlvcml0eTMzIFxzdHlyc2lkMzQzODA3OCBPLVF1b3RlIChEUyksMlF1b3RlLHMxNzt9ew0KXHM4N1xxaiBcbGkxNDQwXHJpMTQ0MFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0ODcgXHNwcmlvcml0eTMzIFxzdHlyc2lkMzQzODA3OCBPLVF1b3RlIChKKSwzUXVvdGUsczE2O317XHM4OFxxbCBcZmktNTQ3XGxpNTQ3XHJpMFxzYjcyMFxzYTI0MFxrZWVwXHdpZGN0bHBhclx0cXJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW41NDdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODggXHNwcmlvcml0eTQ1IFxzdHlyc2lkMzQzODA3OCBPLVNpZ25hdHVyZSAoTEEpLFNpZyAoTEEpLHMxODt9e1xzODlccWwgXGxpNDMyMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3ByaW9yaXR5NDUgXHN0eXJzaWQzNDM4MDc4IE8tU2lnbmF0dXJlLFNpZ3MsczEyO317DQpcczkwXHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDUxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzcgXHN0eXJzaWQzNDM4MDc4IE8tVGl0bGUgMywzVGl0bGUsczIyO317XHM5MVxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGNhcHNcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNSBcc3R5cnNpZDM0MzgwNzggTy1USVRMRSwxVGl0bGUsczEwO317XHM5MlxxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ1MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTQwIFxzdHlyc2lkMzQzODA3OCBPLVRpdGxlIDYsNlRpdGxlLHMxMTt9ew0KXHM5M1xxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc25leHQ1MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTQxIFxzdHlyc2lkMzQzODA3OCBPLVRpdGxlIDcsN1RpdGxlLHMxOTt9e1xzOTRccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDUxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQzNDM4MDc4IE8tVGl0bGUgNSw1VGl0bGUsczg7fXtcczk1XHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNiBcc3R5cnNpZDM0MzgwNzggTy1UaXRsZSAyLDJUaXRsZSxzMjA7fXsNClxzOTZccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0OTYgXHNwcmlvcml0eTggXHN0eXJzaWQzNDM4MDc4IA0KTm8gU3BhY2luZzt9e1xzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcc2wtMzAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIxXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMjA1N1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDIwNTdcbGFuZ2ZlbnAxMDMzIA0KXHNuZXh0OTcgXHNwcmlvcml0eTM0IFxzdHlyc2lkMzQzODA3OCBQYXJ0aWVzO317XHM5OFxxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFxzbC0zMDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczEzXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjFcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzIwNTdcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAyMDU3XGxhbmdmZW5wMTAzMyBcc25leHQ5OCBcc3ByaW9yaXR5MzQgXHN0eXJzaWQzNDM4MDc4IEJhY2tncm91bmQ7fXtcczk5XHFyIFxsaTBccmkwXHdpZGN0bHBhclx0cXJcdHg3MjAwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGYzOVxmczE4XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0OTkgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFBEIEZvb3Rlcjt9e1xzMTAwXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDBcaGljaFxhZjQwXGRiY2hcYWY0MVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEwMCBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIEFydGljbGVzIE5vIEJ1bGxldHM7fXsNClxzMTAxXHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhNjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmNDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24xMDAgXHNuZXh0MTAxIFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQXJ0aWNsZXMgQnVsbGV0czt9e1xzMTAyXHFsIFxsaTBccmkwXHNiMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0MFxoaWNoXGFmNDBcZGJjaFxhZjQxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjEwMCBcc25leHQxMDIgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBBcnRpY2xlcyBIZWFkaW5nO317XHMxMDNccWwgXGZpMTgwXGxpMFxyaTBcc2E2MFxrZWVwblx3aWRjdGxwYXINClx0eDE4MFx0eDI1MjBcdHgyNzc5XHR4OTk3OVx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmNDFcY2dyaWRcbm9wcm9vZlxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDAgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBBcnRpY2xlcyBMZWFkaW47fXtcczEwNFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZjFcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTA0IFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQXR0b3JuZXkgSUQ7fXtcczEwNVxxbCBcbGkwXHJpMFxzYjI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmNDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTA1IFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQm9keSBUZXh0O317XHMxMDZccWwgXGZpLTE4MFxsaTE4MFxyaTBcc2ExMjBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGY0MFxoaWNoXGFmNDBcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc25leHQxMDYgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBCdWxsZXQgUXVhbGlmaWNhdGlvbjt9e1wqXGNzMTA3IFxhZGRpdGl2ZSBcYlxmMVxmczIwIFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQ2xpZW50L0Nhc2UvUHJvamVjdCBOYW1lO317DQpcczEwOFxxbCBcbGkxODdccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTg3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmNDFcY2dyaWRcbm9wcm9vZlxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDAgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBDb250YWN0IEluZm9ybWF0aW9uO317XHMxMDlccWwgXGxpMFxyaTBcc2EzNjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGlcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjQxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDEwOSBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIEVtYWlsO317XHMxMTBccXIgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMThcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGYzOVxoaWNoXGFmMzlcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTEwIFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgRm9vdGVyO317DQpcczExMVxxbCBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMzMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc25leHQxMDggXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBOYW1lO317XHMxMTJccWwgXGxpMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGYxXGhpY2hcYWYxXGRiY2hcYWY0MVxjZ3JpZFxub3Byb29mXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDExMiBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIFNpZGViYXI7fXtcczExM1xxbCBcZmktMTgwXGxpMTgwXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczE1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmNDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDExMyBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIFNpZGViYXIgQnVsbGV0O317XHMxMTRccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMxOFxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMTQgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBTaWRlYmFyIEhlYWQ7fXsNClxzMTE1XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNwcmlvcml0eTM4IFxzdHlyc2lkMzQzODA3OCANCk8tVGl0bGUgNCw0VGl0bGUsczk7fXtcczExNlxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGlcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNuZXh0NTEgXHNwcmlvcml0eTQyIFxzdHlyc2lkMzQzODA3OCBPLVRpdGxlIDgsOFRpdGxlLHMyMzt9e1xzMTE3XHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDUxIFxzcHJpb3JpdHkzNSBcc3R5cnNpZDM0MzgwNzggTy1DZW50ZXIsQ2VudGVyLHMyMTt9ew0KXHMxMThccWwgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcY2Fwc1xmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDUxIFxzcWZvcm1hdCBcc3ByaW9yaXR5NDMgXHN0eXJzaWQzNDM4MDc4IE8tVElUTEUgOSw5VElUTEUsczMxO317XCpcY3MxMTkgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjQgXHNiYXNlZG9uNDQgXHNsaW5rMTcgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQzNDM4MDc4IEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQgQ2hhcjt9fXtcKlxsaXN0dGFibGUNCntcbGlzdFxsaXN0dGVtcGxhdGVpZC0xOTYxMzIyODQwe1xsaXN0bGV2ZWxcbGV2ZWxuZmMxXGxldmVsbmZjbjFcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsbm9yZXN0YXJ0XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwOUFSVElDTEUgXCcwMDt9e1xsZXZlbG51bWJlcnNcJzA5O31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMxXGZpMFxsaTBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsbGVnYWxcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31ccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGIwXGkwXHNjYXBzMFxjYXBzMFx1bG5vbmVcY2YwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzMlxmaTcyMFxsaTBcamNsaXN0dGFiXHR4MTQ0MFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwNVwnMDAuXCcwMS5cJzAyO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMzXGZpNzIwXGxpNzIwXGpjbGlzdHRhYlx0eDIxNjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM0XGZpNzIwXGxpNzIwXGpjbGlzdHRhYlx0eDIxNjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzFcbGV2ZWxuZmNuMVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGkwXHNjYXBzMFxjYXBzMFx1bG5vbmVcY2YwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzNVxmaS03MjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpMFxzY2FwczBcY2FwczBcdWxub25lXGNmMFxmYmlhczBcaHJlczBcY2hocmVzMCBcczZcZmktNzIwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM3XGZpLTcyMFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwNyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM4XGZpMFxsaTE0NDANClxqY2xpc3R0YWJcdHgyMTYwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwOCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcczlcZmkwXGxpMjE2MFxqY2xpc3R0YWJcdHgyODgwXGxpbjIxNjAgfXtcbGlzdG5hbWUgUGFyYU51bSBBO31cbGlzdGlkNjU0OTQyMTN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTQwODg5NzY2MlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVycw0KO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSANCjt9XGxpc3RpZDIyMjEwNzEwOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjI5MzY1MTUwXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM4MFxmaS0zNjBcbGkzNjANClxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDQ4Nzg2ODMzM317XGxpc3RcbGlzdHRlbXBsYXRlaWQyMDAwNjkzMTBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMDkxOTg1NTg4DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzODJcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MQ0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTMNClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODkNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTENClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNjIzNzgwMjk0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xMDQ5NTg3MTYyXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSANCjt9XGxpc3RpZDY3NzczNjM5NX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjA5OTg1NTg4NFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTIwOTAxNDM5MTJcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9DQpcZjNcZnMxNlxmYmlhczBcaHJlczBcY2hocmVzMCBcczExM1xmaS0xODBcbGkxODBcamNsaXN0dGFiXHR4MTgwXGxpbjE4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDY5MTM0MTYzNX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTI0MDE2NDUzMFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODM5MDY0ODM2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcczgxXGZpLTM2MFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkODUzNzY0MTgzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDU1Njk3NDRcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDc1NjQzMDEwMFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTE5ODY3MDA2NlwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktNDY1XGxpMjYyNVxsaW4yNjI1IH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzk2MFxsaW4zOTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjEyMFxsaW42MTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjg0MFxsaW42ODQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNzU2MFxsaW43NTYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDExNTM2NDA4OTF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNTQ1ODAxMTM0DQpcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTE3MTA4MjkyMFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0xODBcbGkzMjQwXGxpbjMyNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk0NjgwXGxpbjQ2ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0xODBcbGk1NDAwXGxpbjU0MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk2MTIwXGxpbjYxMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk2ODQwXGxpbjY4NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0xODBcbGk3NTYwXGxpbjc1NjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTIyODg4MTUzNH17XGxpc3RcbGlzdHRlbXBsYXRlaWQyMDk5Mjg3Mjc2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTc5MjU2OTc0MA0KXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjUyMFxsaW4yNTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1DQpcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzDQpcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzk2MFxsaW4zOTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1DQpcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzDQpcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjEyMFxsaW42MTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjg0MFxsaW42ODQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1DQpcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNzU2MFxsaW43NTYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE0MDYxNTAzMjN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE4OTU5ODc1NlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE5NDIyNDkwNFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM5OFxmaS03MjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTU4MTc4NzYwM317XGxpc3RcbGlzdHRlbXBsYXRlaWQxNjAzMDM5NzBcbGlzdGh5YnJpZA0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxOTI0MTQ4MjgzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC04MjMzMzc0NzhcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwNjQ3NzEyNFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM5N1xmaS03MjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTkzNTI4NjQ2M317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjMzMTM5NzA4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzDQpcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY0NjcxMzYwMlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMxMDFcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDIxMDgxOTA0NzZ9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZXtcbGlzdG92ZXJyaWRlXGxpc3RpZDY1NDk0MjEzXGxpc3RvdmVycmlkZWNvdW50MFxsczF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjU0OTQyMTNcbGlzdG92ZXJyaWRlY291bnQ5e1xsZm9sZXZlbA0KXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MzN9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDIwfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdA0KXGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9XGxzMn17XGxpc3RvdmVycmlkZVxsaXN0aWQ2NTQ5NDIxM1xsaXN0b3ZlcnJpZGVjb3VudDd7XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX0NCntcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdA0KXGxldmVsc3RhcnRhdDJ9XGxzM317XGxpc3RvdmVycmlkZVxsaXN0aWQ2Nzc3MzYzOTVcbGlzdG92ZXJyaWRlY291bnQwXGxzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjI4ODgxNTM0XGxpc3RvdmVycmlkZWNvdW50MFxsczV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTE1MzY0MDg5MVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE0MDYxNTAzMjNcbGlzdG92ZXJyaWRlY291bnQwXGxzN30NCntcbGlzdG92ZXJyaWRlXGxpc3RpZDE5MjQxNDgyODNcbGlzdG92ZXJyaWRlY291bnQwXGxzOH17XGxpc3RvdmVycmlkZVxsaXN0aWQ0ODc4NjgzMzNcbGlzdG92ZXJyaWRlY291bnQwXGxzOX17XGxpc3RvdmVycmlkZVxsaXN0aWQ4NTM3NjQxODNcbGlzdG92ZXJyaWRlY291bnQwXGxzMTB9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjIzNzgwMjk0XGxpc3RvdmVycmlkZWNvdW50MFxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE5MzUyODY0NjMNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMn17XGxpc3RvdmVycmlkZVxsaXN0aWQxNTgxNzg3NjAzXGxpc3RvdmVycmlkZWNvdW50MFxsczEzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIxMDgxOTA0NzZcbGlzdG92ZXJyaWRlY291bnQwXGxzMTR9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjkxMzQxNjM1XGxpc3RvdmVycmlkZWNvdW50MFxsczE1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIyMjEwNzEwOVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNn19e1wqXHJldnRibCB7VW5rbm93bjt9fQ0Ke1wqXHBncHRibCB7XHBncFxpcGdwMFxpdGFwMFxsaTBccmkwXHNiMFxzYTB9fXtcKlxyc2lkdGJsIFxyc2lkMTIzOTRccnNpZDY5MjU2XHJzaWQ4MzUxNFxyc2lkODY2NzJccnNpZDE0ODIxOFxyc2lkMTYxNjA0XHJzaWQyMDczODlccnNpZDMyODk2NFxyc2lkMzMyMTAzXHJzaWQzMzc1MTdccnNpZDQxNTkwMlxyc2lkNDc4NDc0XHJzaWQ1MzkzMDFccnNpZDU5MDgzOFxyc2lkNjAxNzc4XHJzaWQ2MTUzOTRccnNpZDYxNzE1Mlxyc2lkNjU4OTkzDQpccnNpZDY1OTk4Nlxyc2lkNjYyNTM2XHJzaWQ3NDkxMzNccnNpZDc5NDcyOVxyc2lkODEyNzM4XHJzaWQ4MTY1MjNccnNpZDg1MjQxOVxyc2lkODYwODYyXHJzaWQ5NDQ2NzVccnNpZDEwMDI3OThccnNpZDEwMDI5ODZccnNpZDEwNDg3NjlccnNpZDExNDQwNzFccnNpZDEyMDQ0MjdccnNpZDEyNDg0NTNccnNpZDEyNTY4MjRccnNpZDEyNjc2MDVccnNpZDEyNzI1MzVccnNpZDEyNzQzNThccnNpZDEzODg4NTFccnNpZDE0MDc5NjVccnNpZDE1MzQ4NTMNClxyc2lkMTU5NjU2M1xyc2lkMTU5NjYzNFxyc2lkMTYwMTE4OFxyc2lkMTY1MTkwOFxyc2lkMTY2NzU1N1xyc2lkMTcxMjE2NFxyc2lkMTc3OTc2NFxyc2lkMTg1MzczMlxyc2lkMjA0MjUzMFxyc2lkMjA5ODc1N1xyc2lkMjEyODczNlxyc2lkMjE3NjczNlxyc2lkMjE4MDE2MFxyc2lkMjMwMjIxNVxyc2lkMjMxMTczOFxyc2lkMjMyMzE2NVxyc2lkMjMyMzg5NFxyc2lkMjM2NDIwMlxyc2lkMjM2NzU0Mlxyc2lkMjQyODE2OFxyc2lkMjQ0NDI1MA0KXHJzaWQyNDUxNDI4XHJzaWQyNTAyODMzXHJzaWQyNTEwOTgyXHJzaWQyNjQyMDExXHJzaWQyNzYxMjk3XHJzaWQyNzY0MDQwXHJzaWQyNzcwMzQzXHJzaWQyODkzMzU2XHJzaWQyOTYyMTUyXHJzaWQyOTcyNTQwXHJzaWQzMDgzNzAwXHJzaWQzMDg4OTI3XHJzaWQzMDg5Njk0XHJzaWQzMDkzMDQ0XHJzaWQzMjE1OTEzXHJzaWQzMjI4ODM1XHJzaWQzMjgzODUyXHJzaWQzMzAxMDI0XHJzaWQzMzYwMzE4XHJzaWQzMzcxOTA5XHJzaWQzNDEyMTk1DQpccnNpZDM0MTMxMjZccnNpZDM0MzgwNzhccnNpZDM1MDE5NDRccnNpZDM2MDU0MDJccnNpZDM2ODEwMzhccnNpZDM2ODU4NDVccnNpZDM2OTkwMTRccnNpZDM3NDcyMzNccnNpZDM3NjUxNjBccnNpZDM4MTQ0MDlccnNpZDM4MTc4MThccnNpZDM4Nzk1ODhccnNpZDM5NTE0MjVccnNpZDM5NTQyOTlccnNpZDM5NjI3OTNccnNpZDM5OTc3MTdccnNpZDQwMDQyMzhccnNpZDQyMDk2NjlccnNpZDQyMjMwOThccnNpZDQyNzg1MjBccnNpZDQzNDI4NTkNClxyc2lkNDQwOTc4M1xyc2lkNDQ4MzMwNFxyc2lkNDUzMjIzNlxyc2lkNDU5MTYwN1xyc2lkNDYwNzg5NFxyc2lkNDYxODA0N1xyc2lkNDY1NTcxOFxyc2lkNDY2NzA3N1xyc2lkNDY3NTMwNlxyc2lkNDY3NjM2N1xyc2lkNDc0OTc4OVxyc2lkNDc5NzY2NVxyc2lkNDgxMTk0Nlxyc2lkNDgxMjc1NFxyc2lkNDg1MjgyMFxyc2lkNDg1OTExOVxyc2lkNTAwMTcyMFxyc2lkNTA0NzYzN1xyc2lkNTA2NTUwMlxyc2lkNTEzMTg4MFxyc2lkNTE5Mzk2NA0KXHJzaWQ1MTk4MDgxXHJzaWQ1MjcyNTkwXHJzaWQ1MzIzMzQxXHJzaWQ1MzkxNjM0XHJzaWQ1NDQzMDc5XHJzaWQ1NDQ1OTc5XHJzaWQ1NTEyMDA4XHJzaWQ1NTIyNTg1XHJzaWQ1NTc0NDI4XHJzaWQ1NTk0NTI0XHJzaWQ1NzAzOTYxXHJzaWQ1NzI0MTk4XHJzaWQ1NzcxMDYxXHJzaWQ1NzgxMDYwXHJzaWQ1Nzk3NzU0XHJzaWQ1OTE4MzI5XHJzaWQ1OTkzNTk5XHJzaWQ2MTYxNzc4XHJzaWQ2MTczNDE4XHJzaWQ2MTg2MTYxXHJzaWQ2MjQwNzUzDQpccnNpZDYyNTUzNDNccnNpZDYyNTU4MzBccnNpZDYyOTMyNDVccnNpZDYzMDc0MTlccnNpZDYzMTk3NzRccnNpZDY0MjMzMDFccnNpZDY1ODU4MTFccnNpZDY2MzU2NDVccnNpZDY2Mzg3MThccnNpZDY2NDAwNzlccnNpZDY2NDYwNTdccnNpZDY2ODg5NDRccnNpZDY3MTA5NjJccnNpZDY3NjM5OTdccnNpZDY4MTcwNzJccnNpZDY4Mzk2ODZccnNpZDY4NDUzMzNccnNpZDY4OTkxNTlccnNpZDY5NjY0MTVccnNpZDY5NzIxODdccnNpZDcwMTMxNjQNClxyc2lkNzA3ODAwMlxyc2lkNzEwMDM1Nlxyc2lkNzEwOTUwMlxyc2lkNzE2Mzc5OVxyc2lkNzE3MTk5Nlxyc2lkNzE3MjE2N1xyc2lkNzI3OTM5NVxyc2lkNzMwMDkzMFxyc2lkNzM1MDQ1NVxyc2lkNzM1ODc5MFxyc2lkNzQzNjI5NFxyc2lkNzQ4NzQwNVxyc2lkNzQ5MDk3OFxyc2lkNzU1Njk3Mlxyc2lkNzczNzM5N1xyc2lkNzc0MzczMlxyc2lkNzc0NjY5Mlxyc2lkNzg2NTUzM1xyc2lkNzg2ODA2MFxyc2lkNzg3MTcxOVxyc2lkNzkzMTQxNQ0KXHJzaWQ3OTQ4ODA3XHJzaWQ3OTU2MzA0XHJzaWQ4MDgwODEyXHJzaWQ4MTUwNjIzXHJzaWQ4MTU0NTQ1XHJzaWQ4MjEwNzMwXHJzaWQ4MzMyOTE0XHJzaWQ4NDU3NDQxXHJzaWQ4NDY5OTAwXHJzaWQ4NDgyMzM2XHJzaWQ4NDg1NzMxXHJzaWQ4NDg1ODIzXHJzaWQ4NjExNTIxXHJzaWQ4NjE2MTM0XHJzaWQ4NjU0MzEwXHJzaWQ4NjY0MzI4XHJzaWQ4NjcyNDEwXHJzaWQ4NzQwNTMwXHJzaWQ4ODA0MTg5XHJzaWQ4OTI3NDgzXHJzaWQ4OTM0ODU4DQpccnNpZDkwNTY2NzFccnNpZDkwNjkyODJccnNpZDkxODA0ODFccnNpZDkxODE1MTdccnNpZDkxOTIxNTlccnNpZDkzMzA2NTZccnNpZDkzNzM3OThccnNpZDkzODM5NzFccnNpZDkzODQ1NjFccnNpZDk0NDkwNTlccnNpZDk0NjUxMzFccnNpZDk1MDcyNzNccnNpZDk1MTk5MzhccnNpZDk1NzQyNDVccnNpZDk1OTYwNDZccnNpZDk3MTAwNjVccnNpZDk3MjA5NThccnNpZDk3OTU0NjhccnNpZDk4MzcxODJccnNpZDEwMDM5OTE5XHJzaWQxMDEwMzcwNg0KXHJzaWQxMDEwNjk0Nlxyc2lkMTAxNzkzMDNccnNpZDEwMTkwNDU2XHJzaWQxMDIyODU4OFxyc2lkMTAzNTkyNTlccnNpZDEwNDIzMjQzXHJzaWQxMDQ0OTU2MFxyc2lkMTA0NTEzMTRccnNpZDEwNTE2NTg1XHJzaWQxMDU1NzA2OVxyc2lkMTA1NjEwODlccnNpZDEwNTYyMjUzXHJzaWQxMDY5NTE1NFxyc2lkMTA3MDI5MzhccnNpZDEwNzYxNDg4XHJzaWQxMDgxNTU2MFxyc2lkMTA4OTI2MzFccnNpZDEwODk2MTk2XHJzaWQxMDkwNTE3NQ0KXHJzaWQxMDkxMDUyMVxyc2lkMTEwMzQ3OTBccnNpZDExMDQwMzA2XHJzaWQxMTE0MjE1Mlxyc2lkMTExNTQ2MjVccnNpZDExMjE4NDM1XHJzaWQxMTIyODgyNFxyc2lkMTEyNzc4ODNccnNpZDExMjk5MDE2XHJzaWQxMTMzOTE3N1xyc2lkMTEzNDIxOTdccnNpZDExMzQ1MTQwXHJzaWQxMTM0NjEzMFxyc2lkMTEzNDk2NDVccnNpZDExMzU5MjQ4XHJzaWQxMTQyNTk1MVxyc2lkMTE0Mjg2OTdccnNpZDExNDY5NjY1XHJzaWQxMTQ3MDQ3Nw0KXHJzaWQxMTU1MDMzNVxyc2lkMTE2NzMxNTJccnNpZDExNjk2MTcyXHJzaWQxMTc1ODc1OFxyc2lkMTE3NjMyMTNccnNpZDExODExNzk4XHJzaWQxMTgyNjg2Nlxyc2lkMTE4NjQ4MzVccnNpZDExODc3NTk3XHJzaWQxMTg5Mzc5MFxyc2lkMTE5NDU3NzZccnNpZDEyMDA3MTI4XHJzaWQxMjAxMjI1OVxyc2lkMTIwMTk0NzBccnNpZDEyMDcxMTM5XHJzaWQxMjA4NTc1MFxyc2lkMTIwODU5NDZccnNpZDEyMDg3NTEzXHJzaWQxMjA4ODA2OA0KXHJzaWQxMjA4OTI4Nlxyc2lkMTIxMzQwNzlccnNpZDEyMTM5NjE5XHJzaWQxMjQwOTgwMFxyc2lkMTI0MTExMTJccnNpZDEyNDY5Nzc3XHJzaWQxMjQ3MDg0Nlxyc2lkMTI2MTM5ODRccnNpZDEyNjY1NDMxXHJzaWQxMjY2OTg1NVxyc2lkMTI3MzM0MTVccnNpZDEyNzkxODIyXHJzaWQxMjc5Mjk3MFxyc2lkMTI4NTAxMzVccnNpZDEyODY2Nzk0XHJzaWQxMjg2OTcyM1xyc2lkMTI5MTY2OTVccnNpZDEzMDUzMzM4XHJzaWQxMzA3MTE3MA0KXHJzaWQxMzExMTkzMVxyc2lkMTMxMTYyMzlccnNpZDEzMTc2NzEzXHJzaWQxMzE4MDg1Nlxyc2lkMTMxOTA3NzdccnNpZDEzMjQ5MDMxXHJzaWQxMzI2Nzc2M1xyc2lkMTMzMTY0ODBccnNpZDEzMzI1MTQ2XHJzaWQxMzM3MDAzMlxyc2lkMTMzNzU1MTNccnNpZDEzMzc2ODQyXHJzaWQxMzM4MDUyMVxyc2lkMTM1MDU3NDVccnNpZDEzNTA3MzEyXHJzaWQxMzUyNzE4Nlxyc2lkMTM1ODkyMDBccnNpZDEzNjM3NDAwXHJzaWQxMzY0NzgzNw0KXHJzaWQxMzg1NjA1OVxyc2lkMTM4NTYzNTlccnNpZDEzOTE1NDczXHJzaWQxMzk3NDIzNVxyc2lkMTM5NzUxNzFccnNpZDE0MDUzMDYyXHJzaWQxNDA5MjY3Mlxyc2lkMTQxMDU3MDdccnNpZDE0MTA5ODkwXHJzaWQxNDExNzA0MFxyc2lkMTQxNjQ0NTVccnNpZDE0MTgzOTc0XHJzaWQxNDI4ODAzNlxyc2lkMTQyOTE5MjZccnNpZDE0MzczOTY0XHJzaWQxNDQ0MzU1Mlxyc2lkMTQ2MTYxNDZccnNpZDE0NjI3MDcwXHJzaWQxNDYzMjQ5NA0KXHJzaWQxNDY0NTk3OFxyc2lkMTQ2ODI1ODVccnNpZDE0NjkyNDMwXHJzaWQxNDY5Mjg0OFxyc2lkMTQ3NTI3MTJccnNpZDE0NzU1NTM3XHJzaWQxNDc2MDEzM1xyc2lkMTQ3NzAyMjBccnNpZDE0NzcwMjU1XHJzaWQxNDgxNTYyNFxyc2lkMTQ4MTU3MDNccnNpZDE0ODc3Mzk2XHJzaWQxNDg5MjU5OVxyc2lkMTQ5MDQwMTdccnNpZDE0OTUyMTA3XHJzaWQxNDk2Mjg5Nlxyc2lkMTUwODgwNjdccnNpZDE1MDkyOTEzXHJzaWQxNTE0MzE4Nw0KXHJzaWQxNTIxMTQyNlxyc2lkMTUyMTcxOTlccnNpZDE1MjcxNTc4XHJzaWQxNTI4OTkxOFxyc2lkMTUzNDYyODFccnNpZDE1NDI2MTc4XHJzaWQxNTQzMDYzNFxyc2lkMTU0NzQ1MTlccnNpZDE1NDk4NjMyXHJzaWQxNTUzOTE4OFxyc2lkMTU1NjM0ODdccnNpZDE1Njg0NTk3XHJzaWQxNTc0NDExNlxyc2lkMTU3NDY5MDVccnNpZDE1NzYxMjY0XHJzaWQxNTc5NDg4N1xyc2lkMTU4MDU5MTFccnNpZDE1ODE1ODkyXHJzaWQxNTg3MzczMw0KXHJzaWQxNTg4MTk2Nlxyc2lkMTU5MzQwMjhccnNpZDE1OTQxOTAyXHJzaWQxNjAwMTA1M1xyc2lkMTYwMDI1NjVccnNpZDE2MDAzNzM0XHJzaWQxNjAxNDI1NFxyc2lkMTYwMjI2OTZccnNpZDE2MDcxMjk2XHJzaWQxNjA4MTAxMVxyc2lkMTYxMzExNTFccnNpZDE2MTM0MzM4XHJzaWQxNjE1MDQwM1xyc2lkMTYxOTE3NTVccnNpZDE2MjY4MzU0XHJzaWQxNjQwNTI4MVxyc2lkMTY0ODEzNTZccnNpZDE2NTE4OTg1XHJzaWQxNjUzNzQyMQ0KXHJzaWQxNjUzOTc5NFxyc2lkMTY1OTM4OTRccnNpZDE2NTk0MzYwXHJzaWQxNjYwNTk0NFxyc2lkMTY2MTMxOTRccnNpZDE2NjYzODUxfXtcbW1hdGhQclxtbWF0aEZvbnQzNFxtYnJrQmluMFxtYnJrQmluU3ViMFxtc21hbGxGcmFjMFxtZGlzcERlZjFcbWxNYXJnaW4wXG1yTWFyZ2luMFxtZGVmSmMxXG13cmFwSW5kZW50MTQ0MFxtaW50TGltMFxtbmFyeUxpbTF9e1xpbmZve1xjcmVhdGltXHlyMjAxNVxtbzZcZHkyOVxocjEzXG1pbjQyfQ0Ke1xyZXZ0aW1ceXIyMDE1XG1vNlxkeTI5XGhyMTNcbWluNDJ9e1x2ZXJzaW9uMX17XGVkbWluczB9e1xub2ZwYWdlczN9e1xub2Z3b3JkczQzMzgwfXtcbm9mY2hhcnMyNDcyNjl9e1xub2ZjaGFyc3dzMjkwMDY5fXtcdmVybjMyNzc1fX17XCpceG1sbnN0Ymwge1x4bWxuczEgaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2Uvd29yZC8yMDAzL3dvcmRtbH17XHhtbG5zMiB1cm4tbGVnYWxtYWNwYWMtZGF0YS8xMH19DQpccGFwZXJ3MTIyNDBccGFwZXJoMTU4NDBcbWFyZ2wxNDQwXG1hcmdyMTQ0MFxtYXJndDE0NDBcbWFyZ2IxNDQwXGd1dHRlcjBcbHRyc2VjdCANClx3aWRvd2N0cmxcZnRuYmpcYWVuZGRvY1x0cmFja21vdmVzMFx0cmFja2Zvcm1hdHRpbmcwXGRvbm90ZW1iZWRzeXNmb250MVxyZWx5b252bWwxXGRvbm90ZW1iZWRsaW5nZGF0YTBcZ3JmZG9jZXZlbnRzMFx2YWxpZGF0ZXhtbDFcc2hvd3BsYWNlaG9sZHRleHQwXGlnbm9yZW1peGVkY29udGVudDBcc2F2ZWludmFsaWR4bWwwXHNob3d4bWxlcnJvcnMxXG5veGxhdHRveWVuDQpcZXhwc2hydG5cbm91bHRybHNwY1xkbnRibG5zYmRiXG5vc3BhY2Vmb3J1bFxmb3Jtc2hhZGVcaG9yemRvY1xkZ21hcmdpblxkZ2hzcGFjZTU3XGRndnNwYWNlMTgwXGRnaG9yaWdpbjE0NDBcZGd2b3JpZ2luMTQ0MFxkZ2hzaG93MVxkZ3ZzaG93Mg0KXGpleHBhbmRcdmlld2tpbmQxXHZpZXdzY2FsZTEwMFxwZ2JyZHJoZWFkXHBnYnJkcmZvb3Rcc3BseXR3bmluZVxmdG5seXR3bmluZVxodG1hdXRzcFxub2xuaHRhZGp0YmxcdXNlbHRiYWxuXGFsbnRibGluZFxseXRjYWxjdGJsd2RcbHl0dGJscnRnclxsbmJya3J1bGVcbm9icmt3cnB0Ymxcc25hcHRvZ3JpZGluY2VsbFxyZW1wZXJzb25hbGluZm9cYWxsb3dmaWVsZGVuZHNlbA0KXHdycHB1bmN0XGFzaWFuYnJrcnVsZVxyc2lkcm9vdDU5OTM1OTlcbmV3dGJsc3R5cnVsc1xub2dyb3dhdXRvZml0XHJlbWR0dG1cdXRpbmwgXGZldDB7XCpcd2dyZmZtdGZpbHRlciAwMTM4fVxpbGZvbWFjYXRjbG51cDE2DQp7XCpcZG9jdmFyIHttcG8wMDUwMDEwMX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDE2ODMzOTZ9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzAyODYzMDk3fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8wMzE3MTgxOX17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMDMzMDE5NjB9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8wMzY1ODUyMX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzAzOTIzMjczfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDM5NzU4MDN9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzA2NjI4MTIwfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8wNjc1MzUzNH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzA3MDM5ODM5fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8wNzUzMjE4NX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDg2MDU1MjJ9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzA5MTkwNTcxfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8wOTY3MzY1NX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTAyMTU1Mzl9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8xMDY5Mjc1MX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzExNDM4Mjg2fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8xMjY2MTg4MH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTM4NTMxNTF9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8xNDIwNTI5NX17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMTQ1MTY3NzF9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8xNTQzMjUxOX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzE1NDgwNTcyfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8xNTk3MjQ4M317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTYyNDE1NDR9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzE2OTU3NTYzfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTcyNDM3MTl9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzE3Nzc4MTA1fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8xNzk1OTYxM317Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzE4MTI3MTkxfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8xODY3ODc1NX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzIwMTg5MDExfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjA1MDQxMjN9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzIwODIyMDE4fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yMDgyNTU4M317SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMjEwNTU3MTB9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8yMjg5NzIwMn17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjMwNDMzNDB9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzIzNjY2MTk3fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjM4OTMxMzB9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzI1MjU4NzkxfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjU2ODg3NjF9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzI2ODAwODg5fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yNjkxMTM2MH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjY5MjI4NzZ9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzI3MTE5MjYxfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjcyMTE1Mjl9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzI3MjY4Mjk2fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8yNzM4ODQ3MX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzI3ODIxMDcwfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8yODkwMjIyMX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjkwNjc2MzB9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzI5MDc5ODM3fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8yOTI1MjIwN317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzEyNTY0OTF9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzMxOTgyMzU2fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zMjI2MzU0MX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzMyNTEwNDAwfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8zMzA4MTA1NX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzMzMDg2MDIwfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8zMzcxNDExMH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzMzNzgzODQ3fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8zMzgwMDEwMX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzM0MjQzNDcwfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzQyODgwNDN9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8zNDM4ODI5Mn17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzM0NjM0MzgyfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzQ2NzA3ODJ9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzM0ODkzNDg5fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8zNTgwMDQzOX17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMzc2MTYwNzR9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zODEzMzkwN317SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzM4OTc5NTAxfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zOTIwMjA0MH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDA0NTIxNDd9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG80MTE0MTEwNX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzQzMjk0MjkzfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG80MzQ5NjcyOH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzQzNTI3MDAxfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDQ1MDc4MzF9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG80NDg4NDI3Nn17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDYwOTY5OTJ9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzQ2MTg1MjM3fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG80NjQwODM3OX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDY0MjAyNDZ9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG80NjU3NTIzMH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzQ2NzE2MzIxfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDczMTIyMTh9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzQ3MzQyNTkyfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG80NzkwMjQ3MX17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNDk1NTAwNTZ9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzUwMTIwMDYyfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG81MDcxMDQ1OH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTE2NzcwMzB9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzUxOTQ1NDMwfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG81MjE4MzEwNH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzUyNDkyMTEyfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG81MzcyNjIyMH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzUzOTM0MTQ1fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG81Mzk4ODA4MX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTQxMjM4NDN9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG81NDc0MTk5N317SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTQ4NTE2MDl9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzU0OTgyOTkwfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTUwMTczNTh9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzU1Mjg1OTQzfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG81NjE0NDkwNX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTczMjk5Mjl9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzU5NjUxMTg0fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTk4MzY5Nzh9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzYwMDI1MDQ4fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjAyODI1OTR9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG82MDYwMjA1MX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzYwOTQ1MjE5fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82MTQ2NTAxM317SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzYxNjY2NTA3fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82MTc4Mjc5NX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzYxOTExOTM1fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82MjI5NDU5Nn17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNjM5ODI0Njl9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzY0MDk2MDg3fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjQ4NDkxNjh9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzY0OTcwOTI4fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG82NTAyMzU1M317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjUxNDU4MDh9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzY1NTgzMzE4fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG82NjQzNTAwM317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjY3OTMyMjF9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzY3OTQ1Njk1fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjgyNDMyMjN9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG82ODI2NTg2N317SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzY4ODY4NzIxfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG82OTQ1MTMzOH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjk4MDk5NTV9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG82OTkxOTE3NX17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNzAwNjEyMDF9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG83MTgxODEwN317SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzMzMDQ3NzJ9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG83MzkyOTIyMH17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNzQ1MDI4NjF9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzc1NDU0NDYyfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG83NjI2NDY1MH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzc2OTI4MjcwfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzY5NjcyMTZ9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG83NzI4Mzk5MH17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzczNzQyODV9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG83ODE4NDQ2OH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzgwNDYyNDI2fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvODIyNTc2NzB9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzgyNDcyNzc3fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG84MzQ3NDgzOX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzgzNjk1Njg2fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG84NDg4MjYxN317SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzg0OTUxNDg0fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG84NTI0Njc5NX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzg2NDU5MDA1fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG84NzIzMjAxMn17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvODczODk3MDJ9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzg4MzQ2NDI4fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG84OTk0MjUwM317SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzkwNDA4MzI1fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTA2NzQwMTl9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzkwNzI5Njc4fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTE1NTI0OTZ9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzkxOTUyNzgzfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG85MjIzNzg1NH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzkyNzQyMzg5fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTI5ODk0NzV9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG85NTM3NjUyMX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTU0NTgwNDl9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG85NTU5MTMzNn17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTYxOTM4NzR9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG85NjgyMzcxMH17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvOTk0NDQxNjN9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX17XCpcZG9jdmFyIHt6em1wMTBMYXN0VHJhaWxlckluc2VydGVkfXteYH4jbXAhQGM/KyM/Pz81M1wnODB4PzdtZDFkMGhcJ2I0YFwnZDE/XCdkMnBcJzlhPyA/XCdjZT9cJ2NkXCdlND9cJ2U1PyEzPz9cJ2M1XCc4ZT8sP1wnZDBcJzgwXCdkMSBAXCdjOFwnZDNnMD9cJ2FmPz8/bj9cJ2MxSyY+XCczYlg5VUtRSTheMDExfX0NCntcKlxkb2N2YXIge3p6bXAxMExhc3RUcmFpbGVySW5zZXJ0ZWRfMTA3OH17XmB+I21wIUBjPysjPz8/NTNcJzgweD83bWQxZDBoXCdiNGBcJ2QxP1wnZDJwXCc5YT8gP1wnY2U/XCdjZFwnZTQ/XCdlNT8hMz8/XCdjNVwnOGU/LD9cJ2QwXCc4MFwnZDEgQFwnYzhcJ2QzZzA/XCdhZj8/P24/XCdjMUsmPlwnM2JYOVVLUUk4XjAxMX19e1wqXGZ0bnNlcCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGNoZnRuc2VwIA0KXHBhciB9fXtcKlxmdG5zZXBjIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcY2hmdG5zZXBjIA0KXHBhciB9fXtcKlxhZnRuc2VwIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcY2hmdG5zZXAgDQpccGFyIH19e1wqXGFmdG5zZXBjIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcY2hmdG5zZXBjIA0KXHBhciB9fVxsdHJwYXIgXHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xoZWFkZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjNccXIgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk0NDY3NSBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBFeGVjdXRpb24gQ29weX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB9fXtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0Mjg2OTcge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHoxXHNocGxpZDIyMjYNCntcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19e1xzcHtcc24gbFR4aWR9e1xzdiA2NTUzNn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMjZ9fQ0Ke1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19e1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF8yfX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1MjA5Nn19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCANClxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5M1xkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAwXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDI4Njk3IHtcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAzXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6MFxzaHBsaWQyMjI3DQp7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fXtcc3B7XHNuIGxUeGlkfXtcc3YgMTMxMDcyfX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIyN319DQp7XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX17XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzF9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjUxMDcyfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IA0KXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MTkyXGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDNcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fXtcKlxwbnNlY2x2bDFccG51Y3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSAufX17XCpccG5zZWNsdmwyXHBudWNsdHJccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDNccG5kZWNccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDRccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgKX19DQp7XCpccG5zZWNsdmw1XHBuZGVjXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDZccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw3XHBubGNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw4DQpccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw5XHBubGNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtzdGFydCBfR29CYWNrfXtcKlxia21rZW5kIF9Hb0JhY2t9DQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU5MDgzOCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ0NTMyMjM2IFJpc2luZyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkMTA3NjE0ODggDQpUcmVlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNDUzMjIzNiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgQWdyZWVtZW50XGxpbmUgXGxpbmUgXGxpbmUgXGxpbmUgQnkgYW5kIEFtb25nXGxpbmUgXGxpbmUgXGxpbmUgDQpcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDEwNzYxNDg4IFRyZWUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgV2luZCBGYXJtIEx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0MlxpbnNyc2lkNTkxODMyOSBMQ30NCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmNDJcaW5zcnNpZDI3NjEyOTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ1OTE4MzI5IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0MlxpbnNyc2lkNDUzMjIzNiBJSX17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDQ1MzIyMzYgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgTGxjfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGY0MlxpbnNyc2lkMjc2MTI5NyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBhbmR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkMjc2MTI5NyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjQyXGluc3JzaWQ0NTMyMjM2IElJSSB9DQp7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ1OTE4MzI5IEx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcZjQyXGluc3JzaWQ1OTE4MzI5IExDfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDc3NDY2OTIgDQpFeGVjdXRlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkMTE4MjY4NjYgYXMgb2Z9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNzc0NjY5MiBEZWNlbWJlciAzLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTkwNDU2ICB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgMjAxNH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MDgzOCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFsIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XGhlYWRlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyM1xxbCBcbGkwXHJpMFx3aWRjdGxwYXINClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyANCg0KXHBhciB9fXtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzggLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxpbnNyc2lkMzQzODA3OCAgUEFHRSB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTY1MTkwOCANCjM4fX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGluc3JzaWQzNDM4MDc4IC19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMTQyODY5NyANCntcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAzXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6MlxzaHBsaWQyMjI4e1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX0NCntcc3B7XHNuIGxUeGlkfXtcc3YgMTk2NjA4fX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIyOH19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19DQp7XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzR9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjUzMTIwfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDANClxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5NFxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAzXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzg2NTUzMyANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyM1xxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH19e1xmb290ZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQyODY5NyB7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejNcc2hwbGlkMjIyOQ0Ke1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBsVHhpZH17XHN2IDI2MjE0NH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMjl9fQ0Ke1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19e1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF8zfX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NDE0NH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCANClxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5NVxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAwXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFRhYmxlIG9mIENvbnRlbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIFRPQyBcXGYgXFx6IFxcdCAiSGVhZGluZyAxLDEsSGVhZGluZyAyLDIiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSSBERUZJTklUSU9OUywgSU5URVJQUkVUQVRJT05TIEFORCBFWEhJQklUU317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyNzYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM3MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDV9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzJccWwgXGxpMjQwXHJpMFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IERlZmluaXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI3NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM3MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEludGVycHJldGF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI3OCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM3MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEluY29ycG9yYXRpb24gb2YgUmVjaXRhbHMgYW5kIEV4aGliaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI3OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzcwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSUkgVEVSTSBPRiBBR1JFRU1FTlR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjgwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggNn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMi4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgVGVybX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyODEgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzEwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCA2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAyLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBQYXltZW50cyBvbiBUZXJtaW5hdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyODIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzIwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCA2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAyLjN9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTdXJ2aXZhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyODMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzMwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCA3fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIElJSSBTSEFSRUQgRkFDSUxJVElFUyBBTkQgUkVBTCBQUk9QRVJUWX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyODQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM4MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCA3fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAzLjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBEZWNsYXJhdGlvbiBvZiBJbnRlbnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IC4gIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjg1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMy4yfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjg2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzgwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMy4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjg3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzgwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMy40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU2hhcmVkIEFzc2V0cyBHcm91cHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjg4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzgwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMy41fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQWNjZXNzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI4OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM4MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDh9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDMuNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFNoYXJlZCBQZXJtaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAuICAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI5MCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDh9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSVYgQ09OU1RSVUNUSU9OIEFORCBPV05FUlNISVAgT0YgQU5EIFJJR0hUIFRPIFVTRSBTSEFSRUQgQVNTRVRTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI5MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDl9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzJccWwgXGxpMjQwXHJpMFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFVuZGl2aWRlZCBPd25lcnNoaXAgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI5MiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDl9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFVuZGl2aWRlZCBVc2UgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI5MyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDl9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvbnN0cnVjdGlvbjsgUmVpbWJ1cnNlbWVudCBvZiBDb3N0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyOTQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNC40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQWRkaXRpb25hbCBQaGFzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjk1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTJ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuNX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFkZGl0aW9uYWwgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjk2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzOTAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIEFkZGl0aW9uYWwgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI5NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDEzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIFYgTUVURVJJTkcsIE1FQVNVUkVNRU5UIE9GIEVORVJHWSBERUxJVkVSSUVTIEFORCBMT1NTRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjk4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzOTAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTN9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzJccWwgXGxpMjQwXHJpMFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDUuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE1lYXN1cmVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI5OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDEzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA1LjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBMb3NzZXMgb24gVHJhbnNtaXNzaW9uIExpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzAwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTN9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDUuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE1ldGVyIFRlc3RpbmcgYW5kIFJlcGFpcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMDEgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBWSSBPUEVSQVRJT04gQU5EIE1BSU5URU5BTkNFIE9GIFNIQVJFRCBGQUNJTElUSUVTLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMDIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRW5nYWdlbWVudCBvZiBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMDMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzMwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4yfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU3RhbmRhcmRzIGZvciBPcGVyYXRvclxycXVvdGUgcyBQZXJmb3JtYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMDQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTyZNIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMwNSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDE0fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTY2hlZHVsZWQgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzA2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzAwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuNX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFVucGxhbm5lZCBPdXRhZ2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMwNyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDE2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjZ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBFbWVyZ2VuY3kgQ29uZGl0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMDggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzgwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxNn19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi43fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTyZNIENvc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMwOSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDE2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2Ljh9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBCdWRnZXRpbmcgUHJvY2Vzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMTAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMTAwMzAwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxNn19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi45fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRXh0cmFvcmRpbmFyeSBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMTEgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xMH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFJlc3BvbnNpYmlsaXR5IGZvciBPJk0gQ29zdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzEyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMTAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTd9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuMTF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBCb29rcyBhbmQgUmVjb3Jkc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMTMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IERpc3B1dGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMxNCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDE4fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjEzfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm8gV2FpdmVyIG9mIFJpZ2h0IHRvIEF1ZGl0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMxNSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzEwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDE4fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjE0fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzE2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzEwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTh9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuMTV9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBSaXNrIG9mIExvc3M7IEluZGVtbml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMTcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IExpbWl0YXRpb25zIG9uIE9wZXJhdG9yXHJxdW90ZSBzIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMTggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxOX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xN317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFJlcGxhY2VtZW50IG9mIE9wZXJhdG9yLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMTkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAxOX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBWSUkgREFNQUdFIFRPLCBERVNUUlVDVElPTiBPUiBGQUlMVVJFIE9GIFNIQVJFRCBGQUNJTElUSUVTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMyMCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzIwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDE5fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA3LjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBEYW1hZ2Ugb3IgRGVzdHJ1Y3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIA0KUEFHRVJFRiBfVG9jNDA0MDEzMzIxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzIwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMTl9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgVklJSSBDRVNTQVRJT04gT0YgT1BFUkFUSU9OUyBCWSBBIENPLU9XTkVSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMyMiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzIwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDIwfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA4LjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDby1Pd25lciBDZWFzaW5nIE9wZXJhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzIzIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDguMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvLU93bmVyIExhc3QgVXNpbmcgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDguM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFByb2NlZHVyZSBmb3IgVHJhbnNmZXIgYnkgYSBDby1Pd25lciBvZiBpdHMgT3duZXJzaGlwIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAuICAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMyNSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzIwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjF9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDguNH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENoYW5nZSBpbiBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSVggUkVMQVRJT05TSElQIE9GIE9QRVJBVE9SIEFORCBDTy1PV05FUlN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzJccWwgXGxpMjQwXHJpMFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDkuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFjdGlvbnMgVGFrZW4gYnkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDkuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IExpbWl0YXRpb25zIG9uIE9wZXJhdG9yXHJxdW90ZSBzIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMjkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMyMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOS4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ29zdHMgYW5kIEV4cGVuc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMzMCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDIyfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5LjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBPYmxpZ2F0aW9ucyB1bmRlciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzOyBFeGVyY2lzZSBvZiBPcHRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMzMSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDIyfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5LjV9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDb25zZW50IG9yIEFwcHJvdmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMzMiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDIzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5LjZ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDb25kZW1uYXRpb24gQXdhcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMzMyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDIzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5Ljd9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBUcmFuc2ZlciBvciBFbmN1bWJyYW5jZSBvZiBJbnRlcmVzdCBpbiBTaGFyZWQgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMzNCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDIzfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5Ljh9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBZGRpdGlvbmFsIENvLU93bmVyIFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMzUgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBYIENPVkVOQU5UU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMzYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIEludGVyZmVyZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjEzMTE1MSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMzNyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI0fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMC4yfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgSW50ZXJjb25uZWN0aW9uIFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgLiAgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQpcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMzggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTYxMzExNTEgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMzkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuNH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTYxMzExNTEgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNDAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI0fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMC41fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm8gV2FzdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTYxMzExNTEgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNDEgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIExpZW5zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2MTMxMTUxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNDAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjV9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEwLjd9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTdGFuZGFyZCBvZiBQZXJmb3JtYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjEzMTE1MSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM0MyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI1fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIFhJIElOU1VSQU5DRTsgV0FJVkVSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM0NCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI1fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMS4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgSW5zdXJhbmNlIFJlc3BvbnNpYmlsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQ1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjV9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDExLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBXYWl2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzQ2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjV9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgWElJIFRBWEVTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM0NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI1fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMi4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgT3BlcmF0b3IgUGF5bWVudCBvZiBQcm9wZXJ0eSBUYXhlcyBhbmQgQXNzZXNzbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQ4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNDAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjV9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEyLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBSZWltYnVyc2VtZW50IE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM0OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI2fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMi4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgVHJhbnNmZXIgVGF4ZXMsIFNhbGVzIGFuZCBVc2UgVGF4ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzUwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNTAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEyLjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDb25zdHJ1Y3Rpb24gb2YgU2hhcmVkIEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjEzMTE1MSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI2fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIFhJSUkgRVZFTlRTIE9GIERFRkFVTFQ7IFJFTUVESUVTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1MiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI2fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMy4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRGVmYXVsdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzUzIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEzLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBSZW1lZGllcyBVcG9uIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzU0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNTAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMjd9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgWElWIExFTkRFUiBQUk9URUNUSU9OfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1NSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI4fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNC4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgUmlnaHQgdG8gRW5jdW1iZXIgYW5kIEFzc2lnbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNTYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvLU93bmVyc1xycXVvdGUgIE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI5fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNC4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTGVuZGVyIE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1OCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDI5fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNC40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTGVuZGVyXHJxdW90ZSBzIFJpZ2h0IHRvIFBvc3Nlc3Npb24sIFJpZ2h0IHRvIEFjcXVpcmUgYW5kIFJpZ2h0IHRvIEFzc2lnbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNTkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAyOX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuNX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE9wcG9ydHVuaXR5IHRvIEN1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzYwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE0LjZ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBOZXcgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMwfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNC43fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTGVuZGVyIENvbnNlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzYyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE0Ljh9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBFc3RvcHBlbCBDZXJ0aWZpY2F0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzYzIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgWFYgSU5ERU1OSUZJQ0FUSU9OfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2NCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNS4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ28tT3duZXIgSW5kZW1uaWZpY2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2NSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNS4yfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ3Jvc3MtSW5kZW1uaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2NiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIFhWSSBXQUlWRVIgT0YgUklHSFRTIFRPIFBBUlRJVElPTn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNjcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM2MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIFhWSUkgTUlTQ0VMTEFORU9VUyBQUk9WSVNJT05TfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2OCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNy4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ292ZW5hbnRzIFJ1biB3aXRoIHRoZSBMYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNy4yfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRm9yY2UgTWFqZXVyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNzAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM3MDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTcuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEZFUkMgRmlsaW5nIGFuZCBBY2NlcHRhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2MTMxMTUxIC59e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNzEgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM3MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMyfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNy40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQXNzaWdubWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzNzIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzIwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzM319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwXHBhcmFyc2lkODkzNDg1OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4XGNoYXJyc2lkODgwMzE0OSAxNy41fXsNClxydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IEFjdGlvbnMgQnkgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDg5MzQ4NTggXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4OTM0ODU4ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNzMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM3MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4OTM0ODU4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMzJccWwgXGxpMjQwXHJpMFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTcufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCA2fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KRW50aXJlIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzczIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzM319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3Ljd9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBbWVuZG1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzcwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzN9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy44fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRnVydGhlciBBc3N1cmFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM3NSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM3MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDMzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuOX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFNldmVyYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzNzYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzYwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjEwfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgSm9pbnQgUHJlcGFyYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzcwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzR9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4xMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIFdhaXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzNzggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzgwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjEyfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgR292ZXJuaW5nIExhd317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzNzkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzkwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjEzfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRGlzcHV0ZSBSZXNvbHV0aW9uIFByb2NlZHVyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzgwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzODAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzR9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4xNH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFJlbGF0aW9uc2hpcCBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM4MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDM0fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMTV9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBObyBUaGlyZCBQYXJ0eSBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzgyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDExNDI4Njk3IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE2NTE5MDggMzR9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4xNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIERlZGljYXRpb24gb2YgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzODMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzNX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjE3fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm90aWNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzODQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzODAwMzQwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzNX19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjE4fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ291bnRlcnBhcnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM4NSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDM2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMTl9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBUaW1pbmcgZm9yIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM4NiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDM2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMjB9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBXYWl2ZXIgb2YgQ29uc2VxdWVudGlhbCBEYW1hZ2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM4NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxMTQyODY5NyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNjUxOTA4IDM3fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTdXJ2aXZhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzODggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzODAwMzgwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjIyfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTYxMzExNTEgTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzODkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzODAwMzkwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjIzfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgT3RoZXIgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzOTAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTE0Mjg2OTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM5MDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTY1MTkwOCAzN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBFWEhJQklUU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IEV4aGliaXQgQSBcZW5kYXNoICBTY2hlZHVsZSBvZiBEZWZpbml0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IEV4aGliaXQgQiBcZW5kYXNoICBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTMyNjc3NjMgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSAgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTMyNjc3NjMgIGFuZCBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY1OTk4NiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNjU5OTg2IEV4aGliaXQgQyBcZW5kYXNoICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEzMjY3NzYzIA0KSW50ZXJlc3RzIGFuZCBQcm9wb3J0aW9uYXRlIFNoYXJlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNjU5OTg2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEQgXGVuZGFzaCAgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBFeGhpYml0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTMwNzExNzAgRSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgLSBEaXNwdXRlIFJlc29sdXRpb24gUHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IEV4aGliaXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMzA3MTE3MCBGIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcZW5kYXNoICBGb3JtIG9mIEpvaW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMTg3NzU5NyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY3M0NVxiXGluc3JzaWQxMTg3NzU5N1xjaGFycnNpZDExODc3NTk3IHtcKlxia21rc3RhcnQgX0RWX0MxfUV4aGliaXQgfXtccnRsY2hcZmNzMSANClxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNzNDVcYlxpbnNyc2lkMTMwNzExNzAgR317XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY3M0NVxiXGluc3JzaWQxMzA3MTE3MFxjaGFycnNpZDExODc3NTk3ICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNzNDVcYlxpbnNyc2lkMTE4Nzc1OTdcY2hhcnJzaWQxMTg3NzU5NyBcZW5kYXNoICBGb3JtIG9mIE1lbW9yYW5kdW19e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODc3NTk3XGNoYXJyc2lkMTE4Nzc1OTcge1wqXGJrbWtlbmQgX0RWX0MxfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ1OTA4MzggXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1MDczMTIgXHBhZ2UgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSSVNJTkcgVFJFRX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MDgzOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBTSEFSRUQgRkFDSUxJVElFUyBBR1JFRU1FTlR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgVGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcc2NhcHNcZjQyXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSAgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgKFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkgaXMgbWFkZSBhbmQgZW50ZXJlZCBpbnRvIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzc0NjY5MiAzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzc0NjY5MlxjaGFycnNpZDc3NDY2OTIgcmR9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc3NDY2OTIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODI2ODY2IGRheSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyIERlY2VtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiAsIDIwMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyMDA3MTI4ICAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAxMDUzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTYwMDEwNTMgRXhlY3V0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDE2MDAxMDUzXGNoYXJyc2lkNzc0MzczMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaVxpbnNyc2lkMTIwMDcxMjhcY2hhcnJzaWQ3NzQzNzMyIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjAwNzEyOCBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBieSBhbmQgYW1vbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtXH5MTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtXH59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IElJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgTExDIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWUgSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQNCiksIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtXH59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IElJSSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWUgSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSwgZWFjaCBvZiB3aGljaCBpcyBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnkuICBUaGUgZm9yZWdvaW5nIGFyZSBzb21ldGltZXMgcmVmZXJyZWQgdG8gaGVyZWluIGluZGl2aWR1YWxseSBhcyBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0IGFuZCBjb2xsZWN0aXZlbHkgYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFJFQ0lUQUxTfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxmaS03NDFcbGk3NDFccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzQxXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MTMxMjYgLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIENvLU93bmVycyBhcmUgZGV2ZWxvcGluZyBhIG11bHRpLXBoYXNlIHdpbmQgcG93ZXJlZCBlbGVjdHJpYyBnZW5lcmF0aW5nIGZhY2lsaXR5IGdlbmVyYWxseSBrbm93biBhcyB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybSBsb2NhdGVkIG9uIHJlYWwgcHJvcGVydHkgaW4gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IEtlcm4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDb3VudHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgQ2FsaWZvcm5pYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGlcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KS4gIFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBXaW5kIEZhcm0gaXMgaW50ZW5kZWQgdG8gYmUgZGV2ZWxvcGVkIGluIG11bHRpcGxlIHBoYXNlcywgZWFjaCBvZiB3aGljaCBpcyBjb25zaWRlcmVkIGEgc2VwYXJhdGUgcHJvamVjdCBhbmQgd2lsbCBiZSBvd25lZCBieSBhIHNlcGFyYXRlIHByb2plY3QgY29tcGFueS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC5cdGFiIFRoZSBpbnN0YWxsZWQgbmFtZXBsYXRlIGdlbmVyYXRpbmcgY2FwYWNpdHkgb2YgZWFjaCBwaGFzZSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtIChlYWNoIG9mIHdoaWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxOTA0NTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaXMgcmVmZXJyZWQgdG8gaGVyZWluIGFzIGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEZhY2lsaXR5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQgYW5kIGNvbGxlY3RpdmVseSBhcyB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLCB3aWxsIGJlIGFwcHJveGltYXRlbHk6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI2XHFsIFxsaTI4NTBccmkxNDQwXHNhMTIwXHdpZGN0bHBhclx0eDQ3MzFcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjI4NTBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSU1QgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEZhY2lsaXR5Olx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiA3OS4yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgTVd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IFJTVCBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEZhY2lsaXR5Olx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiAxOS44fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgTVd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUlNUIElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEZhY2lsaXR5Olx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiA5OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIE1XfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxmaS03NDFcbGk3NDFccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzQxXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjEyOTcgQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLlx0YWIgDQpUaGUgQ28tT3duZXJzIG93biBvciB3aWxsIG93biB1bmRpdmlkZWQgaW50ZXJlc3RzIGluIGNlcnRhaW4gcmVhbCBhbmQgcGVyc29uYWwgcHJvcGVydHkgYWNxdWlyZWQgb3IgdG8gYmUgYWNxdWlyZWQgZm9yIHRoZWlyIHJlc3BlY3RpdmUgRmFjaWxpdGllcyBhbmQgd2lzaCB0byBzaGFyZSB0aGUgdXNlIGFuZCBjb3N0IG9mIGNlcnRhaW4gZWxlY3RyaWNhbCB0cmFuc21pc3Npb24sIGNvbW11bmljYXRpb25zXCdiOCBzdHJ1Y3R1cmVzIGENCm5kIG90aGVyIGZhY2lsaXRpZXMgYW5kIGFzc29jaWF0ZWQgcmVhbCBwcm9wZXJ0eSByaWdodHMsIGFuZCB0byBlbmdhZ2UgT3BlcmF0b3IgdG8gb3BlcmF0ZSwgbWFpbnRhaW4sIHJlcGFpciBhbmQgbWFuYWdlIHRoZSBmb3JlZ29pbmcsIGFsbCBpbiBhY2NvcmRhbmNlIHdpdGggYW5kIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA0MjUzMCBELlx0YWIgVGhlIENvLU93bmVycyBhcmUgYWxzbyBwYXJ0aWVzIHRvIHRoYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDY1NTcxOCBjZXJ0YWluIEFtZW5kZWQgYW5kIFJlc3RhdGVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNDI1MzAgDQpMYXJnZSBHZW5lcmF0b3IgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCBDby1UZW5hbmN5IEFncmVlbWVudCBkYXRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IE9jdG9iZXIgMjQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NTU3MTggMjAxNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNDI1MzAgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIwNDI1MzBcY2hhcnJzaWQ3MDc4MDAyIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDQyNTMwIFwnOTQpIHdpdGggcmVzcGVjdCB0byB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudC4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHNjYXBzXGluc3JzaWQ1OTE4MzI5IE5vdyBUaGVyZWZvcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgaW4gY29uc2lkZXJhdGlvbiBvZiB0aGUgcmVjaXRhbHMsIHRoZSBwcmVtDQppc2VzLCBjb3ZlbmFudHMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGhlcmVpbiwgYW5kIG90aGVyIGdvb2QgYW5kIHZhbHVhYmxlIGNvbnNpZGVyYXRpb24sIHRoZSByZWNlaXB0IGFuZCBzdWZmaWNpZW5jeSBvZiB3aGljaCB0aGUgQ28tT3duZXJzIGFja25vd2xlZGdlLCB0aGUgQ28tT3duZXJzIGFncmVlIGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIElcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMjM2NzU0MiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjc2fURFRklOSVRJT05TLCBJTlRFUlBSRVRBVElPTlMgQU5EIEVYSElCSVRTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjc2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyNzd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgRGVmaW5pdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyNzd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBcyB1c2VkIGluDQogdGhpcyBBZ3JlZW1lbnQsIGluY2x1ZGluZyB0aGUgUmVjaXRhbHMsIGFuZCBleGNlcHQgYXMgcmVxdWlyZWQgYnkgZ3JhbW1hdGljYWwgdXNhZ2UgYW5kIGFwYXJ0IGZyb20gcHJvcGVyIG5vdW5zLCBlYWNoIGNhcGl0YWxpemVkIHRlcm0gaGFzIHRoZSBtZWFuaW5nIGdpdmVuIHRvIGl0IGluIHRoaXMgQWdyZWVtZW50IGFuZCBpbiB0aGUgU2NoZWR1bGUgb2YgRGVmaW5pdGlvbnMgYXR0YWNoZWQgYXMgRXhoaWJpdCBBLn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjc4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEludGVycHJldGF0aW9ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjc4fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgSW4gdGhpcyBBZ3JlZW1lbnQsIHVubGVzcyBhIGNsZWFyLCBjb250cmFyeSBpbnRlbnRpb24gYXBwZWFyczogIChhKVx+dGhlIHNpbmd1bGFyIGluY2x1ZGVzIHRoZSBwbHVyYWwgYW5kIHZpY2UgdmVyc2E7IChiKVx+cmVmZXJlbmNlIHRvIGFueSBQZXJzb24gaW5jbHVkZXMgc3VjaCBQZXJzb25ccnF1b3RlIA0KcyBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIGJ1dCwgaW4gdGhlIGNhc2Ugb2YgYSBDby1Pd25lciwgb25seSBpZiBzdWNoIGFzc2lnbnMgYXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzcwMjIwIHBlcm1pdHRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KYnkgdGhpcyBBZ3JlZW1lbnQsIGFuZCByZWZlcmVuY2UgdG8gYSBQZXJzb24gaW4gYSBwYXJ0aWN1bGFyIGNhcGFjaXR5IGV4Y2x1ZGVzIHN1Y2ggUGVyc29uIGluIGFueSBvdGhlciBjYXBhY2l0eTsgKGMpXH5yZWZlcmVuY2UgdG8gYW55IGdlbmRlciBpbmNsdWRlcyBlYWNoIG90aGVyIGdlbmRlcjsgKGQpXH5yZWZlcmVuY2UgdG8gYW55IGFncmVlbWVudCAoaW5jbHVkaW5nIHRoaXMgQWdyZWVtZW50KSwgZG9jdW1lbnQgb3IgaW5zdHJ1bWVudCANCm1lYW5zIHN1Y2ggYWdyZWVtZW50LCBkb2N1bWVudCBvciBpbnN0cnVtZW50IGFzIGFtZW5kZWQgb3IgbW9kaWZpZWQgYW5kIGluIGVmZmVjdCBmcm9tIHRpbWUgdG8gdGltZSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHRlcm1zIHRoZXJlb2YgYW5kLCBpZiBhcHBsaWNhYmxlLCB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnQ7IChlKVx+DQpyZWZlcmVuY2UgdG8gYW55IExhdyBtZWFucyBzdWNoIExhdyBhcyBhbWVuZGVkLCBtb2RpZmllZCwgY29kaWZpZWQsIG9yIHJlZW5hY3RlZCwgaW4gd2hvbGUgb3IgaW4gcGFydCwgYW5kIGluIGVmZmVjdCBmcm9tIHRpbWUgdG8gdGltZSwgaW5jbHVkaW5nLCBpZiBhcHBsaWNhYmxlLCBydWxlcyBhbmQgcmVndWxhdGlvbnMgcHJvbXVsZ2F0ZWQgdGhlcmV1bmRlcjsgKGYpXH4NCnJlZmVyZW5jZSB0byBhbnkgU2VjdGlvbiBtZWFucyBzdWNoIFNlY3Rpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIGFuZCByZWZlcmVuY2VzIGluIGFueSBTZWN0aW9uIG9yIGRlZmluaXRpb24gdG8gYW55IGNsYXVzZSBtZWFucyBzdWNoIGNsYXVzZSBvZiBzdWNoIFNlY3Rpb24gb3IgZGVmaW5pdGlvbjsgKGcpXH5cJzkzaGVyZXVuZGVyLFwnOTQgXCc5M2hlcmVvZixcJzk0IFwnOTNoZXJldG9cJzk0DQogYW5kIHdvcmRzIG9mIHNpbWlsYXIgaW1wb3J0IHNoYWxsIGJlIGRlZW1lZCByZWZlcmVuY2VzIHRvIHRoaXMgQWdyZWVtZW50IGFzIGEgd2hvbGUgYW5kIG5vdCB0byBhbnkgcGFydGljdWxhciBTZWN0aW9uIG9yIG90aGVyIHByb3Zpc2lvbiBvZiB0aGlzIEFncmVlbWVudDsgKGgpXH5cJzkzaW5jbHVkaW5nXCc5NA0KIG1lYW5zIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0aW5nIHRoZSBnZW5lcmFsaXR5IG9mIGFueSBkZXNjcmlwdGlvbiBzdWNoIHRlcm07IGFuZCAoaSlcfnJlbGF0aXZlIHRvIHRoZSBkZXRlcm1pbmF0aW9uIG9mIGFueSBwZXJpb2Qgb2YgdGltZSwgXCc5M2Zyb21cJzk0IG1lYW5zIFwnOTNmcm9tIGFuZCBpbmNsdWRpbmdcJzk0LCBcJzkzdG9cJzk0IG1lYW5zIFwnOTN0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0NjI3MDcwIGJ1dCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGV4Y2x1ZGluZ1wnOTQgYW5kIFwnOTN0aHJvdWdoXCc5NCBtZWFucyBcJzkzdGhyb3VnaCBhbmQgaW5jbHVkaW5nXCc5NC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyNzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgSW5jb3Jwb3JhdGlvbiBvZiBSZWNpdGFscyBhbmQgRXhoaWJpdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyNzl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgUmVjaXRhbHMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50IGFuZCB0aGUgRXhoaWJpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQxMzEyNiBhbmQgQXR0YWNobWVudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmF0dGFjaGVkIGhlcmV0byBhcmUgaW5jb3Jwb3JhdGVkIGludG8gdGhpcyBBZ3JlZW1lbnQgYnkgcmVmZXJlbmNlIGZvciBhbGwgcHVycG9zZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIElJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjgwfVRFUk0gT0YgQUdSRUVNRU5UfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjgwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgVGVybX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI4MX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoaXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MTMxMjYgaXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBlZmZlY3RpdmUgYXMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwMDcxMjggdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAxMDUzIA0KZWFybGllciBvZiB0aGUgRXhlY3V0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMDA3MTI4IERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMTA1MyAgYW5kIGFueSBsYXRlciBkYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxMDAzNTYgdGhpcyBBZ3JlZW1lbnQgaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjAwMTA1MyBhY2NlcHRlZCBieSBGRVJDICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ3MTAwMzU2IEVmZmVjdGl2ZSBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzEwMDM1NiBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW5kIHNoYWxsIHJlbWFpbiBpbiBmb3JjZSBhbmQgZWZmZWN0IHVudGlsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY5MjQzMCAsIHN1YmplY3QgdG8gb2J0YWluaW5nIGFueSBuZWNlc3NhcnkgRkVSQyBhcHByb3ZhbHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDY1NTcxOCAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk2NTYzIGVhcmxpZXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgb2YgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgdn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgKVx+dGhlIGRhdGUgdGhhdCBpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNzI1MzUgdGhpcnR5LWZpdmUgKDM1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHllYXJzIGFmdGVyIHRoZSBFZmZlY3RpdmUgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NTU3MTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgDQoodykgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDY1NTcxOCB0aGUgZXhwaXJhdGlvbiBkYXRlIG9mIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTY1NjMgDQooeCkgdGhlIGRhdGUgdGhhdCBhbGwgaW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFyZSBvd25lZCBieSBhIHNpbmdsZSBQZXJzb24sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgKHkpXH50aGUgcmV0aXJlbWVudCBhbmQgZmluYWwgZGlzcG9zaXRpb24gb2YgYWxsIGNvbXBvbmVudHMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjQwNTI4MSAgYW5kIGFsbCBTaGFyZWQgUmVhbCBQcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTY1NjMgLCBhbmQgKHopIHRoZSBkYXRlIHRoYXQgYWxsIENvLU93bmVycyBhbmQgdGhlaXIgTGVuZGVycyB1bmFuaW1vdXNseSBhZ3JlZSB0byB0ZXJtaW5hdGUgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQ2NTU3MTggLCBvciAoaWkpIHN1Y2ggb3RoZXIgZGF0ZSAoYnV0IG5vIGxhdGVyIHRoYW4gbmluZXR5LW5pbmUgKDk5KSB5ZWFycyBhZnRlciB0aGUgRWZmZWN0aXZlIERhdGUpIGFzIG1heSBiZSB1bmFuaW1vdXNseSBhZ3JlZWQgYnkgYWxsIG9mIHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIExlbmRlcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBQYXltZW50cyBvbiBUZXJtaW5hdGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI4Mn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFVwb24gdGVybWluYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzQ0MTE2IHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBwYXkgT3BlcmF0b3IgYW55IHJlbWFpbmluZyBiYWxhbmNlIG93ZWQgZm9yIE9wZXJhdG9yXHJxdW90ZSANCnMgY29zdHMgaW5jdXJyZWQgb3IgaXJyZXZvY2FibA0KeSBjb21taXR0ZWQgdG8gYmUgaW5jdXJyZWQgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQgYXMgb2YgdGhlIGRhdGUgb2YgdGVybWluYXRpb24sIHdpdGhpbiBzaXh0eSAoNjApIGRheXMgZm9sbG93aW5nIHJlY2VpcHQgb2YgYW4gaW52b2ljZSBmcm9tIE9wZXJhdG9yIHJlcXVpcmluZyBzdWNoIHBheW1lbnQ7IHByb3ZpZGVkIHRoYXQgT3BlcmF0b3Igc2hhbGwgdXNlIGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGVmZm9ydHMgdG8gbWluaW1pemUgDQpzdWNoIGNvc3RzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBTdXJ2aXZhbH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI4M30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEFueSBvYmxpZ2F0aW9ucyBvZiBvbmUgQ28tT3duZXIgdG8gYW5vdGhlciwgaW5jbHVkaW5nIHBheW1lbnQgb2JsaWdhdGlvbnMgYW5kIGluZGVtbml0eSBvYmxpZ2F0aW9ucywgYXMgYSByZXN1bHQgb2YgdGhpcyBBZ3JlZW1lbnQgd2hpY2ggYWNjcnVlZCBwcmlvciB0byBvciBhcyBhIHJlc3VsdCBvZiB0ZXJtaW5hdGlvbiBvZiB0aGlzIEFncmVlbWVudCBzaGFsbCBzdXJ2aXZlIHRlcm1pbmF0aW9uIG9mIHRoDQppcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIElJSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4NH1TSEFSRUQgRkFDSUxJVElFUyBBTkQgUkVBTCBQUk9QRVJUWX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI4NH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjg1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk2NTYzXGNoYXJyc2lkNzA3ODAwMiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU5NjU2M1xjaGFycnNpZDcwNzgwMDIgRGVjbGFyYXRpb24gb2YgSW50ZW50aW9ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE1OTY1NjNcY2hhcnJzaWQ3MDc4MDAyIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3Njg0MlxjaGFycnNpZDY2MzU2NDUgVGhlIENvLU93bmVycyBoZXJlYnkgZGVjbGFyZSB0aGF0fXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjc2Mzk5NyAsIHN1YmplY3QgdG8gdGhlIGxhc3Qgc2VudGVuY2Ugb2YgU2VjdGlvbiA0LjEsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEzMzc2ODQyXGNoYXJyc2lkNjYzNTY0NSAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDQ2NTU3MTggdGhleSBvd24gYW5kIGhvbGQgdGl0bGV9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3Njg0MlxjaGFycnNpZDY2MzU2NDUgIHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0NjU1NzE4IGFzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEzMzc2ODQyXGNoYXJyc2lkNjYzNTY0NSAgdGVuYW50cyBpbiBjb21tb24NCiBhbmQgdGhhdCBlYWNoIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0NjU1NzE4IGhhc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3Njg0MlxjaGFycnNpZDY2MzU2NDUgIGFuIHVuZGl2aWRlZCBpbnRlcmVzdCBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSwgZXhwcmVzc2x5IH17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDQ2NTU3MTggb24gYW5kIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3Njg0MlxjaGFycnNpZDY2MzU2NDUgc3ViamVjdCB0byB0aGUgdGVybXMsIGNvbmRpdGlvbnMsIGxpbWl0YXRpb25zIGFuZCByZXF1aXJlbWVudHMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50LiAgTm90aGluZyBjb250YWluZWQgaW4gdGhpcyBBZ3JlZW1lbnQgd2lsbCANCmJlIGRlZW1lZCB0byBjb25zdGl0dXRlIHRoZSBDby1Pd25lcnMgYXMgcGFydG5lcnMgb3Igam9pbnQgdmVudHVyZXJzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTY1NjNcY2hhcnJzaWQ2NjM1NjQ1IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODV9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI4Nn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoZSBDby1Pd25lcnMgcGxhbiB0byBwcm9jdXJlLCBpbnN0YWxsIGFuZCBjb25zdHJ1Y3QsIG9yIGhhdmUgcHJvY3VyZWQsIGluc3RhbGxlZCBhbmQgY29uc3RydWN0ZWQsIGNlcnRhaW4gZmFjaWxpdGllcyBmb3IgZWxlY3RyaWNhbCB0cmFuc21pc3Npb24sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjEzOTg0IGludGVyY29ubmVjdGlvbiwgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNvbW11bmljYXRpb25zXCdiOCBzdHJ1Y3R1cmVzIGFuZCBvdGhlciBmYWNpbGl0aWVzLCBhcyBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgaW4gRXhoaWJpdCBCLCB3aGljaCBtYXkgYmUgYWx0ZXJlZCBvciByZWNvbnN0cnVjdGVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGlzIEFncmVlbWVudCwgZm9yIHNoYXJlZCB1c2UgYnkgdGhlIENvLU93bmVycyAoY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODY2NzIgIGZvciB0aGUgcHVycG9zZXMgc2V0IGZvcnRoIGluIEV4aGliaXQgQn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjEzOTg0IA0KOyBwcm92aWRlZCwgdGhhdCBjZXJ0YWluIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB3aWxsIHVzZWQgYW5kIHNoYXJlZCBieSBhbGwgb2YgdGhlIENvLU93bmVycyBhbmQgY2VydGFpbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgd2lsbCBvbmx5IGJlIHVzZWQgYW5kIHNoYXJlZCBieSBhIGxpbWl0ZWQgZ3JvdXAgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2MTM5ODQgYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBkZXNjcmliZWQgaW4gRXhoaWJpdCBCIChlYWNoIGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANClwnOTQpLiAgVGhlIGluaXRpYWwgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXBzIHNoYWxsIGJlIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjYxMzk4NCBSU1R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBTaGFyZWQgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjYxMzk4NCANCkdyb3VwLCB3aGljaCB3aWxsIGJlIHVzZWQgYW5kIHNoYXJlZCBieSBhbGwgQ28tT3duZXJzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFuZCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2MTM5ODQgUlNUIEkvSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBTaGFyZWQgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjEzOTg0IEdyb3VwLCB3aGljaCB3aWxsIGJlIHVzZWQgYW5kIHNoYXJlZCBieSBSaXNpbmcgVHJlZSBJIGFuZCBSaXNpbmcgVHJlZSBJSTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnByb3ZpZGVkIHRoYXQgYWRkaXRpb25hbCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cHMgbWF5IGJlIGNyZWF0ZWQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIEFkZGl0aW9uYWwgUGhhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDc2MTQ4OCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYXMgZGVzY3JpYmVkIGluIFNlY3Rpb25cfjQuNC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gZWFjaCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCBhcmUgb3Igd2lsbCBiZSBsb2NhdGVkIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzUxNzEgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxIA0Kb3IgaGF2ZSBvciB3aWxsIGhhdmUgdGhlIGJlbmVmaXQgb2YsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgY2VydGFpbiByZWFsIHByb3BlcnR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxIGFuZCByZWFsIHByb3BlcnR5IHJpZ2h0cyB0aGF0IGFyZSBkZXNjcmliZWQgb24gRXhoaWJpdCBCIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAoY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxICBhbmQgdGhhdCB3ZXJlIGdyYW50ZWQgcHVyc3VhbnQgdG8gY2VydGFpbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzUxNzEgZGVlZHMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZWFzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NTE3MSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiwgbGVhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NTE3MSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIG9wdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBvciBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzOTc1MTcxIGluc3RydW1lbnRzIGFuZCBhZ3JlZW1lbnRzIGFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBkZXNjcmliZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzUxNzEgb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBFeGhpYml0IEIgKGNvbGxlY3RpdmVseSwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2MzU2NDUgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IFRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBzaGFsbCBiZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTcgdXNlZCBmb3IgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSAgcHVycG9zZXMgYW5kIHVzZXMgZGVzY3JpYmVkIG9uIEV4aGliaXQgQi4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2MzU2NDUgSW4gYWRkaXRpb24gdG8gdGhlIHVzZSBvZiB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjU1NzE4IGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjM1NjQ1IFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBvdGhlciBTaGFyZWQgQXNzZXRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTYzNzk5IHRvIHRoZSBleHRlbnQgcGVybWl0dGVkIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBwcm9wZXJ0eSBBZ3JlZW1lbnRzLCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2MzU2NDUgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IG1heSBiZSBvY2N1cGllZCBhbmQgdXNlZCBieSBhbnkgb2YgdGhlIENvLU93bmVycyBpbiB0aGUNCiBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldHMgR3JvdXAgZm9yIGZhY2lsaXRpZXMgb3RoZXIgdGhhbiBTaGFyZWQgRmFjaWxpdGllcywgc3VjaCBhcyBjb2xsZWN0aW9uIGFuZCB0cmFuc21pc3Npb24gbGluZXMgc2VwYXJhdGVseSBvd25lZCBieSBzdWNoIENvLU93bmVyLCBzbyBsb25nIGFzIHN1Y2ggb2NjdXBhbmN5IGFuZCB1c2UgZG9lcyBub3QgYWR2ZXJzZWx5IGFmZmVjdCB0aGUgdXNlIG9mIHN1Y2ggU2hhcmVkIFJlYWwgUHJvcGVydHkgZm9yIA0KdGhlIFNoYXJlZCBGYWNpbGl0aWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDY5NjY1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Mjc4NTIwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy40XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEFzc2V0cyBHcm91cHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwLCBjb21iaW5lZCB3aXRoIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBjb3JyZXNwb25kaW5nIHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBzdWNoIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwIGRlc2NyaWJlZCB1bmRlciB0aGUgc2FtZSBzZWN0aW9uIGluIEV4aGliaXQgQiBzaGFsbCBiZSByZWZlcnJlZCB0byBoZXJlaW4gYXMgYSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBTaGFyZWQgQXNzZXRzIEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0LiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTE4OCBUaGUgaW5pdGlhbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxMTg4XGNoYXJyc2lkMTQ2MjcwNzAgU2hhcmVkIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MjcwNzAgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MjcwNzBcY2hhcnJzaWQxNDYyNzA3MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTE4OFxjaGFycnNpZDE0NjI3MDcwIEdyb3Vwc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDExODggDQogc2hhbGwgYmUgdGhlIFJTVCBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MjcwNzAgQXNzZXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDExODggR3JvdXAsIHdoaWNoIHdpbGwgYmUgdXNlZCBhbmQgc2hhcmVkIGJ5IGFsbCBDby1Pd25lcnMsIGFuZCB0aGUgUlNUIEkvSUkgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjI3MDcwIA0KQXNzZXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDExODggR3JvdXAsIHdoaWNoIHdpbGwgYmUgdXNlZCBhbmQgc2hhcmVkIGJ5IFJpc2luZyBUcmVlIEkgYW5kIFJpc2luZyBUcmVlIElJOyBwcm92aWRlZCB0aGF0IGFkZGl0aW9uYWwgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjI3MDcwIEFzc2V0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE2MDExODggR3JvdXBzIG1heSBiZSBjcmVhdGVkIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgY29uc3RydWN0aW9uIG9mIHRoZSBBZGRpdGlvbmFsIFBoYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA3NjE0ODggLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxMTg4IGFzIGRlc2NyaWJlZCBpbiBTZWN0aW9uXH40LjQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkMTEzMzkxNzcgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBBY2Nlc3N9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIENvLU93bmVyIHNoYWxsIGhhdmUgYSBub24tZXhjbHVzaXZlIHJpZ2h0IG9mIGFjY2VzcyAoYSlcfnRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBpdCBoYXMgYW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDk1NjAgT3duZXJzaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgSW50ZXJlc3QgYXMgbmVjZXNzYXJ5IH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IGluc3BlY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTcxMDA2NSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgDQpTaGFyZWQgRmFjaWxpdGllcywgKGlpKSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGVuc3VyZSB0aGF0IE9wZXJhdG9yIGlzIG1lZXRpbmcgaXRzIG9ibGlnYXRpb25zIHdpdGggcmVzcGVjdCB0byBvcGVyYXRpb24sIG1haW50ZW5hbmNlIGFuZCByZXBhaXIgb2Ygc3VjaCBTaGFyZWQgRmFjaWxpdGllcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSANCihpaWkpIHRvIG1ha2UgYW55IG5lY2Vzc2FyeSByZXBhaXJzIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MTAwNjUgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IFNoYXJlZCBGYWNpbGl0aWVzIG5vdCB0aW1lbHkgbWFkZSBieSBPcGVyYXRvciBvciBpbiB0aGUgZXZlbnQgb2YgYW4gRW1lcmdlbmN5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjkxNjY5NSAgQ29uZGl0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSAsIGluIGVhY2ggY2FzZSBhcyBuZWNlc3NhcnkgdG8gZW5zdXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhhdCBDby1Pd25lclxycXVvdGUgcyBGYWNpbGl0eSByZW1haW5zIG9wZXJhdGlvbmFsLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5MTkyMTU5IChpdikgdG8gZXhlcmNpc2UgYW55IG90aGVyIHJpZ2h0cyBvZiBhIENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA7IGFuZCAoYilcfm92ZXIgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1MDcyNzMgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IHdoaWNoIHN1Y2ggQ28tT3duZXIgaGFzIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NDgxMzU2IE93bmVyc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1MDcyNzMgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCANCiBvciBhcyBuZWNlc3Nhcnkgb3IgYXBwcm9wcmlhdGUgdG8gZXhlcmNpc2UgYW55IG9mIGl0cyByaWdodHMgaGVyZXVuZGVyIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDsgcHJvdmlkZWQgdGhhdCwgc3ViamVjdCB0byB0aGUgcHJvdmlzaW9ucyBvZiBTZWN0aW9uXH4NCjEzLjEuNCwgaWYgc3VjaCBDby1Pd25lciBpcyBub3QgdGhlIE9wZXJhdG9yLCBpdCBzaGFsbCAoaSlcfnByb3ZpZGUgcmVhc29uYWJsZSBub3RpY2UgdG8gT3BlcmF0b3IsIGFuZCAoaWkpXH5ub3QgdW5yZWFzb25hYmx5IGludGVyZmVyZSB3aXRoIE9wZXJhdG9yXHJxdW90ZSBzIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2Ugb3IgcmVwYWlyIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBvciBvZiBhbm90aGVyIENvLU93bmVyXHJxdW90ZSANCnMgRmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzUwNDU1IC4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjkwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzUwNDU1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU1OTQ1MjQgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkNzM1MDQ1NSBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ3MzUwNDU1IC4gIFRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjc2Mzk5NyBjb25zdHJ1Y3Rpb24sIG9wZXJhdGlvbiBhbmQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDczNTA0NTUgDQp1c2Ugb2YgY2VydGFpbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gZWFjaCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NzYzOTk3ICwgYXMgd2VsbCBhcyB0aGUgY29uc3RydWN0aW9uLCBvcGVyYXRpb24gYW5kIHVzZSBvZiBjZXJ0YWluIHBvcnRpb25zIG9mIGVhY2ggQ28tT3duZXJccnF1b3RlIHMgRmFjaWxpdGllcyx9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ3MzUwNDU1ICB3aWxsIGJlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NzYzOTk3IHN1YmplY3R9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjA5ODc1NyAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY3NjM5OTcgdG8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSBjZXJ0YWluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NzYzOTk3IHNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSBHb3Zlcm5tZW50YWwgQXV0aG9yaXphdGlvbnMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY3NjM5OTcgYXMgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjA5ODc1NyBzZXQgZm9ydGggaW4gcGFydHMgQS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTYwNzEyOTYgM317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMDk4NzU3ICBhbmQgQi4zIG9mIEV4aGliaXQgQiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSAodGhlIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NVxjaGFycnNpZDU1OTQ1MjQgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNjEzMTE1MSAsIG5vdCBhbGwgb2Ygd2hpY2ggYXBwbHkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjc2Mzk5NyAuICBUaGUgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSAgbWF5IGJlIGlzc3VlZCBpbiB0aGUgbmFtZSBvZiBvbmUgb3IgbW9yZSBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEwODk2MTk2ICwgYnV0IHNoYWxsfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjgxNzA3MiAsIHRvIHRoZSBleHRlbnQgdGhleSBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTA4OTYxOTYgLCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjgxNzA3MiBhbmQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMTA4OTYxOTYgdG8gdGhlIGZ1bGxlc3QgZXh0ZW50IGFsbG93ZWQgYnkgQXBwbGljYWJsZSBMYXcsIGJlIGhlbGQsIHVzZWQgYW5kIGV4ZXJjaXNlZCBmb3IgdGhlIG11dHVhbCBiZW5lZml0IG9mIHRoZSBDby1Pd25lcnMgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm8NCnVwIGFuZCB0byBmYWNpbGl0YXRlIHRoZSBjb25zdHJ1Y3Rpb24sIHVzZSwgb3BlcmF0aW9uLCBtYWludGVuYW5jZSBhbmQgcmVwYWlyIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhcyBwcm92aWRlZCBoZXJlaW4uICBUaGUgU2hhcmVkIFBlcm1pdHMgc2hhbGwgYmUgYWRtaW5pc3RlcmVkIGluIHRoZSBzYW1lIG1hbm5lciBhcyB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiA0LjMuMywgYW5kfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjU4NTgxMSAsIHRvIHRoZSBleHRlbnQgdGhleSBkbyBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEwODk2MTk2ICB0aGUgQ28tfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEzOTc1MTcxIE93bmVycyB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMDg5NjE5NiBpbiBlYWNoIFNoYXJlZCBBc3NldCBHcm91cCBzaGFsbCBpbmRlbW5pZnkgYW5kIGhvbGQgUmlzaW5nIFRyZWUgSSBhbmQvb3IgT3BlcmF0b3IsIGFzIGFwcGxpY2FibGUsIGZyb20gYW5kIGFnYWluc3QgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEwODk2MTk2XGNoYXJyc2lkNzc0MzczMiANCmFueSBjbGFpbXMsIGRlbWFuZHMsIGNvc3RzLCBvYmxpZ2F0aW9ucyBhbmQgbGlhYmlsaXRpZXMgYnkgb3IgdG8gR292ZXJubWVudGFsIA0KQXV0aG9yaXRpZXMgb3Igb3RoZXIgdGhpcmQgcGFydGllcyBhcyBhIHJlc3VsdCBvZiB0aGUgdXNlIG9mIHRoZSBTaGFyZWQgUGVybWl0cyByZWxhdGluZyB0byBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCwgZXhjZXB0IHRvIHRoZSBleHRlbnQgcmVzdWx0aW5nIGZyb20gdGhlIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIFJpc2luZyBUcmVlIEkgYW5kL29yIE9wZXJhdG9yLCBhcyBhcHBsaWNhYmxlfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTU3NDY5MDVcY2hhcnJzaWQ3NzQzNzMyIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NTg1ODExIFRvIHRoZSBleHQNCmVudCB0aGUgU2hhcmVkIFBlcm1pdHMgZG8gbm90IGFwcGx5IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgYnV0IGluc3RlYWQgYXBwbHkgdG8gdGhlIEZhY2lsaXRpZXMgb3Igb3RoZXIgcHJvcGVydHkgc2VwYXJhdGVseSBvd25lZCBieSBvbmUgb3IgbW9yZSBvZiB0aGUgQ28tT3duZXJzLCB0aGV5IHNoYWxsIGJlIGFkbWluaXN0ZXJlZCBieSBPcGVyYXRvciwgYW5kIHRoZSBDby1Pd25lcnMgdG8gd2hvc2UgRmFjaWxpdGllcyBvciBvdGhlciBwcg0Kb3BlcnR5IHN1Y2ggU2hhcmVkIFBlcm1pdHMgYXBwbHkgc2hhbGwgaW5kZW1uaWZ5IGFuZCBob2xkIE9wZXJhdG9yIGhhcm1sZXNzIGZyb20gYW5kIGFnYWluc3QgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY1ODU4MTFcY2hhcnJzaWQ3NzQzNzMyIA0KYW55IGNsYWltcywgZGVtYW5kcywgY29zdHMsIG9ibGlnYXRpb25zIGFuZCBsaWFiaWxpdGllcyBieSBvciB0byBHb3Zlcm5tZW50YWwgQXV0aG9yaXRpZXMgb3Igb3RoZXIgdGhpcmQgcGFydGllcyBhcyBhIHJlc3VsdCBvZiB0aGUgdXNlIG9mIHRoZSBTaGFyZWQgUGVybWl0cywgZXhjZXB0IHRvIHRoZSBleHRlbnQgcmVzdWx0aW5nIGZyb20gdGhlIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIE9wZXJhdG9yfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjU4NTgxMSAsIGJ1dCB0aGUgY29zdHMgb2Ygc3VjaCBhZG1pbmlzdHJhdGlvbiBzaGFsbCBiZSBib3JuZSBieSBzdWNoIENvLU93bmVycyBhbmQgc2hhbGwgbm90IGJlIGluY2x1ZGVkIGluIHRoZSBPJk0gU2VydmljZXMgcHJvdmlkZWQgaGVyZXVuZGVyLiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMTU3NDY5MDVcY2hhcnJzaWQ3NzQzNzMyIE5vdHdpdGhzdGFuZGluZyB0aGUgZm9yZWdvaW5nLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMDg5NjE5NiAgZWFjaCBDby1Pd25lciBpbiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXQgR3JvdXAgdG8gd2hpY2ggYSBTaGFyZWQgUGVybWl0IHJlbGF0ZXMgc2hhbGwgaGF2ZSB0aGUgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNTc0NjkwNSAsIGluIHRoZSBjYXNlIG9mIEVtZXJnZW5jeSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTI5MTY2OTUgQ29uZGl0aW9uIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNTc0NjkwNSANCm9yIGlmIG5lY2Vzc2FyeSB0byBwcmV2ZW50IHRoZSB0ZXJtaW5hdGlvbiBvciByZXZvY2F0aW9uIG9mIGEgU2hhcmVkIFBlcm1pdCwgdG8gc3RlcCBpbiBhbmQgZXhlcmNpc2UgcmlnaHRzLCBwZXJmb3JtIGR1dGllcyBhbmQgb2JsaWdhdGlvbnMgYW5kIHRha2UgYWN0aW9ucyB1bmRlciBzdWNoIFNoYXJlZCBQZXJtaXQgYXMgbWF5IGJlIG5lY2Vzc2FyeSB0byBhdm9pZCBvciBtaXRpZ2F0ZSBzdWNoIEVtZXJnZW5jeSB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMjkxNjY5NSBDb25kaXRpb24gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE1NzQ2OTA1IG9yIHRlcm1pbmF0aW9uIG9yIHJldm9jYXRpb24gb2YgYSBTaGFyZWQgUGVybWl0LCBhbmQgc2hhbGwgYmUgZW50aXRsZWQgdG8gdGhlIHNhbWUgaW5kZW1uaWZpY2F0aW9uIGFzIFJpc2luZyBUcmVlIEkgb3IgT3BlcmENCnRvciB3b3VsZCBoYXZlIGJlZW4gdW5kZXIgdGhlIGNpcmN1bXN0YW5jZXM7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IGFueSBDby1Pd25lciBleGVyY2lzaW5nIHN1Y2ggc3RlcC1pbiByaWdodHMgc2hhbGwgYWxzbyBpbmRlbW5pZnkgYW5kIGhvbGQgdGhlIG90aGVyIENvLU93bmVycyBpbiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXRzIEdyb3VwIGZyb20gYW5kIGFnYWluc3QgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMTU3NDY5MDVcY2hhcnJzaWQ3NzQzNzMyIGFueSBjbGFpbXMsIGRlbWFuZHMsIGNvc3RzLCBvYmxpZ2F0aW9ucyBhbmQgbGlhYmlsaXRpZXMgYnkgb3IgdG8gR292ZXJubWVudGFsIEF1dGhvcml0aWVzIG9yIG90aGVyIHRoaXJkIHBhcnRpZXMgYXMgYSByZXN1bHQgb2YgaXRzIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IGluIHRoZSBleGVyY2lzZSBvZiBzdWNoIHN0ZXAtaW4gcmlnaHRzLn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjkwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTU5NDUyNCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjY3MiAzLjdcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDg2NjcyIFRoaXJkIFBhcnR5IFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyIC4gIFRoZSBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyNyBhbmQgdGhlIE9wZXJhdG9yIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkODY2NzIgYWNrbm93bGVkZ2UgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjcgLCBpbiBhZGRpdGlvbiB0byBhbnkgcmVxdWlyZW1lbnRzIG9yIHJlc3RyaWN0aW9ucyBpbiB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjY3MiAgdGhlaXIgcmlnaHRzIHRvIGNvbnN0cnVjdH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyNyAsIHVzZSBhbmQgb3BlcmF0ZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaXMgc3ViamVjdCB0byBjZXJ0YWluIHJpZ2h0cyBpbiBmYXZvciBvZiB0aGlyZCBwYXJ0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgyMTA3MzAgYW5kL29yIEFmZmlsaWF0ZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyNyANCmFzIGRlc2NyaWJlZCBvbiBFeGhpYml0IEIuICBObyBDby1Pd25lciBvciBPcGVyYXRvciB3aWxsIGludGVyZmVyZSB3aXRoIHN1Y2ggdGhpcmQgcGFydHkgcmlnaHRzIGluIGV4ZXJjaXNpbmcgaXRzIHJpZ2h0cyBhbmQgcGVyZm9ybWluZyBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyXGNoYXJyc2lkMzA4ODkyNyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIElWXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODc0MDUzMCB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyOTF9Q09OU1RSVUNUSU9OIEFORCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IE9XTkVSU0hJUCBPRiBBTkQgUklHSFQgVE8gVVNFIFNIQVJFRCBBU1NFVFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0Ke1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5MX0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjkyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFVuZGl2aWRlZCBPd25lcnNoaXAgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjkyfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiBvZiBTaGFyZWQgRmFjaWxpdGllcyBhbmQvb3IgU2hhcmVkIFJlYWwgUHJvcGVydHkgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA5ODc1NyBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyODgwMzYgU2hhcmVkIEFzc2V0cyBHcm91cCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCAoYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDEzMDcxMTcwXGNoYXJyc2lkNTU5NDUyNCBHcmFudGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIFwnOTQpIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4MTU3MDMgaGVyZWJ5IGdyYW50cywgYXNzaWducywgdHJhbnNmZXJzIGFuZCBjb252ZXlzIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwOTg3NTcgaXRzZWxmIGFuZCB0byBlYWNoIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIHRoZSBvdGhlciBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiBvZiBTaGFyZWQgRmFjaWxpdGllcyBhbmQvb3IgU2hhcmVkIFJlYWwgUHJvcGVydHkgaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIGFuIHVuZGl2aWRlZCBpbnRlcmVzdCwgYXMgdGVuYW50cy1pbi1jb21tb24sIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNjE3NzggDQpzdWNoIHJpZ2h0cywgYmVuZWZpdHMgYW5kIGludGVyZXN0cyBhcyB0aGUgR3JhbnRpbmcgQ28tT3duZXIgbWF5IGhhdmUgaW4sIHRvIG9yIHVuZGVyIGFueSBkZWVkcywgY29udmV5YW5jZXMsIGdyYW50cywgZWFzZW1lbnRzLCBhZ3JlZW1lbnRzLCBsZWFzZXMgb3Igb3RoZXIgaW5zdHJ1bWVudHMgb3IgZG9jdW1lbnRzIGNyZWF0aW5nLCBncmFudGluZywgYXNzaWduaW5nIG9yIGNvbg0KdmV5aW5nIHRoZSBHcmFudGluZyBDby1Pd25lciBpdHMgcmlnaHQsIHRpdGxlIGFuZCBpbnRlcmVzdCBpbiBzdWNoIFNoYXJlZCBGYWNpbGl0aWVzIGFuZC9vciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSAoY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ2MTYxNzc4XGNoYXJyc2lkMTYxOTc2NTEgVW5kZXJseWluZyBHcmFudGluZyBEb2N1bWVudHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNjE3NzggXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDE4Mzk3NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE2MTc3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE3MzQxOCB0byB0aGUgZXh0ZW50IHRoYXQgc3VjaCBncmFudCwgYXNzaWdubWVudCwgdHJhbnNmZXIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ3MDEzMTY0IGFuZCBjb252ZXlhbmNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzNjQyMDIgZG9lcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MDEzMTY0IG5vdCB2aW9sYXRlLCBpbnZhbGlkYXRlIG9yIHJlcXVpcmUgYW55IGNvbnNlbnQgd2hpY2ggaGFzIG5vdCBiZWVuIG9idGFpbmVkIHVuZGVyIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNjE3Nzggb2YgdGhlIFVuZGVybHlpbmcgR3JhbnRpbmcgRG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzAxMzE2NCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIHN1Y2ggdGhhdCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0Mjg4MDM2IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzNjQyMDIgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc2hhbGwgb3duIGFuIHVuZGl2aWRlZCBpbnRlcmVzdCwgYXMgYSB0ZW5hbnQtaW4tY29tbW9uLCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIzNjQyMDIgYWxsIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgU2hhcmVkIFJlYWwgUHJvcGVydHkgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXRzIEdyb3VwIGVxdWFsIHRvIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0Mjg4MDM2IA0KaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYXMgZGVzY3JpYmVkIGluIEV4aGliaXQgQiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MDEzMTY0IGFuZCBzaGFsbCBiZSBlbnRpdGxlZCB0byB0aGUgZnVsbCBiZW5lZml0cyBvZiBhbGwgcmlnaHRzIGFzc29jaWF0ZWQgd2l0aCBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjQwMDc5IGdyYW50ZWQsIGNyZWF0ZWQgb3IgY29udmV5ZWQgcHVyc3VhbnQgdG8gdGhlIFVuZGVybHlpbmcgR3JhbnRpbmcgRG9jdW1lbnRzIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBwZXJtaXR0ZWQgdGhlcmV1bmRlciBhbmQgdW5kZXIgQXBwbGljYWJsZSBMYXdzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQooc3VjaCB1bmRpdmlkZWQgaW50ZXJlc3Qgb2YgZWFjaCBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY0MDA3OSBhbmQgcmVsYXRlZCByaWdodHMgYW5kIGJlbmVmaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYmVpbmcgcmVmDQplcnJlZCB0byBpbiB0aGlzIEFncmVlbWVudCBhcyBpdHMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IE93bmVyc2hpcCBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5NyANCiAgVXBvbiB0ZXJtaW5hdGlvbiBvZiB0aGlzIEFncmVlbWVudCwgYWxsIG9mIHRoZSB2YXJpb3VzIHJpZ2h0cyBhbmQgaW50ZXJlc3RzIHVuZGVyIHRoZSBVbmRlcmx5aW5nIEdyYW50aW5nIERvY3VtZW50cyB3aWxsLCB3aXRob3V0IHRoZSBuZWVkIGZvciBmdXJ0aGVyIGFjdGlvbiBieSBhbnkgcGFydHksIHJldmVydCB0byB0aGUgQ28tT3duZXIgb3IgDQpDby1Pd25lcnMgdG8gd2hvbSB0aGV5IHdlcmUgb3JpZ2luYWxseSBncmFudGVkIHByaW9yIHRvIHRoZSBFZmZlY3RpdmUgRGF0ZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyOTN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyOTN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIENvLU93bmVyIHdobyBoYXMgYW4gT3duZXJzaGlwIEludGVyZXN0IGluIGEgU2hhcmVkIEFzc2V0cyBHcm91cCBzaGFsbCBoYXZlIGFuIHVuZGl2aWRlZCByaWdodCB0byB0aGUgdXNlIG9yIGNhcGFjaXR5IG9mIHRoZSBTaGFyZWQgQXNzZXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNjE3NzggaW4gc3VjaCBTaGFyZWQgQXNzZXQgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyAgKGFuIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzM3NTE3XGNoYXJyc2lkNzc0MzczMiBVbmRpdmlkZWQgVXNlIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIHdoaWNoIHJpZ2h0IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IHNoYWxsIGJlIHNoYXJlZCB3aXRoIHRoZSBvdGhlciBDby1Pd25lcnMgaW4gdGhlIFNoYXJlZCBBc3NldHMgR3JvdXBzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzLiAgQSBDby1Pd25lclxycXVvdGUgcyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQppcyBleGVyY2lzYWJsZSB1cG9uIHRoZSBDb21taXNzaW9uaW5nIERhdGUgb2YgaXRzIEZhY2lsaXR5IGJ5IHN1Y2ggQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA3NjE0ODggYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnByb3ZpZGluZyB3cml0dGVuIG5vdGljZSB0byBPcGVyYXRvciBhbmQgdG8gdGhlIG90aGVyIENvLU93bmVycyBpbiB0aGUgc2FtZSBTaGFyZWQgQXNzZXRzIEdyb3VwIHRoYXQgdGhlIENvbW1pc3Npb25pbmcgRGF0ZSBoYXMgb2NjdXJyZWQsIHByb3ZpZGVkIHRoYXQgc3VjaCBDby1Pd25lciBoYXMgbWFkZSB0aGUgcGF5bWVudCBvciBwYXltZW50cyBzZXQgZm9ydGggaW4gU2VjdGlvblx+DQo0LjMsIGFuZCB0aGF0IG5vIEV2ZW50IG9mIERlZmF1bHQgaGFzIG9jY3VycmVkIGFuZCBpcyBjb250aW51aW5nIHdpdGggcmVzcGVjdCB0byBzdWNoIENvLU93bmVyLiAgRm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsIGVhY2ggQ28tT3duZXIgd2hvc2UgRmFjaWxpdHkgaGFzIG5vdCByZWFjaGVkIGl0cyBDb21taXNzaW9uaW5nIERhdGUgYXMgb2YgdGhlIEVmZmVjdGl2ZSBEYXRlIChhbmQgdGh1cyB3aG9zZSBQcm9wb3J0aW9uYQ0KdGUgU2hhcmUgaW4gYWxsIFNoYXJlZCBBc3NldHMgR3JvdXBzIGlzIDAlKSBzaGFsbCBiZSBkZWVtZWQgbm90IHRvIGhhdmUgZXhlcmNpc2VkIGl0cyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGluIGFueSBTaGFyZWQgQXNzZXRzIEdyb3VwIChhbmQgYXMgYSByZXN1bHQgc2hhbGwgbm90IGJlIHJlcXVpcmVkIHRvIGJlYXIgY29zdHMgb3IgZXhwZW5zZXMgcmVsYXRlZCB0byBhbnkgU2hhcmVkIEFzc2V0cyBHcm91cCBub3IgaGF2ZSB0aGUgcmlnaHQgDQp0byB2b3RlIG9uIG1hdHRlcnMgdW5sZXNzIG90aGVyd2lzZSBzZXQgZm9ydGggaGVyZWluKSwgYnV0IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGV4ZXJjaXNlIGl0cyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGFzIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gTGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBDby1Pd25lciBvZiBhIFRyYW5zbWlzc2lvbiBMaW5lIHNoYWxsIGJlIGVudGl0bGVkIHRvIHVzZSBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjM2NDIwMiBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICB0aGUgRGVsaXZlcnkgQ2FwYWJpbGl0eSBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmUuICBJbiB0aGUgZXZlbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhIHBhcnRpYWwgY3VydGFpbG1lbnQgb2YgRGVsaXZlcnkgQ2FwYWJpbGl0eSBieSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDY2ODg5NDQgdGhlIENBSVNPIG9yIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFRyYW5zbWlzc2lvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDQ2NzUgT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2Njg4OTQ0ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2ODg5NDQgKGlpKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGEgZGUtcmF0aW5nIG9mIHRoZSBUcmFuc21pc3Npb24gTGluZSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCAoaWlpKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYxNzc4IGEgY3VydGFpbG1lbnQgYXMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2Njg4OTQ0IGRldGVybWluZWQgYnkgdGhlIE9wZXJhdG9yIHRvIGJlIG5lY2Vzc2FyeSB0byBtYWludGFpbiwgcmVwYWlyLCByZXBsYWNlLCByZW1vdmUsIGludmVzdGlnYXRlLCBpbnNwZWN0IG9yIHRlc3QgdGhlIFRyYW5zbWlzc2lvbiBMaW5lLCBhbnkgU2hhcmVkIEZhY2lsaXR5IG9yIGFueSBGYWNpbGl0eSwgb3IgKGl2KSBFbWVyZ2VuY3kgQ29uZGl0aW9ucywgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGVhY2ggQ28tT3duZXJccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjM2NDIwMiByaWdodCB0byB1c2UgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgd2lsbCBiZSByDQplZHVjZWQgcHJvIHJhdGEgaW4gYWNjb3JkYW5jZSB3aXRoIGl0cyBPd25lcnNoaXAgSW50ZXJlc3QgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgY3VydGFpbG1lbnQgb3IgZGUtcmF0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCA7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IE9wZXJhdG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTk0MzYwIA0Kc2hhbGwgYmUgYXV0aG9yaXplZCB0byBjdXJ0YWlsIG9uIGEgbm9uLXBybyByYXRhLCBidXQgZXF1aXRhYmxlIGFuZCByZWFzb25hYmxlIGJhc2lzIChhKSBpZiBzdWNoIG5vbi1wcm8gcmF0YSBhbGxvY2F0aW9uIGlzIG5lY2Vzc2FyeSB0byBjb21wbHkgd2l0aCBkaXJlY3Rpb25zIGZyb20gdGhlIENBSVNPIG9yIHRoZSBUcmFuc21pc3Npb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0Njc1IE93bmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjU5NDM2MCAgYW5kIGRvZXMgbm90IHZpb2xhdGUgdGhlIHRlcm1zIG9mIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCBvciAoYikgdG8gdGhlIGV4dGVudCB0aGF0IHRoZSBuZWVkIGZvciBjdXJ0YWlsbWVudCAoaW5jbHVkaW5nIEVtZXJnZW5jeSBDb25kaXRpb25zKSBjYW4gYmUgYXR0cmlidXRlZCB0byBhIHBhcnRpY3VsYXIgRmFjaWxpdHl9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgSW4gdGhlIGV2ZW50IHRoYXQgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lIGV4Y2VlZHMgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggY2FwYWNpdHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBwcm92aWRlZCBpbiB0aGUgYXBwbGljYWJsZSBJbg0KdGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsIHdpdGggVHJhbnNtaXNzaW9uIE93bmVyXHJxdW90ZSBzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDQ2NzUgdGhlIENBSVNPXHJxdW90ZSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0MjU5NTEgd3JpdHRlbiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgY29uc2VudCBhbmQgYXBwcm92YWwsIGVhY2ggQ28tT3duZXJccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IHJpZ2h0IHRvIHVzZSB0aGUgRGVsaXZlcnkgQ2FwYWJpbGl0eSBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCndpbGwgYmUgaW5jcmVhc2VkIHBybyByYXRhIGluIGFjY29yZGFuY2Ugd2l0aCBpdHMgT3duZXJzaGlwIEludGVyZXN0IGZvciBzbyBsb25nIGFzIHRoZSBEZWxpdmVyeSBDYXBhYmlsaXR5IGlzIGluIGV4Y2VzcyBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4MTAzOCBjYXBhY2l0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KcHJvdmlkZWQgaW4gdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgd2l0aCBUcmFuc21pc3Npb24gT3duZXJccnF1b3RlIHMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSBDQUlTT1xycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDI1OTUxIHdyaXR0ZW4gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNvbnNlbnQgYW5kIGFwcHJvdmFsLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMi4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IEV4Y2VzcyBDYXBhYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBObyBDby1Pd25lciBzaGFsbCBoYXZlIHRoZSByaWdodCB0byB1c2UgbW9yZSB0aGFuIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHRoZSBEZWxpdmVyeSBDYXBhYmlsaXR5IG9mIHRoZSBUcmFuc21pc3Npb24gTGluZS4gIEhvd2V2ZXIsIGR1cmluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KcGVyaW9kcyBpbiB3aGljaCBhIENvLU93bmVyIGlzIG5vdCB1dGlsaXppbmcgaXRzIGZ1bGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IFByb3BvcnRpb25hdGUgU2hhcmUgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgRGVsaXZlcnkgQ2FwYWJpbGl0eSBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmUsIHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtYXkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU2ODQ1OTcgdXNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbW9yZSB0aGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyB0aGVpciB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZnVsbCBVbmRpdmlkZWQgVXNlIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IHMgdGhlcmVpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTY4MjQgIHdpdGhvdXQgYWRkaXRpb25hbCBjb3N0cyBiZXlvbmQgaXRzIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgTyZNIENvc3RzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgc3ViamVjdCB0byB0aGUgb3BlcmF0aW5nIGxpbWl0cyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHNvIGxvbmcgYXMgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTY4NDU5NyB1c2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmRvZXMgbm90IGludGVyZmVyZSB3aXRoIG9yIGFkdmVyc2VseSBhZmZlY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzM3NTE3IGFueSBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyXHJxdW90ZSBzIGVuZXJneSBzY2hlZHVsZXMgYW5kIGRlbGl2ZXJpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjU2ODI0IA0KOyBwcm92aWRlZCB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg4MDQxODkgDQooaSkgcHJpb3IgdG8gYW55IENvLU93bmVyIHVzaW5nIG1vcmUgdGhhbiBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZiB0aGUgRGVsaXZlcnkgQ2FwYWJpbGl0eSBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmUsIHRoZSBDby1Pd25lcnMgc2hhbGwgaGF2ZSBvYnRhaW5lZCBhbGwgbmVjZXNzYXJ5IEdvdmVybm1lbnRhbCBBdXRob3JpemF0aW9ucywgaW5jbHVkaW5nIEZFUkMgYWNjZXB0YW5jZSBmb3IgDQpmaWxpbmcgb2YgYW4gZWZmZWN0aXZlIHRyYW5zbWlzc2lvbiBzZXJ2aWNlcyBhZ3JlZW1lbnQgZm9yIHN1Y2ggdXNhZ2UgdG8gdGhlIGV4dGVudCByZXF1aXJlZCwgYW5kIChpaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1NjgyNCANCmFueSBDby1Pd25lciB1c2luZyBtb3JlIHRoYW4gaXRzIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lIHNoYWxsIHN1cnJlbmRlciBzdWNoIGV4Y2VzcyBEZWxpdmVyeSBDYXBhYmlsaXR5IHByb21wdGx5IHdoZW4gaXQgaXMgbmVlZGVkIGJ5IHRoZSBDby1Pd25lciBlbnRpdGxlZCB0aGVyZXRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ4MjEwNzMwICBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjI2ODM1NCAgc2hhbGwgaW5kZW1uaWZ5IGFuZCBob2xkIGhhcm1sZXNzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgyMTA3MzAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MjY4MzU0IG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ4MjEwNzMwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjI2ODM1NCAgZm9yIExvc3NlcyByZXN1bHRpbmcgZnJvbSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MjEwNzMwIGEgZmFpbHVyZSBvciBkZWxheSBpbiBzdXJyZW5kZXJpbmcgc3VjaCBleGNlc3MgRGVsaXZlcnkgQ2FwYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MjY4MzU0IC59DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE2NjYzODUxIENvbnN0cnVjdGlvbjsgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBSZWltYnVyc2VtZW50IG9mIENvc3RzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjk0fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjMuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ5NDQ2NzUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgU3ViamVjdCB0byBpdHMgcmlnaHQgdG8gcmVpbWJ1cnNlbWVudCBhcyBzZXQgZm9ydGggaGVyZWluLCBSaXNpbmcgVHJlZSBJIHdpbGwgZGVzaWduLCBwZXJtaXQgYW5kIGNvbnN0cnVjdCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYxNzc4IGFsbCBvZiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSANCnRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggQXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUxODk4NSBMYXdzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgLCBHb29kIFV0aWxpdHkgUHJhY3RpY2UgYW5kIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjUxODk4NSBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgRmFjaWxpdGllcyBvbiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MVxjaGFycnNpZDk0NDY3NSBFeGhpYml0IEJ9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgYXR0YWNoZWQgaGVyZXRvLiAgfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMzUyNzE4NiANClVwb24gY29tcGxldGlvbiwgdGVzdGluZyBhbmQgY29tbWlzc2lvbmluZyBvZiBlYWNoIGFwcGxpY2FibGUgZ3JvdXAgb2YgU2hhcmVkIEZhY2lsaXRpZXMsIFJpc2luZyBUcmVlIEkgd2lsbCBhc3NpZ24sIHRyYW5zZmVyIGFuZCBjb252ZXkgc3VjaCBTaGFyZWQgRmFjaWxpdGllcyB0byB0aGUgQ28tT3duZXJzIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldCBHcm91cCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaQ0KciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzLCBpbmNsdWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NTI3MTIgcmlnaHRzIHVuZGVyIGNvbnN0cnVjdGlvbiBhbmQgc3VwcGx5IGNvbnRyYWN0cyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1MjcxODYgDQpjb250cmFjdG9yLCBzdXBwbGllciBhbmQvb3IgbWFudWZhY3R1cmVyIHdhcnJhbnRpZXMgcmVsYXRlZCB0byBzdWNoIFNoYXJlZCBGYWNpbGl0aWVzLCB3aGljaCB3YXJyYW50aWVzIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyIG1heX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTI3MTg2ICBiZSBlbmZvcmNlZCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyIGFzIHByb3ZpZGVkIGJlbG93fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1MjcxODYgLiAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMTM1MjcxODZcY2hhcnJzaWQ1NTk0NTI0IEhvd2V2ZXIsIG5vdHdpdGhzdGFuDQpkaW5nIGFueXRoaW5nIGhlcmVpbiB0byB0aGUgY29udHJhcnksIFJpc2luZyBUcmVlIEkgc2hhbGwgaGF2ZSBubyBsaWFiaWxpdHkgdG8gdGhlIG90aGVyIENvLU93bmVycyBmb3IgYW55IGRlZmVjdCBpbiB0aGUgZGVzaWduLCBjb25zdHJ1Y3Rpb24gb3IgdXRpbGl0eSBvZiBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMTU3NDY5MDUgDQouICBSaXNpbmcgVHJlZSBJIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9ucyBvciB3YXJyYW50aWVzIG9mIGFueSBraW5kIHdpdGggcmVzcGVjdCB0byB0aGUgY29uZGl0aW9uLCB1c2Ugb3IgZml0bmVzcyBvZiBhbnkgb2YgdGhlIFNoYXJlZCBSZWFsIHByb3BlcnR5IH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDEwNTYxMDg5IG9yIHdpdGggcmVzcGVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDE1NzQ2OTA1IHRoZSBkZXNpZ24sIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIG9yIHV0aWxpdHkgb2YgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMTA1NjEwODkgYW55IG9mIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDE1NzQ2OTA1IHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMTA1NjEwODkgLH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDEyNjc2MDVcY2hhcnJzaWQ1NTk0NTI0ICBhbmQgaGVyZWJ5IGRpc2NsYWltcyBhbnkgd2FycmFudHkgb2YgbWVyY2hhbnRhYmlsaXR5IG9yIGZpdG5lc3MgZm9yIGEgcGFydGljdWxhcg0KIHB1cnBvc2Ugb3IgYW55IG90aGVyIHdhcnJhbnR5IG9mIGFueSBraW5kIHdpdGggcmVzcGVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQxMDU2MTA4OSB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMTI2NzYwNVxjaGFycnNpZDU1OTQ1MjQgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLn17DQpccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2NzYwNSAgIEVhY2ggb2YgdGhlIENvLU93bmVycyBhZ3JlZXMgdGhhdCB0aGV5IHdpbGwgbG9vayBzb2xlbHkgdG8gdGhlIGRlc2lnbmVycywgY29udHJhY3RvcnMsIHN1cHBsaWVycywgbWFudWZhY3R1cmVycyBhbmQgb3RoZXIgUGVyc29ucyB3aG8gcGFydGljaXBhdGUNCmQgaW4gdGhlIGRlc2lnbiBhbmQvb3IgY29uc3RydWN0aW9uIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB3aXRoIHJlc3BlY3QgdG8gYW55IGRlZmVjdHMgb3IgYnJlYWNoZXMgb2YgY29udHJhY3Qgb3Igd2FycmFudHkuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTE4OTg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMy4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUxODk4NSANClJpc2luZyBUcmVlIElJIGFuZCBSaXNpbmcgVHJlZSBJSUkgc2hhbGwgZWFjaCByZWltYnVyc2UgUmlzaW5nIFRyZWUgSSBmb3IgYWxsIGNvc3RzIGFuZCBleHBlbnNlcyBpbmN1cnJlZCBieSBSaXNpbmcgVHJlZSBJIGluIGRlDQpzaWduaW5nLCBwZXJtaXR0aW5nIGFuZCBjb25zdHJ1Y3RpbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzIG9mIHRoZSBjb3N0cyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY3NjA1IHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUxODk4NSANCmVhY2ggU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY3NjA1ICBvZiB3aGljaCB0aGV5IGFyZSBtZW1iZXJzLCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgUHJvcG9ydGlvbmF0ZSBTaGFyZXMgaW4gZWFjaCBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCANCjsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgZm9yIHB1cnBvc2VzIG9mIHRoaXMgU2VjdGlvbiA0LjMuMiwgdGhlIENvLU93bmVyc1xycXVvdGUgIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMgc2hhbGwgYmUgZGV0ZXJtaW5lZCBvbiB0aGUgYmFzaXMgb2YgdGhlIG5hbWVwbGF0ZSBjYXBhY2l0aWVzIHNldCBmb3J0aCBpbiBSZWNpdGFsIEIsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBvciBubw0KdCBhIEZhY2lsaXR5IGhhcyBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2NzYwNSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUxODk4NSBTdWNoIHJlaW1idXJzZW1lbnQgc2hhbGwgYmUgbWFkZSB3aXRoaW4gZmlmdGVlbiAoMTUpIGRheXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5MzAxIGFmdGVyDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUxODk4NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5MzAxIHJlY2VpcHQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1NjgyNCAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTY4MjQgDQpub3RpY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCBmcm9tIFJpc2luZyBUcmVlIEkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1NjgyNCB0aGF0IFwnOTNGaW5hbCBDb21wbGV0aW9uXCc5NCBvciBpdHMgZXF1aXZhbGVudCBmb3IgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cCBoYXMgb2NjdXJyZWQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NDgzMzA0IHVuZGVyIHRoZSBjb25zdHJ1Y3Rpb24gY29udHJhY3QgdGhlcmVmb3IsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTY4MjQgYW5kIChpaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5MzAxIA0KYSBzdGF0ZW1lbnQgb2YgdGhlIGFtb3VudCB0byBiZSByZWltYnVyc2VkIChpbmNsdWRpbmcgYXBwcm9wcmlhdGUgc3VwcG9ydGluZyBkb2N1bWVudGF0aW9uKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTUyMjU4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjMuM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTUyMjU4NSBFYWNoIENvLU93bmVyIGludGVuZHMgdGhhdCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggbGwgfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDc1MjcxMiByaWdodHMgdW5kZXIgY29uc3RydWN0aW9uIGFuZCBzdXBwbHkgY29udHJhY3RzIGFuZCBjb250cmFjdG9yLCBzdXBwbGllciBhbmQvb3IgbWFudWZhY3R1cmVyIHdhcnJhbnRpZXMgcmVsYXRlZCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCBhbnkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDgzMzA0IHNoYWxsIGJlIGhlbGQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NTI3MTIgdGhlIGFwcGxpY2FibGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ3ODQ3NCBhbmQgZWFjaCBDby1Pd25lciBzaGFsbCBjb29wZXJhdGUgd2l0aCBlYWNoIG90aGVyIHRvIGVuc3VyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCBlbmZvcmNlYWJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Nzg0NzQgaWxpdHl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4ICBieSBhbnkgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyICBvciBieSBPcGVyYXRvciBhcyBhZw0KZW50IGZvciB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggOyBwcm92aWRlZCB0aGF0IGVuZm9yY2VtZW50IG9mIGFueSBzdWNoIGNvbnRyYWN0IG9yIHdhcnJhbnR5IHNoYWxsIG9ubHkgYmUgZG9uZSBieSBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NTI3MTIgDQogdW50aWwgdGhlIGNvbXBsZXRpb24gb2YgYWxsIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgYnkgT3BlcmF0b3IgdGhlcmVhZnRlcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCAgdW5sZXNzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgUmlzaW5nIFRyZWUgSSBvciBPcGVyYXRvciwgYXMgYXBwbGljYWJsZSx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4ICBoYXMgZmFpbGVkIHRvIGRvIHNvIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDgzMzA0IG5pbmV0eSAoOTApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggIGRheXMgYWZ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NTI3MTIgd3JpdHRlbiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IG5vdGljZSBmcm9tIGFueSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgIHNldHRpbmcgZm9ydGggdGhlIHJlYXNvbnMgdGhhdCBzdWNoIGNvbnRyYWN0IG9yIHdhcnJhbnR5IGhhcyBiZWVuIGJyZWFjaGVkIGFuZCBtdXN0IGJlIGVuZm9yY2VkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2NDU5NzggLH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NTI3MTIgIHVubGVzcyB0aGVyZSBpcyBhIGRpc3B1dGUgcmVnYXJkaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4IHN1Y2ggZW5mb3JjZW1lbnQsIGluIHdoaWNoIGV2ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDY0NTk3OCB0aGUgb3RoZXIgQ28tT3duZXJccnF1b3RlIHMgc2hhbGwgbm90IGV4ZXJjaXNlIHN1Y2ggcmlnaHRzIHVudGlsIHN1Y2ggZGlzcHV0ZSBpcyByZXNvbHZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMy40XHRhYn19XHBhcmQgXGx0cnBhclxzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4IA0KVG8gdGhlIGV4dGVudCB0aGF0IGl0IGRvZXMgbm90IG90aGVyd2lzZSBoYXZlIHRoZSBuZWNlc3NhcnkgcmVhbCBwcm9wZXJ0eSBpbnRlcmVzdHMgYW5kIHJpZ2h0cywgUmlzaW5nIFRyZWUgSSBzaGFsbCBoYXZlLCBhbmQgZWFjaCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI0Njk3Nzcgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2NDU5NzggQ28tT3duZXJzIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI0Njk3Nzcgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgYW5kIGhlcmVieSBkbyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY0NTk3OCBncmFudCB0byBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2NDU5NzggIHRoZSBiZW5lZml0IG9mIGFuZCB0aGUgcmlnaHQgdG8gdXNlIGFsbCBvZiB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4ICwgc3ViamVjdCB0byBhbnkgcmVzdHJpY3Rpb25zIG9yIGxpbWl0YXRpb25zIGluIHRoZSBVbmRlcmx5aW5nIEdyYW50aW5nIERvY3VtZW50cyx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4IGZvciB0aGUgcHVycG9zZSBvZiBjb25zdHJ1Y3RpbmcsIGluc3RhbGxpbmcsIHRlc3RpbmcgYW5kIGNvbW1pc3Npb25pbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjhcY2hhcnJzaWQxMDEwMzcwNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4zLjVcdGFifX1ccGFyZCBcbHRycGFyXHMzXHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNTU5NDUyNCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjggDQpOb3R3aXRoc3RhbmRpbmcgdGhlIGZhY3QgdGhhdCB0aGUgZGVzaWduLCBjb25zdHJ1Y3Rpb24sIHRlc3RpbmcgYW5kIGNvbW1pc3Npb25pbmcgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGlzIGJlaW5nIGRvbmUgYnkgUmlzaW5nIFRyZWUgSSwgdGhlIENvLU93bmVycyBhZ3JlZSB0aGF0IHRoZXkgd2lsbCBzaGFyZSB0aGUgcmlza3MgdGhlcmVvZiBhbW9uZyB0aGVtc2VsdmVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ4MjEwNzMwICBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjggLiAgQWNjb3JkaW5nbHksIGVhY2ggb2YgdGhlIENvLU93bmVycyB3aWxsIGluZGVtbmlmeSBhbmQgaG9sZCBSaXNpbmcgVHJlZSBJIGhhcm1sZXNzIGZyb20gYW5kIGFnYWluc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ4MjEwNzMwIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjQ1MTQyOCBhbnkgY2xhaW1zLCBkZW1hbmRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDU3NDQxIA0KY29zdHMsIG9ibGlnYXRpb25zIGFuZCBsaWFiaWxpdGllcyBieSBvciB0byB0aGlyZCBwYXJ0aWVzIGFzIGEgcmVzdWx0IG9mIHRoZSBkZXNpZ24sIGNvbnN0cnVjdGlvbiwgdGVzdGluZyBhbmQgY29tbWlzc2lvbmluZyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjggDQpleGNlcHQgdG8gdGhlIGV4dGVudCByZXN1bHRpbmcgZnJvbSB0aGUgZ3Jvc3MgbmVnbGlnZW5jZSBvciB3aWxsZnVsIG1pc2NvbmR1Y3Qgb2YgUmlzaW5nIFRyZWUgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0IDsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgZm9yIHB1cnBvc2VzIG9mIHRoaXMgU2VjdGlvbiA0LjMuNSwgdGhlIENvLU93bmVyc1xycXVvdGUgIHJlc3BlY3RpdmUNCiBQcm9wb3J0aW9uYXRlIFNoYXJlcyBzaGFsbCBiZSBkZXRlcm1pbmVkIG9uIHRoZSBiYXNpcyBvZiB0aGUgbmFtZXBsYXRlIGNhcGFjaXRpZXMgc2V0IGZvcnRoIGluIFJlY2l0YWwgQiwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIG9yIG5vdCBhIEZhY2lsaXR5IGhhcyBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDgxMTk0NiAuIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjQ1MTQyOFxjaGFycnNpZDU1OTQ1MjQgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBBZGRpdGlvbmFsIFBoYXNlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5NX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5IEFkZGl0aW9uYWwgZ2VuZXJhdGluZyBmYWNpbGl0aWVzLCB3aGV0aGVyIG93bmVkIGJ5IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDby1Pd25lciBvciBpdHMgQWZmaWxpYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5IA0Kb3IgYnkgYW5vdGhlciBQZXJzb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjEwODkgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFuIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBZGRpdGlvbmFsIFBoYXNlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjEwODkgIG1heSBiZSBjb25uZWN0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MjIzMDk4ICB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIG1heSB1c2UgdGhlIFNoYXJlZCBBc3NldHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSB0aGUgZXh0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgY29tcGF0aWJsZSB3aXRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5IHRoZSBleGlzdGluZyBTaGFyZWQgRmFjaWxpdGllcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFRyYW5zbWlzc2lvbiBPd25lclxycXVvdGUgcyBpbnRlcmNvbm5lY3Rpb24gZmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjY0MjAxMSAgYW5kIGFueSByZXF1aXJlZCBGRVJDIGFwcHJvdmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5ICwgYnV0IG9ubHkgdXBvbiB0aGUgdW5hbmltb3VzIHdyaXR0ZW4gYXBwcm92YWwgb2YgYWxsIG9mIHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgTGVuZGVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3OTc3NTQgDQogYW5kIHN1YmplY3QgdG8gdGhlIHJlY2VpcHQgb2YgYWxsIG5lY2Vzc2FyeSBjb25zZW50cyBhbmQgYXBwcm92YWxzIGZyb20gR292ZXJubWVudGFsIEF1dGhvcml0aWVzLCBvd25lcnMgb2YgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5LCB0aGUgVHJhbnNtaXNzaW9uIE93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDIyMzA5OCAsIENBSVNPfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1Nzk3NzU0ICBhbmQgb3RoZXIgbmVjZXNzYXJ5IFBlcnNvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIFRoZSBvd25lciBvZiBzdWNoIEFkZGl0aW9uYWwgUGhhc2Ugc2hhbGwgZXhlY3V0ZSBhIGpvaW5kZXIsIHRoZSBmb3JtIG9mIHdoaWNoIGlzIGF0dGFjaGVkIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgRn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU1MzkxODggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpoZXJldG8sIGFuZCB0aGUgQ28tT3duZXJzIHNoYWxsIGV4ZWN1dGUgYW4gYXBwcm9wcmlhdGUgYW1lbmRtZW50IHRvIHRoaXMgQWdyZWVtZW50IHRvIHJlZmxlY3QgdGhlIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3Qgb2YgdGhlIEFkZGl0aW9uYWwgUGhhc2UgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSANCiBhbmQgc3VjaCBvdGhlciBtYXR0ZXJzIGFzIHRoZSBDby1Pd25lcnMgYW5kIHRoZSBvd25lciBvZiB0aGUgQWRkaXRpb25hbCBQaGFzZSBtYXkgYWdyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5NjY0MTUgDQpBbnkgc3VjaCBhbWVuZG1lbnQgdG8gdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgZmlsZWQgd2l0aCBGRVJDIHVuZGVyIFNlY3Rpb24gMjA1IG9mIHRoZSBGUEEsIGNvbnNpc3RlbnQgd2l0aCBTZWN0aW9uIDE3LjMgaGVyZW9mLCBhbmQgc2hhbGwgbm90IGJlY29tZSBlZmZlY3RpdmUgdW50aWwgYWNjZXB0ZWQgYnkgRkVSQy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgY29udGFpbmVkIGhlcmVpbiB0byB0aGUgY29udHJhcnksIHRoZSBvd25lciBvZiB0aGUgQWRkaXRpb25hbCBQaGFzZSBzaGFsbCBiZWFyIGFueSBpbmNyZW1lbnRhbCBjb3N0cyBhbmQgZXhwZW5zZXMgb2YgbW9kaWZ5aW5nIGFuZCB1cGdyYWRpbmcgdGhlIGFwcGxpY2FibGUgZXhpc3RpbmcgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5MzAxIA0Kb3IgYWNxdWlyaW5nIGFkZGl0aW9uYWwgU2hhcmVkIFJlYWwgUHJvcGVydHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0byBhY2NvbW1vZGF0ZSB0aGUgY29ubmVjdGlvbiBvZiBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjEwODkgZ2VuZXJhdGluZyBmYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ5NDQ2NzUgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExMjk5MDE2IEFkZGl0aW9uYWwgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyOTZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiANCk9uY2UgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGRlc2NyaWJlZCBvbiBFeGhpYml0IEIgaGF2ZSBiZWVuIGNvbnN0cnVjdGVkLCBubyBDby1Pd25lciBtYXkgbW9kaWZ5LCBhZGQgdG8gb3IgcmVtb3ZlIGFueSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGV4Y2VwdCAoaSkgYXMgbWF5IGJlIHJlcXVpcmVkIGJ5IEFwcGxpY2FibGUgTGF3cyBhbmQgYWZ0ZXIgbm90IGxlc3MgdGhhbiB0aGlydA0KeSAoMzApIGRheXMgd3JpdHRlbiBub3RpY2UgdG8gdGhlIG90aGVyIENvLU93bmVycywgb3IgKGlpKSB3aXRoIHRoZSBwcmlvciB3cml0dGVuIGNvbnNlbnQgb2YgYWxsIENvLU93bmVycyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1Nzk3NzU0ICBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBMZW5kZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDc4NDc0ICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiBzdWNoIGNvbnNlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Nzg0NzQgIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgbm90IHRvIGJlIHVucmVhc29uYWJseSB3aXRoaGVsZH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDc4NDc0ICl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAuIEluIGVpdGhlciBjYXNlLCB0aGUgQ28tT3duZXIgcHJvcG9zaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDMwNjM0IHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIG1vZGlmeSwgYWRkIA0KdG8gb3IgcmVtb3ZlIGFueSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjI1NTgzMCBzaGFsbCBvYnRhaW4gYSByZXBvcnQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgYSBxdWFsaWZpZWQgaW5kZXBlbmRlbnQgZW5naW5lZXIgcmVhc29uYWJseSBhY2NlcHRhYmxlIHRvIGFsbCBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2MjU1ODMwIGZpbmRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgdGhhdCBzdWNoIG1vZGlmaWNhdGlvbnMsIGFkZGl0aW9ucyBvciByZW1vdmFscyB3aWxsIG5vdCBhZHZlcnNlbHkgYWZmZWN0IHRoZSBvcGVyYXRpb24sIHBlcmZvcm1hbmNlLCByZWxpYWJpbA0KaXR5IG9yIG1haW50ZW5hbmNlIGNvc3RzIG9mIGFueSBGYWNpbGl0eSAoZXhjZXB0IGFzIG1heSBiZSBhZ3JlZWQgYnkgdGhlIG93bmVyIG9mIHN1Y2ggUHJvamVjdCkuICBJbiBjb25uZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBjdGlvbiB3aXRoIHRoZSBhcHByb3ZhbCBvZiBhbnkgc3VjaCBtb2RpZmljYXRpb25zLCBhZGRpdGlvbnMgb3IgcmVtb3ZhbHMgb2YgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgRmFjaWxpdGllcywgdGhlIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBPd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IHMgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IG5lZ290aWF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTEyOTkwMTYgIGluIGdvb2QgZmFpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IGFuZCBhZ3JlZSBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2ICAoYSkgdGhlIGRlc2lnbiBhbmQgY29uc3RydWN0aW9uIG9mIHN1Y2ggbW9kaWZpY2F0aW9ucyBhbmQvb3IgYWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDYxNTM5NCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCAgYW5kL29yIHRoZSBwbGFuIG9mIHJlbW92YWwgb2Ygc3VjaCBTaGFyZWQgRmFjaWxpdGllcywgYXMgYXBwbGljYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IA0KLCAoYikgdGhlIGFsbG9jYXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IGRlc2lnbiBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgY29uc3RydWN0aW9uIGNvc3RzIG9mIHRoZSBtb2RpZmljYXRpb25zIGFuZC9vciBhZGRpdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBTaGFyZWR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2ICBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBhbmQvb3IgdGhlIGNvc3RzIG9mIHJlbW92YWwgb2Ygc3VjaCBTaGFyZWQgRmFjaWxpdGllcywgYXMgYXBwbGljYWJsZSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgYW1vbmcgdGhlIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjE1Mzk0IE93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgcywgYW5kIChjKSB0aGUgYWxsb2NhdGlvbiBvZiBjb3N0cyBhc3NvY2lhdGVkIHdpdGggdGhlIG9wZXJhdGlvbiBhbmQgbWFpbnRlbmFuY2Ugb2YgdGhlIG1vZGlmaWVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExMjk5MDE2ICBGYWNpbGl0aWVzIGFuZC9vciB0aGUgYWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIEZhY2lsaXRpZXMgYW1vbmcgdGhlIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBPd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgczsgcHJvdmlkZWQgdGhhdCBubyBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgc2hhbGwgYmUgcmVxdWlyZWQgdG8gcmVpbWJ1cnNlIGFueSBvdGhlciBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgT3duZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2ICBmb3IgYW55IGNvc3RzIGluY3VycmVkIGluIHRoZSBjb25zdHJ1Y3Rpb24sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCByZW1vdmFsLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiBvcGVyYXRpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IG9yfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgbWFpbnRlbmFuY2Ugb2YgYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBtb2RpZmllZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgYWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgYW5kL29yIHJlbW92ZWQgU2hhcmVkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgRmFjaWxpdGllcyB1bmxlc3MgaXQgaGFzIGV4cHJlc3NseSBhZ3JlZWQgdG8gZG8gc28gaW4gd3JpdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjk3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3MDc4MDAyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IE5vIEFkZGl0aW9uYWwgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMTYxMzQzMzhcY2hhcnJzaWQxNjEzNDMzOCB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjk3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTYxMzQzMzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDc4NDc0IEV4Y2VwdCBhcyBwcm92aWRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCBoZXJlaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Nzg0NzQgLCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc5Nzc1NCBvfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IA0KIFBlcnNvbiBtYXkgYmVjb21lIGEgQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb3IgYW4gYWRkaXRpb25hbCBjby1vd25lciBvZiBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMgd2l0aG91dCB0aGUgcHJpb3Igd3JpdHRlbiBjb25zZW50IG9mIGFsbCBvZiB0aGUgQ28tT3duZXJzLiAgQW55IFBlcnNvbiBiZWNvbWluZyBhDQogQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc5Nzc1NCBzaGFsbCBleGVjdXRlIGEgam9pbmRlciwgdGhlIGZvcm0gb2Ygd2hpY2ggaXMgYXR0YWNoZWQgYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNzExNzAgRXhoaWJpdCBGfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc5Nzc1NCANCiBoZXJldG8gYW5kIHN1Y2ggb3RoZXIgYW1lbmRtZW50cyBhcyB0aGUgQ28tT3duZXJzIGhhdmUgZGV0ZXJtaW5lZCBtYXkgYmUgbmVjZXNzYXJ5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgVlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5OH1NRVRFUklORywgTUVBU1VSRU1FTlQgT0YgRU5FUkdZIERFTElWRVJJRVMgQU5EIExPU1NFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5OH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjk5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IE1lYXN1cmVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjk5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTYwMDM3MzQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IEVuZXJneX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMDg4MDY4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRyYW5zbWl0dGVkIG9uIHRoZSBUcmFuc21pc3Npb24gTGluZSBzaGFsbCBiZSBtZWFzdXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgZm9yIGVhY2ggRmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MDgwODEyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgaW4gZWFjaCBTZXR0bGVtZW50IEludGVydmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODA4MDgxMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjcyNTM1IGJ5IHRoZSByZXZlbnVlIG1ldGVyIGZvciBzdWNoIEZhY2lsaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0ICAgSG93ZXZlciwgaWYgYW5kIGZvciB0aGUgcGVyaW9kIHRoYXQgdGhlcmUgaXMgYW4gZXF1aXBtZW50IGZhaWx1cmUgb3Igb3RoZXIgZXZlbnQgdGhhdCBwcmV2ZW50cyBvciBpbnRlcmZlcmVzIHdpDQp0aCB0aGUgb3BlcmF0aW9uIG9mIHRoZSBzZXBhcmF0ZSBtZXRlcmluZywgZW5lcmd5IHRyYW5zbWl0dGVkIG9uIHRoZSBUcmFuc21pc3Npb24gTGluZSBzaGFsbCBiZSBtZWFzdXJlZCBhbmQgYWxsb2NhdGVkIGJldHdlZW4gdGhlIEZhY2lsaXRpZXMgaW4gZWFjaCBTZXR0bGVtZW50IEludGVydmFsIGluIHByb3BvcnRpb24gdG8gdGhlaXIgcmVzcGVjdGl2ZSBNZXRlcmVkIEVuZXJneSBkdXJpbmcgc3VjaCBTZXR0bGVtZW50IEludGVydmFsIGFzIGYNCm9sbG93czp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNFxjaGFycnNpZDEzMTc2NzEzIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzQxXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjc0MVxpdGFwMFxwYXJhcnNpZDE2MDAzNzM0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgDQpGYWNpbGl0eSBFbmVyZ3kgPSAoRmFjaWxpdHkgTWV0ZXJlZCBFbmVyZ3kvVG90YWwgTWV0ZXJlZCBFbmVyZ3kpIHggUE9JIE1ldGVyZWQgRW5lcmd5DQpccGFyIHdoZXJlLCBmb3IgcHVycG9zZXMgb2YgdGhlIGFib3ZlIGZvcm11bGE6DQpccGFyIEZhY2lsaXR5IEVuZXJneSA9IHRoZSBFbmVyZ3kgYWxsb2NhdGVkIHRvIHRoZSBGYWNpbGl0eSBpbiB0aGUgU2V0dGxlbWVudCBJbnRlcnZhbA0KXHBhciBGYWNpbGl0eSBNZXRlcmVkIEVuZXJneSA9IE1ldGVyZWQgRW5lcmd5IGZvciBzdWNoIEZhY2lsaXR5IGluIHRoZSBTZXR0bGVtZW50IEludGVydmFsDQpccGFyIFRvdGFsIE1ldGVyZWQgRW5lcmd5ID0gdG90YWwgTWV0ZXJlZCBFbmVyZ3kgZm9yIGFsbCBGYWNpbGl0aWVzIGluIHRoZSBTZXR0bGVtZW50IEludGVydmFsDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3NDFccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzQxXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCBQT0kgTWV0ZXJlZCBFbmVyZ3kgPSB0aGUgYW1vdW50IG9mIEVuZXJneSBtZWFzdXJlZCBieSB0aGUgQ0FJU08gYXQgdGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwNzg5NCBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgb2ludCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjA3ODk0IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCBudGVyY29ubmVjdGlvbiBpbiB0aGUgU2V0dGxlbWVudCBJbnRlcnZhbH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDE0NjgyNTg1IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTG9zc2VzIG9uIFRyYW5zbWlzc2lvbiBMaW5lfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzAwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgTGluZSBMb3NzZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjI1NTgzMCB3aWxsIGJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYXV0b21hdGljYWxseSBhbGxvY2F0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjI1NTgzMCBhbW9uZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5NzIxODcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0IHRocm91Z2ggdGhlIG1lYXN1cmVtZW50IG9mIGVuZXJneSBkZWxpdmVyaWVzIGFzIGRlc2NyaWJlZCBpbiBTZWN0aW9uIDUuMSwgd2hpY2ggaXMgbmV0IG9mIGxvc3Nlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDYwNzg5NCAgb3IgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBmb3JtdWxhIHNldCBmb3J0aCBpbiBTZWN0aW9uIDUuMSwgd2hpY2ggaW5jbHVkZXMgTGluZSBMb3NzZXMgaW4gdGhlIG1lYXN1cmVtZW50IG9mIFBPSSBNZXRlcmVkIEVuZXJneX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDU1OTQ1MjQgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwMX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBNZXRlciBUZXN0aW5nIGFuZCBSZXBhaXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMDF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ1OTE4MzI5IEluc3BlY3Rpb24gYW5kIFRlc3Rpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEVhY2ggQ28tT3duZXIgd2lsbCBjYXVzZSBpdHMgcmV2ZW51ZSBtZXRlciB0byBiZSBpbnNwZWN0ZWQgYW5kIHRlc3RlZCB1cG9uIGl0cyBpbnN0YWxsYXRpb24gYW5kIGF0IGxlYXN0IG9uY2UgZXZlcnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwODkyODYgDQp0d2VudHktZm91ciAoMjQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbW9udGhzIHRoZXJlYWZ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQzMDc5IA0KLCBvciBtb3JlIGZyZXF1ZW50bHkgaWYgcmVxdWlyZWQgYnkgQ0FJU08gcnVsZXMgb3IgdGhlIENBSVNPIFRhcmlmZiwgYnkgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsIG9yIGJ5IGFueSBwb3dlciBwdXJjaGFzZSBhZ3JlZW1lbnQgdG8gd2hpY2ggYSBDby1Pd25lciBpcyBhIHBhcnR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFuZCBhdCBhbnkgb3RoZXIgcmVhc29uYWJsZSB0aW1lIHVwb24gDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjYwNTk0NCBPcGVyYXRvclxycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHJlcXVlc3QsIHdoaWNoIG1heSBub3QgYmUgbWFkZSBtb3JlIHRoYW4gdHdpY2UgZWFjaCB5ZWFyLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHdpbGwgcGF5IHRoZSBjb3N0cyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzIwOTU4IHN1Y2ggaW5zcGVjdGlvbiBhbmQgdGVzdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjYwNTk0NCAod2hpY2ggc2hhbGwgYmUgY29uc2lkZXJlZCBhbiBPJk0gQ29zdCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLCB1bmxlc3MgdGhlIHJlc3VsdHMgb2YgdGhlIHRlc3Qgc2hvdyB0aGUgQ28tT3duZXJccnF1b3RlIHMgbWV0ZXIgdG8gYmUgaW5hY2N1cmF0ZSBieSBtb3JlIHRoYW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTcyMDk1OCBbfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0d28tdGVudGhzIG9mIG9uZSBwZXJjZW50ICgwLjIlKX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTcyMDk1OCBdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczU2XHN1cGVyXGluc3JzaWQ5NzIwOTU4IFxjaGZ0biB7XGZvb3Rub3RlIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNTRccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY3M1NlxzdXBlclxpbnNyc2lkMzQzODA3OCBcY2hmdG4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgQ29uZm9ybSB0byBwZXJjZW50YWdlIGluIHNlY3Rpb24gNS4zLjIufX19ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBpbiB3aGljaCBjYXNlIHRoZSBDby1Pd25lciB3aG8gb3ducyB0aGUgbWV0ZXIgd2lsbCBwYXkgdGhlIGNvc3RzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzIwOTU4IGluc3BlY3Rpb24gYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQp0ZXN0LiAgRWFjaCBDby1Pd25lciB3aWxsIGdpdmUgdGhlIG90aGVyIENvLU93bmVycyByZWFzb25hYmxlIGFkdmFuY2Ugbm90aWNlIG9mIHRlc3RzIG9mIGl0cyBtZXRlciBhbmQgdGhlIG90aGVyIENvLU93bmVycyBoYXZlIHRoZSByaWdodCB0byB3aXRuZXNzIHN1Y2ggdGVzdHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4zLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgQ2FsaWJyYXRpb24gb3IgUmVwYWlyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCi4gIElmIGEgdGVzdCBzaG93cyBhIENvLU93bmVyXHJxdW90ZSBzIG1ldGVyIHRvIGJlIGluYWNjdXJhdGUsIHRoZSBvd25lciBvZiB0aGUgbWV0ZXIgd2lsbCB1c2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgY29tbWVyY2lhbGx5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpyZWFzb25hYmxlIGVmZm9ydHMgdG8gY2F1c2UgaXRzIG1ldGVyIHRvIGJlIGNhbGlicmF0ZWQsIHJlcGFpcmVkIG9yIHJlcGxhY2VkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgIGFzIHNvb24gYXMgcmVhc29uYWJseSBwcmFjdGljYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIElmIGEgdGVzdCBzaG93cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE2NjA1OTQ0IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDby1Pd25lclxycXVvdGUgcyBtZXRlciB0byBiZSBpbmFjY3VyYXRlIGJ5IG1vcmUgdGhhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjYwNTk0NCBbfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0d28tdGVudGhzIG9mIG9uZSBwZXJjZW50ICgwLjIlKX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBhbiBhZGp1c3RtZW50IHdpbGwgYmUgbWFkZSBjb3JyZWN0aW5nIGFsbCBtZWFzdXJlbWVudHMgbWFkZSBieSB0aGUgbWV0ZXIgZm91bmQgdG8gYmUgaW5hY2N1cmF0ZSBmb3IgdGhlIGFjdHVhbCBwZXJpb2QgZHVyaW5nIHdoaWNoIGluYWNjdXJhdGUgbWVhc3VyZW1lbnRzIHdlcg0KZSBtYWRlLCBpZiBzdWNoIHBlcmlvZCBjYW4gYmUgZGV0ZXJtaW5lZCwgb3IsIGlmIG5vdCwgdGhlIHBlcmlvZCBpbW1lZGlhdGVseSBwcmVjZWRpbmcgdGhlIG1ldGVyIHRlc3QgZXF1YWwgdG8gdGhlIGxlc3NlciBvZiBvbmUtaGFsZiB0aGUgdGltZSBmcm9tIHRoZSBkYXRlIG9mIHRoZSBsYXN0IHRlc3Qgb2YgdGhlIGluYWNjdXJhdGUgbWV0ZXIgb3Igb25lIGh1bmRyZWQgZWlnaHR5ICgxODApIGRheXMuICBTdWNoIGFkanVzdG1lbnRzIHdpbGwgDQpiZSByZWZsZWN0ZWQgYXMgY2hhcmdlcyBvciBjcmVkaXRzLCBhcyBhcHBsaWNhYmxlLCBvbiB0aGUgaW52b2ljZXMgZm9yIE8mTSBTZXJ2aWNlcyByZW5kZXJlZCBtb250aGx5IGJ5IE9wZXJhdG9yIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzkxODIyIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcy59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBWSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwMn1PUEVSQVRJT04gQU5EIE1BSU5URU5BTkNFIE9GIFNIQVJFRCBGQUNJTElUSUVTLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMwMn0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzAzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEVuZ2FnZW1lbnQgb2YgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMDN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgQ28tT3duZXJzIGhlcmVieSBlbmdhZ2UgT3BlcmF0b3IgdG8gbWFuYWdlLCBvcGVyYXRlLCBtYWludGFpbiBhbmQgcmVwYWlyIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNjM3OTkgDQosIHRvIGFkbWluaXN0ZXIgYW5kIHRha2UgYWxsIG5lY2Vzc2FyeSBhY3Rpb25zIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCB0byBhZG1pbmlzdGVyIGFuZCB0YWtlIGFsbCBuZWNlc3NhcnkgYWN0aW9ucyB1bmRlciB0aGUgU2hhcmVkIFBlcm1pdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhbmQgdG8gcGVyZm9ybSBvdGhlciBkdXRpZXMgcGVydGFpbmluZyB0byB0aGUgU2hhcmVkIEFzc2V0cyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLCBhbGwgYXMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ0NjA3ODk0IDsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgdG8gdGhlIGV4dGVudCBkbyBub3QgYXBwbHkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBidXQgaW5zdGVhZCBhcHBseSB0byB0aGUgRmFjaWxpdGllcyBvciBvdGhlciBwcm9wZXJ0eSBzZXBhcmF0ZWx5IG93bmVkIGJ5IG9uZSBvciBtb3JlIG9mIHRoZSBDby1Pd25lcnMsIHRoZSBhDQpkbWluaXN0cmF0aW9uIG9mIHN1Y2ggU2hhcmVkIFBlcm1pdHMgc2hhbGwgbm90IGJlIGluY2x1ZGVkIGluIE8mTSBTZXJ2aWNlcywgYnV0IHNoYWxsIGJlIHBhaWQgZm9yIHNlcGFyYXRlbHkgYnkgdGhlIENvLU93bmVycyBiZW5lZml0aW5nIGZyb20gc3VjaCBTaGFyZWQgUGVybWl0cyBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIHJlc3BlY3RpdmUgYmVuZWZpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLiAgT3BlcmF0b3IgYWNjZXB0cyBzdWNoIGVuZ2FnZW1lbnQgYW5kIGFncmVlcyB0byBwZXJmb3JtIHN1Y2ggZHV0aWVzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgaGVyZW9mLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ4NzY5ICBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxODE1MTcgXHJxdW90ZSANCnMgYXV0aG9yaXR5IHNoYWxsIGJlIGxpbWl0ZWQgdG8gcGVyZm9ybWluZyB0aGUgTyZNIFNlcnZpY2VzIGFuZCBzdWNoIG90aGVyIHNlcnZpY2VzIGFzIG1heSBiZSBhcHByb3ZlZCBieSBhbGwgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDg3NjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxODE1MTcgDQphbmQgc2hhbGwgYmUgZnVydGhlciBsaW1pdGVkIGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gNi4xNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyOTE2Njk1IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDc3NDM3MzIgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBTdGFuZGFyZHMgZm9yIE9wZXJhdG9yXHJxdW90ZSBzIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzA0fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgT3BlcmF0b3Igc2hhbGwgcGVyZm9ybSB0aGUgTyZNIFNlcnZpY2VzIGluIGFjY29yZGFuY2Ugd2l0aCBHb29kIFV0aWxpdHkgUHJhY3RpY2UsIHRoZSBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudHMsIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCB0aGlzIEFncmVlbWVudCBhbmQgYWxsIG90aGVyIGFncmVlbWVudHMgcmVsYXRpbmcgdG8gb3duDQplcnNoaXAsIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIEFwcGxpY2FibGUgTGF3cyBhbmQgcmVxdWlyZW1lbnRzIG9mIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcywgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiBhbGwgSGF6YXJkb3VzIE1hdGVyaWFscyBMYXdzIGFuZCBhbGwgRW52aXJvbm1lbnRhbCBMYXdzLCBhbmQgYWxsIHNhZmV0eSBwb2xpY2llcyBhbmQgcHJvY2UNCmR1cmVzIChjb2xsZWN0aXZlbHksIHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgUGVyZm9ybWFuY2UgU3RhbmRhcmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBPJk0gU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMDV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBPcGVyYXRvciBzaGFsbCBwcm92aWRlIG9yIGNhdXNlIHRvIGJlIHByb3ZpZGVkIHRoZSBmb2xsb3dpbmcgc2VydmljZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA5MzA0NCAoYW5kIHN1Y2ggb3RoZXIgc2VydmljZXMgYXMgbWF5IGJlIGFncmVlZCBmcm9tIHRpbWUgdG8gdGltZSBieSB0aGUgQ28tT3duZXJzIGFuZCBPcGVyYXRvcikgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9uIGJlaGFsZiBvZiBlYWNoIG9mIHRoZSBDby1Pd25lcnMgd2hvIGhhdmUgYW4gVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBmcm9tIGFuZCBhZnRlciB0aGUgZGF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBoYXMgbm90aWZpZWQgT3BlcmF0b3Igb2YgaXRzIGV4ZXJjaXNlZCByaWdodCB0byBhbiBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGluIHRoZSBTaGFyZWQgQXNzZXRzIHB1cnN1YW50IHRvIFNlY3Rpb25cfjQuMiAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpXGluc3JzaWQ1OTE4MzI5IE8mTSBTZXJ2aWNlcyBDb21tZW5jZW1lbnQgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCk6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzNFxxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzMDkzMDQ0IG1hbmFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBzdXBlcnZpc2UsIG9wZXJhdGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgaW5zcGVjdCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSByZXBhaXIgYW5kIG1haW50YWluIHRoZSBTaGFyZWQgQXNzZXRzIGluIGFjY29yZGFuY2Ugd2l0aCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2NDYwNTcgdGhlIFBlcmZvcm1hbmNlIFN0YW5kYXJkIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoZSBBcHByb3ZlZCBCdWRnZXQsIGluY2x1ZGluZyB0aGUgZGF5IHRvIGRheSBtYW5hZ2VtZW50IG9mIHRoZSBTaGFyZWQgQXNzZXRzO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBwYXkgYW5kIGNvbGxlY3QgYW1vdW50cyBkdWUgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTaGFyZWQgDQpBc3NldHMgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byB0YXhlcyBhbmQgYXNzZXNzbWVudHMgcHVyc3VhbnQgdG8gU2VjdGlvblx+MTIuMiwgYW5kIG1haW50YWluIG9uZSBvciBtb3JlIGJhbmsgYWNjb3VudHMgd2hlcmVpbiBmdW5kcyByZWNlaXZlZCBieSB0aGUgT3BlcmF0b3IgaW4gY29ubmVjdGlvbiB3aXRoIGl0cyBkdXRpZXMgaGVyZWluIHNoYWxsIGJlIG1haW50YWluZWQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZXhwZW5kIG1vbmllcyBuZWNlc3NhcnkgZm9yIHRoZSBtYW5hDQpnZW1lbnQsIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UgYW5kIHJlcGFpciBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXM7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG5vdGlmeSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjYxMzE5NCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb2YgYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgbWF0ZXJpYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBub3RpY2UgKG9yIGFueSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDMwOTMwNDQgbWF0ZXJpYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBpbmZvcm1hdGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IHRoYXQgd291bGQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSByZWFzb25hYmx5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgDQpiZSBleHBlY3RlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRvIGFmZmVjdCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzKSByZWNlaXZlZCBieSBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgLCB3aGV0aGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBmcm9tIGFueSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgLCBhbm90aGVyIFBlcnNvbiBvciBhIEdvdmVybm1lbnRhbCBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChlKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBtYW5hZ2UgY29tcGxpYW5jZSB3aXRoIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IENvLU93bmVycw0KXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICByaWdodHMgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA5MzA0NCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMsIGluY2x1ZGluZyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODAgdGltZWx5IGV4ZXJjaXNpbmcgb3B0aW9ucyB1bmRlciB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cyB0byBhY3F1aXJlIHByb3BlcnR5LCBlbnRlciBpbnRvIGEgbGVhc2Ugb3IgZXh0ZW5kIGEgbGVhc2UgdGVybSBbaW4gYWNjb3JkYW5jZSB3aXRoIGluc3RydWN0aW9ucyBmcm9tIHRoZSBDby1Pd25lcnMsIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbWFraW5nIHBheW1lbnRzIHJlcXVpcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODAgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KOyBwcm92aWRlZCB0aGF0IHRoZSBPcGVyYXRvciBzaGFsbCBoYXZlIG5vIHJpZ2h0IHRvIGFtZW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgIEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA5MzA0NCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGYpXHRhYn1tYW5hZ2UgcGVyZm9ybWFuY2UgYnkgdGhlIENvLU93bmVycyB1bmRlciAgdGhlIE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzQ0MTE2IA0KIGFuZCB0byBjb29yZGluYXRlIHdpdGggdGhlIFwnOTNNYW5hZ2VyXCc5NCB1bmRlciB0aGUgTEdJQSBDby1UZW5hbmN5IEFncmVlbWVudCBpbiB0aGUgcGVyZm9ybWFuY2Ugb2YgaXRzIGFuZCB0aGUgQ28tT3duZXJzXHJxdW90ZSAgb2JsaWdhdGlvbnMgdGhlcmV1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgOyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGcpXHRhYn1naXZlIGFuZCByZWNlaXZlIG4NCm90aWNlcyBhbmQgY29tbXVuaWNhdGUgd2l0aCB0aGUgQ0FJU08gYW5kIHRoZSBUcmFuc21pc3Npb24gT3duZXIgd2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIGNvbW1pc3Npb25pbmcsIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UgYW5kIHJlcGFpciBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXM7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChoKVx0YWJ9bWFuYWdlIGNvbXBsaWFuY2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSB3aXRoIGFsbCBhcHBsaWNhYmxlIEVudmlyb25tZW50YWwgTGF3cyBhbmQgUGVybWl0czsgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCndpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgYW5kIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBsb2NhdGVkIG9uIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSwgb3ZlcnNlZSBhbGwgaW52ZXN0aWdhdGlvbnMsIHN0dWRpZXMsIGNsZWFuIHVwLCBjb3JyZWN0aXZlIGFjdGlvbiBvciByZXNwb25zZSBvciByZW1lZGlhbCBhY3Rpb24gcg0KZXF1aXJlZCBieSBhbnkgR292ZXJubWVudGFsIEF1dGhvcml0eSBub3cgb3IgaGVyZWFmdGVyIGF1dGhvcml6ZWQgdG8gcmVndWxhdGUgZW52aXJvbm1lbnRhbCBvciBvdGhlciBtYXR0ZXJzIG9yIGJ5IGFueSBjb25zZW50IGRlY3JlZSBvciBjb3VydCBvciBhZG1pbmlzdHJhdGl2ZSBvcmRlciBub3cgb3IgaGVyZWFmdGVyIGFwcGxpY2FibGUgdG8gdGhlIHVzZSwgb3BlcmF0aW9uIG9yIG93bmVyc2hpcCBvZiB0aGUgU2hhcmVkIFJlYWwgUHJvcGVyDQp0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyBieSBhIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgb3IgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGxvY2F0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIGR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIG9uIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi40XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgU2NoZWR1bGVkIE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzA2fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgIE9wZXJhdG9yIHNoYWxsIHNjaGVkdWxlIG1haW50ZW5hbmNlIGFuZCBhbnkgcGxhbm5lZCBvdXRhZ2VzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBzbyBhcyB0byBtaW5pbWl6ZSBpbnRlcmZlcmVuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IHRoZSBDby1Pd25lcnNccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgc2NoZWR1bGVkIGVuZXJneSBkZWxpdmVyaWVzLiAgTWFpbnRlbmFuY2UgYW5kIGFueSBwbGFubmVkIG91dGFnZXMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHNoYWxsIGJlIHNjaGVkdWxlZCwgdG8gdGhlIG1heGltdW0gZXh0ZW50IHBvc3NpYmxlLCBkdXJpbmcgc2NoZWR1bGVkIG1haW50ZW5hbmNlIG91dGFnZXMgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgDQpDby1Pd25lcnNccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEZhY2lsaXRpZXMuICBFYWNoIENvLU93bmVyIHdpbGwgcHJvdmlkZSB0byB0aGUgT3BlcmF0b3IgYW5kIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY3MzE1MiBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBieSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjczMTUyIFt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEphbnVhcnlcfjF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY3MzE1MiBdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBvZiBlYWNoIHllYXIgYSBzY2hlZHVsZSBvZiBwbGFubmVkIG1haW50ZW5hbmNlIG91dGFnZXMgb24gc3VjaCBDby1Pd25lclxycXVvdGUgcyBGYWNpbGl0eSBmb3IgdGhlIHN1YnNlcXVlbnQgdHdlbHZlLSBtb250aCBwZXJpb2QuICBTY2hlZHVsZWQgb3V0YWdlcyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgd2lsbCBiZSBzdWJqZWN0IHRvIHRoZSBhcHByb3ZhbCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExNjczMTUyIGFsbCBhZmZlY3RlZCBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgc3VjaCBhcHByb3ZhbCBub3QgdG8gYmUgdW5yZWFzb25hYmx5IHdpdGhoZWxkLiAgT3BlcmF0b3Igd2lsbCBzZWVrIHRvIGxpbWl0IHRoZSBkdXJhdGlvbiBvZiBhbnkgb3V0YWdlLCBwbGFubmVkIG9yIHVucGxhbm5lZCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTY3MzE1MiB0byB0aGUgbWF4aW11bSBleHRlbnQgcmVhc29uYWJseSBwb3NzaWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNvbnNpc3RlbnQgd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY3MzE1MiBBcHBsaWNhYmxlIExhd3MgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpHb29kIFV0aWxpdHkgUHJhY3RpY2UufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzA3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFVucGxhbm5lZCBPdXRhZ2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzA3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgT3BlcmF0b3Igd2lsbCBub3RpZnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpzIG9mIGFsbCBlbWVyZ2VuY3kgb3IgdW5wbGFubmVkIG91dGFnZXMgb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhcyBzb29uIGFzIHByYWN0aWNhYmxlLCBpbiBhY2NvcmRhbmNlIHdpdGggR29vZCBVdGlsaXR5IFByYWN0aWNlLCBhbmQgd2lsbCBwcm92aWRlIGFuIGVzdGltYXRlZCB0aW1lIG9mIHJldHVybiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgdG8gc2VydmljZSwgb3IgaWYgbm90IGtub3duLCB3aWxsIGtlZXAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzIGFkdmlzZWQgcmVnYXJkaW5nIHRoZSBzdGF0dXMgb2Ygc2FtZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgRW1lcmdlbmN5IENvbmRpdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMDh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBJbiB0aGUgZXZlbnQgb2YgYW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2NzMxNTIgZW1lcmdlbmN5IGNvbmRpdGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KaW52b2x2aW5nIHRoZSBTaGFyZWQgQXNzZXRzIHRoYXQgY291bGQgYmUgcmVhc29uYWJseSBleHBlY3RlZCBieSBPcGVyYXRvciB0byByZXN1bHQgaW4gcG9zc2libGUgcGVyc29uYWwgaW5qdXJ5LCBsb3NzIG9mIGxpZmUsIGRhbWFnZSB0byBvciBkZXN0cnVjdGlvbiBvZiBwcm9wZXJ0eSwgb3IgZGFuZ2VyIHRvIHRoZSBwdWJsaWN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY3MzE1MiAgKGFuIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxMTY3MzE1MlxjaGFycnNpZDcwNzgwMDIgRW1lcmdlbmN5IENvbmRpdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjczMTUyIFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIHRoZSBPcGVyYXRvciBzaGFsbCwgd2l0aG91dCB0aGUgbmVlZCBmb3IgcHJpb3Igbm90aWZpY2F0aW9uIG9mIHRoZSB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcywgdGFrZSBzdWNoIGFjdGlvbiBhcyBtYXkgYmUgcmVhc29uYWJsZSBhbmQgbmVjZXNzYXJ5LCBhcyBkZXRlcm1pbmVkIGluIHRoZSBzb2xlIGRpc2NyZXRpb24gb2YgdGhlIE9wZXJhdG9yLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExNjczMTUyIGluY2x1ZGluZyBjdXJ0YWlsaW5nIGVuZXJneSBkZWxpdmVyaWVzIG9uIHRoZSBUcmFuc21pc3Npb24gTGluZSBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDQuMi4xLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KdG8gcHJldmVudCwgYXZvaWQgb3IgbWl0aWdhdGUgc3VjaCBsb3NzLCBhbmQgc2hhbGwsIGFzIHNvb24gYXMgcmVhc29uYWJseSBwcmFjdGljYWJsZSwgcmVwb3J0IGFueSBzdWNoIGVtZXJnZW5jeSwgaW5jbHVkaW5nIHRoZSBPcGVyYXRvclxycXVvdGUgcyByZXNwb25zZSB0aGVyZXRvLCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHMsIGFuZCAgT3BlcmF0b3Igc2hhbGwgYmUgY29tcGVuc2F0ZWQgYnkgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpzIGZvciB0aGUgY29zdHMgb2YgdGFraW5nIHN1Y2ggYWN0aW9ucyBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIE93bmVyc2hpcCBJbnRlcmVzdCBpbiB0aGUgU2hhcmVkIEFzc2V0cyBzbyBhZmZlY3RlZC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzA5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IE8mTSBDb3N0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMwOX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIENvc3RzIG9mIHBlcmZvcm1pbmcgTyZNIFNlcnZpY2VzICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IE8mTSBDb3N0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkgDQpzaGFsbCBpbmNsdWRlIGFsbCBwYXltZW50cyBtYWRlIGFuZCBleHBlbnNlcyBpbmN1cnJlZCBieSBPcGVyYXRvciBpbiBwZXJmb3JtaW5nIE8mTSBTZXJ2aWNlcyAoYXQgY29zdCBhbmQgd2l0aG91dCBtYXJrdXApLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIHJlbGF0ZWQgb3ZlcmhlYWQgYW5kIGFwcGxpY2FibGUgdGF4ZXMsIGFuZCBjb3N0cyAoZXhjZXB0IGluc3VyYW5jZSBjb3N0cykgcmVsYXRlZCB0byBvd25lcnNoaXAgb2YgdGhlIFMNCmhhcmVkIEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzQ0MTE2ICBhbmQgc2hhbGwgYmUgYWxsb2NhdGVkIGFtb25nIHRoZSBDby1Pd25lcnMgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiA2LjEwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0ODc2OSANCiAgTyZNIENvc3RzIHNoYWxsIG5vdCBpbmNsdWRlIGFueSBjb3N0cyByZWxhdGVkIHRvIHVzZSBvZiBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGJ5IFBlcnNvbnMgb3RoZXIgdGhhbiBDby1Pd25lcnMsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gYW55IGNvc3RzIG9yIGV4cGVuc2VzIHJlDQpsYXRlZCB0byBwb3J0aW9ucyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgbGVhc2VkIG9yIHN1YmxlYXNlZCB0byBzdWNoIFBlcnNvbnMgKGluY2x1ZGluZyB0aGUgc3VibGVhc2Ugb2YgYSBwb3J0aW9uIG9mIHRoZSBvcGVyYXRpb25zIGFuZCBtYWludGVuYW5jZSBidWlsZGluZyB0byBMb25lIFZhbGxleSBTb2xhciBQYXJrIEkgTExDIGFuZCBMb25lIFZhbGxleSBTb2xhciBQYXJrIElJIExMQykufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMTB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi44XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQnVkZ2V0aW5nIFByb2Nlc3N9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTB9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIHllYXIgZHVyaW5nIHRoZSB0ZXJtIG9mIHRoaXMgQWdyZWVtZW50LCBPcGVyYXRvciB3aWxsIHByZXBhcmUgYSBmb3JlY2FzdCBidWRnZXQgb2YgTyZNIENvc3RzIGZvciB0aGUgZm9sbG93aW5nIGNhbGVuZGFyIHllYXIgYW5kIHdpbGwgcHJvdmlkZSBhIGNvcHkgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzIGJ5IE9jdG9iZXJcfjMxLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiBUaGUgZm9yZWNhc3QgYnVkZ2V0IHNoYWxsIHNlcGFyYXRlbHkgYWxsb2NhdGUgY29zdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMDg1NzUwIHMgYW5kIGV4cGVuc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiANCiB0byBlYWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgdG8gdGhlIGV4dGVudCByZWFzb25hYmx5IHByYWN0aWNhbC4gIFRoZSBmb3JlY2FzdCBidWRnZXQgbXVzdCBiZSBhcHByb3ZlZCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2Njc5NCB0d28tdGhpcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiAgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4MTAzOCAgKGJhc2VkIG9uIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiAsIHN1Y2ggY29uc2VudCBub3QgdG8gYmUgdW5yZWFzb25hYmx5IHdpdGhoZWxkLiAgVGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzIHdpbGwgaGF2ZSB0aGlydHkgKDMwKSBkYXlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgYWZ0ZXIgcmVjZWlwdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRvIHJldmlldyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyIGFuZCBhcHByb3ZlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgZm9yZWNhc3QgYnVkZ2V0IGFuZCBkaXNjdXNzIGFueSBjb25jZXJucyB3aXRoIHRoZSBmb3JlY2FzdCBidWRnZXQgd2l0aCBPcGVyYXRvci4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDU5NzkgSWYgdHdvLXRoaXJkcyBvciBtb3JlIG9mIHRoZSBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4MTAzOCANCihiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ1OTc5IGFwcHJvdmUgdGhlIGZvcmVjYXN0IGJ1ZGdldCwgaXQgc2hhbGwgYmUgZGVlbWVkIGFwcHJvdmVkIGZvciBhbGwgcHVycG9zZXMgaGVyZXVuZGVyIGFuZCBzaGFsbCBiZSBiaW5kaW5nIG9uIGFsbCBDby1Pd25lcnMuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyODY2Nzk0IEluIHRoZSBldmVudCBsZXNzIHRoYW4gdHdvLXRoaXJkcyBvZiB0aGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggKGJhc2VkIG9uIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY2Nzk0IA0KYXBwcm92ZSB0aGUgZm9yZWNhc3QgYnVkZ2V0LCB0aGUgbWF0dGVyIHdpbGwgYmUgc3VibWl0dGVkIHRvIGRpc3B1dGUgcmVzb2x1dGlvbiBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2Njc5NCA7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IHBlbmRpbmcgcmVzb2x1dGlvbiBvZiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMDM0NzkwIGFueSBzdWNoIGRpc3B1dGUsIHRoZSBmb3JlY2FzdCBidWRnZXQgc2hhbGwgYmUgdGhlIG9wZXJhdGl2ZSBidWRnZXQgZm9yIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBleGNlcHQgdGhhdCB0aGUgYWdncmVnYXRlIE8mTSBDb3N0cyBpbiBlYWNoIGNhdGVnb3J5IG9mIGV4cGVuc2VzIHNoYWxsIGJlIGxpbWl0ZWQgdG8gb25lDQogaHVuZHJlZCB0d2VudHktZml2ZSBwZXJjZW50ICgxMjUlKSBvZiB0aGUgYW1vdW50IGZvciBzdWNoIGNhdGVnb3J5IGluIHRoZSBwcmV2aW91cyBBbm51YWwgTyZNIEJ1ZGdldC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgQWZ0ZXIgYXBwcm92YWwgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEwMzQ3OTAgDQphbmQsIGlmIGFwcGxpY2FibGUsIHJlc29sdXRpb24gb2YgYW55IGRpc3B1dGVzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyIHRoZSBmb3JlY2FzdCBidWRnZXQgKHN1Y2ggYXBwcm92ZWQgZm9yZWNhc3QgYnVkZ2V0LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ5ODM3MTgyIEFubnVhbCBPJk0gQnVkZ2V0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5ODM3MTgyIFwnOTQpLCBlYWNoIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc2hhbGwgcGF5IE9wZXJhdG9yIDEvMTIgb2YgaXRzIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgdGhlIEFubnVhbCBPJk0gQnVkZ2V0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEwMzQ3OTAgIHBsdXMgYW55IGFwcGxpY2FibGUgY29zdHMgb3IgY2hhcmdlcyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYzMDc0MTkgcGF5YWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTAzNDc5MCBmb3IgRXh0cmFvcmRpbmFyeSBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGJ5IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM1OTI1OSBmaWZ0aCAoNX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNTkyNTlcY2hhcnJzaWQ5NDQ2NzUgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM1OTI1OSApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZGF5IG9mIGVhY2ggY2FsZW5kYXIgbW9udGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyIA0KIGR1cmluZyB0aGUgZW5zdWluZyBjYWxlbmRhciB5ZWFyLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzODc5NTg4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyIE9wZXJhdG9yIHNoYWxsIHJlY29uY2lsZSB0aGUgYWN0dWFsIGFtb3VudHMgcGFpZCBmb3IgTyZNIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4Nzk1ODggQ29zdHN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgIHRvIHRoZSBmb3JlY2FzdCBidWRnZXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzg3OTU4OCBhZnRlciB0aGUgZW5kIG9mIHRoZSBjYWxlbmRhciB5ZWFyIGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gNi4xMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTEzMTg4MCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkNzA3ODAwMiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzExfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuOVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFncmVlcyB0byByZWltYnVyc2UgT3BlcmF0b3IgZm9yIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MzMyOTE0IFByb3BvcnRpb25hdGUgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG9mIHRoZSBjb3N0cyBvZiBhbnkgbWFpbnRlbmFuY2Ugb3Igb3RoZXIgc2VydmljZXMgcmVxdWlyZWQgaW4gdGhlIGV2ZW50IG9mIHVudXN1YWwgb3IgY2F0YXN0cm9waGljIGNpcmN1bXN0YW5jZXMsIHRvIHRoZSBleHRlbnQgc3VjaCBjb3N0cyB3ZXJlIG5vdCBpbmNsdWRlZCBpbiB0aGUgZm9yZWNhc3QgYnVkZ2V0IGZvciBPJk0gU2VydmljZXMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLiAgSW4gc3VjaCBldmVudCwgT3BlcmF0b3Igd2lsbCBwcmVwYXJlIGEgZm9yZWNhc3QgYnVkZ2V0IGZvciBzdWNoIEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2UgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyANCnRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc1xycXVvdGUgIHJldmlldyBhbmQgcGVyZm9ybWFuY2Ugb2YgdGhlIEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2Ugd2lsbCBiZSBzdWJqZWN0IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyB0aGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHMNClxycXVvdGUgIHByaW9yIGFwcHJvdmFsLCBub3QgdG8gYmUgdW5yZWFzb25hYmx5IHdpdGhoZWxkLCB1bmxlc3MgaW1tZWRpYXRlIGFjdGlvbiBpcyByZXF1aXJlZCBkdWUgdG8gYW4gRW1lcmdlbmN5IENvbmRpdGlvbiBwdXJzdWFudCB0byBTZWN0aW9uXH42LjYufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjg5OTE1OSANCiAgT24gb3IgYmVmb3JlIHRoZSB0ZW50aCAoMTB0aCkgZGF5IG9mIHRoZSBtb250aCBhZnRlciB0aGUgbW9udGggaW4gd2hpY2ggYW55IEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2UgY29zdHMgYXJlIGluY3VycmVkLCBPcGVyYXRvciBzaGFsbCBpbnZvaWNlIHRoZSBDby1Pd25lcnMgZm9yIHRoZWlyIHJlc3BlY3RpdmUgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCANCm9mIHN1Y2ggY29zdHMuICBBbnkgYW1vdW50cyBzbyBpbnZvaWNlZCB3aWxsIGJlIGF0IHRoZSBzYW1lIHRpbWUgYXMgdGhlIG5leHQgbW9udGhseSBwYXltZW50IG9uIGFjY291bnQgb2YgdGhlIEFubnVhbCBPJk0gQnVkZ2V0IGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gNi44Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxMn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjEwXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUmVzcG9uc2liaWxpdHkgZm9yIE8mTSBDb3N0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMxMn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzg3OTU4OCBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODMzMjkxNCBQcm9wb3J0aW9uYXRlIFNoYXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBvZiBPJk0gQ29zdHMsIGluY2x1ZGluZyB0aGUgY29zdHMgb2YgYW55IEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2UgaW5jdXJyZWQgYnkgT3BlcmF0b3IsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgzMzI5MTQgd2l0aCByZXNwZWN0IHRvIGVhY2ggU2hhcmVkIEFzc2V0cyBHcm91cCBhcyB0byB3aGljaCBpdCBpcyBhIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzODc5NTg4IDsgcHJvdmlkZWQgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY4OTkxNTkgLCBleGNlcHQgaW4gdGhlIGNhc2Ugb2YgRW1lcmdlbmN5IENvbmRpdGlvbnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzg3OTU4OCAgT3BlcmF0b3Igd2lsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MzA3NDE5IA0Kbm90IGluY3VyIE8mTSBDb3N0cyBpbiBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NzA0NzcgbWFqb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MzA3NDE5ICBjYXRlZ29yeSBvZiBPJk0gQ29zdHMgb3IgaW4gdGhlIGFnZ3JlZ2F0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2ODk5MTU5IA0KdGhhdCBleGNlZWQgdGhlIGJ1ZGdldGVkIGFtb3VudCBmb3Igc3VjaCBjYXRlZ29yeSBvciB0aGUgdG90YWwgYW1vdW50IG9mIE8mTSBDb3N0cywgYXMgYXBwbGljYWJsZSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjMwNzQxOSBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4Nzk1ODggIG1vcmUgdGhhbiB0ZW4gcGVyY2VudCAoMTAlKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjMwNzQxOSAgb2YgdGhlIGFtb3VudHMgc2hvd24gb24gdGhlIEFubnVhbCBPJk0gQnVkZ2V0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzg3OTU4OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjMwNzQxOSB3aXRob3V0IHRoZSB3cml0dGVuIGNvbnNlbnQgb2YgYXQgbGVhc3QgdHdvLXRoaXJkcyBvZiB0aGUgYXBwbGljYWJsZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggIChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjg5OTE1OSBXaXRoaW4gc2l4dHkgKDYwKSBkYXlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUzNDYyODEgDQogYWZ0ZXIgdGhlIGVuZCBvZiBlYWNoIGNhbGVuZGFyIHllYXIsIE9wZXJhdG9yIHNoYWxsIGludm9pY2UgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MzQ2MjgxIHMgZm9yLCBvciBzaGFsbCByZWZ1bmQgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUzNDYyODEgcywgYXMgYXBwbGljYWJsZSwgdGhlaXIgUA0Kcm9wb3J0aW9uYXRlIFNoYXJlcyBvZiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBBbm51YWwgTyZNIEJ1ZGdldCBhbmQgdGhlIGFjdHVhbCBhbW91bnQgb2YgTyZNIENvc3RzIHBhaWQgb3IgaW5jdXJyZWQgaW4gc3VjaCBjYWxlbmRhciB5ZWFyLiAgQW55IGludm9pY2UgZm9yIHN1Y2ggYW1vdW50cyBzaGFsbCBiZSBwYWlkIHdpdGhpbiB0aGlydHkgKDMwKSBkYXlzIGFmdGVyIHJlY2VpcHQuICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgVGhlIGludm9pY2VzIHNoYWxsIGJlIGRlbGl2ZXJlZCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHMgYXMgc2V0IGZvcnRoIGluIFNlY3Rpb25cfjE3LjE1LiAgQW55IGFtb3VudHMgbm90IHBhaWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTM0NjI4MSB3aGVuIGR1ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIGJlIGRlZW1lZCBkZWxpbnF1ZW50IGFuZCBzaGFsbCBhY2NydWUgaW50ZXJlc3QgYXQgdGhlIHRoZW4tZWZmZWN0aXZlIHByaW1lIHJhdGUgb2YgaW50ZXJlc3QgcHVibGlzaGVkIHVuZGVyIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDc3NDM3MzIgTW9uZXkgUmF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQgYnkgVGhlIFdhbGwgU3RyZWV0IEpvdXJuYWwsIHBsdXMgdHdvIHBlcmNlbnQgcGVyIGFubnVtIGZyb20gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MzQ2MjgxIGR1ZSBkYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSB0byB0aGUgZGF0ZSBvZiBwYXltZW50ICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExhdGUgUGF5bWVudCBSYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KS4gIEluIHRoZSBldmVudCB0aGF0IGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTM0NjI4MSBkdWUgZGF0ZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZmFsbHMgdXBvbiBhIHdlZWtlbmQgZGF5IG9yIGJhbmsgaG9saWRheSwgc3VjaCBwYXltZW50IHNoYWxsIGJlIGR1ZSBhbmQgcGF5YWJsZSBvbiB0aGUgZmlyc3QgQnVzaW5lc3MgRGF5IGltbWVkaWF0ZWx5IHRoZXJlYWZ0ZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzEzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjExXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExMzQyMTk3IEJvb2tzIGFuZCBSZWNvcmRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzEzfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IA0KT3BlcmF0b3Igc2hhbGwgbWFpbnRhaW4gYm9va3MgYW5kIHJlY29yZHMgaW4gc3VmZmljaWVudCBkZXRhaWwgdG8gdmVyaWZ5IGFtb3VudHMgZHVlIGFuZCBwYXlhYmxlIGhlcmV1bmRlciBmb3IgYSBwZXJpb2Qgb2Ygbm90IGxlc3MgdGhhbiB0aHJlZSAoMykgeWVhcnMgYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgY2FsZW5kYXIgbW9udGggdG8gd2hpY2ggdGhleSByZWxhdGUsIGFuZCBhbGwgc3VjaCBib29rcyBhbmQgcmVjb3JkcyBzaGFsbCBiZSBhDQp2YWlsYWJsZSBmb3IgaW5zcGVjdGlvbiBhbmQvb3IgY29weWluZyBieSBlYWNoIENvLU93bmVyIG9yIGl0cyBhdXRob3JpemVkIHJlcHJlc2VudGF0aXZlIGF0IHRoZSBjb3N0IGFuZCBleHBlbnNlIG9mIHN1Y2ggQ28tT3duZXIgYW5kIGF0IHJlYXNvbmFibGUgdGltZXMgZHVyaW5nIHJlZ3VsYXIgYnVzaW5lc3MgaG91cnMsIHVwb24gcmVhc29uYWJsZSBub3RpY2UgdG8gT3BlcmF0b3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5MzgzOTcxIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IERpc3B1dGVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzE0fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgSWYgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBkaXNwdXRlcyB0aGUgYWNjdXJhY3kgb2YgYWxsIG9yIGFueSBwb3J0aW9uIG9mIGFuIGludm9pY2UsIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCwgbmV2ZXJ0aGVsZXNzLCBwYXkgdGhlIGZ1bGwgYW1vdW50IG9mIHRoZSBpbnZvaWNlIChpbmNsdWRpbmcgdGhlIGRpc3B1dGVkIHBvcnRpb24pIGFuZCBzdWJtaXQgdG8gT3BlcmF0b3IgYSB3cml0dGVuIHN0YXRlbWVudCBkZXRhaWxpbmcgdGhlIGl0ZW1zIGRpc3B1dGVkLiAgSWYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW5kIE9wZXJhdG9yIGFyZSB1bmFibGUgdG8gcmVzb2x2ZSB0aGUgZGlzcHV0ZWQgaXRlbXMsIHRoZSBtYXR0ZXIgd2lsbCBiZSByZXNvbHZlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGRpc3B1dGUgcmVzb2x1dGlvbiBwcm92aXNpb25zIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMwNzExNzAgRXhoaWJpdCBFfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBJZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgcHJldmFpbHMgd2l0aCByZXNwZWN0IHRvIHRoZSBkaXNwdXRlZCBhbW91bnRzLCBPcGVyYXRvciBzaGFsbCByZWZ1bmQgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIGRpc3B1dGVkIGFtb3VudHMsIGluY2x1ZGluZyBpbnRlcmVzdCBvbiB0aGUgZGlzcHV0ZWQgYW1vdW50cyBhdCB0aGUgTGF0ZSBQYXltZW50IFJhdGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzE1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBObyBXYWl2ZXIgb2YgUmlnaHQgdG8gQXVkaXR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBbnkgcGF5bWVudCBtYWRlIGJ5IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQgc2hhbGwgbm90IGNvbnN0aXR1dGUgYSB3YWl2ZXIgb2YgYW55IHJpZ2h0IG9mIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0byBxdWVzdGlvbiBvciBjb250ZXN0IHRoZSBhY2N1cmFjeSBvZiBhbnkgY2hhcmdlLCBvciB0byByZXF1ZXN0IGFuZCByZWNlaXZlIGZyb20gT3BlcmF0b3Igc3VmZmljaWVudCBkYXRhIHRvIGF1ZGl0IGFueSBjaGFyZ2UgY29uY2VybmluZyB3aGljaCBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaGFzIGEgcXVlc3Rpb24gb3Igd2hpY2ggaXMgb3IgbWF5IGJlIGNvbnRlc3RlZCwgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIGEgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIG11c3QgaW5pdGlhdGUgYW55IGF1ZGl0IG9yIGRhdGEgcmVxdWVzdCBubyBsYXRlciB0aGFuIA0KdHdlbHZlICgxMikgbW9udGhzIGFmdGVyIHRoZSBEdWUgRGF0ZSBvZiBhbnkgc3VjaCBiaWxsIG9yIGNoYXJnZSBhbmQgYmVhciByZWFzb25hYmxlIGNvc3RzIGFzc29jaWF0ZWQgd2l0aCBzdWNoIGF1ZGl0LCBhbmQgcHJvdmlkZWQgZnVydGhlciB0aGF0IGlmIGFzIGEgcmVzdWx0IG9mIHRoZSBhdWRpdCBhIGRldGVybWluYXRpb24gaXMgbWFkZSB0aGF0IGVycm9ycyB3ZXJlIG1hZGUgYnkgT3BlcmF0b3IsIE9wZXJhdG9yIHNoYWxsLCBpbiBhZGRpDQp0aW9uIHRvIGNvcnJlY3RpbmcgdGhlIGVycm9yLCAgcmVpbWJ1cnNlIHRoZSBjb3N0cyBvZiB0aGUgYXVkaXQgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzE2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBPYmxpZ2F0aW9uc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMxNn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoZSBPcGVyYXRvciBzaGFsbCBoYXZlIG5vIGxpYWJpbGl0eSBmb3IgYW55IG9ibGlnYXRpb25zIGV4Y2VwdCB0aG9zZSBleHByZXNzbHkgc3RhdGVkIGluIHRoaXMgQWdyZWVtZW50LCBhbmQgbm90aGluZyBpbiB0aGlzIEFncmVlbWVudCBzaGFsbCBvYmxpZ2F0ZSB0aGUgDQpPcGVyYXRvciB0byBwZXJmb3JtIGFueSBkdXRpZXMgb3IgYXNzdW1lIGFueSBsaWFiaWxpdGllcyB1bmRlciBhbnkgYWdyZWVtZW50IHRvIHdoaWNoIHRoZSBPcGVyYXRvciBpcyBub3QgZGlyZWN0bHkgYSBwYXJ0eSB1bmxlc3Mgc3VjaCBkdXRpZXMgYXJlIGFsc28gZXhwcmVzc2x5IHN0YXRlZCBpbiB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkzODM5NzEgDQogb3Igb3RoZXJ3aXNlIGV4cHJlc3NseSBhZ3JlZWQgdG8gYnkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgYW5kIHRoZW4gb25seSB0byBzdWNoIGV4dGVudC4gIFRoZSBDby1Pd25lcnMgYWNrbm93bGVkZ2UgdGhhdCB0aGUgT3BlcmF0b3JccnF1b3RlIA0KcyBwZXJmb3JtYW5jZSB1bmRlciB0aGlzIEFncmVlbWVudCBpcyBkZXBlbmRlbnQgdXBvbiB0aGUgQ28tT3duZXJzIGhhdmluZyBjb21wbGllZCB3aXRoIHRoZWlyIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkzODM5NzEgKGluY2x1ZGluZyB3aXRoIHJlc3BlY3QgdG8gcGF5bWVudCkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IGFuZCB0aGUgT3BlcmF0b3IgaGF2aW5nIHRpbWVseSBhbmQgYXBwcm9wcmlhdGUgYWNjZXNzIHRvIGFsbCBwYXJ0cyBvZiB0aGUgU2hhcmVkIEFzc2V0cyBhbmQgYWNjZXNzIHRvIGFsbCBkb2N1bWVudHMgYXMgcmVhc29uYWJseSByZXF1aXJlZCBieSB0aGUgT3BlcmF0b3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzE3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBSaXNrIG9mIExvc3N9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyA7IEluZGVtbml0eX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMxN30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjE1LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMzXHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTQ0Njc1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQXMgYmV0d2VlbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzIGFuZCB0aGUgT3BlcmF0b3IsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgcyBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHJpc2sgb2YgbG9zcyB0byB0aGUgU2hhcmVkIEYNCmFjaWxpdGllcyBvciBhbnkgcG9ydGlvbiB0aGVyZW9mIGR1cmluZyB0aGUgcmVwYWlyLCBtYW5hZ2VtZW50LCBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgcmVnYXJkbGVzcyBvZiBjYXVzZSwgZXhjZXB0IHRvIHRoZSBleHRlbnQgc3VjaCBsb3NzIGlzIGNhdXNlZCBpbiB3aG9sZSBvciBpbiBwYXJ0IGJ5IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyANCmZyYXVkIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgd2lsbGZ1bCBtaXNjb25kdWN0IG9mIHRoZSBPcGVyYXRvci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xNS4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyBPcGVyYXRvciBzaGFsbCBub3QgYmUgbGlhYmxlIHRvIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3ICBmb3IgYW55IGFjdCBwZXJmb3JtZWQgaW4gZ29vZCBmYWl0aCBieSBPcGVyYXRvciBpbiB0aGUgZGlzY2hhcmdlIG9mIGl0cyBkdXRpZXMgaGVyZXVuZGVyIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTM0MjE5NyAgb3IgaW4gdGhlIGV4ZXJjaXNlIG9mIGl0cyBwb3dlcnMgYW5kIGF1dGhvcml0eSBoZXJldW5kZXIgYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyAsIGluY2x1ZGluZyBkYW1hZ2VzIGFyaXNpbmcgb3V0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTAyMjg1ODggYW55IGN1cnRhaWxtZW50IG9mIHVzZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgdGhlIGRpc2Nvbm5lY3Rpb24gb2YsIG9yIHRoZSBlbGVjdGlvbiBub3QgdG8gZGlzY29ubmVjdCwgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCBGYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgIGZyb20gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4IFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgLCB1bmxlc3MgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggT3BlcmF0b3JccnF1b3RlIHMgYWN0cyBvciBvbWlzc2lvbnMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyBjb25zdGl0dXRlIGZyYXVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggIG9yIHdpbGxmdWwgbWlzY29uZHVjdC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTUuM1x0YWJ9RWFjaCBDby1Pd25lciBzaGFsbCwgcHJvIHJhdGEgaW4gYWNjb3JkYW5jZSB3aQ0KdGggaXRzIFByb3BvcnRpb25hdGUgSW50ZXJlc3QsIGluZGVtbmlmeSBhbmQgaG9sZCBoYXJtbGVzcyBPcGVyYXRvciBhbmQgaXRzIGVtcGxveWVlcyBhbmQgYWdlbnRzLCBmcm9tIGFueSBjbGFpbSwgbG9zcywgbGlhYmlsaXR5IG9yIGRhbWFnZSBpbmN1cnJlZCBieSByZWFzb24gb2YgYW55IGFjdCBwZXJmb3JtZWQgb3Igb21pdHRlZCB0byBiZSBwZXJmb3JtZWQgYnkgaXQgaW4gaXRzIHJlYXNvbmFibGUganVkZ21lbnQsIGluIGdvb2QgZmFpdGgsDQogb3IgaW4gcmVhc29uYWJsZSByZWxpYW5jZSBvbiBhZHZpY2Ugb2YgT3BlcmF0b3JccnF1b3RlIA0KcyBhdHRvcm5leXMgb3IgYWNjb3VudGFudHMsIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBvciB0aGlzIEFncmVlbWVudCAob3RoZXIgdGhhbiBhcyBhIHJlc3VsdCBvZiB0aGUgZnJhdWQgb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIE9wZXJhdG9yKSwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXlzXHJxdW90ZSANCiBmZWVzIGluY3VycmVkIGJ5IE9wZXJhdG9yIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgZGVmZW5zZSBvZiBhbnkgYWN0aW9uIGJhc2VkIG9uIGFueSBzdWNoIGFsbGVnZWQgYWN0IG9yIG9taXNzaW9uLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMTh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NDQ2NzUgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgTGltaXRhdGlvbnMgb24gT3BlcmF0b3JccnF1b3RlIHMgQXV0aG9yaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMTEzNDIxOTdcY2hhcnJzaWQxMTM0MjE5NyB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzE4fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTEzNDIxOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgLiAgIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBoZXJlaW4gdG8gdGhlIGNvbnRyYXJ5LCBPcGVyYXRvciBzaGFsbCBoYXZlIG5vIGF1dGhvcml0eSB0byBhbmQgDQpzaGFsbCBub3QgKGkpIGFtZW5kIG9yIHRlcm1pbmF0ZSBhbnkgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnQgb3IgZW50ZXIgaW50bywgYW1lbmQgb3IgdGVybWluYXRlIGFueSBvdGhlciBjb250cmFjdCBvciBhZ3JlZW1lbnQgb24gYmVoYWxmIG9mIHRoZSBDby1Pd25lcnMsIChpaSkgY3JlYXRlIGFueSBsaWVuIG9yIHNlY3VyaXR5IGludGVyZXN0IG9uIG9yIGluIGFueSBTaGFyZWQgRmFjaWxpdGllcywgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3INCiBhbnkgb3RoZXIgYXNzZXQgb2YgYW55IG9yIGFsbCBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzc2NTE2MCAsIGV4Y2VwdCBhcyBleHByZXNzbHkgcGVybWl0dGVkIHVuZGVyIFNlY3Rpb24gMTAuMS42fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgDQosIChpaWkpIGJ1eSwgc2VsbCwgY29udmV5IG9yIG90aGVyd2lzZSBkaXNwb3NlIG9mIGFueSBTaGFyZWQgRmFjaWxpdGllcyBvciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSwgKGl2KSBpbmN1ciBhbnkgZGVidCBvciBvdGhlciBvYmxpZ2F0aW9ucyBvbiBiZWhhbGYgb2YgYW55IG9yIA0KYWxsIG9mIHRoZSBDby1Pd25lcnMsIGV4Y2VwdCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIE8mTSBTZXJ2aWNlcyBvciBhcyBwcm92aWRlZCBpbiB0aGlzIEFncmVlbWVudCBvciBhbm90aGVyIHdyaXR0ZW4gYWdyZWVtZW50IGFtb25nIE9wZXJhdG9yIGFuZCB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE4MTUxNyANCiwgb3IgKHYpIGVudGVyIGludG8gbGVhc2VzIG9yIHN1YmxlYXNlcyBvZiBvciBncmFudCBsaWNlbnNlcyBvciBvdGhlciByaWdodHMgd2l0aCByZXNwZWN0IHRvIGFueSBTaGFyZWQgRmFjaWxpdGllcyBvciBTaGFyZWQgUmVhbCBFc3RhdGUgZXhjZXB0IHdpdGggdGhlIHdyaXR0ZW4gYXBwcm92YWwgb2YgYWxsIG9mIHRoZSBDby1Pd25lcnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk0NDY3NSBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCBSZXBsYWNlbWVudCBvZiBPcGVyYXRvci59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQxMDIyODU4OFxjaGFycnNpZDEwMjI4NTg4IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMDIyODU4OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCAuICAgT3BlcmF0b3IgbWF5IG9ubHkgYmUgcmVtb3ZlZCB1cG9uIHRoZSB2b3RlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxODE1MTcgdHdvLXRoaXJkc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4ICBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4MTAzOCANCiAoYmFzZWQgb24gdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCAuICBBbnkgbmV3IE9wZXJhdG9yIG11c3QgYmUgYXBwcm92ZWQgYnkgdGhlIHVuYW5pbW91cyB2b3RlIG9mIHRoZSBDby1Pd25lcnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBWSUlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjB9REFNQUdFIFRPfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTk5MzU5OSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgREVTVFJVQ1RJT04gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTk5MzU5OSBPUiBGQUlMVVJFIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBPRiBTSEFSRUQgRkFDSUxJVElFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyMH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzIxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IERhbWFnZSBvciBEZXN0cnVjdGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyMX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEluIHRoZSBldmVudCBvZiBhbnkgZGFtYWdlIG9yIGRlc3RydWN0aW9uIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTk5MzU5OSAsIG9yIG90aGVyIGZhaWx1cmUgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhbGwgb3IgYW55IHBhcnQgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWUNCnMgdGhhdCBhZmZlY3RzIHRoZSBidXNpbmVzcyBvcGVyYXRpb25zIG9mIG9uZSBvciBtb3JlIENvLU93bmVycyBpbiBhIFNoYXJlZCBBc3NldHMgR3JvdXAgKGVhY2ggYW4gXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFmZmVjdGVkIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0DQopLCBzdWNoIEFmZmVjdGVkIFBhcnR5IHNoYWxsLCBzdWJqZWN0IHRvIGFueSBjb250cmFyeSByZXF1aXJlbWVudHMgaW4gTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzIG9yIEFwcGxpY2FibGUgTGF3LCB0YWtlIGFsbCBjb21tZXJjaWFsbHkgcmVhDQpzb25hYmxlIGFjdGlvbnMgYXMgbWF5IGJlIG5lY2Vzc2FyeSBvciBhcHByb3ByaWF0ZSB0byByZXBhaXIgb3IgcmVwbGFjZSB0aGUgYWZmZWN0ZWQgU2hhcmVkIEZhY2lsaXRpZXMgb3Igb3RoZXIgZmFjaWxpdGllcyBpbiBvcmRlciB0byByZXN0b3JlIHRoZSBhZmZlY3RlZCBTaGFyZWQgRmFjaWxpdGllcyBvciBvdGhlciBmYWNpbGl0aWVzIHRvIHN1YnN0YW50aWFsbHkgdGhlIHNhbWUgY29uZGl0aW9uIChvciBiZXR0ZXIpIGFzIGJlZm9yZSBzdWMNCmggZGFtYWdlIG9yIGRlc3RydWN0aW9uIChhbmQgYW55IGNvc3RzIGFzc29jaWF0ZWQgd2l0aCBzdWNoIGFjdGlvbnMsIGFmdGVyIGFjY291bnRpbmcgZm9yIHJlY292ZXJpZXMgdW5kZXIgYW55IGFwcGxpY2FibGUgaW5zdXJhbmNlIHBvbGljaWVzLCB3aWxsIGJlIHNoYXJlZCBieSB0aGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTYwNCBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHBybyByYXRhIGJhc2VkIG9uIHRoZWlyIE93bmVyc2hpcCBJbnRlcmVzdHMsIGFzIGFwcGxpY2FibGUpLiAgRm9sbG93aW5nIGFueSBzdWNoIGRhbWFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU1NzQ0MjggLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGRlc3RydWN0aW9ufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NTc0NDI4ICBvciBmYWlsdXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIGlmIChpKVx+DQp0aGUgQWZmZWN0ZWQgUGFydHkgZmFpbHMgdG8gZGlsaWdlbnRseSBwcm9jZWVkIHdpdGggdGhlIHJlcGFpciBvciByZXBsYWNlbWVudCBvZiB0aGUgYWZmZWN0ZWQgU2hhcmVkIEZhY2lsaXRpZXMgb3Igb3RoZXIgZmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByZWNlZGluZyBzZW50ZW5jZSwgb3IgKGlpKVx+dGhlIEFmZmUNCmN0ZWQgUGFydHkgbm90aWZpZXMgdGhlIG90aGVyIENvLU93bmVycyB0aGF0IGl0IGRvZXMgbm90IGludGVuZCB0byByZXBhaXIgb3IgcmVwbGFjZSB0aGUgYWZmZWN0ZWQgU2hhcmVkIEZhY2lsaXRpZXMgb3Igb3RoZXIgZmFjaWxpdGllcywgdGhlbiBpbiBlaXRoZXIgc3VjaCBjYXNlLCB0aGUgb3RoZXIgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTYwNCANCmluIHRoZSByZWxldmFudCBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gcmVwYWlyIG9yIHJlcGxhY2UgdGhlIGFmZmVjdGVkIFNoYXJlZCBGYWNpbGl0aWVzIG9yIG90aGVyIGZhY2lsaXRpZXMgKG9yIGEgcG9ydGlvbiB0aGVyZW9mIHN1ZmZpY2llbnQgdG8gc2VydmUgc3VjaCBvdGhlciBDby1Pd25lcnNccnF1b3RlIA0KIHJlcXVpcmVtZW50cykgYW5kIGNvbnRpbnVlIHRoZSBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIHRoZXJlb2YgZm9yIHRoZSByZW1haW5kZXIgb2YgdGhlIFRlcm07fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgIHByb3ZpZGVkIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE2MDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjE4NDM1IA0KIGluIHN1Y2ggZXZlbnQgdGhlIEFmZmVjdGVkIFBhcnR5IHNoYWxsIGJlIG9ibGlnYXRlZCB0byB0aGUgQ28tT3duZXJzIGZ1bmRpbmcgdGhlIHJlcGFpciBvciByZXBsYWNlbWVudCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxNjA0IG9yIG90aGVyIGZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgDQp0byB0aGUgZXh0ZW50IG9mIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHRoZSBjb3N0cyBvZiByZXBhaXIgb3IgcmVwbGFjZW1lbnQ7IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgIGZ1cnRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLCB0aGF0IHN1Y2ggb3RoZXIgQ28tT3duZXJzIHNoYWxsIG5vdCB1bnJlYXNvbmFibHkgaW50ZXJmZXJlIHdpdGggdGhlIGJ1c2luZXNzIG9wZXJhdGlvbnMgb2YgdGhlIEFmZmVjdGVkIFBhcnR5LiAgSW4gYWxsIGV2ZW50cywgdGhlIENvLU93bmVycyBzaGFsbCBjb29wZXJhdGUgd2l0aCBlYWNoIG90aGVyIGluIGdvb2QgZmFpdGggdG8gbWluaW1pemUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxNjA0IA0KdGhlIGNvc3Qgb2YgcmVwYWlyIG9yIHJlcGxhY2VtZW50IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgbWluaW1pemUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgaW1wYWN0IHRoZXJlb2Ygb24gdGhlIENvLU93bmVycyBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBidXNpbmVzcyBvcGVyYXRpb25zLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBWSUlJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzIyfUNFU1NBVElPTiBPRiBPUEVSQVRJT05TIEJZIEEgQ08tT1dORVJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMyM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI0ODQ1M1xjaGFycnNpZDEyNDg0NTMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNDg0NTNcY2hhcnJzaWQxMjQ4NDUzIENvLU93bmVyIENlYXNpbmcgT3BlcmF0aW9uc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBJbiB0aGUgZXZlbnQgYSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSBkZWNpZGVzIHRvIHNodXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBkb3duLCBkZWNvbW1pc3Npb24sIGFiYW5kb24gb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDU5MTEgY2Vhc2UgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9wZXJhdGlvbiBvZiBpdHMgRmFjaWxpdHkgKHN1Y2ggQ28tT3duZXIsIGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyIENlYXNpbmcgQnVzaW5lc3MgT3BlcmF0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NA0KKSwgaXQgc2hhbGwgcHJvdmlkZSB0aGUgb3RoZXIgQ28tT3duZXJzIHdpdGggYXQgbGVhc3Qgc2l4ICg2KSBtb250aHNccnF1b3RlICBwcmlvciB3cml0dGVuIG5vdGljZSBvZiBzdWNoIHNodXQtZG93biwgYWJhbmRvbm1lbnQsIGRlY29tbWlzc2lvbmluZywgb3IgY2Vzc2F0aW9uIG9mIG9wZXJhdGlvbnMuICBUaGUgQ28tT3duZXIgQ2Vhc2luZyBCdXNpbmVzcyBPcGVyYXRpb25zIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTcxMjE2NCByZWFzb25hYmx5IGNvb3BlcmF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHdpdGggdGhlIG90aGVyIENvLU93bmVycyBpbiBvcmRlciB0byBtaW5pbWl6ZSBhbnkgaW50ZXJmZXJlbmNlIHdpdGggc3VjaCBvdGhlciBDby1Pd25lcnNccnF1b3RlICBidXNpbmVzcyBvcGVyYXRpb25zLCBhbmQgdGhlIENvLU93bmVyIENlYXNpbmcgQnVzaW5lc3MgT3BlcmF0aW9ucyBzaGFsbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTc5NTQ2OCAsIGF0IHRoZSByZXF1ZXN0IG9mIHRoZSBvdGhlciBDby1Pd25lcnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGFrZSBzdWNoIGFjdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSAgYXMgbWF5IGJlIG5lY2Vzc2FyeSBvciBhcHByb3ByaWF0ZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTcxMjE2NCAsIGNvbnNpc3RlbnQgd2l0aCBHb29kIFV0aWxpdHkgUHJhY3RpY2UsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDU5MTEgIHRvIHNhZmVseSBkaXNjb25uZWN0IGl0cyBGYWNpbGl0eSBmcm9tIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdG8gY2Vhc2UgdXNpbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSBpbmNsdWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBncmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExIGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogc3VjaCByaWdodHMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExIGV4ZWN1dGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFuZCBkZWxpdmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDU5MTEgaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc3VjaCBhZ3JlZW1lbnRzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDYxNjE0NiAsIGFzc2lnbm1lbnRzLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBpbnN0cnVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExICBhcyBtYXkgYmUgbmVjZXNzYXJ5IHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTIxODQzNSB0cmFuc2ZlciBhbmQgY29udmV5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjE2MTQ2IGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTIxODQzNSBPd25lcnNoaXAgSW50ZXJlc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgaW4gdGhlIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgU2hhcmVkIEFzc2V0cyBpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgYXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTIxODQzNSBTaGFyZWQgQXNzZXQgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2ODk5MTU5IChzKX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExIHRvIHRoZSBvdGhlciBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gOC4zLCBzdWJqZWN0IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjkyNDMwIG9idGFpDQpuaW5nIGFueSBuZWNlc3NhcnkgRkVSQyBhcHByb3ZhbHMsIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDYxNjE0NiBjb21wbGlhbmNlIHdpdGggcmVxdWlyZW1lbnRzIG9mIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY5MjQzMCBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDYxNjE0NiANCkdvdmVybm1lbnRhbCBBdXRob3JpdHkgYW5kIEFwcGxpY2FibGUgTGF3LiAgVGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDQwNzEgcmVtYWluaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5Nzk1NDY4IA0KaW4gdGhlIFNoYXJlZCBBc3NldCBHcm91cCB3aWxsIGFzc3VtZSBkZWNvbW1pc3Npb25pbmcgb2JsaWdhdGlvbnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NDA3MSBmb3IgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3OTU0NjggaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIFByb3BvcnRpb25hdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ0MDcxIFNoYXJlIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5Nzk1NDY4IFNoYXJlZCBBc3NldHMgYWNxdWlyZWQgZnJvbSB0aGUgQ28tT3duZXIgQ2Vhc2luZyBCdXNpbmVzcyBPcGVyYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODEyNzM4IA0KLiAgVGhlIENvLU93bmVyIENlYXNpbmcgQnVzaW5lc3MgT3BlcmF0aW9ucyBzaGFsbCBhbHNvIGdyYW50IHRvIHRoZSBvdGhlciBDby1Pd25lcnMgc3VjaCByaWdodHMgYW5kIGludGVyZXN0cyBhcyBtYXkgcmVhc29uYWJseSBiZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbmVjZXNzYXJ5IHRvIGVuYWJsZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgxMjczOCB0byBlbmFibGUgdGhlIHJlbWFpbmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVycyB0byBjb250aW51ZSB1c2luZywgb3BlcmF0aW5nLCBhbmQgbWFpbnRhaW5pbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgxMjczOCANCmFzIHRoZXkgaGF2ZSBiZWVuIHVzZWQsIGluY2x1ZGluZyBpZiBuZWNlc3NhcnkgdGhlIGNvbnN0cnVjdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHN1Y2ggYWRkaXRpb25hbCBmYWNpbGl0aWVzIGFzIG1heSBiZSBuZWNlc3NhcnkgdG8gcmVwbGFjZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgxMjczOCAgd2hpY2ggYXJlIG4NCm8gbG9uZ2VyIHVzYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgQWZ0ZXIgc3VjaCBhYmFuZG9ubWVudCwgZGVjb21taXNzaW9uaW5nLCBzaHV0IGRvd24gb3IgY2Vzc2F0aW9uIG9mIGJ1c2luZXNzIG9wZXJhdGlvbnMgYnkgdGhlIENvLU93bmVyIENlYXNpbmcgQnVzaW5lc3MgT3BlcmF0aW9ucywgdGhlIG90aGVyIENvLU93bmVycyBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDc1NTY5NzIgYXNzdW1lIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGJlIHJlc3BvbnNpYmxlIGZvciBhbGwgY29zdHMsIGxpYWJpbGl0aWVzIGFuZCBleHBlbnNlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHVzZSwgb3BlcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzU1Njk3MiAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBtYWludGVuYW5jZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDU2NjcxIChhbmQgb3duZXJzaGlwIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NTU2OTcyIGRlY29tbWlzc2lvbmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTY2NzEgLCBpZiBhcHBsaWNhYmxlKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzU1Njk3MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgKGFuZCBhbnkgb3RoZXIgZmFjaWxpdGllcyB0aGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDU2NjcxIHQgbWF5IGJlY29tZSBTaGFyZWQgRmFjaWxpdGllcykuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDc1NTY5NzJcY2hhcnJzaWQ3NTU2OTcyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3NTU2OTcyXGNoYXJyc2lkNzU1Njk3MiBDby1Pd25lciBMYXN0IFVzaW5nIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyNH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IChzKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGxhc3QgdXNpbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIChhcyBjb25maXJtZWQgaW4gd3JpdGluZyBieSB0aGUgQ28tT3duZXJzIHB1cnN1YW50IHRvIHRoZSBsYXN0IHR3byBzZW50ZW5jZXMgb2YgdGhpcyBTZWN0aW9uDQpcfjguMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTkzODk0ICl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBoYXZlIHRoZSBvYmxpZ2F0aW9uIHRvIGRlY29tbWlzc2lvbiBzdWNoIFNoYXJlZCBGYWNpbGl0aWVzIHRvIHRoZSBleHRlbnQgY29udHJhY3R1YWxseSByZXF1aXJlZCBvciBwdXJzdWFudCB0byBBcHBsaWNhYmxlIExhdyAodGhlIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IERlY29tbWlzc2lvbmluZyBPYmxpZ2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KTsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgaWYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYwNTkgdHdvIG9yIG1vcmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IENvLU93bmVycyBkaXNjb250aW51ZSB1c2luZyB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgY29udGVtcG9yYW5lb3VzbHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCkNvLU93bmVycyBzaGFsbCBzaGFyZSBpbiBhbnkgRGVjb21taXNzaW9uaW5nIE9ibGlnYXRpb24gb24gYSBiYXNpcyByZWZsZWN0aW5nIHRoZWlyIE93bmVyc2hpcCBJbnRlcmVzdHMgaW4gc3VjaCBTaGFyZWQgRmFjaWxpdGllcywgd2hlcmUgYXBwbGljYWJsZS4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IElmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhIENvLU93bmVyIGRldGVybWluZXMgdGhhdCBpdCBubyBsb25nZXIgZGVzaXJlcyB0byB1dGlsaXplIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgaXQgc2hhbGwgcHJvdmlkZSBzdWNoIG5vdGljZSB0byB0aGUgb3RoZXIgQ28tT3duZXJzICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExhc3QgVXNlIE5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcJzk0KSBhdCBsZWFzdCBzaXggKDYpIG1vbnRocyBwcmlvciB0byB0aGUgZGF0ZSBvbiB3aGljaCBpdCB3aWxsIGNlYXNlIHRvIHV0aWxpemUgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBpbiB3aGljaCBjYXNlIHN1Y2ggQ28tT3duZXIgc2hhbGwsIGFzIG9mIHN1Y2ggc3BlY2lmaWVkIGRhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwNjk0NiANCiBhbmQgc3ViamVjdCB0byBhbnkgcmVxdWlyZWQgRkVSQyBub3RpZmljYXRpb25zIG9yIG9idGFpbmluZyBhbnkgbmVjZXNzYXJ5IEZFUkMgYXBwcm92YWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIGhhdmUgbm8gZnVydGhlciByaWdodCB0byB1dGlsaXplIHRoZSBTaGFyZWQgRmFjaWxpdGllcy4gIFRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IA0KKHMpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhhdCByZWNlaXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYwNTkgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5ICl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIHN1Y2ggTGFzdCBVc2UgTm90aWNlIHNoYWxsLCB3aXRoaW4gZm9ydHktZml2ZSAoNDUpIGRheXMgb2Ygc3VjaCByZWNlaXB0LCBlaXRoZXIgKGkpXH5hZ3JlZSB0aGF0IGl0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IG9yIHRoZXkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmFsc28gbm8gbG9uZ2VyIGRlc2lyZSB0byB1dGlsaXplIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgaW4gd2hpY2ggY2FzZSB0aGUgQ28tT3duZXJzIHNoYWxsIGJlIGRlZW1lZCB0byBoYXZlIGRpc2NvbnRpbnVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzU1Njk3MiBkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdXNlIA0Kb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGNvbnRlbXBvcmFuZW91c2x5IGFuZCBzaGFsbCBzaGFyZSBpbiBhbnkgRGVjb21taXNzaW9uaW5nIE9ibGlnYXRpb24gYXMgc2V0IGZvcnRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IGFib3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIG9yIChpaSlcfn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTM4NTYwNTkgc3RhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGF0IGl0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IG9yIHRoZXkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBpbnRlbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSAofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdG8gY29udGludWUgdG8gdXRpbGl6ZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGluIHdoaWNoIGNhc2Ugc3VjaCBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IChzKX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwgYXNzdW1lIHRoZSBEZWNvbW1pc3Npb25pbmcgT2JsaWdhdGlvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ0MDcxICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzI1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxODUzNzMyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDExNDQwNzEgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTg1MzczMiBQcm9jZWR1cmUgZm9yIFRyYW5zZmVyIGJ5IGEgQ28tT3duZXIgb2YgaXRzIE93bmVyc2hpcCBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxODUzNzMyIC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjI5MzI0NSAgIFRoZSBjb25zaWRlcmF0aW9uIGZvciB0cmFuc2ZlciBvZiBhIENvLU93bmVyXHJxdW90ZSANCnMgT3duZXJzaGlwIEludGVyZXN0IGluIGl0cyBTaGFyZWQgQXNzZXRzIHRvIG90aGVyIENvLU93bmVyKHMpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNjU5Mzg5NCBwdXJzdWFudCB0byB0aGUgZm9yZWdvaW5nIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2MjkzMjQ1IHNoYWxsIGJlIGFuIGFtb3VudCBlcXVhbCB0byB0aGUgZmFpcg0KIG1hcmtldCB2YWx1ZSBvZiB0aGUgU2hhcmVkIEFzc2V0cy4gIFRoZSBmYWlyIG1hcmtldCB2YWx1ZSBvZiB0aGUgU2hhcmVkIEFzc2V0cyBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IGFncmVlbWVudCBvZiB0aGUgQ28tT3duZXJzIG9mIHRoZSBTaGFyZWQgQXNzZXRzIGJlaW5nIHRyYW5zZmVycmVkLCBvciBpZiB0aGV5IGFyZSB1bmFibGUgdG8gYWdyZWUsIGJ5IGFwcHJhaXNhbCBjb25kdWN0ZWQgYnkgYW4gYXBwcmFpc2FsIGNvbmR1Y3RlZCBieSBhDQpuDQogYXBwcmFpc2VyIHNlbGVjdGVkIGpvaW50bHkgYnkgc3VjaCBDby1Pd25lcnMuICBJZiB0aGUgQ28tT3duZXJzIGFyZSB1bmFibGUgdG8gYWdyZWUgb24gYSBzaW5nbGUgYXBwcmFpc2VyLCB0aGVuIGVhY2ggQ28tT3duZXIgc2hhbGwgc2VsZWN0IGFuIGFwcHJhaXNlciwgYW5kIHN1Y2ggYXBwcmFpc2VycyBzaGFsbCBzZWxlY3QgYW4gaW5kZXBlbmRlbnQgYXBwcmFpc2VyIHRvIGRldGVybWluZSBmYWlyIG1hcmtldCB2YWx1ZSBvZiB0aGUgU2hhcmUNCmQgQXNzZXRzLiAgU3VjaCBkZXRlcm1pbmF0aW9uIG9mIHRoZSBmYWlyIG1hcmtldCB2YWx1ZSBzaGFsbCBiZSBmaW5hbCBhbmQgYmluZGluZyBvbiB0aGUgQ28tT3duZXJzLntcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjV9ICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTg1MzczMiAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMTQ0MDcxIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyOTMyNDUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC40XHRhYn19XHBhcmQgXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjI5MzI0NSB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyOTMyNDUgQ2hhbmdlIGluIE93bmVyc2hpcCBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDYyOTMyNDUgDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzI2fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjI5MzI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2MjkzMjQ1IC4gSW4gdGhlIGV2ZW50IG9mIGEgY2hhbmdlIGluIHRoZSBPd25lcnNoaXAgSW50ZXJlc3RzIG9mIHRoZSBDby1Pd25lcnMgaW4gYSBTaGFyZWQgQXNzZXQgR3JvdXAsIGVhY2ggQ28tT3duZXJccnF1b3RlIHMgT3duZXJzaGlwIEludGVyZXN0IGFuZC9vciBVbmRpdmlkZWQgVXNlIEludGVyZXN0LCBhbmQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyANCkNvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjI5MzI0NSBzXHJxdW90ZSANCiByZWltYnVyc2VtZW50IHBlcmNlbnRhZ2VzIGZvciBPJk0gQ29zdHMgKGluY2x1ZGluZyB0YXhlcykgd2lsbCBiZSBhZGp1c3RlZCwgYW5kIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGFtZW5kZWQgdG8gcmVmbGVjdCBzdWNoIGFkanVzdG1lbnQuICBBbnkgY2hhbmdlIGluIE93bmVyc2hpcCBJbnRlcmVzdCBvZiBhIENvLU93bmVyIHNoYWxsIGJlIHN1YmplY3QgdG8gcmVxdWlyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMDEwNjk0NiBGRVJDIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyOTMyNDUgYXBwcm92YWxzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTA2OTQ2IGFuZCBhbnkgb3RoZXIgZmlsaW5ncyB3aXRoIG9yIGFwcHJvdmFscyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MjkzMjQ1IA0KYnkgR292ZXJubWVudGFsIEF1dGhvcml0aWVzIGFuZCBjb21wbGlhbmNlIHdpdGggQXBwbGljYWJsZSBMYXdzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjI5MzI0NVxjaGFycnNpZDYyOTMyNDUgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBJWFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMyN31SRUxBVElPTlNISVAgT0YgT1BFUkFUT1IgQU5EIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDTy1PV05FUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyN30NCg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQWN0aW9ucyBUYWtlbiBieSBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyOH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NjcwNzcgRXhjZXB0IGFzIHByb3ZpZGVkIGluIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyAgOS44fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDY2NzA3NyAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IA0KT3BlcmF0b3IgaXMgYXV0aG9yaXplZCB0byB0YWtlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NjcwNzcgYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYWN0aW9ucyBvciBhY3Rpdml0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IG9uIGJlaGFsZiBvZiB0aGUgQ28tT3duZXJzIHRoYXQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBoYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIHZlfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgcmlnaHQgb3Igb2JsaWdhdGlvbiB0byB0YWtlIG9yIHBlcmZvcm0gd2l0aCByZXNwZWN0IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NjcwNzcgdGhlIGNvbnN0cnVjdGlvbiwgaW5zdGFsbGF0aW9uLCBvcGVyYXRpb24sIG1haW50ZW5hbmNlLCByZXBhaXIsIHJlc3RvcmF0aW9uLCByZW1vdmFsIGFuZC9vciByZXBsYWNlbWVudCBvZiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIFNoYXJlZCBBc3NldHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSAsIGFuZCBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIHRha2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYwNTkgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBwZXJmb3JtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IHN1Y2ggYWN0aW9ucyBhbmQgYWN0aXZpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MzczOTY0ICBpbiBsaWV1IG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MzczOTY0IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW5kIGl0cyBpbnZpdGVlcyBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBpbnNwZWN0IHRoZSBTaGFyZWQgRmFjaWxpdGllc30NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4MTU3MDMgIGFuZCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgdG8gdGhlIGZ1bGwgZXh0ZW50IHBlcm1pdHRlZCBieSB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQosIHByb3ZpZGVkIGhvd2V2ZXIsIHRoYXQgc3VjaCBpbnNwZWN0aW9uIHNoYWxsIG5vdCB1bnJlYXNvbmFibHkgaW50ZXJmZXJlIHdpdGggdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NjcwNzcgY29uc3RydWN0aW9uLCBpbnN0YWxsYXRpb24sIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UsIHJlcGFpciwgcmVzdG9yYXRpb24sIHJlbW92YWwgYW5kL29yIHJlcGxhY2VtZW50fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NjY3MDc3XGRlbHJzaWQ0NjY3MDc3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllDQpzLCBhbmQgYW55IFBlcnNvbnMgaW5zcGVjdGluZyB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgc2hhbGwgYWJpZGUgYnkgYW55IGFuZCBhbGwgc2FmZXR5IHJ1bGVzIGFuZCBwcm9jZWR1cmVzIGVzdGFibGlzaGVkIGJ5IE9wZXJhdG9yIHRoYXQgYXJlIG5vdCBpbmNvbnNpc3RlbnQgd2l0aCB0aGlzIEFncmVlbWVudCBvciBvdGhlcndpc2UgYXBwbGljYWJsZSB0byB0aGUgUHJvamVjdCwgYXMgY29tbXVuaWNhdGVkIGJ5IHRoZSBPcGVyYXRvciBwcmlvciANCnRvIHRoZWlyIGFjY2VzcyB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXM7IGFuZCBwcm92aWRlZCBmdXJ0aGVyIE9wZXJhdG9yIG1heSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQzMDYzNCByZXF1aXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhhdCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW5kIGl0cyBpbnZpdGVlcyBtdXN0IGJlIGFjY29tcGFuaWVkIGJ5IE9wZXJhdG9yLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMyOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3OTI5NzAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNzkyOTcwIExpbWl0YXRpb25zIG9uIE9wZXJhdG9yXHJxdW90ZSBzIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyOX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE9wZXJhdG9yIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzkyOTcwIG5vdCwgd2l0aG91dCB0aGUgcHJpb3IgYXBwcm92YWwgb2YgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3OTI5NzAgLCB0YWtlIGFueSBvZiB0aGUgZm9sbG93aW5nIGFjdGlvbnM7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ3NzQzNzMyIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3OTI5NzAgOS4yLjFcdGFiIA0KQ3JlYXRlIG9yIGNhdXNlIHRvIGJlIGNyZWF0ZWQgYW55IGxpZW4sIHNlY3VyaXR5IGludGVyZXN0IG9yIGNoYXJnZSBvbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5Ow0KXHBhciA5LjIuMlx0YWIgQW1lbmQgb3IgbW9kaWZ5IHRoZSB0ZXJtcyBvZiB0aGlzIEFncmVlbWVudDsNClxwYXIgOS4yLjNcdGFiIFNlbGwsIGFzc2lnbiwgbW9ydGdhZ2UsIGVuY3VtDQpiZXIsIGNvbnZleSBvciBvdGhlcndpc2UgdHJhbnNmZXIgYWxsIG9yIGFueSBwb3J0aW9uIG9mIGFueSBlc3RhdGUsIHJpZ2h0LCB0aXRsZSBvciBpbnRlcmVzdCBvZiB0aGUgQ28tT3duZXJzIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQvb3IgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5LCBleGNlcHQgZm9yIGRpc3Bvc2FsIG9mIHVzZWQsIG9ic29sZXRlIG9yIHdvcm4gb3V0IGVxdWlwbWVudCB0aGF0IGlzIGJlaW5nIHJlcGxhY2VkIG9yIGkNCm4gY29ubmVjdGlvbiB3aXRoIHRoZSBkZWNvbW1pc3Npb25pbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCB0aGUgd2luZGluZyB1cCBvZiB0aGlzIEFncmVlbWVudDsNClxwYXIgOS4yLjRcdGFiIEJvcnJvdyBhbnkgZnVuZHMgb3IgaW5jdXIgYW55IGluZGVidGVkbmVzcyBvbiBiZWhhbGYgb2YgdGhlIENvLU93bmVyczsNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzQzNjI5NCA5LjIuNVx0YWIgSW5jdXIgZXhwZW5zZXMgb24gYmVoYWxmIG9mIHRoZSBDby1Pd25lcnMgZXhjZXB0IGluIGFjY29yZGFuY2Ugd2l0aCB0aGlzIEFncmVlbWVudDsNClxwYXIgOS4yLjZcdGFiIEVudGVyIGludG8gYW55IGNvbnRyYWN0cyBvciBjb21taXRtZW50cyBpbiBleGNlc3Mgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjUzNSBGaXZlIEh1bmRyZWQgVGhvdXNhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzQzNjI5NCBEb2xsYXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgKCQ1MDAsMDAwKSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0MzYyOTQgb3Igd2l0aCBhIGR1cmF0aW9uIG9mIGdyZWF0ZXIgdGhhbiBvbmUgKDEpIHllYXIsIGV4Y2VwdCBhcyBwcm92aWRlZCBpbiB0aGUgQW5udWFsIE8mTSBCdWRnZXQgYW5kL29yIHRoZSBhcHByb3ZlZCBidWRnZXQgZm9yIEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxNDI1NCA7IG9yfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NDM2Mjk0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxNDI1NCA5LjIuN1x0YWIgQ29tcHJvbWlzZSBhbnkgY2xhaW0sIGRlbWFuZCBvciBsZWdhbCBwcm9jZWVkaW5nIHdoZXJlIHRoZSBsaWFiaWxpdHkgaXMgbm90IGZ1bGx5IGNvdmVyZWQgYnkgaW5zdXJhbmNlLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMzB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQ29zdHMgYW5kIEV4cGVuc2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzMwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODY3MjQxMCBFeGNlcHQgd2l0aCByZXNwZWN0IHRvIHRoZSBkZXNpZ24gYW5kIGNvbnN0cnVjdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzNzQyMSAsIHdoaWNoIGlzIGNvdmVyZWQgaW4gU2VjdGlvbiA0LjMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBPcGVyYXRvclxycXVvdGUgDQpzIGNvc3RzIGFuZCBleHBlbnNlcyBpbmN1cnJlZCBpbiB0aGUgZXhlcmNpc2Ugb2YgcmlnaHRzIGFuZCBwZXJmb3JtYW5jZSBvZiBvYmxpZ2F0aW9ucyBvbiBiZWhhbGYgb2YgdGhlIENvLU93bmVycyB1bmRlciB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cyBhbmQgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgY29uc2lkZXJlZCByZWltYnVyc2FibGUgTyZNIENvc3RzIGZvciBwdXJwb3NlcyBvZiB0aGlzIEFncmVlbWVudC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzMX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBPYmxpZ2F0aW9ucyB1bmRlciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDUxNDAgOyBFeGVyY2lzZSBvZiBPcHRpb25zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzMxfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDUxNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNTU5NDUyNCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ1MTQwIDkuNC4xXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IE9wZXJhdG9yDQpccnF1b3RlIHMgb2JsaWdhdGlvbiB0byBwZXJmb3JtIG9ibGlnYXRpb25zIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzIHNoYWxsIGluY2x1ZGUgdGhlIG9ibGlnYXRpb24gdG8gZnVsZmlsbCBpbmRlbW5pdHkgb2JsaWdhdGlvbnM7IHByb3ZpZGVkIHRoYXQsIE9wZXJhdG9yXHJxdW90ZSBzIGNvc3RzIGluIHBlcmZvcm1hbmNlIG9mIHN1Y2ggb2JsaWdhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTY1OTM4OTQgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIGJlIHN1YmplY3QgdG8gaW5kZW1uaWZpY2F0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTkzODk0IHB1cnN1YW50IHRvIFNlY3Rpb24gNi4xNSBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIEFydGljbGUgWFYuICBJZiwgcHVyc3VhbnQgdG8gQXJ0aWNsZSBYViwgdGhlIGNvc3Qgb2YgcGVyZm9ybWFuY2Ugd291bGQgdWx0aW1hdGVseSBiZSByZXF1aXJlZCB0byBiZSBwYWlkIGVudGlyZWx5IGJ5IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiAoaS5lLiwgdGhlIGluZGVtbmlmaWVkIGNsYWltcyBhcmUgc29sZWx5IGR1ZSB0byBuZWdsaWdlbmNlIG9mIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSApLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBpbnN0ZWFkIGFzc3VtZSB0aGUgZGlyZWN0IG9ibGlnYXRpb24gdG8gcGVyZm9ybSBzdWNoIGluZGVtbml0eSBvYmxpZ2F0aW9ucyBhbmQgT3BlcmF0b3Igc2hhbGwgaGF2ZSBubyBvYmxpZ2F0aW9uIHRvIGRvIHNvLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0NTE0MCA5LjQuMlx0YWIgT3BlcmF0b3Igc2hhbGwgbW9uaXRvciB0aGUgZGF0ZXMgZm9yIHRoZSBleGVyY2lzZSBvZiBhbGwgb3B0aW9ucyBhbmQgb3RoZXIgZWxlY3Rpb25zIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDUxNDAgIHNoYWxsIG5vdGlmeSB0aGUgQ28tT3duZXJzIG9mIHRoZSBkZWFkbGluZXMgZm9yIGV4ZXJjaXNpbmcgc3VjaCBvcHRpb25zIG9yIGVsZWN0aW9ucyBub3QgbGVzcyB0aGFuIFtzaXh0eSAoNjApXSBkYXlzIGJlZm9yZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiBzdWNoIGRlYWRsaW5lcywgYW5kIHNoYWxsIHNlZWsgdA0KaGUgZGVjaXNpb24gb2YgdGhlIENvLU93bmVycyB3aXRoIHJlc3BlY3QgdG8gdGhlIGV4ZXJjaXNlIG9mIHN1Y2ggb3B0aW9ucyBvciBvdGhlciBlbGVjdGlvbnMgaW4gYSB0aW1lbHkgbWFubmVyLiAgTm8gb3B0aW9uIG9yIG90aGVyIGVsZWN0aW9uIHNoYWxsIGJlIGV4ZXJjaXNlZCBleGNlcHQgd2l0aCB0aGUgY29uc2VudCBvZiBhdCBsZWFzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjgxMDM4IHR3by19ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIHRoaXJkcyAgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggIChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExMzQ1MTQwIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMzJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBDb25zZW50IG9yIEFwcHJvdmFsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzMn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE9wZXJhdG9yIHNoYWxsIG5vdCBncmFudCBhbnkgY29uc2VudCBvciBhcHByb3ZhbCBvZiB0aGUgQ28tT3duZXJzIHJlcXVpcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM3NDIxIHVuZGVyIG9mIGFueSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1OTM4OTQgb3IgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgd2l0aG91dCB0aGUgcHJpb3Igd3JpdHRlbiBjb25zZW50IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM3NDIxIGFsbCBvZiB0aGUgYWZmZWN0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTcxOTk2IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB3aGljaCBzaGFsbCBub3QgYmUgdW5yZWFzb25hYmx5IHdpdGhoZWxkIG9yIGRlbGF5ZWQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzMzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgQ29uZGVtbmF0aW9uIEF3YXJkc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBbnkgY29uZGVtbmF0aW9uIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM3NDIxIHNpbWlsYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhd2FyZHMgdG8gd2hpY2ggdGhlIENvLU93bmVycyBzaGFsbCBiZWNvbWUgZW50aXRsZWQgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMgb3IgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzNzQyMSB3aXRoIHJlc3BlY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzNzQyMSANCiBiZSB1c2VkIHRvIHJlcGFpciwgcmVzdG9yZSBvciByZXBsYWNlIHRoZSBhZmZlY3RlZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQvb3IgU2hhcmVkIEZhY2lsaXRpZXMgdW5sZXNzIHN1Y2ggcmVwYWlyLCByZXN0b3JhdGlvbiBvciByZXBsYWNlbWVudCBpcyBub3QgZmVhc2libGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyANCiwgdGhlIGNvbmRlbW5hdGlvbiBvciBvdGhlciBhd2FyZCBpcyBpbnN1ZmZpY2llbnQgdG8gY29tcGxldGUgc3VjaCByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50LCBvciBhbGwgb2YgdGhlIENvLU93bmVycyBhZ3JlZSBvdGhlcndpc2UgaW4gd3JpdGluZy4gIElmIHN1Y2ggY29uZGVtbmF0aW9uIG9yIG90aGVyIGF3YXJkcyBhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjU5Mzg5NCANCiBub3QgdXNlZCB0byByZXBhaXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyAsIHJlc3RvcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjU5Mzg5NCAgb3IgcmVwbGFjZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyB0aGUgYWZmZWN0ZWQgU2hhcmVkIFJlYWwgUHJvcGVydHkgYW5kL29yIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1OTM4OTQgU2hhcmVkIEZhY2lsaXRpZXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgdGhleSBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNzYzMjEzIA0KZGl2aWRlZCBhbW9uZyB0aGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW4gcHJvcG9ydGlvbiB0byB0aGVpciByZXNwZWN0aXZlIE93bmVyc2hpcCBJbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyAgaW4gdGhlIGFmZmVjdGVkIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZC9vciBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIHByb3ZpZGVkIHRoYXQgaWYgc3VjaCBzdW1zIGFyZSBpbiByZWltYnVyc2VtZW50IG9mIG9yIGNvbXBlbnNhdGlvbiBmb3Igc3BlY2lmaWMgY29zdHMgb3IgZGFtYWdlcyBpbmN1cnJlZCBieSB0aGUgQ28tT3duZXJzIGluIHJhdGlvcyBkaWZmZXJlbnQgZnJvbSB0aGF0IG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNzE5OTYgaXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIE93bmVyc2hpcCBJbnRlcmVzdHMsIHRoZW4gc3VjaCBkaWZmZXJlbnQgcmF0aW9zIHNoYWxsIGJlIHVzZWQgaW4gYXBwb3J0aW9ubWVudCBvZiBzdWNoIHN1bXMgYW1vbmcgdGhlIENvLU93bmVycy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMzR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBUcmFuc2ZlciBvciBFbmN1bWJyYW5jZSBvZiBJbnRlcmVzdCBpbiBTaGFyZWQgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzNH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyB0byB0aGUgY29udHJhcnkgY29udGFpbmVkIGluIHRoaXMgQWdyZWVtZW50IG9yIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAyMjY5NiANCmFuZCB3aXRob3V0IGxpbWl0aW5nIHRoZSBvdGhlciByZXF1aXJlbWVudHMgYW5kIGxpbWl0YXRpb25zIGluIHRoaXMgQWdyZWVtZW50IHdpdGggcmVzcGVjdCB0aGVyZXRvLCBpbmNsdWRpbmcgU2VjdGlvbiAxMC42IGFuZCBBcnRpY2xlIFhJViwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmluIG5vIGV2ZW50IHNoYWxsIGEgQ28tT3duZXIgYXNzaWduLCB0cmFuc2ZlciBvciBjb252ZXksIG9yIG1vcnRnYWdlLCBwbGVkZ2Ugb3Igb3RoZXJ3aXNlIGVuY3VtYmVyIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyBPd25lcnNoaXAgSW50ZXJlc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBpbiBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTc2MzIxMyBTaGFyZWQgQXNzZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBleGNlcHQgaW4gY29ubmVjdGlvbiB3aXRoIGEgc2ltdWx0YW5lb3VzIGFzc2lnbm1lbnQsIHRyYW5zZmVyIG9yIGNvbnZleWFuY2UsIG9yIG1vcnRnYWdlLCBwbGVkZ2Ugb3Igb3RoZXIgZW5jdW1icmFuY2UsIG9mIHRoZSBGYWNpbGl0eSBvd25lZCBieSBzdWNoIENvLU93bmVyIGFuZCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNzYzMjEzIHN1Y2ggQ28tT3duZXJccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBpbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNzYzMjEzIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBpbiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExNzYzMjEzICAgQW55IHN1Y2ggYXNzaWdubWVudCwgdHJhbnNmZXIsIGNvbnZleWFuY2UsIG1vcnRnYWdlLCBwbGVkZ2Ugb3IgZW5jdW1icmFuY2UgYW5kIHRoZSByaWdodHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMjI2OTYgDQphY3F1aXJlZCBpbiBjb25uZWN0aW9uIHRoZXJld2l0aCBzaGFsbCBiZSBzdWJqZWN0IGluIGFsbCByZXNwZWN0cyB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzM1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuOFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1MTMxODgwIEFkZGl0aW9uYWwgQ28tT3duZXIgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzNX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuOC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDcwNzgwMDIgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCBFYWNoIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODc3Mzk2IE99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIHduZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQsIGluIHRoZSBjYXNlIG9mIGFuIEVtZXJnZW5jeSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDg3NzM5NiBDb25kaXRpb24gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIHRoYXQgYWZmZWN0cyBzdWNoIENvLU93bmVyXHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODc3Mzk2IEZhY2lsaXR5IG9yIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBuZWNlc3NhcnkgdG8gc2VydmUgc3VjaCBDby1Pd25lclxycXVvdGUgDQpzIEZhY2lsaXR5LCB0byBtYWtlIHN1Y2ggcmVwYWlycyBhbmQgdG8gdGFrZSBzdWNoIG90aGVyIGFjdGlvbnMgd2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWQgRmFjaWxpdA0KaWVzIGFzIG1heSBiZSByZWFzb25hYmx5IG5lY2Vzc2FyeSB0byBhdm9pZCBvciBtaXRpZ2F0ZSBsb3NzIGFzIGEgcmVzdWx0IG9mIHN1Y2ggRW1lcmdlbmN5IENvbmRpdGlvbjsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQsIHRvIHRoZSBleHRlbnQgdGhhdCBjaXJjdW1zdGFuY2VzIHBlcm1pdCwgYSBDby1Pd25lciBzaGFsbCBtYWtlIHJlYXNvbmFibGUgZWZmb3J0cyB0byBjb250YWN0IHRoZSBPcGVyYXRvciBhbmQgdG8gaGF2ZSB0aGUgT3BlcmF0DQpvciByZXBhaXIgb3Igb3RoZXJ3aXNlIHRha2UgYWN0aW9uIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYmVmb3JlIG1ha2luZyBzdWNoIHJlcGFpcnMgb3IgdGFraW5nIHN1Y2ggb3RoZXIgYWN0aW9ucy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjguMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBFYWNoIENvLU93bmVyIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHBhcnRpY2lwYXRlIHdpdGggdGhlIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNzY1MTYwICBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIGluIGNvbm5lY3Rpb24gd2l0aCBhbnkgZGlzcHV0ZSB3aXRoIGEgbGFuZG93bmVyIG9yIG90aGVyIENvLU93bmVyIGFyaXNpbmcgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMsIGFuZCB0aGUgQ28tT3duZXJzIHNoYWxsIGZ1bGx5IGNvb3BlcmF0ZSBhbmQgY29tbXVuaWNhdGUgd2l0aCBvbmUgYW5vdGhlciBpbiB0aGF0IHJlZ2FyZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODc3Mzk2IC4NCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4NzczOTYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS44LjNcdGFifUlmIHRoZSBPcGVyYXRvciBmYWlscyB0byB0YWtlIGFueSBhY3Rpb24gb3IgcGVyZm8NCnJtIGFueSBvZiB0aGUgc2VydmljZXMgaXQgaXMgb2JsaWdhdGVkIHRvIGRvIG9yIHBlcmZvcm0gdW5kZXIgdGhpcyBBZ3JlZW1lbnQgYWZ0ZXIgcmVhc29uYWJsZSBub3RpY2UsIGFuZCBpZiBzdWNoIGZhaWx1cmUgdG8gYWN0IG9yIHBlcmZvcm0gaGFzIGEgbWF0ZXJpYWwgYWR2ZXJzZSBlZmZlY3Qgb24gdGhlIHVzZSBvciBvcGVyYXRpb24gb2Ygc3VjaCBDby1Pd25lclxycXVvdGUgDQpzIEZhY2lsaXR5IG9yIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBuZWNlc3NhcnkgdG8gc2VydmUgc3VjaCBDby1Pd25lclxycXVvdGUgcyBGYWNpbGl0eSwgc3VjaCBDby1Pd25lciBtYXkgdGFrZSBzdWNoIGFjdGlvbnMgYXMgbWF5IHJlYXNvbmFibHkgYmUgbmVjZXNzYXJ5IHRvIGNvcnJlY3QgdGhlIE9wZXJhdG9yXHJxdW90ZSANCnMgZmFpbHVyZSB0byBhY3Qgb3IgcGVyZm9ybSBhbmQgc2hhbGwgYmUgZW50aXRsZWQgdG8gcmVjb3ZlciBhbGwgcmVhc29uYWJsZSBjb3N0cyBvZiBkb2luZyBzbyBmcm9tIHRoZSBPcGVyYXRvcjsgcHJvdmlkZWQgdGhhdCBzdQ0KY2ggQ28tT3duZXIgc2hhbGwgZ2l2ZSB0aGUgb3RoZXIgQ28tT3duZXJzIGFuZCB0aGUgT3BlcmF0b3Igbm90IGxlc3MgdGhhbiB0ZW4gKDEwKSBkYXlzIHByaW9yIHdyaXR0ZW4gbm90aWNlIChpbiBhZGRpdGlvbiB0byBhbnkgbm90aWNlIHRvIHRoZSBPcGVyYXRvciBzZWVraW5nIHRvIGhhdmUgdGhlIE9wZXJhdG9yIHRha2UgdGhlIHJlcXVpcmVkIGFjdGlvbiBvciBwZXJmb3JtIHRoZSByZXF1aXJlZCBzZXJ2aWNlcykgYmVmb3JlIHRha2luZyBzDQp1Y2ggYWN0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBYXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzM2fUNPVkVOQU5UU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzNn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEVhY2ggQ28tT3duZXIgaGVyZWJ5IGNvdmVuYW50cyBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjNcY2hhcnJzaWQzNjg1ODQ1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3MDc4MDAyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkMzY4NTg0NSBObyBJbnRlcmZlcmVuY2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTI4Njk3MjMgLiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIEV4Y2VwdCBhcyBvdGhlcndpc2Ugc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50LCBlYWNoIENvLU93bmVyDQpccnF1b3RlIHMgdXNlIG9mIHRoZSBTaGFyZWQgQXNzZXRzIHNoYWxsIG5vdCBpbnRlcmZlcmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE2MDIyNjk2IGluIGFueSBtYXRlcmlhbCByZXNwZWN0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiB3aXRoIHRoZSB1c2UgYW5kIGVuam95bWVudCBieSB0aGUgb3RoZQ0KciBDby1Pd25lcnMgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE2MDIyNjk2IHRoZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAgU2hhcmVkIEFzc2V0cyBvciBvdGhlciByaWdodHMgYXJpc2luZyB1bmRlciB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDE2MTkxNzU1ICB0byB0aGUgZXh0ZW50IHByb3ZpZGVkIGluIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM3NjUxNjBcY2hhcnJzaWQ3MDc4MDAyICwgaW5jbHVkaW5nIGN1cnRhaWxpbmcgb3IgZGltaW5pc2hpbmcgYW5vdGhlciBDby1Pd25lcnMgYWJpbGl0eSB0byB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQxNjE5MTc1NSB1c2UgaXRzIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgdGhlIERlbGl2ZXJ5IENhcGFjaXR5IG9mIHRoZSBUcmFuc21pc3Npb24gTGluZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAue1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzN30gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDcwNzgwMDIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjNcY2hhcnJzaWQzNjg1ODQ1IA0Ke1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzM4fUludGVyY29ubmVjdGlvbiBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTI4Njk3MjMgLiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIA0KRWFjaCBDby1Pd25lciBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3Igc2VjdXJpbmcgYW5kIG1haW50YWluaW5nIHN1Y2ggcmlnaHRzIGFzIGFyZSBuZWNlc3NhcnkgdG8gaW50ZXJjb25uZWN0IHN1Y2ggQ28tT3duZXJccnF1b3RlIHMgRmFjaWxpdHkgd2l0aCB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM3NjUxNjBcY2hhcnJzaWQ3MDc4MDAyIFRyYW5zbWlzc2lvbiBPd25lclxycXVvdGUgcyB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiB0cmFuc21pc3Npb24gc3lzdGVtIGF0IHRoZSBQb2ludCBvZiBJbnRlcmNvbm5lY3Rpb24ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ3MDc4MDAyIHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzh9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNjAxNDI1NCBUaGUgcmlnaHRzIGFuZCByZXNwb25zaWJpbGl0aWVzIG9mIHRoZSBDby1Pd25lcnMgd2l0aCByZXNwZWN0IHRvIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IHNoYWxsIGJlIGdvdmVybmVkIGJ5IHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50LiAgTm9uZXRoZWxlc3MsIGF9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAgQ28tT3duZXIsIHVwb24gcmVjZWl2aW5nIG5vdGljZSBvZiBkZWZhdWx0IGZyb20gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM3NjUxNjBcY2hhcnJzaWQ3MDc4MDAyIHRoZSBDQUlTT317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyICBvciBUcmFuc21pc3Npb24gT3duZXIgdW5kZXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIHRoZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMjg2OTcyM1xjaGFycnNpZDcwNzgwMDIgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsIHNoYWxsIHByb3ZpZGUgYSBjb3B5IG9mIHN1Y2ggbm90aWNlIG9mIGRlZmF1bHQgdG8gdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM3NjUxNjBcY2hhcnJzaWQ3MDc4MDAyIHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAgd2l0aGluIDI0IGhvdXJzIG9mIHJlY2VpdmluZyBzdWNoIG5vdGljZS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDcwNzgwMDIge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzOX0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzQwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC40XHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBTaGFyZWQgUmVhbCBQcm9wZXJ0eSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkNTU5NDUyNCBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiBFYWNoIENvLU93bmVyIHNoYWxsIHByb3ZpZGUgYWxsIG90aGVyIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQxNDgxNTcwM1xjaGFycnNpZDcwNzgwMDIgYW5kIHRvIGVhY2ggTGVuZGVyLCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgd2l0aGluIDI0IGhvdXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE0ODE1NzAzXGNoYXJyc2lkNzA3ODAwMiAsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgDQogYSBjb3B5IG9mIGEgbm90aWNlIG9mIGFueSBkZWZhdWx0IGJ5IG9yIGRpc2FncmVlbWVudCB3aXRoIGEgbGFuZG93bmVyLCBvciBub3RpY2Ugb2YgZGVmYXVsdCBieSBhIENvLU93bmVyLCB1bmRlciBhbnkgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50LCBhcyB3ZWxsIGFzIGFueSBjb21tdW5pY2F0aW9uIHdpdGggc3VjaCBsYW5kb3duZXIgb3IgYW55IG90aGVyIHJlbGV2YW50IENvLU93bmVyIHJlbGENCnRlZCB0byB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50IG9yIHJpZ2h0cyBvciBvYmxpZ2F0aW9ucyB0aGVyZXVuZGVyLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkNzA3ODAwMiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjVcdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIE5vIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI4Njk3MjNcY2hhcnJzaWQ1NTk0NTI0IFdhc3RlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiANCk5vIENvLU93bmVyIHNoYWxsIHVzZSBvciBwZXJtaXQgdGhlIHVzZSBvZiB0aGUgU2hhcmVkIEFzc2V0cyBpbiBhbnkgbWFubmVyIHRoYXQgd291bGQgY3JlYXRlIHdhc3RlIG9yIG51aXNhbmNlLCBvciB0aGF0IHdvdWxkIG1hdGVyaWFsbHkgaW5jcmVhc2UgdGhlIHByZW1pdW0sIG9yIG1hdGUNCnJpYWxseSBqZW9wYXJkaXplIHRoZSBpc3N1YW5jZSBvciBtYWludGVuYW5jZSBvZiBhbnkgaW5zdXJhbmNlIHBvbGljeSBvZiBhbnkgQ28tT3duZXIgcmVsYXRpbmcgdG8gdGhlIFNoYXJlZCBBc3NldHMufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ3MDc4MDAyIHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNDF9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuNlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgTm8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjg2OTcyM1xjaGFycnNpZDU1OTQ1MjQgTGllbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTI4Njk3MjMgLiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIA0KU3ViamVjdCB0byBBcnRpY2xlIFhJViwgbm8gQ28tT3duZXIgc2hhbGwgY3JlYXRlLCBwZXJtaXQgb3Igc3VmZmVyIHRvIGV4aXN0IGJ5LCB0aHJvdWdoIG9yIHVuZGVyIHN1Y2ggQ28tT3duZXIgYW55IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTI4NzM2XGNoYXJyc2lkNzA3ODAwMiBsaWVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgcyBvbiB0aGUgU2hhcmVkIEFzc2V0cywgZXhjZXB0IGZvciAoYSlcfn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTI4NzM2XGNoYXJyc2lkNzA3ODAwMiBsaWVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDQ4NTkxMTlcY2hhcnJzaWQ3MDc4MDAyIHMgZm9yIHR9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiBheGVzIHRoYXQgYXJlIG5vdCB5ZXQgZGVsaW5xdWVudCBvciBhcmUgYmVpbmcgY29udGVzdGVkIGluIGdvb2QgZmFpdGggYnkgYXBwcm9wcmlhdGUgcHJvY2VlZGluZ3MsIGFuZCAoYilcfm1lY2hhbmljXHJxdW90ZSBzLCBtYXRlcmlhbG1lblxycXVvdGUgcyBvciBvdGhlciBsaWtlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDIxMjg3MzZcY2hhcnJzaWQ3MDc4MDAyIGxpZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgcyB0aGF0IGFyaXNlIGZyb20gdGhlIGNvbnN0cnVjdGlvbiwgcmVjb25zdHJ1Y3Rpb24sIG93bmVyc2hpcCBvciBvcGVyYXRpb24gb2Ygc3VjaCBTaGFyZWQgQXNzZXRzOyBwcm92aWRlZCB0aGF0IGlmIGFueSBtZWNoYW5pY3NccnF1b3RlIA0KIGxpZW5zIG9yIHNpbWlsYXIgbGllbnMgYXR0YWNoZWQgdG8gdGhlIFNoYXJlZCBBc3NldHMsIHRoZSBDby1Pd25lciBwZXJmb3JtaW5nIG9yIGNvbnRyYWN0aW5nIG9yIGNhdXNpbmcgdGhlIGVuZ2FnZW1lbnQgb2YgdGhlIGhvbGRlciBvZiBzdWNoIGF0dGFjaGVkIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTI4NzM2XGNoYXJyc2lkNzA3ODAwMiBsaWVufXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgIHNoYWxsLCB3aXRoaW4gdGhpcnR5ICgzMCkgZGF5cyBhZnRlciBpdCByZWNlaXZlcyBub3RpY2Ugb2YgdGhlIGZpbGluZywgZWl0aGVyIGJvbmQgYXJvdW5kIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIxMjg3MzZcY2hhcnJzaWQ3MDc4MDAyIGxpZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAgb3IgZXN0YWJsaXNoIGFwcHJvcHJpYXRlIHJlc2VydmVzIHRoZXJlZm9yLCBvciBvdGhlcndpc2UgcmVtb3ZlIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIxMjg3MzZcY2hhcnJzaWQ3MDc4MDAyIGxpZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgDQogZnJvbSBzdWNoIFNoYXJlZCBBc3NldHMgcHVyc3VhbnQgdG8gYXBwbGljYWJsZSBMYXcgKGVhY2ggb2YgKGEpIGFuZCAoYiksIGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgUGVybWl0dGVkIExpZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgXCc5NCkuDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQyfSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDcwNzgwMDIgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjNcY2hhcnJzaWQ3MDc4MDAyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjdcdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkNzA3ODAwMiBTdGFuZGFyZCBvZiBQZXJmb3JtYW5jZX17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiBFYWNoIENvLU93bmVyIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMTM0NTE0MCANCmNvbnN0cnVjdCwgb3BlcmF0ZSBhbmQgbWFpbnRhaW4gaXRzIEZhY2lsaXR5IGFuZCBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgcGVyZm9ybSBpdHMgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgaW4gYWNjb3JkYW5jZSB3aXRoIChhKVx+YWxsIEFwcGxpY2FibGUgTGF3c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDEyODY5NzIzICwgaW5jbHVkaW5nIHRoZSBDQUlTTyBUYXJpZmYsIGFuZCBQZXJtaXRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyICwgKGIpXH5Hb29kIFV0aWxpdHkgUHJhY3RpY2UsIChjKVx+dGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDM3NjUxNjBcY2hhcnJzaWQ3MDc4MDAyIHRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCBhbmQgYWxsIGFwcGxpY2FibGUgcmVxdWlyZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNzY1MTYwXGNoYXJyc2lkNzA3ODAwMiB0aGVyZXVuZGVyfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgLCAoZClcfnRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzIHRvIHdoaWNoIGl0IGlzIGEgcGFydHksIGFuZCAoZSlcfnRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiBhbGwgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cy59e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkNzA3ODAwMiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQzfQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgWElcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDR9SU5TVVJBTkNFOyBXQUlWRVJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNDR9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBJbnN1cmFuY2UgUmVzcG9uc2liaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNDV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiBPcGVyYXRvciBzaGFsbCBwcm9jdXJlIGFuZCBtYWludGFpbiwgb24gYmVoYWxmIG9mIHRoZSBDby1Pd25lcnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYWxsLXJpc2sgcHJvcGVydHkgaW5zdXJhbmNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIA0KZm9yIHRoZSBmdWxsIHJlcGxhY2VtZW50IGNvc3Qgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgU2hhcmVkIEFzc2V0cywgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIGNvbXByZWhlbnNpdmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBnZW5lcmFsIGxpYWJpbGl0eSBpbnN1cmFuY2UgaW5zdXJpbmcgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiBDby1Pd25lcnMgYW5kIE9wZXJhdG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYWdhaW5zdCBjbGFpbXMgb3IgbG9zc2VzIGNhdXNlZCBieSBvciBhcmlzaW5nIG91dCBvZiB0aGUgb3duZXJzaGlwLCBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIG9mIHRoZSBTaGFyZWQgQXNzZXRzLCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIGluIHN1Y2ggYW1vdW50cyBhbmQgd2l0aCBzdWNoIGNvdmVyYWdlcyBhcyBhcmUgY3VzdG9tYXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4NTg0NSAsIGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGFuZCBjb25zaXN0ZW50IHdpdGggR29vZCBVdGlsaXR5IFByYWN0aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgDQosIGFzIHdlbGwgYXMgYW55IGFkZGl0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBpbnN1cmFuY2UgYXMgbWF5IGJlIHJlcXVpcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIHVuZGVyIGFueSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjg1ODQ1ICBvciBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDE0MjU0IFByb2N1cmVtZW50IG9mIHN1Y2ggfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGluc3VyYW5jZSBzaGFsbCBiZSBwYXJ0IG9mIHRoZSBPJk0gU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiAsIGFuZCB0aGUgY29zdCB0aGVyZW9mIHNoYWxsIGJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgTyZNIENvc3RzLiAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNjg1ODQ1IEFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4NTg0NSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4NTg0NSBiZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDE0MjU0IG5hbWVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODU4NDUgYXMgbG9zcyBwYXllZXMgb3IgbmFtZWQgaW5zdXJlZHMsIGFzIGFwcGxpY2FibGUsIHVuZGVyIHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBwb2xpY2llcy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODU4NDUgDQpPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIHByb3ZpZGUgY2VydGlmaWNhdGVzIG9mIGluc3VyYW5jZSBjb3ZlcmFnZSB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdXBvbiByZXF1ZXN0Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU1NjM0ODcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDExLjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgV2FpdmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0Nn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE5vdHdpdGhzdGFuZGluZyBhbnkgcHJvdmlzaW9uIHRvIHRoZSBjb250cmFyeSBpbiB0aGlzIEFncmVlbWVudCwgZWFjaCBvZiB0aGUgQ28tT3duZXJzIGhlcmVieSB3YWl2ZXMgYW55IGFuZCBhbGwgcmlnaHRzIG9mIHJlY292ZXJ5LCBjbGFpbSwgYWN0aW9uIG9yIGNhdXNlIG9mIGFjdGlvbiBhZ2FpbnN0IHRoZSBvdGhlciBDby1Pd25lcnMgYW5kIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI3NDM1OCBpciBBZmZpbGlhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIGZvciBhbnkgbG9zcyBvciBkYW1hZ2UgdGhhdCBtYXkgb2NjdXIgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBvciBhbnkgcGVyc29uYWwgcHJvcGVydHkgb2Ygc3VjaCBDby1Pd25lciBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzkxNTQ3MyBvciBub24gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5LCBieSByZWFzb24gb2YgZmlyZSwgdGhlIGVsZW1lbnRzIG9yIGFueSBvdGhlciBjYXVzZSB3aGljaCBpcyByZXF1aXJlZCB0byBiZSBpbnN1cmVkIGJ5IHByb3BlcnR5IGluc3VyYW5jZSBwb2xpY2llcyBvYnRhaW5lZCBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudCwgcmVnYXJkbGVzcyBvZiBjYXVzZSBvciBvcmlnaW4sIGluY2x1ZGluZyBuZWdsaWdlbmNlIG9mIHRoZSBvdGhlciBDby1Pd25lciBoZXJlDQp0bywgb3IgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzQzNTggQWZmaWxpYXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBhbmQgZWFjaCBDby1Pd25lciBzaGFsbCBjYXVzZSBpdHMgaW5zdXJlciB0byB3YWl2ZSBzdWJyb2dhdGlvbiAgcmlnaHRzIGFnYWluc3QgdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzkxNTQ3MyBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIFhJSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0N31UQVhFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0N30NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzQ4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IE9wZXJhdG9yIFBheW1lbnQgb2YgUHJvcGVydHkgVGF4ZXMgYW5kIEFzc2Vzc21lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0OH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE9wZXJhdG9yIHdpbGwgcGF5LCB3aGVuIGR1ZSwgYWxsIHJlYWwgYW5kIHBlcnNvbmFsIHByb3BlcnR5IHRheGVzIGFuZCBhc3MNCmVzc21lbnRzLCBnZW5lcmFsIG9yIHNwZWNpYWwsIGxldmllZCBhZ2FpbnN0IHRoZSBTaGFyZWQgRmFjaWxpdGllcyBvciB0aGVpciBvcGVyYXRpb24sIG9yIHBheW1lbnQgb2JsaWdhdGlvbnMgaW4gbGlldSBvZiBzdWNoIHRheGVzLCBvciB0aGF0IGFyZSBwYXlhYmxlIHB1cnN1YW50IHRvIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCBzdWJqZWN0IHRvIE9wZXJhdG9yXHJxdW90ZSANCnMgcmlnaHQgdG8gY29udGVzdCB0aGUgdmFsaWRpdHkgb2Ygc3VjaCB0YXhlcyBvciBhc3Nlc3NtZW50cyBhbmQgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxycXVvdGUgDQpzIHJpZ2h0IHRvIHJlcXVpcmUgT3BlcmF0b3IgY29udGVzdCB0aGUgdmFsaWRpdHkgb2Ygc3VjaCB0YXhlcyBvciBhc3Nlc3NtZW50cyBhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBccnF1b3RlIHMgZXhwZW5zZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyAgIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzQ5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IFJlaW1idXJzZW1lbnQgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcdWxub25lXGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQ5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBDby1Pd25lciBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IsIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzIHdpbGwgcmVpbWJ1cnNlIE9wZXJhdG9yIGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2IA0Kc3VjaCBDby1Pd25lclxycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZSBpbiBvbmUgb3IgbW9yZSBTaGFyZWQgQXNzZXQgR3JvdXBzIGluIHdoaWNoIGl0IGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QsIG9mIHRoZSB0YXhlcyBhbmQgYXNzZXNzbWVudHMgZGVzY3JpYmVkIGluIFNlY3Rpb25cfjEyLjEgYXMgTyZNIENvc3RzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyAgYXMgcHJvdmlkZWQgaW4gQXJ0aWNsZSBWSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgVHJhbnNmZXIgVGF4ZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzkxNTQ3MyAsIFNhbGVzIGFuZCBVc2UgVGF4ZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTB9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDE1ODgxOTY2IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICAgSW4gdGhlIGV2ZW50IG9mIGEgdHJhbnNmZXIgb3Igc2FsZSBvZiBhbGwgb3IgcGFydCBvZiBhIENvLU93bmVyXHJxdW90ZSBzIE93bmVyc2hpcCBJbnRlcmVzdCBpbiBhIFNoYXJlZCBBc3NldCwgYXBwbGljYWJsZSB0cmFuc2ZlciB0YXhlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODgxOTY2IGFuZCBzYWxlcyBhbmQgdXNlIHRheGVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgd2lsbCBiZSBib3JuZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzIzMzQxIGJ5IHRoZSBwdXJjaGFzZXIocykgb3IgdHJhbnNmZXJlZShzKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9mIHN1Y2ggU2hhcmVkIEFzc2V0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2IDsgcHJvdmlkZWQgdGhhdCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk5NzcxNyBub24tdHJhbnNmZXJyaW5nIENvLU93bmVycyBzaGFsbCBoYXZlIG5vIG9ibGlnYXRpb24gd2l0aCByZXNwZWN0IHRvIGFueSBzdWNoIHRyYW5zZmVyIHRheGVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODgxOTY2IA0Kb3Igc2FsZXMgYW5kIHVzZSB0YXhlcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk5NzcxNyBhbmQgc2hhbGwgYmUgaGVsZCBoYXJtbGVzcyBhZ2FpbnN0IHNhbWUgYnkgdGhlIHRyYW5zZmVycmluZyBDby1Pd25lciAodW5sZXNzIHRoZXkgYXJlIHRoZSBwdXJjaGFzZXIgb3IgdHJhbnNmZXJlZSBvZiBzdWNoIFNoYXJlZCBBc3NldCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYzNTkgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYzNTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDUzMjMzNDEgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYzNTkgQ29uc3RydWN0aW9uIG9mIFNoYXJlZCBBc3NldH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQzNTUyIHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTM4NTYzNTkgDQouICBJbiB0aGUgZXZlbnQgb2YgY29uc3RydWN0aW9uIG9mIGFuIEFkZGl0aW9uYWwgUGhhc2Ugb3Igb3RoZXIgU2hhcmVkIEFzc2V0cyB3aGVyZSBjb25zdHJ1Y3Rpb24gY29zdHMgYXJlIHNoYXJlZCBieSBDby1Pd25lcnMgb2YgdGhlIFNoYXJlZCBBc3NldHMsIGFsbCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTMyMzM0MSBhcHBsaWNhYmxlIHNhbGVzIGFuZCB1c2UgdGF4ZXMgYW5kIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEzODU2MzU5IHRyYW5zZmVyIHRheGVzIHNoYWxsIGJlIGJvcm5lIGJ5IHRoZSBDby1Pd25lcnMgb2Ygc3VjaCBTaGFyZWQgQXNzZXRzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciByZXNwZWN0aXZlIE93bmVyc2hpcCBJbnRlcmVzdHMgaW4gdGhlIFNoYXJlZCBBc3NldHMue1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1MX0gICB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBYSUlJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzUyfUVWRU5UUyBPRiBERUZBVUxUOyBSRU1FRElFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1Mn0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzUzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBEZWZhdWx0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1M30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoZSBvY2N1cnJlbmNlIGFuZCBjb250aW51YXRpb24gb2YgYW55IG9mIHRoZSBmb2xsb3dpbmcgZXZlbnRzIHNoYWxsIGNvbnN0aXR1dGUgYW4gZXZlbnQgb2YgZGVmYXVsdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzEwOTYyIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjcxMDk2MiAgb3IgT3BlcmF0b3IsIGFzIGFwcGxpY2FibGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgKGFuIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBFdmVudCBvZiBEZWZhdWx0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KTp9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjEuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNTkxODMyOSBQYXltZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuDQogIEEgQ28tT3duZXIgZmFpbHMgdG8gcGF5IHdoZW4gZHVlIGFueSBhbW91bnRzIHJlcXVpcmVkIHRvIGJ5IHBhaWQgYnkgc3VjaCBDby1Pd25lciB1bmRlciB0aGlzIEFncmVlbWVudCwgYW5kIHN1Y2ggZmFpbHVyZSB0byBwYXkgaXMgbm90IGN1cmVkIHdpdGhpbiB0ZW4gKDEwKSBkYXlzIGZvbGxvd2luZyB3cml0dGVuIG5vdGljZSBmcm9tIGFueSBvdGhlciBDby1Pd25lciBvciB0aGUgT3BlcmF0b3Igc3BlY2lmeWluZyB0aGUgYW1vdW50IHRvIGINCmUgcGFpZCwgcHJvdmlkZWQgdGhhdCBzdWNoIHBlcmlvZCBzaGFsbCBiZSBleHRlbmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjEzOTYxOSB3aXRoIHJlc3BlY3QgdG8gYSBkaXNwdXRlZCBwb3J0aW9uIG9mIHN1Y2ggYW1vdW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpmb3Igc28gbG9uZyBhcyB0aGUgYWxsZWdlZGx5IGRlZmF1bHRpbmcgQ28tT3duZXIgaXMgZGlzcHV0aW5nIGluIGdvb2QgZmFpdGggc3VjaCBhbW91bnQgcHVyc3VhbnQgdG8gdGhlIHByb2NlZHVyZXMgc2V0IGZvcnRoIGluIFNlY3Rpb25cfjYuMTIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMS4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IEJhbmtydXB0Y3l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIElmIGEgQ28tT3duZXIgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NDIzNSBvciB0aGUgT3BlcmF0b3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmZpbGVzIGEgcGV0aXRpb24gb3Igb3RoZXJ3aXNlIGNvbW1lbmNlcywgb3IgYXV0aG9yaXplcyBvciBhY3F1aWVzY2VzIGluIHRoZSBjb21tZW5jZW1lbnQgb2YsIGEgcHJvY2VlZGluZyBvciBjYXVzZSB1bmRlciBhbnkgYmFua3J1cHRjeSwgaW5zb2x2ZW5jeSwgcmVjZWl2ZXJzaGlwIG9yIHNpbWlsYXIgbGF3IGZvciB0aGUgcHJvdGVjdGlvbiBvZiBjcmVkaXRvcnMgb3Igc3VmZmVycyB0aGUgZmkNCmxpbmcgb2YgYW4gaW52b2x1bnRhcnkgYmFua3J1cHRjeSBwZXRpdGlvbiBvciBwcm9jZWVkaW5nIGNvbW1lbmNlZCBhZ2FpbnN0IGl0LCB3aGljaCBpbiB0aGUgY2FzZSBvZiBhbiBpbnZvbHVudGFyeSBwZXRpdGlvbiBvciBwcm9jZWVkaW5nIHJlbWFpbnMgdW5kaXNtaXNzZWQgYW5kIHVuc3RheWVkIGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjEzOTYxOSBzaXh0eSAoNjApfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBkYXlzO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjEuM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBPdGhlciBEZWZhdWx0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQouICBBIENvLU93bmVyIGZhaWxzIHRvIGN1cmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIxMzk2MTkgYW55IGJyZWFjaCBvciBkZWZhdWx0IGluIHRoZSBwZXJmb3JtYW5jZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjEzOTYxOSANCm1hdGVyaWFsIGNvdmVuYW50IG9yIG9ibGlnYXRpb24gaGVyZXVuZGVyIGluIGFueSBtYXRlcmlhbCByZXNwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIHdpdGhpbiB0aGlydHkgKDMwKSBkYXlzIGZvbGxvd2luZyB3cml0dGVuIG5vdGljZSBmcm9tIGFueSBvdGhlciBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjEzOTYxOSBvciBPcGVyYXRvciB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc3BlY2lmeWluZyB0aGUgbmF0dXJlIG9mIHRoZSBmYWlsdXJlIHRvIHBlcmZvcm0sIHByb3ZpZGVkIHRoYXQgaWYgdGhlIGRlZmF1bHQgDQppcyBub3QgcmVhc29uYWJseSBjYXBhYmxlIG9mIGJlaW5nIGN1cmVkIHdpdGhpbiB0aGlydHkgKDMwKSBkYXlzLCB0aGVuIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIG1heSBiZSBhbGxvd2VkIHN1Y2ggbG9uZ2VyIHBlcmlvZCBhcyB0aGUgQ28tT3duZXJzIG11dHVhbGx5IGFncmVlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSAobm90IHRvIGV4Y2VlZCBuaW5ldHkgKDkwKSBkYXlzKSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYXMgbWF5IGJlIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzIHRvIGN1cmUgc3VjaCBmYWlsdXJlIHNvIGxvbmcgYXMgdGhlIGRlZmF1bHRpbmcgQ28tT3duZXIgaXMgcHVyc3VpbmcgYSBjdXJlIHdpdGggcmVhc29uYWJsZSBkaWxpZ2VuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjEzOTYxOSANCjsgcHJvdmlkZWQsIGZ1cnRoZXIsIHRoYXQgaWYgYW55IGNvdmVuYW50IG9yIG9ibGlnYXRpb24gcmVsYXRlcyB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgYW55IGNvdmVuYW50IG9yIG9ibGlnYXRpb24gdW5kZXIgYSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnQgb3IgTWF0ZXJpYWwNCiBQcm9qZWN0IEFncmVlbWVudCwgc3VjaCBkZWZhdWx0IG11c3QgYmUgY3VyZWQgbm8gbGF0ZXIgdGhhbiBbdGVuICgxMCldIGRheXMgYmVmb3JlIHRoZSBleHBpcmF0aW9uIG9mIGFueSBjdXJlIHBlcmlvZCBpbiBzdWNoIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudCBvciBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMS40XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IERlZmF1bHQgYnkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLiAgT3BlcmF0b3IgZmFpbHMgdG8gcGVyZm9ybSBhbnkgb2YgaXRzIG1hdGVyaWFsIA0Kb3BlcmF0aW9uLCBtYWludGVuYW5jZSwgcmVwYWlyIG9yIG90aGVyIG9ibGlnYXRpb25zIGluIHRoaXMgQWdyZWVtZW50LCB3aXRoIHJlc3BlY3QgdG8gYWxsIG9yIGEgcG9ydGlvbiBvZiB0aGUgU2hhcmVkIEFzc2V0cywgYW5kIHN1Y2ggZmFpbHVyZSBpcyBub3QgY3VyZWQgd2l0aGluIHRlbiAoMTApIGRheXMgZm9sbG93aW5nIHdyaXR0ZW4gbm90aWNlIGJ5IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIA0KQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDsgcHJvdmlkZWQgdGhhdCwgdGhhdCBpZiBzdWNoIGZhaWx1cmUgYnkgT3BlcmF0b3IgY3JlYXRlcyBhbiBFbWVyZ2VuY3kgQ29uZGl0aW9uIG9yIG1hdGVyaWFsbHkgaW50ZXJmZXJlcyB3aXRoIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxycXVvdGUgcyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGluIFNoYXJlZCBGYWNpbGl0aWVzIGluIHdoaWNoIGl0IGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QsIG9yIG9wZXJhdGlvbiBvZiBpdHMgRmFjaWxpdHksIG9ubHkgc3VjaCBhZHZhbmNlIHdyaXR0ZW4gbm90aWNlLCBpZiBhbnksIGFzIG1heSBiZSByZWFzb25hYg0KbHkgcHJhY3RpY2FibGUgdW5kZXIgdGhlIGNpcmN1bXN0YW5jZXMgc2hhbGwgYmUgcmVxdWlyZWQsIGJ1dCBpZiBzdWNoIGFkdmFuY2Ugbm90aWNlIGlzIG5vdCBwcm92aWRlZCwgd3JpdHRlbiBub3RpY2UgdGhlcmVvZiBzaGFsbCBiZSBwcm92aWRlZCBwcm9tcHRseSB0aGVyZWFmdGVyIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyB0aGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIHRvIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA3Mzg5IDsgcHJvdmlkZWQgZnVydGhlciB0aGF0IGlmIHRoZSBkZWZhdWx0IGlzIG5vdCByZWFzb25hYmx5IGNhcGFibGUgbw0KZiBiZWluZyBjdXJlZCB3aXRoaW4gdGVuICgxMCkgZGF5cywgdGhlbiB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBtYXkgYmUgYWxsb3dlZCBzdWNoIGxvbmdlciBwZXJpb2QgYXMgdGhlIENvLU93bmVycyBtdXR1YWxseSBhZ3JlZSAobm90IHRvIGV4Y2VlZCBbbmluZXR5ICg5MCldIGRheXMpIGFzIG1heSBiZSByZWFzb25hYmx5IG5lY2Vzc2FyeSB1bmRlciB0aGUgY2lyY3Vtc3RhbmNlcyB0byBjdXJlIHN1Y2ggZmFpbHVyZSBzbyBsb25nIGFzIHRoDQplIGRlZmF1bHRpbmcgQ28tT3duZXIgaXMgcHVyc3VpbmcgYSBjdXJlIHdpdGggcmVhc29uYWJsZSBkaWxpZ2VuY2U7IG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4xLjVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDIwNzM4OSBBc3NpZ25tZW50OyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IA0KTWVyZ2VyLCBDb25zb2xpZGF0aW9uIHdpdGhvdXQgQXNzdW1wdGlvbiBvZiBPYmxpZ2F0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA3Mzg5IEEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDczODkgDQphc3NpZ25zIG9yIG90aGVyd2lzZSB0cmFuc2ZlcnMgaXRzIHJpZ2h0cyB1bmRlciB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNzE1MiAgZXhjZXB0IGFzIGV4cHJlc3NseSBwZXJtaXR0ZWQgaGVyZXVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA3Mzg5ICwgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmNvbnNvbGlkYXRlcyBvciBhbWFsZ2FtYXRlcyB3aXRoLCBvciBtZXJnZXMgd2l0aCBvciBpbnRvLCBvciB0cmFuc2ZlcnMgYWxsIG9yIHN1YnN0YW50aWFsbHkgYWxsIG9mIGl0cyBhc3NldHMgdG8sIGFub3RoZXIgZW50aXR5IGFuZCwgYXQgdGhlIHRpbWUgb2Ygc3VjaCBjb25zb2xpZGF0aW9uLCBhbWFsZ2FtYXRpb24sIG1lcmdlciBvciB0cmFuc2ZlciwgdGhlIHJlc3VsdGluZywgc3Vydml2aW5nIG9yIHRyYW5zZmVyZWUgZW50aXR5IGZhaWxzDQogdG8gYXNzdW1lIGFsbCB0aGUgb2JsaWdhdGlvbnMgb2Ygc3VjaCBDby1Pd25lciB1bmRlciB0aGlzIEFncmVlbWVudCB0byB3aGljaCBpdCBvciBpdHMgcHJlZGVjZXNzb3Igd2FzIGEgcGFydHkgYnkgb3BlcmF0aW9uIG9mIGxhdyBvciBwdXJzdWFudCB0byBhbiBhZ3JlZW1lbnQgcmVhc29uYWJseSBzYXRpc2ZhY3RvcnkgdG8gdGhlIG90aGVyIENvLU93bmVycy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUmVtZWRpZXMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgVXBvbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTR9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IElmIGFueSBkZWZhdWx0IGlzIG5vdCBjdXJlZCB3aXRoaW4gdGhlIGFwcGxpY2FibGUgY3VyZSBwZXJpb2QgKGlmIGFueSkgcHJvdmlkZWQgaW4gU2VjdGlvblx+MTMuMSBieSBtYWtpbmcgb3IgdGVuZGVyaW5nIHRoZSByZXF1aXJlZCBwYXltZW50IG9yIHBlcmZvcm1hbmNlLCBlYWNoIG5vbi1kZWZhdWx0aW5nIENvLU93bmVyIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IChpKVx+DQp0byBjdXJlIHRoZSBkZWZhdWx0IGF0IHRoZSBleHBlbnNlIG9mIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyLCBpbiB3aGljaCBldmVudCB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBzaGFsbCByZWltYnVyc2UgdGhlIGN1cmluZyBDby1Pd25lciBhbGwgb2YgdGhlIGN1cmluZyBDby1Pd25lclxycXVvdGUgDQpzIGNvc3RzIG9mIGN1cmUgd2l0aGluIHRoaXJ0eSAoMzApIGRheXMgb2YgaW52b2ljZSwgb3IgY3VyaW5nIENvLU93bmVyIG1heSBvZmZzZXQgc3VjaCBjb3N0cyBhZ2FpbnN0IGFueSBzdW1zIHRoZW4gb3IgdGhlcmVhZnRlciBvd2VkIGJ5IHRoZSBjdXJpbmcgQ28tT3duZXIgdG8gdGhlIGRlZmF1bHRpbmcgQ28tT3duZXI7IChpaSlcfnRvIGVuZm9yY2Ugc3BlY2lmaWMgcGVyZm9ybWFuY2U7IG9yIChpaWkpXH4NCnRvIGVuZm9yY2UgYW55IG90aGVyIHJlbWVkeSBhdmFpbGFibGUgdG8gdGhlIG5vbi1kZWZhdWx0aW5nIENvLU93bmVyIGF0IGxhdyBvciBpbiBlcXVpdHksIHN1YmplY3QgdG8gU2VjdGlvblx+MTMuMi41IGFuZCBBcnRpY2xlIFhWSS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4yLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgSWYgT3BlcmF0b3IgZGVmYXVsdHMgcHVyc3VhbnQgdG8gU2VjdGlvblx+MTMuMS40LCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2OTcyMTg3IG55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBtYXkgYXQgaXRzIG9wdGlvbiBhY2Nlc3MgdGhlIFNoYXJlZCBBc3NldHMgYW5kIHBlcmZvcm0gKG9yIGNhdXNlIHRvIGJlIHBlcmZvcm1lZCkgb3BlcmF0aW9uLCBtYWludGVuYW5jZSwgcmVwYWlyIG9yIG90aGVyIGR1dGllcyBvbiBiZWhhbGYgb2YgT3BlcmF0b3IsIGFuZCBPcGVyYXRvciBzaGFsbCByZWltYnVyc2Ugc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXHJxdW90ZSBzIHJlYXNvbmFibGUgY29zdHMgYW5kIGV4cGVuc2VzIGluY3VycmVkIGJ5IChvciBvbiBiZWhhbGYgb2YpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBzdWNoIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgcHJvbXB0bHkgdXBvbiBPcGVyYXRvclxycXVvdGUgDQpzIHJlY2VpcHQgb2YgYW4gaW52b2ljZSBhY2NvbXBhbmllZCBieSBkb2N1bWVudGF0aW9uIGV2aWRlbmNpbmcgc3VjaCBjb3N0cyBhbmQgZXhwZW5zZXMgYW5kIHRoZWlyIHJlYXNvbmFibGVuZXNzOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4yLjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgSW4gYWRkaXRpb24gdG8gdGhlIHJlbWVkaWVzIHByb3ZpZGVkIGluIFNlY3Rpb25cfg0KMTMuMi4xIGFuZCAxMy4yLjIsIGlmIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBPcGVyYXRvciwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE3MTUyIHRoZSBvdGhlciBDby1Pd25lcnMgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE0NzA0NzcgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjA3Mzg5XGNoYXJyc2lkOTQ0Njc1IE5vbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkOTQ0Njc1IC19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjA3Mzg5XGNoYXJyc2lkOTQ0Njc1IERlZmF1bHRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDk0NDY3NSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMDczODlcY2hhcnJzaWQ5NDQ2NzUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNzE1MiBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIGhhdmUgdGhlIHJpZ2h0LCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSBieSB1bmFuaW1vdXMgY29uc2VudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5NzIxODcgIG9mIHRoZSBOb24tRGVmYXVsdGluZyBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA3Mzg5IA0KdG8gcmVtb3ZlIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIGZyb20gaXRzIHBvc2l0aW9uIGFzIE9wZXJhdG9yIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSBhcHBvaW50IG9uZSBvZiB0aGVtc2VsdmVzIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIE9wZXJhDQp0b3IgZm9yIHB1cnBvc2VzIG9mIHRoaXMgQWdyZWVtZW50LiAgVGhlIENvLU93bmVycyBzaGFsbCBjb29wZXJhdGUgd2l0aCBlYWNoIG90aGVyIGluIGVmZmVjdGluZyBzdWNoIHRyYW5zaXRpb24gYW5kIHByb3ZpZGUgYWxsIG5vdGljZXMgdG8gdGhpcmQgcGFydGllcyBhbmQgdGFrZSBhbGwgb3RoZXIgYWN0aW9ucyBkZWVtZWQgbmVjZXNzYXJ5IG9yIGFkdmlzYWJsZSBieSBhbnkgb2YgdGhlbSB3aXRoIHJlc3BlY3QgdG8gc3VjaCBjaGFuZ2UgaW4NCiBzdGF0dXMuICBFZmZlY3RpdmUgYXMgb2YgdGhlIGRhdGUgdGhlIG5vbi1kZWZhdWx0aW5nIENvLU93bmVyIGJlY29tZXMgT3BlcmF0b3IsIGl0IHNoYWxsIGFzc3VtZSByZXNwb25zaWJpbGl0eSBmb3IgYWxsIG9ibGlnYXRpb25zIG9mIE9wZXJhdG9yIHRoZXJlYWZ0ZXIgYWNjcnVpbmcgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgYW5kIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU4OTkzIGhhdmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbGwgb2JsaWdhdGlvbnMgb2YgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGVyZWFmdGVyIGFjY3J1aW5nIHVuZGVyIHRoaXMgQWdyZWVtZW50LiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjIuNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgY29udGFpbmVkIGluIHRoaXMgQWdyZWVtZW50IHRvIHRoZSBjb250cmFyeSwgaWYgYSBDby1Pd25lcg0KXHJxdW90ZSBzIGRlZmF1bHQgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgY3JlYXRlcyBhIG1hdGVyaWFsIGludGVyZmVyZW5jZSB3aXRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNzE1MiBhIE5vbi1EZWZhdWx0aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXJccnF1b3RlIHMgb3BlcmF0aW9ucyBvciBtYWludGVuYW5jZSBvZiBzdWNoIE5vDQpuLURlZmF1bHRpbmcgQ28tT3duZXJccnF1b3RlIHMgRmFjaWxpdGllcywgdGhlIE5vbi1EZWZhdWx0aW5nIENvLU93bmVyKHMpIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGFueSBleHBlZGl0ZWQgcmVtZWRpZXMgdGhhdCBtYXkgYmUgYXZhaWxhYmxlIGhlcmV1bmRlciBhdCBsYXcgb3IgaW4gZXF1aXR5LCBpbmNsdWRpbmcgdGhlIHJpZ2h0IHRvIGN1cmUgc3VjaCBkZWZhdWx0IGFzIHByb3ZpZGVkIGluIFNlY3Rpb25cfjEzLjIuMSwgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTcxNTIgdGhlIHJpZ2h0IHRvIHNlZWsgc3BlY2lmaWMgcGVyZm9ybWFuY2Ugb2YgdGhpcyBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQphbmQgdGhlIHJpZ2h0IHRvIHJlaW1idXJzZW1lbnQgb2YgYWxsIHJlYXNvbmFibGUgY29zdHMgYWN0dWFsbHkgaW5jdXJyZWQgYnkgc3VjaCBOb24tRGVmYXVsdGluZyBDby1Pd25lciBpbiBlZmZlY3Rpbmcgc3VjaCBjdXJlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjIuNVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCkluIG5vIGV2ZW50IHNoYWxsIGFueSBDby1Pd25lciBiZSBlbnRpdGxlZCB0byB0ZXJtaW5hdGUgdGhpcyBBZ3JlZW1lbnQgb24gYWNjb3VudCBvZiBkZWZhdWx0IGJ5IGFub3RoZXIgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NzA0Nzcgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE0NzA0NzcgT3BlcmF0b3IgaGVyZXVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDcwNDc3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IE5vbmUgb2YgdGhlIGJhbmtydXB0Y3kgb3IgaW5zb2x2ZW5jeSBvZiBhIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDcwNDc3IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNzE1MiANCmFuIEV2ZW50IG9mIERlZmF1bHQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBieSBhIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDcwNDc3IG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyBPcGVyYXRvciB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgZ3JvdW5kcyBmb3IgdGVybWluYXRpbmcgdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4yLjZcdGFifX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIFRoZSBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgDQphbmQgdGhlIE9wZXJhdG9yIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIGFncmVlIHRoYXQgZGFtYWdlcyBtYXkgYmUgYW4gaW5hZGVxdWF0ZSByZW1lZHkgZm9yIGNlcnRhaW4gRXZlbnRzIG9mIERlZmF1bHQsIGFuZCB0aGF0IGVhY2ggQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgYW5kIHRoZSBPcGVyYXRvciB9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIHNoYWxsIGJlIGVudGl0bGVkIHRvIHNlZWsgaW5qdW5jdGl2ZSBhbmQgb3RoZXIgZXF1aXRhYmxlIHJlbGllZiwgaW5jbHVkaW5nIHNwZWNpZmljIHBlcmZvcm1hbmNlLCBhZ2FpbnN0IGFueSBvdGhlciBDby1Pd25lciBvciB0aGUgT3BlcmF0b3IgdG8gcHJldmVudCBvciByZW1lZHkgc3VjaCBFdmVudCBvZiBEZWZhdWx0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIFhJVlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1NX1MRU5ERVIgUFJPVEVDVElPTn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1NX0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzU2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBSaWdodCB0byBFbmN1bWJlciBhbmQgQXNzaWdufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzU2fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2Njk4NTUgQXMgcHJvdmlkZWQgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBTZWN0aW9uXH4xNy4zLCBlYWNoIENvLU93bmVyIG1heSwgdXBvbiBub3RpY2UgdG8gdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk2Mjc5MyBzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBidXQgd2l0aG91dCB0aGUgb3RoZXIgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk2Mjc5MyBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogY29uc2VudCBvciBhcHByb3ZhbCwgbW9ydGdhZ2UsIGNvbGxhdGVyYWxseSBhc3NpZ24sIG9yIG90aGVyd2lzZSBlbmN1bWJlciBhbmQgZ3JhbnQgYSBzZWN1cml0eSBpbnRlcmVzdCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NDIzNSBpdHMgcmlnaHRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5NzIxODcgDQp0byBhbnkgcGFydHkgcHJvdmlkaW5nIGRlYnQgb3IgZXF1aXR5IGZpbmFuY2luZyBvciByZWZpbmFuY2luZyAoY29sbGVjdGl2ZWx5LCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDY5NzIxODdcY2hhcnJzaWQxMjE5MTczNiBMZW5kZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjk3MjE4NyBcJzk0KSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzOTc0MjM1IHVuZGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NDIzNSAgaW4gYW5kIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIFNoYXJlZCBSZWFsIFANCnJvcGVydHksIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBvciB0aGUgZWxlY3RyaWNhbCBhbmQvb3IgdHJhbnNtaXNzaW9uIGNhcGFjaXR5IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NjI3OTMgIGluIGEgU2hhcmVkIEFzc2V0cyBHcm91cCBpbiB3aGljaCBpdCBoYXMgYW4gT3duZXJzaGlwIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICAoY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNlY3VyaXR5IEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCksIHdoaWNoIHNhaWQgc2VjdXJpdHkgaW50ZXJlc3RzIGluIGFsbCBvciBhIHBhcnQgb2YgdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM5NjI3OTMgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEFzc2V0cyBhcmUgY29sbGVjdGl2ZWx5IHJlZmVycmVkIHRvIGhlcmVpbiBhcyBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTGVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDQ3NDk3ODkgc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgXHJxdW90ZSBzIExpZW5zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXJzXHJxdW90ZSAgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIENvLU93bmVyIGFncmVlcyB0byBjb25zZW50IGluIHdyaXRpbmcgdG8gZmluYW5jaW5nIGRvY3VtZW50cyBhcyBtYXkgcmVhc29uYWJseSBiZSByZXF1aXJlZCBieSBMZW5kZXJzLiAgQXMgYSBwcmVjb25kaXRpb24gdG8gZXhlcmNpc2luZyBhbnkgcmVtZWRpZXMgcmVsYXRlZCB0byBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgRXZlbnQgb2YgRGVmYXVsdH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYnkgYSBDby1Pd25lciB1bmRlciB0aGlzIEFncmVlbWVudCwgdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2OTYxNzIgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIGdpdmUgd3JpdHRlbiBub3RpY2Ugb2YgZGVmYXVsdCB0byBlYWNoIExlbmRlciB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IHRoYXQgaGFzIGdpdmVuIHdyaXR0ZW4gbm90aWNlIG9mIGl0cyBMZW5kZXJccnF1b3RlIHMgTGllbiBhbmQgbm90aWNlIGFkZHJlc3MgdG8gdGhlIENvLU93bmVycyBhbmQgdGhlIE9wZXJhdG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYXQgdGhlIHNhbWUNCiB0aW1lIGl0IGRlbGl2ZXJzIG5vdGljZSBvZiBkZWZhdWx0IHRvIHRoZSBDby1Pd25lciwgc3BlY2lmeWluZyBpbiBkZXRhaWwgdGhlIGFsbGVnZWQgZXZlbnQgb2YgZGVmYXVsdCBhbmQgdGhlIHJlcXVpcmVkIGN1cmUuICBFYWNoIExlbmRlciBzaGFsbCBoYXZlIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzcwMjU1IA0KLCBidXQgbm90IHRoZSBvYmxpZ2F0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0ICB0byBjdXJlIGFueSBFdmVudCBvZiBEZWZhdWx0IGJ5IHRoZSBDby1Pd25lciB0byB3aGljaCBpdCBpcyBhIExlbmRlciBhbmQgc2hhbGwgaGF2ZSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzYW1lIGFtb3VudCBvZiB0aW1lIHRvIGN1cmUgdGhlIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NzAyNTUgRXZlbnQgb2YgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0IHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCANCnBsdXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgdGhpcnR5ICgzMCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCAgZGF5cyBpbiB0aGUgY2FzZSBvZiBhIG1vbmV0YXJ5IEV2ZW50IG9mIERlZmF1bHQgYW5kIHBsdXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgc2l4dHkgKDYwKX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgIGRheXMgaW4gdGhlIGNhc2Ugb2YgYWxsIG90aGVyIEV2ZW50cyBvZiBEZWZhdWx0IGJ5IHN1Y2ggQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyA7IHByb3ZpZGVkIHRoYXQgaWYgcG9zc2UNCnNzaW9uIG9mIHRoZSBwcm9wZXJ0eSBpcyBuZWNlc3NhcnkgaW4gb3JkZXIgdG8gY3VyZSBhbiBFdmVudCBvZiBEZWZhdWx0LCB0aGUgY3VyZSBwZXJpb2Qgc2hhbGwgYmUgZXh0ZW5kIGJ5IHVwIHRvIGFuIGFkZGl0aW9uYWwgb25lIGh1bmRyZWQgZWlnaHR5ICgxODApIGRheXMgaW4gb3JkZXIgdG8gZW5hYmxlIHRoZSBMZW5kZXIgdG8gY29uZHVjdCBmb3JlY2xvc3VyZSBwcm9jZWVkaW5nc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDkzODQ1NjEgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgICBUaGUgTGVuZGVyIHNoYWxsIGhhdmUgdGhlIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NzAyNTUgLCBidXQgbm90IHRoZSBvYmxpZ2F0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogdG8gc3Vic3RpdHV0ZSBpdHNlbGYgZm9yIHRoZSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCB0byB3aGljaCBpdCBpcyB0aGUgTGVuZGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYW5kIHBlcmZvcm0gdGhlIGR1dGllcyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCBzdWNofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciBoZXJldW5kZXIgZm9yIHB1cnBvc2VzIG9mIGN1cmluZyBzdWNoIGV2ZW50IG9mIGRlZmF1bHQuICBFYWNoIENvLU93bmVyIGV4cHJlc3NseSBjb25zZW50cyB0byBzdWNoIHN1YnN0aXR1dGlvbiwgYWdyZWVzIHRvIGFjY2UNCnB0IHN1Y2ggcGVyZm9ybWFuY2UgYW5kIGF1dGhvcml6ZXMgdGhlIExlbmRlciAob3IgaXRzIGVtcGxveWVlcywgYWdlbnRzLCByZXByZXNlbnRhdGl2ZXMgb3IgY29udHJhY3RvcnMpIHRvIGVudGVyIHVwb24gdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgdG8gY29tcGxldGUgc3VjaCBwZXJmb3JtYW5jZSB3aXRoIGFsbCBvZiB0aGUgcmlnaHRzIGFuZCBwcml2aWxlZ2VzIG9mIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyIGhlcmV1bmRlci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IExlbmRlciBPYmxpZ2F0aW9uc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1OH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEFueSBMZW5kZXIgdGhhdCBkb2VzIG5vdCBkaXJlY3RseSBob2xkIGFuIGludGVyZXN0IHVuZGVyIHRoaXMgQWdyZWVtZW50LCBvciB3aG9zZSBpbnRlcmVzdCBpcyBoZWxkIHNvbGVseSBmb3Igc2VjdXJpdHkgcHVycG9zZXMsIHNoYWxsIGhhdmUgbm8gb2JsaWdhdGlvbiBvciBsaWFiaWxpdHkgdG8gYW55IG90aGVyIENvLU93bmVyIGZvciBwZXJmb3JtYW5jZSBvZiBhIENvLU93bmVyXHJxdW90ZSBzIG9ibGkNCmdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgcHJpb3IgdG8gdGhlIHRpbWUgdGhlIExlbmRlciBkaXJlY3RseSBob2xkcyBhbiBpbnRlcmVzdCBpbiB0aGlzIEFncmVlbWVudCwgb3Igc3VjY2VlZHMgdG8gdGl0bGUgdG8gYSBDby1Pd25lclxycXVvdGUgDQpzIGludGVyZXN0LiAgQSBMZW5kZXIgc2hhbGwgYmUgbGlhYmxlIHRvIHBlcmZvcm0gb2JsaWdhdGlvbnMgb2YgYSBDby1Pd25lciB0byBhbm90aGVyIENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50IG9ubHkgZm9yIGFuZCBkdXJpbmcgdGhlIHBlcmlvZCBpdCBkaXJlY3RseSBob2xkcyBzdWNoIGludGVyZXN0LiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgSW59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBldmVudCB0aGF0IGEgTGVuZGVyIGVsZWN0cyB0byAoaSlcfnBlcmZvcm0gYSBDby1Pd25lclxycXVvdGUgcyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCwgKGlpKVx+Y29udGludWUgb3BlcmF0aW9uIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgKGlpaSlcfmFjcXVpcmUgYW55IHBvcnRpb24gb2YgYSBDby1Pd25lclxycXVvdGUgcyByaWdoDQp0LCB0aXRsZSBvciBpbnRlcmVzdCBpbiBhbGwgb3IgYW55IG9mIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2OTYxNzIgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEFzc2V0cyBvciAoaXYpXH5lbnRlciBpbnRvIGEgbmV3IGpvaW50IG93bmVyc2hpcCBhZ3JlZW1lbnQgYXMgcHJvdmlkZWQgaW4gU2VjdGlvblx+DQoxNC42LCB0aGVuIHN1Y2ggTGVuZGVyIHNoYWxsIG5vdCBoYXZlIGFueSBwZXJzb25hbCBsaWFiaWxpdHkgdG8gYSBDby1Pd25lciBpbiBjb25uZWN0aW9uIHRoZXJld2l0aCwgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNvbGUgcmVjb3Vyc2UgaW4NCiB0aGUgZXZlbnQgb2YgZGVmYXVsdCBieSBzdWNoIExlbmRlciBzaGFsbCBiZSB0byBleGVjdXRlIGFnYWluc3Qgc3VjaCBMZW5kZXJccnF1b3RlIHMgaW50ZXJlc3QgaW4gdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY5NjE3MiBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgIEFzc2V0cy4gIE1vcmVvdmVyLCBhbnkgTGVuZGVyIHdobyBhY3F1aXJlcyB0aGUgUw0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2OTYxNzIgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogQXNzZXRzIHB1cnN1YW50IHRvIGZvcmVjbG9zdXJlIG9yIGFuIGFzc2lnbm1lbnQgaW4gbGlldSBvZiBmb3JlY2xvc3VyZSBzaGFsbCBub3QgYmUgbGlhYmxlIHRvIHBlcmZvcm0gYW55IG9ibGlnYXRpb25zIHVuZGVyIHRoZSBBZ3JlZW1lbnQgdG8gdGhlIGV4dGVudCB0aGUgc2FtZSBhcmUgaW5jdXJyZWQgb3IgYWNjcnVlIGFmdGVyIHN1Y2ggTGVuZGVyIG5vIGxvbmdlciBoYXMgb3duZXJzaGlwIG9mIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMTY5NjE3MiBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQXNzZXRzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC40XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTGVuZGVyXHJxdW90ZSBzIFJpZ2h0IHRvIFBvc3Nlc3Npb24sIFJpZ2h0IHRvIEFjcXVpcmUgYW5kIFJpZ2h0IHRvIEFzc2lnbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1OX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEEgTGVuZGVyIHNoYWxsIGhhdmUgdGhlIGFic29sdXRlIHJpZ2h0OiAoaSlcfnRvIGFzc2lnbiBpdHMgTGVuZGVyXHJxdW90ZSBzIExpZW47IChpaSlcfnRvIGVuZm9yY2UgaXRzIExlbmRlclxycXVvdGUgcyBMaWVuIGFuZCBhY3F1aXJlIHRpdGxlIHRvIGFsbCBvciBhbnkgcG9ydGlvbiBvZiB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjk2MTcyIGVjdXJpdHl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEFzc2V0cyBieSBhbnkgbGF3ZnVsIG1lYW5zOyAoaWlpKVx+dG8gdGFrZSBwb3NzZXNzaW9uIG9mIGFuZCBvcGVyYXRlIGFsbCBvciBhbnkgcG9ydGlvbiBvZiB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjk2MTcyIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIEFzc2V0cyBhbmQgdG8gcGVyZm9ybSBhbGwgb2JsaWdhdGlvbnMgdG8gYmUgcGVyZm9ybWVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc3MTA2MSB0byB3aGljaCBpdCBpcyB0aGUgTGVuZGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgb3IgdG8gY2F1c2UgYSByZWNlaXZlciB0byBiZSBhcHBvaW50ZWQgdG8gZG8gc287IGFuZCAoaXYpXH50byBhY3F1aXJlIGFsbCBvciBhbnkgcG9ydGlvbiBvZiB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjk2MTcyIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIEFzc2V0cyBieSBmb3JlY2xvc3VyZSBvciBieSBhbiBhc3NpZ25tZW50IGluIGxpZXUgb2YgZm9yZWNsb3N1cmUgYW5kIHRoZXJlYWZ0ZXIgd2l0aG91dCBDby1Pd25lcnNccnF1b3RlICBjb25zZW50IHRvIGFzc2lnbiBvciB0cmFuc2ZlciBhbGwgb3IgYW55IHBvcnRpb24gb2YgdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBBc3NldHMgdG8gYSB0aGlyZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBwYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgTm8gQ28tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc3MTA2MSBPd25lcnNccnF1b3RlICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KY29uc2VudCBzaGFsbCBiZSByZXF1aXJlZCBmb3IgYW55IG9mIHRoZSBmb3JlZ29pbmcsIGFuZCB1cG9uIGFjcXVpc2l0aW9uIG9mIHRoZSBpbnRlcmVzdHMgb2YgYWxsIG9yIGFueSBwb3J0aW9uIG9mIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogQXNzZXRzIGJ5IGEgTGVuZGVyIG9yIGFueSBvdGhlciB0aGlyZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBwYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHdobyBhY3F1aXJlcyB0aGUgc2FtZSBmcm9tIG9yIG9uIGJlaGFsZiBvZiB0aGUgTGVuZGVyLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCByZWNvZ25pemUgdGhlIExlbmRlciBvciBzdWNoIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTA5ODkwIHBhcnR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICAoYXMgdGhlIGNhc2UgbWF5IGJlKSBhcyB0aGUgb3RoZXIgQ28tT3duZXJccnF1b3RlIHMgcHJvcGVyIHN1Y2Nlc3NvciwgYW5kIHRoaXMgQWdyZWVtZW50IHNoYWxsIHJlbWFpbiBpbiBmdWxsIGZvcmNlIGFuZCBlZmZlY3QufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzYwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBPcHBvcnR1bml0eSB0byBDdXJlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzYwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRm9sbG93aW5nIGFjcXVpc2l0aW9uIG9mIGFsbCBvciBhIHBvcnRpb24gb2YgdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQXNzZXRzIGJ5IHRoZSBMZW5kZXIgYXMgYSByZXN1bHQgb2YgZWl0aGVyIGZvcmVjbG9zdXJlDQogb3IgYWNjZXB0YW5jZSBvZiBhbiBhc3NpZ25tZW50IGluIGxpZXUgb2YgZm9yZWNsb3N1cmUsIG9yIGJ5IGEgcHVyY2hhc2VyIGF0IGEgZm9yZWNsb3N1cmUgc2FsZSwgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgY29udGludWUgaW4gZnVsbCBmb3JjZSBhbmQgZWZmZWN0IGFuZCB0aGUgTGVuZGVyIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTA5ODkwIHBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBhY3F1aXJpbmcgdGl0bGUgdG8gdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQXNzZXRzIHNoYWxsLCBhcyBwcm9tcHRseSBhcyByZWFzb25hYmx5IHBvc3NpYmxlDQosIGNvbW1lbmNlIHRoZSBjdXJlIG9mIGFsbCBkZWZhdWx0cyB1bmRlciB0aGlzIEFncmVlbWVudCBhbmQgdGhlcmVhZnRlciBkaWxpZ2VudGx5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgcHVyc3VlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc3VjaCBjdXJlIHRvIGNvbXBsZXRpb247IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IHRoZSBMZW5kZXIgb3IgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBwYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFjcXVpcmluZyB0aXRsZSB0byB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTA5ODkwIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIEFzc2V0cyBzaGFsbCBub3QgYmUgcmVxdWlyZWQgdG8gY3VyZSB0aG9zZSBkZWZhdWx0cyB3aGljaCBhcmUgbm90IHN1c2NlcHRpYmxlIG9mIGJlaW5nIGN1cmVkIG9yIHBlcmZvcm1lZCBieSBzdWNoIENvLU93bmVyIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTm9uLUN1cmFibGUgRGVmYXVsdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQNCikuICBOb24tQ3VyYWJsZSBEZWZhdWx0cyBzaGFsbCBiZSBkZWVtZWQgd2FpdmVkIGJ5IENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE4OTM3OTAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHVwb24gY29tcGxldGlvbiBvZiBmb3JlY2xvc3VyZSBwcm9jZWVkaW5ncyBvciBhY3F1aXNpdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExODkzNzkwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lclxycXVvdGUgcyBpbnRlcmVzdCBpbiB0aGUgU2hhcmVkIEFzc2V0cyBieSBzdWNoIENvDQotT3duZXIuICBJZiBhIExlbmRlciBpcyBwcm9oaWJpdGVkIGJ5IGFueSBwcm9jZXNzIG9yIGluanVuY3Rpb24gaXNzdWVkIGJ5IGFueSBjb3VydCBvciBieSByZWFzb24gb2YgYW55IGFjdGlvbiBvZiBhbnkgY291cnQgaGF2aW5nIGp1cmlzZGljdGlvbiBvdmVyIGFueSBiYW5rcnVwdGN5IG9yIGluc29sdmVuY3kgcHJvY2VlZGluZyBpbnZvbHZpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTg5Mzc5MFxjaGFycnNpZDExODkzNzkwIGFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDExODkzNzkwIG90aGVyIENvLU93bmVyIGZyb20gY29tbWVuY2luZyBvciBwcm9zZWN1dGluZyB0aGUgYXBwcm8NCnByaWF0ZSBqdWRpY2lhbCBvciBub24tanVkaWNpYWwgcHJvY2VlZGluZ3MsIHRoZW4gYW55IGN1cmUgcGVyaW9kIGZvciBjb21tZW5jaW5nIHN1Y2ggcHJvY2VlZGluZ3Mgc2hhbGwgYmUgZXh0ZW5kZWQgZm9yIHRoZSBwZXJpb2Qgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzdWNoIHByb2hpYml0aW9uLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTmV3IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM2MX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEluIHRoZSBldmVudCB0aGF0IHRoaXMgQWdyZWVtZW50IGlzIHJlamVjdGVkIG9yIGRpc2FmZmlybWVkIHB1cnN1YW50IHRvIGJhbmtydXB0Y3kgbGF3IG9yIGFueSBvdGhlciBsYXcgYWZmZWN0aW5nIGNyZWRpdG9yc1xycXVvdGUgDQogcmlnaHRzLCB0aGVuLCBzbyBsb25nIGFzIGEgTGVuZGVyIGhhcyBjdXJlZCBhbnkgc3VjaCBtb25ldGFyeSBldmVudCBvZiBkZWZhdWx0IGFuZCBpcyBtYWtpbmcgY29tbWVyY2lhbGx5IHJlYXNvbmFibGUgZWZmb3J0cyB0byBjdXJlIGFueSBzdWNoIG5vbi1tb25ldGFyeSBldmVudCBvZiBkZWZhdWx0IGFzIHByb3ZpZGVkIGhlcmVpbiwgdGhlIG5vbi1kZWZhdWx0aW5nIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDEwOTg5MCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwsIGltbWVkaWF0ZWx5IHVwb24gd3JpdHRlbiByZXF1ZXN0IGZyb20gc3VjaCBMZW5kZXIgcmVjZWl2ZWQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgc2l4dHkgKDYwKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogZGF5cyBhZnRlciBhbnkgc3VjaCBldmVudCwgd2l0aG91dCBkZW1hbmRpbmcgYWRkaXRpb25hbCBjb25zaWRlcmF0aW9uIHRoZXJlZm9yLCBlbnRlciBpbnRvIGEgbmV3IHNoYXJlZCBmYWNpbGl0aWVzIGFncmVlbWVudCB3aXRoIHN1Y2ggTGVuZGVyLCB3aGljaCBuZXcgc2hhcmVkIGZhY2lsaXRpZXMgYWdyZWVtZW50IHNoYWxsIChpKVx+DQpjb250YWluIHRoZSBzYW1lIGNvdmVuYW50cywgYWdyZWVtZW50cywgdGVybXMsIHByb3Zpc2lvbnMgYW5kIGxpbWl0YXRpb25zIGFzIHRoaXMgQWdyZWVtZW50IChleGNlcHQgZm9yIGFueSByZXF1aXJlbWVudHMgdGhhdCBoYXZlIGJlZW4gZnVsZmlsbGVkIGJ5IHRoZSBDby1Pd25lcnMgcHJpb3IgdG8gc3VjaCB0ZXJtaW5hdGlvbiwgZm9yZWNsb3N1cmUsIHJlamVjdGlvbiBvciBkaXNhZmZpcm1hbmNlKSwgYW5kIChpaSlcfg0KYmUgZm9yIGEgdGVybSBjb21tZW5jaW5nIG9uIHRoZSBkYXRlIG9mIHN1Y2ggdGVybWluYXRpb24sIGZvcmVjbG9zdXJlLCByZWplY3Rpb24gb3IgZGlzYWZmaXJtYW5jZSBhbmQgY29udGludWluZyBmb3IgdGhlIHJlbWFpbmluZyB0ZXJtIG9mIHRoaXMgQWdyZWVtZW50IGJlZm9yZSBnaXZpbmcgZWZmZWN0IHRvIHN1Y2ggdGVybWluYXRpb24sIGZvcmVjbG9zdXJlLCByZWplY3Rpb24gb3IgZGlzYWZmaXJtYW5jZS4gIEF0IHRoZSBvcHRpDQpvbiBvZiB0aGUgTGVuZGVyLCB0aGUgbmV3IHNoYXJlZCBmYWNpbGl0aWVzIGFncmVlbWVudCBtYXkgYmUgZXhlY3V0ZWQgYnkgYSBkZXNpZ25lZSBvZiBzdWNoIExlbmRlciwgd2l0aCB0aGUgTGVuZGVyIGFzc3VtaW5nIHRoZSBidXJkZW5zIGFuZCBvYmxpZ2F0aW9ucyBvZiB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBoZXJldW5kZXIuICBJZiBtb3JlIHRoYW4gb25lIExlbmRlciBtYWtlcyBhIHdyaXR0ZW4gcmVxdWVzdCBmb3IgYSBuZXcgc2hhcmUNCmQgZmFjaWxpdGllcyBhZ3JlZW1lbnQgcHVyc3VhbnQgaGVyZXRvLCB0aGVuIHRoZSBzYW1lIHNoYWxsIGJlIGRlbGl2ZXJlZCB0byB0aGUgTGVuZGVyIHdob3NlIGxpZW4gaXMgc2VuaW9yIGluIHByaW9yaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC43XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTGVuZGVyIENvbnNlbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjJ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBOb3R3aXRoc3RhbmRpbmcgYW55IHByb3Zpc2lvbiBvZiB0aGlzIEFncmVlbWVudCB0byB0aGUgY29udHJhcnksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIG5vdCBhY2NlcHQgYSB0ZXJtaW5hdGlvbiBvZiB0aGlzIEFncmVlbWVudCB3aXRob3V0IHRoZSBwcmlvciB3cml0dGVuIGNvbnNlbnQgb2YgZWFjaCBMZW5kZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzYzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjhcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBFc3RvcHBlbCBDZXJ0aWZpY2F0ZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCkNvLU93bmVyIHNoYWxsIGV4ZWN1dGUgZXN0b3BwZWwgY2VydGlmaWNhdGVzIGNlcnRpZnlpbmcgYXMgdG8gdHJ1dGhmdWwgbWF0dGVycywgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGF0IG5vIGRlZmF1bHQgdGhlbiBleGlzdHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIGlmIHN1Y2ggYmUgdGhlIGNhc2U7IGNvbnNlbnRzIHRvIGFzc2lnbm1lbnQ7IGFuZCBub24tZGlzdHVyYmFuY2UgYWdyZWVtZW50cyBhcyB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgYW5vdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyIG8NCnIgYW55IExlbmRlciBtYXkgcmVhc29uYWJseSByZXF1ZXN0IGZyb20gdGltZSB0byB0aW1lLiAgVGhlIENvLU93bmVycyBzaGFsbCBjb29wZXJhdGUgaW4gYW1lbmRpbmcgdGhpcyBBZ3JlZW1lbnQgZnJvbSB0aW1lIHRvIHRpbWUgdG8gaW5jbHVkZSBhbnkgcHJvdmlzaW9uIHRoYXQgbWF5IGJlIHJlYXNvbmFibHkgcmVxdWVzdGVkIGJ5IGEgTGVuZGVyIHRvIHByZXNlcnZlIGEgTGVuZGVyXHJxdW90ZSBzIExpZW4ufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgWFZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNjR9SU5ERU1OSUZJQ0FUSU9OfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzY0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNjV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTUuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyIEluZGVtbmlmaWNhdGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM2NX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY1NDMxIE9wZXJhdG9yIGFuZCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhY2ggQ28tT3duZXIgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBJbmRlbW5pdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANClwnOTQpIGFncmVlcyB0byBpbmRlbW5pZnksIGRlZmVuZCBhbmQgaG9sZCBoYXJtbGVzcyB0aGUgb3RoZXIgQ28tT3duZXJzIGFuZCBzdWNoIG90aGVyIENvLU93bmVyc1xycXVvdGUgIEFmZmlsaWF0ZXMsIGVxdWl0eSBvd25lcnMsIEFmZmlsaWF0ZXMgb2YgaXRzIGVxdWl0eSBvd25lcnMgYW5kIGVhY2ggb2YgdGhlaXIgcmVzcGVjdGl2ZSBvZmZpY2VycywgZGlyZWMNCnRvcnMsIHN0b2NraG9sZGVycywgZW1wbG95ZWVzLCBhZ2VudHMsIHN1Y2Nlc3NvcnMgYW5kIGFzc2lnbnMgKGNvbGxlY3RpdmVseSwgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEluZGVtbml0ZWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0DQopIGZyb20gYW5kIGFnYWluc3QgYW55IGFuZCBhbGwgbG9zc2VzLCBkYW1hZ2VzLCBleHBlbnNlcywgaW5qdXJpZXMsIGxpYWJpbGl0aWVzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzU4OTIwMCBqdWRnbWVudHMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgY2xhaW1zLCBkZW1hbmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAgDQosIHRheGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb3IgcGVuYWx0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAgLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIGF0dG9ybmV5c1xycXVvdGUgIGZlZXMgYW5kIGNvdXJ0IGNvc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTI2NjU0MzFcY2hhcnJzaWQxMjY2NTQzMSAoXCc5M0xvc3Nlc1wnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2NTQzMSApIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpzdXN0YWluZWQgb3IgaW5jdXJyZWQgYnkgSW5kZW1uaXRlZXMgdG8gdGhlIGV4dGVudCBjYXVzZWQgYnkgdGhlIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIEluZGVtbml0b3IsIGl0cyBhZ2VudHMgb3IgY29udHJhY3RvcnMsIG9yIGNhdXNlZCBieSBJbmRlbW5pdG9yXHJxdW90ZSBzIGJyZWFjaCBvZiBhbnkgb2YgaXRzIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50LCANCmluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAgTG9zc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAgaW5jdXJyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmJ5IHJlYXNvbiBvZiBwaHlzaWNhbCBkYW1hZ2UgdG8gdGhlIHByb3BlcnR5IG9mIHRoaXJkIHBhcnRpZXMgb3IgYm9kaWx5IGluanVyeSwgaW5jbHVkaW5nIGRlYXRoLCBvZiB0aGlyZCBwZXJzb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE4NjE2MSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEluIHRoZSBldmVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDYxODYxNjEgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzU4OTIwMCBMb3NzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaXMgY2F1c2VkIGJ5IHRoZSBqb2ludCBvciBjb25jdXJyZW50IG5lZ2xpZ2VuY2Ugb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE4NjE2MSBvbmUgb3IgbW9yZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIENvLU93bmVycywgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwIEx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9zcyBzaGFsbCBiZSBib3JuZSBieSBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxODYxNjEgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgaW4gcHJvcG9ydGlvbiB0byBpdHMgZGVncmVlIG9mIG5lZ2xpZ2VuY2UufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzY2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE1LjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBDcm9zcy1JbmRlbW5pdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgQ28tT3duZXJzIGludGVuZCB0aGF0IHRoZSBvYmxpZ2F0aW9ucyBzZXQgZm9ydGggaW4gU2VjdGlvblx+MTUuMSBpbmNsdWRlIHRoZSBkdXR5IG9mIGEgQ28tT3duZXIgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDcm9zcy1JbmRlbW5pdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0DQopLCBpbiB0aGUgZXZlbnQgYW5vdGhlciBDby1Pd25lciBvciBDby1Pd25lcnMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDcm9zcy1JbmRlbW5pdGVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSBzdXN0YWlucyBvciBpbmN1cnMgYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwIEx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgb3NzIGFzIHRoZSByZXN1bHQgb2YgdGhlIGpvaW50IGFuZCBzZXZlcmFsIGxpYWJpbGl0eSBvZiBDcm9zcy1JbmRlbW5pdG9yIGFuZCBDcm9zcy1JbmRlbW5pdGVlIHRvIGEgdGhpcmQgcGFydHksIHN1Y2ggdGhhdCB0aGUgQ3Jvc3MtSW5kZW1uaXRlZSBzaGFsbCBiZSBlbnRpdGxlZCB0byByZWNvdmVyIGZyb20gdGhlIENyb3NzLUluZGVtbml0b3IgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTg2MTYxIHRoZSBDcm9zcy1JbmRlbW5pdG9yXHJxdW90ZSBzIHNoYXJlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYW55IGFuZCBhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAgTH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpvc3NlcyBzdXN0YWluZWQgb3IgaW5jdXJyZWQgYnkgQ3Jvc3MtSW5kZW1uaXRlZS4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIFhWSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2N31XQUlWRVIgT0YgUklHSFRTIFRPIFBBUlRJVElPTn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM2N30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEVhY2ggQ28tT3duZXIgaGVyZWJ5IHdhaXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE4NjE2MSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW55IHJpZ2h0cyBpdCBtYXkgaGF2ZSB0byBwYXJ0aXRpb24gdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTg2MTYxIA0KRmFjaWxpdGllcywgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IG9yIGFueSBjb21wb25lbnQgdGhlcmVvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogb3IgYW55IGNvbXBvbmVudCB0aGVyZW9mIGR1cmluZyB0aGUgdGVybSBvZiB0aGlzIEFncmVlbWVudCwgd2hldGhlciBieSBwYXJ0aXRpb24gaW4ga2luZCBvciBieSBzYWxlIGFuZCBkaXZpc2lvbiBvZiB0aGUgcHJvY2VlZHMsIGFuZCBlYWNoIENvLU93bmVyIGZ1cnRoZXIgYWdyZWVzIHRoYXQgaXQgd2lsbCBub3QgcmVzb3J0IHRvIGFueSBhY3Rpb24gYXQgbGF3IG9yIGluIGVxdWl0eSB0byBwYXJ0aXRpb24gdGhlIFNoDQphcmVkIEZhY2lsaXRpZXMsIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBvciBhbnkgY29tcG9uZW50IHRoZXJlb2YsIGFuZCBpdCB3YWl2ZXMgdGhlIGJlbmVmaXRzIG9mIGxhd3MgdGhhdCBtYXkgbm93IG9yIGhlcmVhZnRlciBhdXRob3JpemUgc3VjaCBwYXJ0aXRpb24gZm9yIHRoZSB0ZXJtIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBYVklJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzY4fU1JU0NFTExBTkVPVVMgUFJPVklTSU9OU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM2OH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzY5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBDb3ZlbmFudHMgUnVuIHdpdGggdGhlIExhbmR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgQ28tT3duZXJzDQogaGVyZWJ5IGFncmVlIHRoYXQgYWxsIG9mIHRoZSBjb3ZlbmFudHMsIGNvbnNlbnRzIGFuZCBhZ3JlZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGlzIEFncmVlbWVudCB0b3VjaCBhbmQgY29uY2VybiB0aGUgcmVhbCBlc3RhdGUgZGVzY3JpYmVkIGluIHRoaXMgQWdyZWVtZW50IGFuZCBhcmUgZXhwcmVzc2x5IGludGVuZGVkIHRvLCBhbmQgc2hhbGwsIGJlIGNvdmVuYW50cyBydW5uaW5nIHdpdGggdGhlIGxhbmQgYW5kIHNoYWxsIGJlIGJpbmRpbmcgYW4NCmQgYSBidXJkZW4gdXBvbiBzYWlkIHJlYWwgZXN0YXRlIGFuZCBlYWNoIENvLU93bmVyXHJxdW90ZSANCnMgcHJlc2VudCBvciBmdXR1cmUgZXN0YXRlIG9yIGludGVyZXN0IHRoZXJlaW4gYW5kIHVwb24gZWFjaCBvZiB0aGUgQ28tT3duZXJzLCB0aGVpciByZXNwZWN0aXZlIHN1Y2Nlc3NvcnMgYW5kIGFzc2lnbnMgYXMgaG9sZGVycyBvZiBhbiBlc3RhdGUgb3IgaW50ZXJlc3QgaW4gc2FpZCByZWFsIGVzdGF0ZSAoaW5jbHVkaW5nIGFueSBsZW5kZXIgb3Igb3RoZXIgDQpwZXJzb24gYWNxdWlyaW5nIHRpdGxlIGZyb20gYW55IHN1Y2ggcGVyc29uIHVwb24gZm9yZWNsb3N1cmUgb3IgYnkgZGVlZCBpbiBsaWV1IG9mIGZvcmVjbG9zdXJlKSwgYW5kIHNoYWxsIGJlbmVmaXQgdGhlIENvLU93bmVycyBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIGFuZCB0aGUgcmVhbCBlc3RhdGUgYW5kIGFueSBwcmVzZW50IG9yIGZ1dHVyZSBob2xkZXIgb2YgYW4gZXN0YXRlIG9yIGludGVyZXN0IHRoZXINCmUNCmluIGFuZCBhbnkgb3RoZXIgZmVlIGFuZCBsZWFzZWhvbGQgZXN0YXRlcyBhY3F1aXJlZCBieSBhbnkgQ28tT3duZXIsIGl0cyBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIGZvciBpdHMgcmVzcGVjdGl2ZSBGYWNpbGl0eS4gIFRvIHRoZSBleHRlbnQgYW55IG9mIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgQWdyZWVtZW50IGFyZSBub3QgZW5mb3JjZWFibGUgYXMgY292ZW5hbnRzIHJ1bm5pbmcgd2l0aCB0aGUgbGFuZCwgdGhleSBzaGFsbCBiZSBlbmZvcg0KY2VhYmxlIGFzIGVxdWl0YWJsZSBzZXJ2aXR1ZGVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM3MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgRm9yY2UgTWFqZXVyZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM3MH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIElmIGEgQ28tT3duZXIgaXMgZGVsYXllZCBvciByZW5kZXJlZCB3aG9sbHkgb3IgcGFydGlhbGx5IHVuYWJsZSB0byBwZXJmb3JtIGl0cyBvYmxpZ2F0aW9ucyBoZXJldW5kZXIgZHVlIHRvIGFuIGV2ZW50IG9mIEZvcmNlIE1hamV1cmUsIHRoYXQgQ28tT3duZXIgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ2xhaW1pbmcgUGFydHl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkgd2lsbCBiZSBleGN1c2VkIGZyb20gd2hhdGV2ZXIgcGVyZm9ybWFuY2UgaXMgYWZmZWN0ZWQgYnkgdGhlIGV2ZW50IG9mIEZvcmNlIE1hamV1cmUgdG8gdGhlIGV4dGVudCBzbyBhZmZlY3RlZCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB0aGF0OiAoaSlcfg0KdGhlIENsYWltaW5nIFBhcnR5IHNoYWxsIGdpdmUgdGhlIG90aGVyIENvLU93bmVycyBub3RpY2UgZGVzY3JpYmluZyB0aGUgcGFydGljdWxhcnMgb2YgdGhlIG9jY3VycmVuY2UgcHJvbXB0bHkgYWZ0ZXIgdGhlIG9jY3VycmVuY2Ugb2YgdGhlIEZvcmNlIE1hamV1cmUNCiwgYW5kLCBpbiBubyBldmVudCBtb3JlIHRoYW4gdGhyZWUgKDMpIGRheXMgYWZ0ZXIgdGhlIENsYWltaW5nIFBhcnR5IGJlY29tZXMgYXdhcmUgb2Ygc3VjaCBvY2N1cnJlbmNlOyAoaWkpXH4NCndpdGhpbiBmaXZlICg1KSBkYXlzIGFmdGVyIGdpdmluZyB0aGUgbm90aWNlIGRlc2NyaWJlZCBpbiBjbGF1c2UgKGkpIGFib3ZlLCB0aGUgQ2xhaW1pbmcgUGFydHkgc2hhbGwgZ2l2ZSB0aGUgb3RoZXIgQ28tT3duZXJzIGl0cyBiZXN0IGVzdGltYXRlIG9mIHRoZSBleHBlY3RlZCBkdXJhdGlvbiBvZiB0aGUgZXZlbnQgYW5kIHByb2JhYmxlIGltcGFjdCBvbiB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhlIENsYWltaW5nIFBhcnR5XHJxdW90ZSANCnMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyLCBhbmQgc2hhbGwgY29udGludWUgdG8gZnVybmlzaCB0aW1lbHkgcmVndWxhciByZXBvcnRzIHdpdGggcmVzcGVjdCB0aGVyZXRvIGR1cmluZyB0aGUgY29udGludWF0aW9uIG9mIHRoZSBGb3JjZSBNYWpldXJlOyAoaWlpKVx+dGhlIHN1c3Blbg0Kc2lvbiBvZiBwZXJmb3JtYW5jZSBzaGFsbCBiZSBvZiBubyBncmVhdGVyIHNjb3BlIGFuZCBvZiBubyBsb25nZXIgZHVyYXRpb24gdGhhbiBpcyByZWFzb25hYmx5IHJlcXVpcmVkIGJ5IHRoZSBGb3JjZSBNYWpldXJlOyAoaXYpXH4NCm5vIGRlZmF1bHQgb2YgYSBDby1Pd25lciB3aGljaCBhcm9zZSBiZWZvcmUgdGhlIG9jY3VycmVuY2Ugb2YgdGhlIEZvcmNlIE1hamV1cmUgZXZlbnQgY2F1c2luZyB0aGUgc3VzcGVuc2lvbiBvZiBwZXJmb3JtYW5jZSBzaA0KYWxsIGJlIGV4Y3VzZWQgYXMgYSByZXN1bHQgb2YgdGhlIG9jY3VycmVuY2UsIGJ1dCBzbyBsb25nIGFzIHRoZSBDbGFpbWluZyBQYXJ0eSBzaGFsbCBoYXZlIGNvbW1lbmNlZCBhbmQgaXMgZGlsaWdlbnRseSBjb250aW51aW5nIHRvIGF0dGVtcHQgdG8gY3VyZSBzdWNoIGRlZmF1bHQgcHJpb3IgdG8gdGhlIG9jY3VycmVuY2Ugb2YgdGhlIEZvcmNlIE1hamV1cmUsIHRoZSBjdXJlIHBlcmlvZCAoaWYgYW55KSB3aXRoIHJlc3BlY3QgdG8gc3VjaCBkDQplZmF1bHQgc2hhbGwgYmUgZXh0ZW5kZWQgb24gYSBkYXktZm9yLWRheSBiYXNpcyB0byB0aGUgZXh0ZW50IGEgY3VyZSBpcyBwcmV2ZW50ZWQgYXMgYSBkaXJlY3QgcmVzdWx0IG9mIHRoZSBGb3JjZSBNYWpldXJlOyAodilcfnRoZSBDbGFpbWluZyBQYXJ0eSBzaGFsbCBleGVyY2lzZSBhbGwgcmVhc29uYWJsZSBlZmZvcnRzIHRvIG1pdGlnYXRlIG9yIGxpbWl0IGRhbWFnZXMgdG8gdGhlIG90aGVyIENvLU93bmVyczsgYW5kICh2aSlcfg0KdGhlIENsYWltaW4NCmcgUGFydHkgc2hhbGwgdXNlIGFsbCByZWFzb25hYmxlIGVmZm9ydHMgdG8gY29udGludWUgdG8gcGVyZm9ybSBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIGFuZCB0byBjb3JyZWN0IG9yIGN1cmUgdGhlIGV2ZW50IG9yIGNvbmRpdGlvbiBleGN1c2luZyBwZXJmb3JtYW5jZS4gIEluIHJlc29sdmluZyBhbnkgZGlzcHV0ZSBiZXR3ZWVuIHRoZSBDby1Pd25lcnMsIHRoZSBidXJkZW4gb2YgcHJvb2YgYXMgdG8gd2hldGhlciBhIEZvcmNlIE1hamV1cg0KZSBoYXMgb2NjdXJyZWQgYW5kIHdoZXRoZXIgdGhlIEZvcmNlIE1hamV1cmUgZXhjdXNlcyB0aGUgQ2xhaW1pbmcgUGFydHkgZnJvbSBwZXJmb3JtYW5jZSB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCBiZSB1cG9uIHRoZSBDbGFpbWluZyBQYXJ0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwOTEwNTIxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4NjE2MTM0IFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEwOTEwNTIxIEZFUkMgRmlsaW5nIGFuZCBBY2NlcHRhbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEwOTEwNTIxIC5cdGFiICAgfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0IFRoZSBDby1Pd25lcnMgYWNrbm93bGVkZ2UgYW5kIGFncmVlIHRoYXQ6ICh9e1xydGxjaFxmY3MxIA0KXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDExMzU5MjQ4XGNoYXJyc2lkODYxNjEzNCBpfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0ICkgdGhpcyBBZ3JlZW1lbnQgd2lsbCBiZSBwdWJsaWNseSANCmF2YWlsYWJsZSB0aHJvdWdoIGl0cyBmaWxpbmcgd2l0aCBGRVJDIGZvciBhY2NlcHRhbmNlIHVuZGVyIFNlY3Rpb24gMjA1IG9mIHRoZSBGUEE7ICh9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMTM1OTI0OFxjaGFycnNpZDg2MTYxMzQgaWl9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgDQopIHN1YnNlcXVlbnQgYW1lbmRtZW50cyB0byB0aGlzIEFncmVlbWVudCB9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQyNzY0MDQwIHRoYXQgaW52b2x2ZSBGRVJDLWp1cmlzZGljdGlvbmFsIHRyYW5zbWlzc2lvbiBmYWNpbGl0aWVzIG9yIHNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkODYxNjEzNCAgfXsNClxydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgbXVzdCBiZSBmaWxlZCB3aXRoIGFuZCBhY2NlcHRlZCBieSBGRVJDLCBhbmQgdGhlIGVmZmVjdGl2ZW5lc3Mgb2Ygc3VjaCBhbWVuZG1lbnRzIHdpbGwgYmUgY29udGluZ2VudCBvbiBzdWNoIEZFUkMgYWNjZXB0YW5jZTsgKH17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgDQpcZjQzXHVsbm9uZVxpbnNyc2lkMTEzNTkyNDhcY2hhcnJzaWQ4NjE2MTM0IGlpaX17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDEwOTEwNTIxXGNoYXJyc2lkODYxNjEzNCApIGNoYW5nZXMgaW4gb3duZXJzaGlwIGNvbnRlbXBsYXRlZCBieSB0aGlzIEFncmVlbWVudCBtYXkgYmUgc3ViamVjdCB0byBwcmlvciBGRVJDIGFwcHJvdmFsOyBhbmQgKH17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgDQpcZjQzXHVsbm9uZVxpbnNyc2lkMTEzNTkyNDhcY2hhcnJzaWQ4NjE2MTM0IGl2fXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0ICkgZGlzY29ubmVjdGlvbnMgb3IgdGVybWluYXRpb25zIGNvbnRlbXBsYXRlZCBieSB0aGlzIEFncmVlbWVudCBtYXkgcmVxdWlyZSBwcmlvciBGRVINCkMgYXBwcm92YWwuICBQcm9tcHRseSBhZnRlciB0aGUgRXhlY3V0aW9uIERhdGUgb3IgYWZ0ZXIgYW55IGFtZW5kbWVudCB0byB0aGUgQWdyZWVtZW50LCB0aGUgQ28tT3duZXJzIHdpbGwgcHJlcGFyZSBhIGRyYWZ0IGZpbGluZyB0byBzZWVrIGFjY2VwdGFuY2UgYnkgRkVSQyBvZiB0aGUgQWdyZWVtZW50IG9yIHN1Y2ggYW1lbmRtZW50IGFuZCB0aGUgQ28tT3duZXJzIHdpbGwgY29vcGVyYXRlIHRvIG1ha2UgYW55IGNoYW5nZXMgdG8gdGhlIGZpbA0KaW5nIHJlcXVlc3RlZCBieSB0aGUgb3RoZXIgQ28tT3duZXJzIGFuZCB3aWxsIGZpbGUgdGhlIEFncmVlbWVudCBvciBzdWNoIGFtZW5kbWVudCBmb3IgYWNjZXB0YW5jZSBieSBGRVJDLiAgfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTEzNTkyNDhcY2hhcnJzaWQ4NjE2MTM0IA0KQ29udGVtcG9yYW5lb3VzbHkgd2l0aCB0aGUgZmlsaW5nIG9mIHRoaXMgQWdyZWVtZW50IHdpdGggRkVSQywgdGhlIENvLU93bmVycyB3aWxsIGFwcGx5IHRvIEZFUkMgZm9yIHJlZ3VsYXRvcnkgd2FpdmVycyBleGVtcHRpbmcgdGhlIENvLU93bmVycyBmcm9tIGNvbXBsaWFuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxNDA5MjY3MlxjaGFycnNpZDg2MTYxMzQgDQpGRVJDIE9yZGVyIE5vcy4gODg4LCA4ODkgYW5kIDg5MCwgYW5kIEZFUkNccnF1b3RlIHMgcmVndWxhdGlvbnMgYXQgMTggQy5GLlIuIFwnYTcgMzUuMjgsIGFuZCAxOCBDLkYuUi4gUGFydHMgMzcgYW5kIDM1OC4gIH17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDEwOTEwNTIxXGNoYXJyc2lkODYxNjEzNCANCkVhY2ggQ28tT3duZXIgYWdyZWVzIHRoYXQgaXQgd2lsbCBub3Qgb3Bwb3NlIGFjY2VwdGFuY2Ugb2YgdGhlIEFncmVlbWVudCBvciB9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxNDA5MjY3MlxjaGFycnNpZDg2MTYxMzQgYW59e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgIGFtZW5kbWVudCBieSBGRVJDfXsNClxydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxNDA5MjY3MlxjaGFycnNpZDg2MTYxMzQgLCBvciB0aGUgZ3JhbnRpbmcgYnkgRkVSQyBvZiB0aGUgd2FpdmVycyBkZXNjcmliZWQgaW4gdGhlIHByZWNlZGluZyBzZW50ZW5jZSx9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgDQogYW5kIHRoYXQgaXQgd2lsbCByZWFzb25hYmx5IGNvb3BlcmF0ZSB3aXRoIHRoZSBvdGhlciBDby1Pd25lcnMgdG8gYWRkcmVzcyBhbnkgaXNzdWVzIHJhaXNlZCBieSBGRVJDIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgZmlsaW5nfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTQwOTI2NzJcY2hhcnJzaWQ4NjE2MTM0IHMgZGVzY3JpYmVkIGluIHRoaXMgU2VjdGlvbiAxNy4zfXtccnRsY2hcZmNzMSANClxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgLn17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDE0MDkyNjcyXGNoYXJyc2lkODYxNjEzNCAgfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0IA0KIFN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIHNldCBmb3J0aCBoZXJlaW4sIHRoZSBDby1Pd25lcnMgYWdyZWUgdG8gZXhlY3V0ZSBhbmQgZGVsaXZlciBhbGwgZG9jdW1lbnRzIHJlYXNvbmFibHkgbmVjZXNzYXJ5IGZvciB0aGlzIEFncmVlbWVudCB0byBjb21wbHkgd2l0aCBGRVJDIHJlcXVpcmVtZW50cy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMDkxMDUyMSANCntcKlxia21rZW5kIF9Ub2M0MDQwMTMzNzF9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM3Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy40XHRhYn19XHBhcmQgXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBBc3NpZ25tZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzcyfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhpcyBBZ3JlZW1lbnQgd2lsbCBiZSBiaW5kaW5nIG9uIGFuZCBpbnVyZSB0byB0aGUgYmVuZWZpdCBvZiB0aGUgQ28tT3duZXJzIGFuZCB0aGVpciByZXNwZWN0aXZlIHN1Y2Nlc3NvcnMgYW5kIHBlcm1pdHRlZCBhc3NpZ25zLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjYyNTM2IA0KQWxsIHRyYW5zZmVycywgY29udmV5YW5jZXMsIGFzc2lnbm1lbnRzIG9mIFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNoYXJlZCBSZWFsIHByb3BlcnR5IHdpbGwgYmUgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnQsIHdoZXRoZXIgb3Igbm90IGV4cGxpY2l0bHkgc3RhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTI3MjU5MCAuICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRWFjaCBDby1Pd25lciBtYXksIGF0IGFueSB0aW1lIGFuZCBmcm9tIHRpbWUgdG8gdGltZSwgdXBvbiBub3RpY2UgYnV0IHdpdGhvdXQgdGhlIG90aGVyIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY5ODU1IE93bmVyc1xycXVvdGUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgY29uc2VudCBvciBhcHByb3ZhbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIChpKVx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2Njk4NTUgc3ViamVjdCB0byBjb21wbGlhbmNlIHdpdGggU2VjdGlvblx+OS43LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KdHJhbnNmZXIgb3IgYXNzaWduIHRoaXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4IGFuZCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4IGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9ibGlnYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjY2OTg1NVxjaGFycnNpZDkzODQ1NjEgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2OTg1NVxjaGFycnNpZDU5MDgzOCBQZXJzb24gdGhhdCBhY3F1aXJlcyBhbGwgb3Igc3Vic3RhbnRpYWxseSBhbGwgb2Ygc3VjaCBDby1Pd25lclxycXVvdGUgcyBhc3NldHMsIGluY2x1ZGluZyBzdWNoIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2Njk4NTUgDQpccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY5ODU1XGNoYXJyc2lkNTkwODM4IHMgU2hhcmVkIEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY5ODU1ICwgYW5kIGFncmVlcyB0byBhc3N1bWUgYWxsIG9ibGlnYXRpb25zIG9mIHRoYXQgQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNjY5ODU1XGNoYXJyc2lkNTkwODM4ICAoYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTI2Njk4NTVcY2hhcnJzaWQ1OTA4MzggXCc5M1Blcm1pdHRlZCBBc3NpZ25lZVwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2OTg1NVxjaGFycnNpZDU5MDgzOCApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA7IGFuZC9vciAoaWkpXH4NCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTI2IGNyZWF0ZSBMZW5kZXJccnF1b3RlIHMgTGllbnMgcHVyc3VhbnQgdG8gQXJ0aWNsZSBYSVZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxNDI1NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgIE90aGVyd2lzZQ0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjYyNTM2ICwgbm8gQ28tT3duZXIgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxNDI1NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0cmFuc2ZlciBvciBhc3NpZ24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjYyNTM2IA0KYWxsIG9yIGFueSBwYXJ0IG9mIGl0cyByaWdodCwgdGl0bGUgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggIGludGVyZXN0IGluIG9yIHRvIHRoaXMgQWdyZWVtZW50IG9yIGFueSBvZiBpdHMgcmlnaHRzIGhlcmV1bmRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHdpdGhvdXQgdGhlIHByaW9yIGNvbnNlbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCBhbGwgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgb3RoZXIgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjM1OSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCA7IHByb3ZpZGVkLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjI1MzYgDQpmdXJ0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCAsIHRoYXQgaWYgRkVSQyBhcHByb3ZhbCBpcyByZXF1aXJlZCBmb3IgYW55IHN1Y2ggYXNzaWdubWVudCBvciB0cmFuc2ZlciwgaXQgc2hhbGwgbm90IGJlIGVmZmVjdGl2ZSB1bmxlc3MgYW5kIHVudGlsIEZFUkMgYXBwcm92YWwgaGFzIGJlZW4gb2J0YWluZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggRm9yIHB1cnBvc2VzIG9mIHRoaXMgQWdyZWVtZW50LCBhIENoYW5nZSBvZiBDb250cm9sIG9mIGEgQ28tT3duZXIgc2hhbGwgYmUgY29uc2lkZXJlZCBhbiBhc3NpZ25tZW50IGJ5IHN1Y2ggQ28tT3duZXIgb2YgaXRzIHJpZ2h0cyBhbmQgaW50ZXJlc3RzIHVuZGVyIHRoaXMgQWdyDQplZW1lbnQgYW5kIHNoYWxsIGJlIHN1YmplY3QgdG8gdGhlIHJlcXVpcmVtZW50cyBoZXJldW5kZXIgd2l0aCByZXNwZWN0IHRvIGFzc2lnbm1lbnRzLiAgQW55IFBlcm1pdHRlZCBBc3NpZ25lZSBzaGFsbCBhc3N1bWUgYWxsIG9mIHRoZSBvYmxpZ2F0aW9ucyBvZiB0aGUgYXNzaWduaW5nIENvLU93bmVyIGhlcmV1bmRlciBhbmQgc2hhbGwgZXhlY3V0ZSBhbnkgZG9jdW1lbnRzIHdoaWNoIG1heSByZWFzb25hYmx5IGJlIHJlcXVpcmVkIGJ5IHRoZSANCm8NCnRoZXIgQ28tT3duZXJzLCBvciBieSBMZW5kZXJzLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIGFueSBkb2N1bWVudCBpbiBjb25uZWN0aW9uIHdpdGggYSBnb3Zlcm5tZW50YWwgcGVybWl0LCBhcHByb3ZhbCwgYXV0aG9yaXphdGlvbiwgZW50aXRsZW1lbnQgb3Igb3RoZXIgY29uc2VudC4gIFVuZGVyIG5vIGNpcmN1bXN0YW5jZXMgc2hhbGwgYW55IExlbmRlciBvciBQZXJtaXR0ZWQgQXNzaWduZWUgaGF2ZSBhbnkgZ3JlYXRlciByaWdodA0KcyBvZiBvd25lcnNoaXAgb3IgdXNlIG9mIHRoZSBTaGFyZWQgQXNzZXRzIHRoYW4gdGhlIHJpZ2h0cyBncmFudGVkIHRvIHRoZSBDby1Pd25lcnMgaW4gdGhpcyBBZ3JlZW1lbnQuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NFxjaGFycnNpZDExODkzNzkwIEFueSBhc3NpZ25tZW50IHBlcm1pdHRlZCB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCByZWxlYXNlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgdGhlIGFzc2lnbmluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0XGNoYXJyc2lkMTE4OTM3OTAgIGZyb20gb2JsaWdhdGlvbnMgYWNjcnVpbmcgYWZ0ZXIgdGhlIGRhdGUgdGhhdCBsaWFiaWxpdHkgaXMgYXNzdW1lZCBieSANCmEgdHJhbnNmZXJlZSwgYnV0IHRoZSBhc3NpZ25pbmcgQ28tT3duZXIgc2hhbGwgY29udGludWUgdG8gYmUgbGlhYmxlIHRvIHRoZSBvdGhlciBDby1Pd25lcnMgZm9yIGFsbCBwZXJmb3JtYW5jZSBkdWUgYnkgdGhlIGFzc2lnbmluZyBDby1Pd25lciBmb3IgbWF0dGVycyB0aGF0IGhhdmUgYWNjcnVlZCBhbmQgYXJlIHVuc2F0aXNmaWVkIGFzIG9mIHRoZSBkYXRlIG9mIHRoZSBhc3NpZ25tZW50Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEFueSBwdXJwb3J0ZWQgYXNzaWdubWVudCBpbiBjb250cmF2ZW50aW9uIG9mIHRoaXMgU2VjdGlvblx+MTcuMyB3aWxsIGJlIHZvaWQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ5NDQ2NzUgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM3M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyNzE1NzhcY2hhcnJzaWQxMzE3NjcxMyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1MjcxNTc4XGNoYXJyc2lkMTMxNzY3MTMgQWN0aW9ucyBCeSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTUyNzE1NzhcY2hhcnJzaWQxMzE3NjcxMyAuICBVbmxlc3MgZXhwcmVzc2x5IHByb3ZpZGVkIG90aGVyd2lzZSwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM2ODEwMzhcY2hhcnJzaWQxMzE3NjcxMyB2b3RpbmcgYnkgdGhlIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE1MjcxNTc4XGNoYXJyc2lkMTMxNzY3MTMgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM2ODEwMzhcY2hhcnJzaWQxMzE3NjcxMyAgc2hhbGwgYmUgaW4gcHJvcG9ydGlvbiB0byB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMTYxOTE3NTVcY2hhcnJzaWQxMzE3NjcxMyAsIHNvIHRoYXQgdGhlIHdlaWdodCBvZiBlYWNoIENvLU93bmVyXHJxdW90ZSBzIHZvdGUgaXMgcHJvcG9ydGlvbmFsIHRvIHRoZSBuYW1lcGxhdGUgY2FwYWNpdGllcyBvZiB0aGVpciByZXNwZWN0aXZlIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMzY4MTAzOFxjaGFycnNpZDEzMTc2NzEzIC59e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MjcxNTc4XGNoYXJyc2lkMTMxNzY3MTMgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjZcdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRW50aXJlIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYgDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzczfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhpcyBBZ3JlZW1lbnQgaXMgdGhlIENvLU93bmVyc1xycXVvdGUgIGNvbXBsZXRlIGFuZCBmaW5hbCBleHByZXNzaW9uIG9mIGFncmVlbWVudCByZWdhcmRpbmcgdGhlIG1hdHRlcnMgYWRkcmVzc2VkIGluIHRoaXMgQWdyZWVtZW50IGFuZCBzdXBlcnNlZGVzIGFsbCBwcmlvciBhZ3JlZW1lbnRzLCByZXByZXNlbnRhdGlvDQpucywgdW5kZXJzdGFuZGluZ3MsIG9mZmVycyBhbmQgY29tbXVuaWNhdGlvbnMsIHdoZXRoZXIgb3JhbCBvciB3cml0dGVuLCByZWdhcmRpbmcgc3VjaCBtYXR0ZXJzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM3NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy43XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQW1lbmRtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzc0fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhpcyBBZ3JlZW1lbnQgY2FuIGJlIGFtZW5kZWQgb25seSBieSBhIG11dHVhbGx5IGFncmVlYWJsZSB3cml0dGVuIGFtZW5kbWVudCBleGVjdXRlZCBieSBhbiBhdXRob3JpemVkIHJlcHJlc2VudGF0aXZlIG9mIGVhY2ggQ28tT3duZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzc1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjhcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBGdXJ0aGVyIEFzc3VyYW5jZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNzV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIENvLU93bmVyIGFncmVlIHRvIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgYW55IGFkZGl0aW9uYWwgaW5zdHJ1bWVudHMsIGFncmVlbWVudHMgb3IgYW1lbmRtZW50cywgYW5kIHRvIHRha2Ugc3VjaCBvdGhlciBhY3Rpb25zIGFzIG1heSBiZSBuZWNlc3Nhcnkgb3IgcmVhc29uYWJseSByZXF1ZXN0ZWQgYnkgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MzU5IEN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgby1Pd25lcnMgdG8gZWZmZWN0dWF0ZSBvciBldmlkZW5jZSB0aGlzIEFncmVlbWVudCBhbmQgd2hpY2gNCiBhcmUgbm90IGluY29uc2lzdGVudCB3aXRoIHRoZSBwcm92aXNpb25zIGhlcmVvZiwgZG8gbm90IGFkdmVyc2VseSBhZmZlY3QgdGhlIHJpZ2h0cyBvZiBvdGhlciBDby1Pd25lcnMsIHZpb2xhdGUgdGhlIHRlcm1zIGFuZCBzcGlyaXQgb2YgdGhpcyBBZ3JlZW1lbnQsIGFuZCB3aGljaCBkbyBub3QgaW52b2x2ZSBhc3N1bXB0aW9ucyBvZiBvYmxpZ2F0aW9ucyBvciBtYXRlcmlhbGx5IGFmZmVjdCB0aGUgY29zdCBvZiBwZXJmb3JtYW5jZSwgb3RoZQ0KciB0aGFuIHRob3NlIHByb3ZpZGVkIGZvciBpbiB0aGlzIEFncmVlbWVudCwgaW4gb3JkZXIgdG8gZ2l2ZSBmdWxsIGVmZmVjdCB0byBhbmQgY2Fycnkgb3V0IHRoZSBpbnRlbnQgb2YgdGhpcyBBZ3JlZW1lbnQsIGluY2x1ZGluZyBjb29wZXJhdGluZyBpbiBjb25maXJtaW5nIHRoZSBncmFudCBvciBhc3NpZ25tZW50IG9mIHByb3BlcnR5IHJpZ2h0cyBvciB0aGUgcmVzZXJ2YXRpb24gb3IgcmV0ZW50aW9uIG9mIHByb3BlcnR5IHJpZ2h0cy4gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuOVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFNldmVyYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM3Nn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIElmIGFueSBwcm92aXNpb24gb2YgdGhpcyBBZ3JlZW1lbnQgaXMgaGVsZCBpbnZhbGlkIG9yIHVuZW5mb3JjZWFibGUsIGFsbCBvdGhlciBwcm92aXNpb25zIHdpbGwgbm90IGJlIGFmZmVjdGVkLiAgV2l0aCByZXNwZWN0IHRvIHRoZSBwcm92aXNpb24gaGVsZCBpbnZhbGlkIG9yIHVuZW5mb3JjZWFibGUsIHRoZSBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MjE2NyANCmFncmVlIHRvIGNvb3BlcmF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE5MTc1NSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFtZW5kIHRoaXMgQWdyZWVtZW50IGFzIG5lY2Vzc2FyeSB0byBlZmZlY3QgdGhlIENvLU93bmVyc1xycXVvdGUgIG9yaWdpbmFsIGludGVudCBhcyBjbG9zZWx5IGFzIHBvc3NpYmxlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzc3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjEwXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgSm9pbnQgUHJlcGFyYXRpb259e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNzd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGlzIEFncmVlbWVudCBvciBhbnkgdW5jZXJ0YWludHkgb3IgYW1iaWd1aXR5IHRoZXJlaW4gc2hhbGwgbm90IGJlIGNvbnN0cnVlZCBhZ2FpbnN0IGFueSBvbmUgQ28tT3duZXIsIGJ1dCByYXRoZXIgc2hhbGwgYmUgY29uc3RydWVkIGFzIHRob3VnaCBhbGwgQ28tT3duZXJzIGpvaW50bHkgcHJlcGFyZWQgdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBObyBXYWl2ZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNzh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSANCi4gIElmIG9uIGFueSBvY2Nhc2lvbiBhIENvLU93bmVyIGRvZXMgbm90IGluc2lzdCB1cG9uIHRoZSBwZXJmb3JtYW5jZSBvZiBhbnkgdGVybSwgY29uZGl0aW9uIG9yIHByb3Zpc2lvbiBvZiB0aGlzIEFncmVlbWVudCwgc3VjaCBmb3JiZWFyYW5jZSB3aWxsIG5vdCBvcGVyYXRlIG9yIGJlIGNvbnN0cnVlZCBhcyBhbiBhY2NlcHRhbmNlIG9mIGFueSB2YXJpYXRpb24gaW4gYW55IHRlcm0sIGNvbmRpdGlvbiBvciBwcm92aXNpb24gb2YgdGhpcyBBZw0KcmVlbWVudCBvciByZWxpbnF1aXNobWVudCBvZiBhbnkgcmlnaHQgdW5kZXIgdGhpcyBBZ3JlZW1lbnQuICBObyB3YWl2ZXIgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYzNTkgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyIG9mIGFueSByaWdodCBvciBvZiBhbnkgZGVmYXVsdCBieSB0aGUgb3RoZXIgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MzU5IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB1bmRlciB0aGlzIEFncmVlbWVudCB3aWxsIGJlIGVmZmVjdGl2ZSB1bmxlc3MgaXQgaXMgaW4gd3JpdGluZyBhbmQgc2lnbmVkIGJ5IHRoZSB3YWl2aW5nIENvLU93bmVyLCBhbmQgbm8gd2FpdmVyIHdpbGwNCiBvcGVyYXRlIG9yIGJlIGNvbnN0cnVlZCBhcyBhIHdhaXZlciBvZiBhbnkgb3RoZXIgb3IgZnVydGhlciByaWdodCBvciBhcyBhIHdhaXZlciBvZiBhbnkgZnV0dXJlIGRlZmF1bHQsIHdoZXRoZXIgb2YgbGlrZSBvciBkaWZmZXJlbnQgY2hhcmFjdGVyIG9yIG5hdHVyZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBHb3Zlcm5pbmcgTGF3fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzc5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgZ292ZXJuZWQgYnksIGNvbnN0cnVlZCBhbmQgZW5mb3JjZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBsYXdzIG9mIHRoZSBTdGF0ZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzOTc5NCBDYWxpZm9ybmlhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzk3OTQgd2l0aG91dCByZWdhcmQgdG8gcHJpbmNpcGxlcyBvZiBjb25mbGljdCBvZiBsYXdzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzgwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNzQ3MjMzXGNoYXJyc2lkMzc0NzIzMyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNzQ3MjMzXGNoYXJyc2lkMzc0NzIzMyBEaXNwdXRlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDM3NDcyMzMgUmVzb2x1dGlvbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNzQ3MjMzXGNoYXJyc2lkMzc0NzIzMyBQcm9jZWR1cmVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYgDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzgwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRGlzcHV0ZXMgYW1vbmcgdGhlIENvLU93bmVycyBzaGFsbCBiZSByZXNvbHZlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb2NlZHVyZXMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzgxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjE0XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUmVsYXRpb25zaGlwIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGlzIEFncmVlbWVudCB3aWxsIG5vdCBiZSBpbnRlcnByZXRlZCBvciBjb25zdHJ1ZWQgdG8gKGkpXH5jcmVhdGUgYW4gYXNzb2NpYXRpb24sIGpvaW50IHZlbnR1cmUgb3IgcGFydG5lcnNoaXAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3NDM1OCBhbW9uZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogdGhlIENvLU93bmVycyBvciBpbXBvc2UgYW55IHBhcnRuZXJzaGlwIG9ibGlnYXRpb24gb3IgbGlhYmlsaXR5IG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzQzNTggYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXIsIG9yIChpaSlcfmNyZWF0ZSBhbnkgYWdlbmN5IHJlbGF0aW9uc2hpcCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNzQzNTggYW1vbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgQ28tT3duZXJzIG9yIGltcG9zZSBhbnkgZmlkdWNpYXJ5IGR1dHkgb2YgYW55IGtpbmQgb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3NDM1OCBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciwgb3IgKGlpaSlcfg0KY3JlYXRlIGEgbGVhc2Ugb2YgYW55IHByb3BlcnR5IG9mIGFueSBraW5kLiAgU3ViamVjdCB0byBPcGVyYXRvclxycXVvdGUgcyBwcm92aXNpb24gb2YgTyZNIFNlcnZpY2VzLCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3NDM1OCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBDby1Pd25lciB3aWxsIGhhdmUgYW55IHJpZ2h0LCBwb3dlciBvciBhdXRob3JpdHkgdG8gZW50ZXIgaW50byBhbnkgYWdyZWVtZW50IG9yIHVuZGVydGFraW5nIGZvciwgb3IgYWN0IG9uIGJlaGFsZiBvZiwgb3IgdG8gYWN0IGFzIG9yIGJlIGFuIGFnZW50IG9yIHJlcHJlc2VudGF0aXZlIG9mLCBvciBvdGhlcndpc2UgdG8gYmluZCwgdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjc0MzU4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEVhY2ggQ28tT3duZXIgd2FpdmVzIGFueSBhbmQgYWxsIHJpZ2h0cyB0aGF0IGl0IG1heSBvdGhlcndpc2UgaGF2ZSB1bmRlciBBcHBsaWNhYmxlIExhd3Mgb3IgbGVnYWwgcHJlY2VkZW50cyB0byBtYWtlIGFueSBjbGFpbXMgb3IgdGFrZSBhbnkgYWN0aW9uIGFnYWluc3QgdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjc0MzU4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBvciBhbnkgb2YgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzQzNTggQWZmaWxpYXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogaW4gcmVzcGVjdCBvZiB0aGlzIEFncmVlbWVudCBiYXNlZCBvbiBhbnkgdGhlb3J5IG9mIGFnZW5jeSwgZmlkdWNpYXJ5IGR1dHkgb3Igb3RoZXIgc3BlY2lhbCBzdGFuZGFyZCBvZiBjYXJlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IE5vIFRoaXJkIFBhcnR5IFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4Mn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEV4Y2VwdCB3aXRoIHJlc3BlY3QgdG8gdGhlIHJpZ2h0cyBvZiBMZW5kZXJzIGFzIHNldCBmb3J0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTkyNiBpbiBBcnRpY2xlIFhJVn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQosIHRoZSBjb3ZlbmFudHMgY29udGFpbmVkIGhlcmVpbiBhcmUgbWFkZSBzb2xlbHkgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyNzE1NzggYW5kIHRoZSBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBhbmQgc2hhbGwgbm90IGJlIGNvbnN0cnVlZCBhcyBiZW5lZml0aW5nIGFueSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQzNDI4NTkgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZXJzb24gdGhhdCBpcyBub3QgYSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI3MTU3OCBvciB0aGUgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xNlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IE5vIERlZGljYXRpb24gb2YgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4M30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEFueSB1bmRlcnRha2luZyBieSBvbmUgQ28tT3duZXIgdG8gdGhlIG90aGVyIENvLU93bmVycyB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCBub3QgY29uc3RpdHV0ZSB0aGUgZGVkaWNhdGlvbiBvZiB0aGUgZWxlY3RyaWMgZmFjaWxpdGllcyBvciBhbnkgcG9ydGlvbiB0aGVyZW9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMjM4OTQgb3IgYW55IG90aGVyIHByb3BlcnR5IH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvZiB0aGUgdW5kZXJ0YWtpbmcgQ28tT3duZXIgdG8gdGhlIHB1YmxpYyBvciB0byB0aGUgb3RoZXIgQ28tT3duZXJzLCBhbmQgaXQgaXMgdW5kZXJzdG9vZCBhbmQgYWdyZWVkIHRoYXQgYW55IHN1Y2ggdW5kZXJ0YWtpbmcgYnkgYSBDby1Pd25lciB3aWxsIGNlYXNlIHVwb24gdGhlIHRlcm1pbmF0aW9uIG9mIGl0cyBvYmxpZ2F0aW9ucyBoZXJldW5kZXIufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzIzODk0ICAgTm90aGluZyBoZXJlaW4gc2hhbGwgY29uc3RpdHV0ZSBhIGRlZGljYXRpb24gb3IgYW4gb2ZmZXIgdG8gZGVkaWNhdGUgYW55IFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNoYXJlZCBSZWFsIFByb3BlcnR5IHRvIHRoZSBwdWJsaWN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MjA5NjY5ICBvciBmb3IgcHVibGljIHNlcnZpY2V9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMjM4OTQgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IE5vdGljZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODR9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFeGNlcHQgYXMgb3RoZXJ3aXNlIHByb3ZpZGVkIGluIHRoaXMgQWdyZWVtZW50LCBhbGwgbm90aWNlcyBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMgdG8gYmUgZ2l2ZW4gb3IgbWFkZSB1bmRlciB0aGlzIEFncmVlbWVudCB3aWxsIGJlIGluIHdyaXRpbmcsIHdpbGwgYmUgYWRkcmVzc2VkIGFzIHNwZWNpZmllZCBiZWxvdywgYW5kIHdpbGwgZWl0aGVyIGJlIHBlcnNvbmFsbHkgZGVsaXZlcmVkIG9yIHNlbnQgYnkgDQpjb3VyaWVyIHNlcnZpY2UsIGJ5IHJlZ2lzdGVyZWQgb3IgY2VydGlmaWVkIG1haWwsIG9yIGJ5IGZhY3NpbWlsZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciBcbHRycm93fVx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQ0NTBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTY1MTkwOFx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHRibGluZDU1OFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzNDBcY2xzaGRyYXduaWwgXGNlbGx4Mjc5MFxjbHZlcnRhbGNcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDY2NzhcY2xzaGRyYXduaWwgDQpcY2VsbHg5NDY4XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHl0czExIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ0NTkxNjA3IGYgdG8gUmlzaW5nIFRyZWUgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgOlxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI3XHFsIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBccGFyYXJzaWQ1MTMxODgwXHl0czExIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ3MDc4MDAyIFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDE2NTE5MDggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgV2luZCBGYXJtIExMQ1xsaW5lIDgwOCBUcmF2aXMsIFN1aXRlIDcwMFxsaW5lIEhvdXN0b24sIFRYIDc3MDAyXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkOTQ0Njc1IEF0dG46IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgIEdlbmVyYWwgQ291bnNlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ5NDQ2NzUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyBGYWNzaW1pbGU6ICAoNzEzKSAyNjUtMDM2NQ0KXGxpbmUgRS1tYWlsOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1XGNoYXJyc2lkODM1MTQgbGVnYWwubm90aWNlc0BlZHByLmNvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ3MDc4MDAyIHdpdGggYSBjb3B5IHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyA6XGxpbmUgXGxpbmUgRURQIFJlbmV3YWJsZXMgTm9ydGggQW1lcmljYSBMTENcbGluZSA4MDggVHJhdmlzLCBTdWl0ZSA3MDBcbGluZSBIb3VzdG9uLCBUWCA3NzAwMlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDk0NDY3NSBBdHRuOiBHZW5lcmFsIENvdW5zZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFxsaW5lIEZhY3NpbWlsZTogICg3MTMpIDI2NS0wMzY1XGxpbmUgRS1tYWlsOiBsZXNsaWUuZnJlaW1hbkBlZHByLmNvbVxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IA0KXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdDQ1MFx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQxNjUxOTA4XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kNTU4XHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydA0KXGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjM0MFxjbHNoZHJhd25pbCBcY2VsbHgyNzkwXGNsdmVydGFsY1xjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNjY3OFxjbHNoZHJhd25pbCBcY2VsbHg5NDY4DQpccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHl0czExIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgSWZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNDU5MTYwNyAgdG8gUmlzaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ3MDc4MDAyIFRyZWUgSUk6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyN1xxbCBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXHBhcmFyc2lkNTEzMTg4MFx5dHMxMSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzA3ODAwMiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQxNjUxOTA4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFdpbmQgRmFybSBJSSBMTENcbGluZSA4MDggVHJhdmlzLCBTdWl0ZSA3MDBcbGluZSBIb3VzdG9uLCBUWCA3NzAwMiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQxNDY4MjU4NSBBdHRufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxOTE3NTVcY2hhcnJzaWQxNDY4MjU4NSA6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxOTE3NTVcY2hhcnJzaWQxMzE3NjcxMyAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgR2VuZXJhbCBDb3Vuc2VsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkMTY1MTkwOCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IEZhY3NpbWlsZTogICg3MTMpIDI2NS0wMzY1XGxpbmUgRS1tYWlsOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1XGNoYXJyc2lkODM1MTQgbGVnYWwubm90aWNlc0BlZHByLmNvbX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyANClxwYXIgd2l0aCBhIGNvcHkgdG86XGxpbmUgXGxpbmUgRURQIFJlbmV3YWJsZXMgTm9ydGggQW1lcmljYSBMTENcbGluZSA4MDggVHJhdmlzLCBTdWl0ZSA3MDBcbGluZSBIb3VzdG9uLCBUWCA3NzAwMiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkOTQ0Njc1IEF0dG46IEdlbmVyYWwgQ291bnNlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgXGxpbmUgDQpGYWNzaW1pbGU6ICAoNzEzKSAyNjUtMDM2NVxsaW5lIEUtbWFpbDogIGxlc2xpZS5mcmVpbWFuQGVkcHIuY29tXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgXHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93DQpcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0NDUwXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDE2NTE5MDhcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQ1NThcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYg0KXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzQwXGNsc2hkcmF3bmlsIFxjZWxseDI3OTBcY2x2ZXJ0YWxjXGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg2Njc4XGNsc2hkcmF3bmlsIFxjZWxseDk0Njhccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBceXRzMTEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgSX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDQ1OTE2MDcgZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzA3ODAwMiB0byBSaXNpbmcgVHJlZSBJSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IDpcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyN1xxbCBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXHBhcmFyc2lkNTEzMTg4MFx5dHMxMSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNTEzMTg4MCBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQxNjUxOTA4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFdpbmQgRmFybSBJSUkgTExDXGxpbmUgODA4IFRyYXZpcywgU3VpdGUgNzAwXGxpbmUgSG91c3RvbiwgVFggNzcwMDJcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ5NDQ2NzUgQXR0bn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTkxNzU1XGNoYXJyc2lkOTQ0Njc1IDogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxOTE3NTUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgR2VuZXJhbCBDb3Vuc2VsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkOTQ0Njc1IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgRmFjc2ltaWxlOiAgKDcxMykgMjY1LTAzNjVcbGluZSBFLW1haWw6IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzVcY2hhcnJzaWQ4MzUxNCBsZWdhbC5ub3RpY2VzQGVkcHIuY29tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIHdpdGggYSBjb3B5IHRvOlxsaW5lIFxsaW5lIEVEUCBSZW5ld2FibGVzIE5vcnRoIEFtZXJpY2EgTExDXGxpbmUgODA4IFRyYXZpcywgU3VpdGUgNzAwXGxpbmUgSG91c3RvbiwgVFggNzcwMDIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MFxjaGFycnNpZDk0NDY3NSBBdHRuOiBHZW5lcmFsIENvdW5zZWx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODAgXGxpbmUgRmFjc2ltaWxlOiAgKDcxMykgMjY1LTAzNjVcbGluZSBFLW1haWw6ICBsZXNsaWUuZnJlaW1hbkBlZHByLmNvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgDQpcdHJvd2QgXGlyb3cyXGlyb3diYW5kMlxsYXN0cm93IFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0NDUwXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDE2NTE5MDhcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQ1NThcdGJsaW5kdHlwZTMgXGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzQwXGNsc2hkcmF3bmlsIFxjZWxseDI3OTBcY2x2ZXJ0YWxjXGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg2Njc4XGNsc2hkcmF3bmlsIA0KXGNlbGx4OTQ2OFxyb3cgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEFsbCBub3RpY2VzIHdpbGwgYmUgZGVlbWVkIGRlbGl2ZXJlZCAoaSlcfndoZW4gcHJlc2VudGVkIHBlcnNvbmFsbHksIChpaSlcfmlmIGdpdmVuIGJ5IGZhY3NpbWlsZSBvciBieSBlLW1haWwsIG9uIGRpc3BhdGNoIHRvIHRoZSByZWNlaXZpbmcgQ28tT3duZXJccnF1b3RlIHMgZmFjc2ltaWxlIG51bWJlciBvciANCmUtbWFpbCBhZGRyZXNzIHNwZWNpZmllZCBhYm92ZSAod2l0aCBjb25maXJtYXRpb24pIHVubGVzcyBkaXNwYXRjaGVkIGFmdGVyIHRoZSByZWNpcGllbnRccnF1b3RlIA0KcyBub3JtYWwgYnVzaW5lc3MgaG91cnMgb24gYSBCdXNpbmVzcyBEYXkgb3IgZGlzcGF0Y2hlZCBvbiBhbnkgZGF5IG90aGVyIHRoYW4gYSBCdXNpbmVzcyBEYXksIGluIHdoaWNoIGNhc2Ugc3VjaCBub3RpY2Ugc2hhbGwgYmUgZGVlbWVkIHRvIGhhdmUgYmVlbiBkZWxpdmVyZWQgb24gdGhlIG5leHQgQnVzaW5lc3MgRGF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgDQosIHNvIGxvbmcgYXMgYSBjb3B5IG9mIHN1Y2ggZmFjc2ltaWxlIG9yIGVtYWlsIGlzIGFsc28gZGVsaXZlcmVkIGJ5IFVuaXRlZCBTdGF0ZXMgbWFpbCwgcG9zdGFnZSBwcmVwYWlkLCByZWdpc3RlcmVkIG9yIGNlcnRpZmllZCwgcmV0dXJuIHJlY2VpcHQgcmVxdWVzdGVkLCBvciBieSBhIG5hdGlvbmFsbHkgcmVjb2duaXplZCBvdmVybmlnaHQgcHJpdmF0ZSBjb3VyaWVyIHNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgOyAoaWlpKVx+dXBvbiByZWNlaXB0IGlmIGRlbGl2ZXJlZCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NDIzNSBhIG5hdGlvbmFsbHkgcmVjb2duaXplZCBvdmVybmlnaHQgcHJpdmF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KY291cmllciBzZXJ2aWNlIHRvIGVhY2ggcmVjZWl2aW5nIENvLU93bmVyIGF0IHRoZSBhcHBsaWNhYmxlIGFkZHJlc3Mgc3BlY2lmaWVkIGFib3ZlIChvciBzdWNoIG90aGVyIGFkZHJlc3MgYXMgdGhlIHJlY2VpdmluZyBDby1Pd25lciBtYXkgaGF2ZSBzcGVjaWZpZWQgYnkgbm90aWNlIGRlbGl2ZXJlZCB0byB0aGUgZGVsaXZlcmluZyBDby1Pd25lciksIG9yIChpdilcfg0KZml2ZSAoNSkgZGF5cyBhZnRlciBiZWluZyBkZXBvc2l0ZWQgaW4gYSBVbml0ZWQgU3RhdGVzIFBvc3RhbCBTZXJ2aWNlIHJlY2VwdGFjbGUsIHBvc3RhZ2UgcHJlcGFpZCwgcmVnaXN0ZXJlZCBvciBjZXJ0aWZpZWQsIHJldHVybiByZWNlaXB0IHJlcXVlc3RlZCwgYWRkcmVzc2VkIHRvIHRoZSByZWNlaXZpbmcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDA1MzA2MiAocyl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGF0IHRoZSBhZGRyZXNzIHNwZWNpZmllZCBhYm92ZSAob3Igc3VjaCBvdGhlciBhZGRyZXNzIGENCnMgc3VjaCByZWNlaXZpbmcgQ28tT3duZXIgbWF5IGhhdmUgc3BlY2lmaWVkIGJ5IG5vdGljZSBkZWxpdmVyZWQgdG8gdGhlIGRlbGl2ZXJpbmcgQ28tT3duZXIgYXQgaXRzIGFkZHJlc3Mgb3IgZmFjc2ltaWxlIG51bWJlciBzcGVjaWZpZWQgYWJvdmUpLiAgQSBDby1Pd25lciBtYXkgY2hhbmdlIGFueSBvciBhbGwgb2YgaXRzIGFkZHJlc3MsIGZhY3NpbWlsZSBudW1iZXIgb3IgZS1tYWlsIGFkZHJlc3MsIHRvIHdoaWNoIG5vdGljZXMgYW5kIGNvbQ0KbXVuaWNhdGlvbnMgYXJlIHRvIGJlIHNlbnQgYnkgZ2l2aW5nIG5vdGljZSBhcyByZXF1aXJlZCBieSB0aGlzIFNlY3Rpb25cfjE3LjE1Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xOFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IENvdW50ZXJwYXJ0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4NX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoaXMgQWdyZWVtZW50IG1heSBiZSBleGVjdXRlZCBpbiBvbmUgb3IgbW9yZSBjb3VudGVycGFydHMsIGVhY2ggb2Ygd2hpY2ggd2lsbCBiZSBhbiBvcmlnaW5hbCBidXQgYWxsIG9mIHdoaWNoLCB0YWtlbiB0b2dldGhlciwgd2lsbCBjb25zdGl0dXRlIG9ubHkgb25lIGxlZ2FsIGlucw0KdHJ1bWVudC4gIEl0IHdpbGwgbm90IGJlIG5lY2Vzc2FyeSBpbiBtYWtpbmcgcHJvb2Ygb2YgdGhpcyBBZ3JlZW1lbnQgdG8gcHJvZHVjZSBvciBhY2NvdW50IGZvciBtb3JlIHRoYW4gb25lIGNvdW50ZXJwYXJ0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xOVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFRpbWluZyBmb3IgUGVyZm9ybWFuY2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgaGVyZWluIHRvIHRoZSBjb250cmFyeSwgaWYgdGhlIHRpbWUgZm9yIHBlcmZvcm1pbmcgYW4gb2JsaWdhdGlvbiB1bmRlciB0aGlzIEFncmVlbWUNCm50IGV4cGlyZXMgb24gYSBkYXkgdGhhdCBpcyBub3QgYSBCdXNpbmVzcyBEYXksIHRoZSB0aW1lIGZvciBwZXJmb3JtaW5nIHNoYWxsIGJlIGV4dGVuZGVkIHVudGlsIHRoYXQgdGltZSBvbiB0aGUgbmV4dCBCdXNpbmVzcyBEYXkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzg3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjIwXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgV2FpdmVyIG9mIENvbnNlcXVlbnRpYWwgRGFtYWdlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4N30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM5Nzk0IEVBQ0ggT0YgVEhFIENPLU9XTkVSUyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDA1MzA2MiBBTkQgT1BFUkFUT1IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzk3OTQgRVhQUkVTU0xZIFdBSVZFUyBBTkQgSU4gTk8gRVZFTlQgU0hBTEwgQU5ZIE9GIFRIRSANCkNPLU9XTkVSU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MDUzMDYyICwgT1BFUkFUT1J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzOTc5NCANCiBPUiBBTlkgT0YgVEhFSVIgUkVTUEVDVElWRSBPRkZJQ0VSUywgRElSRUNUT1JTLCBNRU1CRVJTLCBQQVJUTkVSUywgU0hBUkVIT0xERVJTLCBFTVBMT1lFRVMsIEFHRU5UUyBPUiBBRkZJTElBVEVTIEJFQ09NRSBMSUFCTEUgVE8gVEhFIE9USEVSIEZPUiBTUEVDSUFMLCBJTkRJUkVDVCwgRVhFTVBMQVJZLCBQVU5JVElWRSBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT0YgQU5ZIE5BVFVSRSBXSEFUU09FVkVSIENPTg0KTkVDVEVEIFdJVEggT1IgUkVTVUxUSU5HIEZST00gUEVSRk9STUFOQ0UgT1IgTk9OLVBFUkZPUk1BTkNFIE9GIFRISVMgQUdSRUVNRU5ULCBPUiBPVEhFUldJU0UuICBUSElTIFdBSVZFUiBJTkNMVURFUywgV0lUSE9VVCBMSU1JVEFUSU9OLCBEQU1BR0VTIE9SIENMQUlNUyBJTiBUSEUgTkFUVVJFIE9GIExPU1QgUkVWRU5VRVMsIElOQ09NRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQyMDk2NjkgLCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTkxNzU1IFt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MjA5NjY5IFRBWCBQUkVGRVJFTkNFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTkxNzU1IF0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDE2MTkxNzU1IFtwbGVhc2UgZXhwbGFpbl19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM5Nzk0ICBPUiBQUk9GSVRTLCBMT1NTIE9GIFVTRSwgTw0KUiBDT1NUIE9GIENBUElUQUwsIElSUkVTUEVDVElWRSBPRiBXSEVUSEVSIFNVQ0ggREFNQUdFUyBBUkUgUkVBU09OQUJMWSBGT1JFU0VFQUJMRSBBTkQgSVJSRVNQRUNUSVZFIE9GIFdIRVRIRVIgU1VDSCBDTEFJTVMgQVJFIEJBU0VEIFVQT04gTkVHTElHRU5DRSwgU1RSSUNUIExJQUJJTElUWSwgQ09OVFJBQ1QsIE9QRVJBVElPTiBPRiBMQVcgT1IgT1RIRVJXSVNFfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzODh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBTdXJ2aXZhbH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4OH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50LCB0aGUgcHJvdmlzaW9ucyBvZiBBcnRpY2xlIEksIFNlY3Rpb25zIDIuMiBhbmQgMi4zLCBBcnRpY2xlIFhJSSAoVGF4ZXMpLCBBcnRpY2xlIFhWIChJbmRlbW5pZmljYXRpb24pLCBhbmQgQXJ0aWNsZSBYVklJIHNoYWxsIHN1cnZpdmUgdGhlIHRlcm1pbmF0aW9uIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzg5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MzQyODU5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjIyXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTkwODM4IFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQzNDI4NTkgTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0MzQyODU5IC4gIEVhY2ggQ28tT3duZXIgYWdyZWVzIHRvIHNpZ24gYW5kIGFja25vd2xlZGdlIHRoZSBNZW1vcmFuZHVtIG9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3NTUxMyBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDQzNDI4NTkgIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGlcdWxub25lXGluc3JzaWQ0MzQyODU5IFwnOTNNZW1vcmFuZHVtXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0MzQyODU5ICkgaW4gdGhlIGZvcm0gYXR0YWNoZWQgaGVyZXRvIGFzIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgR317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0MzQyODU5IC4gIE9wZXJhdG9yIHNoYWxsIHJlY29yZCB0aGUgTWVtb3JhbmR1bSBwcm9tcHRseSBpbiB0aGUgT2ZmaWNlIG9mIHRoZSBDb3VudHkgUmVjb3JkZXIgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDkxOTIxNTkgS2VybiB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0MzQyODU5IENvdW50eSwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDkxOTIxNTkgQ2FsaWZvcm5pYSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDM0Mjg1OSBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIzMjM4OTQgLn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NFxjaGFycnNpZDcwNzgwMDIge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4OX0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzkwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMzIzODk0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjIzXHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMzIzODk0IE90aGVyIEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQyMzIzODk0IC4gIFRoZSByaWdodHMgYW5kIG9ibGlnYXRpb25zIG9mIHRoZSBDby1Pd25lcnMgYW5kIE9wZXJhdG9yIGhlcmV1bmRlciBhcmUgaW5kZXBlbmRlbnQgb2YgYW5kIGluIGFkZGl0aW9uIHRvIGFueSByaWdodHMgYW5kIG9ibGlnYXRpb25zIG9mIHN1Y2ggcGFydGllcyB1bmRlciB0aGUgTEdJQSBDby1UZW5hbmN5IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDQzNDI4NTkgLntcKlxia21rZW5kIF9Ub2M0MDQwMTMzOTB9ICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ1OTE4MzI5IFNpZ25hdHVyZXMgZm9sbG93IG9uIG5leHQgcGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxwYWdlIFRvIGV2aWRlbmNlIGl0cyBhY2NlcHRhbmNlIG9mIHRoaXMgQWdyZWVtZW50LCBhbmQgaW50ZW5kaW5nIHRvIGJlIGxlZ2FsbHkgYm91bmQsIGVhY2ggQ28tT3duZXIgaGFzIGNhdXNlZCBpdHMgYXV0aG9yaXplZCByZXByZXNlbnRhdGl2ZSB0byBzaWduIGJlbG93IGFzIG9mIHRoZSBkYXRlIGZpcnN0IHdyaXR0ZW4gYWJvdmUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANCg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTY3MzE1MiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtIExMQ1xsaW5lIFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEJ5OlxsaW5lIFRpdGxlOn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMTE4NjQ4MzUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExODY0ODM1IFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTE4NjQ4MzUgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTg2NDgzNSBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTY3MzE1MiBSaXNpbmcgVHJlZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQzNDI4NTkgV2luZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjczMTUyIElJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ1OTE4MzI5IExMQ1xsaW5lIFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEJ5OlxsaW5lIFRpdGxlOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDExODY0ODM1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTg2NDgzNSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDExODY0ODM1IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE4NjQ4MzUgQnk6XGxpbmUgVGl0bGU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2NzMxNTIgUmlzaW5nIFRyZWUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjczMTUyIElJSSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgTExDXGxpbmUgXGxpbmUgXGxpbmUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBCeTpcbGluZSBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxMTg2NDgzNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE4NjQ4MzUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxMTg2NDgzNSBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODY0ODM1IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzggQS19e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcaW5zcnNpZDM0MzgwNzggIFBBR0UgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2NTE5MDggDQo2fX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzg2NTUzMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTQyODY5NyB7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejRcc2hwbGlkMjIzMHtcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19DQp7XHNwe1xzbiBsVHhpZH17XHN2IDMyNzY4MH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMzB9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF81fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NTE2OH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgxOTZcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRVhISUJJVCBBXGxpbmUgU0NIRURVTEUgT0YgREVGSU5JVElPTlN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpXGluc3JzaWQ1OTE4MzI5IEFkZGl0aW9uYWwgUGhhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzM3NTUxMyANCmFkZGl0aW9uYWwgZ2VuZXJhdGlvbiBmYWNpbGl0aWVzIG93bmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzc1NTEzICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBpdHMgQWZmaWxpYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMzNzU1MTMgb3IgYW5vdGhlciBQZXJzb24gdGhhdCBoYXZlIGJlZW4gYXBwcm92ZWQgYnkgdGhlIENvLU93bmVycyB0byBiZSBjb25uZWN0ZWQgdG8gYW5kIHRvIHVzZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQWZmZWN0ZWQgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH43LjEufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBZmZpbGlhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFucywgd2l0aCByDQplc3BlY3QgdG8gYW55IENvLU93bmVyLCBhbnkgUGVyc29uIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgY29udHJvbGxpbmcsIGNvbnRyb2xsZWQgYnkgb3IgdW5kZXIgY29tbW9uIGNvbnRyb2wgd2l0aCBzdWNoIENvLU93bmVyLiAgVGhlIHRlcm0gXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IGNvbnRyb2x9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQNCiBhbmQgY29ycmVsYXRpdmUgdGVybXMgaW5jbHVkZXMgdGhlIHBvc3Nlc3Npb24sIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYW5kIHdoZXRoZXIgYWN0aW5nIGFsb25lIG9yIGluIGNvbmp1bmN0aW9uIHdpdGggb3RoZXJzLCBvZiB0aGUgYXV0aG9yaXR5IHRvIGRpcmVjdCBvciBjYXVzZSB0aGUgZGlyZWN0aW9uIG9mIHRoZSBtYW5hZ2VtZW50IG9yIHBvbGljaWVzIG9mIGEgUGVyc29uLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhcyB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIFByZWFtYmxlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5OTM1OTkgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBbm51YWwgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjYuOC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFwcGxpY2FibGUgTGF3c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYWxsIGFwcGxpYw0KYWJsZSBjb25zdGl0dXRpb25hbCBwcm92aXNpb25zLCBzdGF0dXRlcywgYWN0cywgY29kZXMsIGxhd3MsIHJ1bGVzLCByZWd1bGF0aW9ucywgb3JkaW5hbmNlcywgb3JkZXJzLCBpbnRlcnByZXRhdGlvbnMsIHBlcm1pdHMsIHRyZWF0aWVzLCBqdWRnbWVudHMsIGRlY3JlZXMsIHJ1bGluZ3MsIGRlY2lzaW9ucywgaW5qdW5jdGlvbnMsIHdyaXRzIGFuZCBvcmRlcnMgb2YgYSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQnVzaW5lc3MgRGF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWVhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhDQpueSBkYXkgZXhjZXB0IGEgU2F0dXJkYXksIFN1bmRheSBvciBvdGhlciBkYXlzIG9uIHdoaWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODIgc3RhdGUgb3IgZmVkZXJhbCBiYW5rcyBpbiBbTG9zIEFuZ2VsZXMsIENhbGlmb3JuaWFdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhcmUgY2xvc2VkIG9yIGF1dGhvcml6ZWQgdG8gYmUgY2xvc2VkLiAgQSBCdXNpbmVzcyBEYXkgc2hhbGwgYmVnaW4gYXQgODowMCBhLm0uIGFuZCBlbmQgYXQgNTowMCBwLm0uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODIgUFBUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDY2ODg5NDQgQ0FJU08gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgbWVhbnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCB0aGUgQ2FsaWZvcm5pYSBJbmRlcGVuZGVudCBTeXN0ZW0gT3BlcmF0aW9uIENvcnBvcmF0aW9uIG9yIGl0cyBzdWNjZXNzb3IgYWdlbmN5Ln17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NFxjaGFycnNpZDk0NDY3NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDYxNTM5NCBDQUlTTyBUYXJpZmZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTgwODU2IA0KbWVhbnMgdGhlIENhbGlmb3JuaWEgSW5kZXBlbmRlbnQgU3lzdGVtIE9wZXJhdG9yIENvcnBvcmF0aW9uLCBGaWZ0aCBSZXBsYWNlbWVudCBGRVJDIEVsZWN0cmljIFRhcmlmZiAoT3BlbiBBY2Nlc3MgVHJhbnNtaXNzaW9uIFRhcmlmZiksIGFzIGl0IG1heSBiZSBhbWVuZGVkLCBzdXBwbGVtZW50ZWQgb3IgcmVwbGFjZWQgKGluIHdob2xlIG9yIGluIHBhcnQpIGZyb20gdGltZSB0byB0aW1lLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjE1Mzk0XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDYXBpdGFsIEltcHJvdmVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhbnkgYWRkaXRpb25zLCBtb2RpZmljYXRpb25zIG9yIHN1YnN0aXR1dGlvbnMgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNoYXJlZCBSZWFsIFByb3BlcnR5IHdoaWNoLCBpbiBhY2NvcmRhbmNlIHdpdGggZ2VuZXJhbGx5IGFjY2VwdGVkIGFjY291bnRpbmcgcHJpbmNpcGxlcywgc2hvdWxkIGJlIGNhcGl0YWxpemVkLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNTQyNjE3OCBDaGFuZ2Ugb2YgQ29udHJvbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4ICBtZWFuc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSAsIHdpdGggcmVzcGVjdCB0byBhbnkgUGVyc29uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSANCnRoZSBjaGFuZ2UsIGluIG9uZSB0cmFuc2FjdGlvbiBvciBhIHNlcmllcyBvZiB0cmFuc2FjdGlvbnMsIG9mIHRoZSBkaXJlY3Qgb3IgaW5kaXJlY3Qgb3duZXJzaGlwIG9mIGZpZnR5IHBlcmNlbnQgKDUwJSkgb3IgbW9yZSBvZiB0aGUgZXF1aXR5IG93bmVyc2hpcCBpbnRlcmVzdHMgb2Ygc3VjaCBQZXJzb24gb3RoZXIgdGhhbiBzb2xlbHkgZm9yIGZpbmFuY2luZyBwdXJwb3Nlcy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTQyNjE3OFxjaGFycnNpZDk0NDY3NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ2xhaW1pbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNy4yLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ29tbWlzc2lvbmluZyBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWVhbnMsIGFzIGFwcGxpY2FibGUsIHRoZSBkYXRlIG9mIGNvbW1pc3Npb25pbmcgb2YgdGhlIGZpcnN0IHdpbmQgdHVyYmluZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNTEwOTgyIHRoZSBGYWNpbGl0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb3IgQWRkaXRpb25hbCBQaGFzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODIgIGluIHF1ZXN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBoYXMgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gdGhlIFByZQ0KYW1ibGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgQ2Vhc2luZyBCdXNpbmVzcyBPcGVyYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH44LjEufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ3Jvc3MgSW5kZW1uaXRlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjE1LjIufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDcm9zcyBJbmRlbW5pdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+MTUuMi59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IERlY29tbWlzc2lvbmluZyBPYmxpZ2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+DQo4LjEufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRGVsaXZlcnkgQ2FwYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIG1lYW5zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQp0aGUgYW1vdW50IG9mIGVsZWN0cmljYWwgZW5lcmd5IHRoYXQgY2FuIGJlIGRlbGl2ZXJlZCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0Njc1IFBvaW50IG9mIEludGVyY29ubmVjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGF0IGFueSBpbnN0YW50IG9mIHRpbWUuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRWZmZWN0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4zLjEufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBFbWVyZ2VuY3kgQ29uZGl0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+Ni42Ln17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRW52aXJvbm1lbnRhbCBMYXdzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWVhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhbGwgQXBwbGljYWJsZSBMYXdzIHJlbGF0aW5nIHRvIChpKVx+DQpmYWNpbGl0eSBzaXRpbmcsIGxhbmQgdXNlIGFuZCBlbnZpcm9ubWVudGFsIG1hdHRlcnM7IChpaSlcfnRoZSBjb250cm9sIG9mIGFueSBwb2xsdXRhbnQsIG9yIHByb3RlY3Rpb24gb2YgdGhlIGFpciwgd2F0ZXIsIG9yIGxhbmQ7IChpaWkpXH5zb2xpZCwgZ2FzZW91cyBvciBsaXF1aWQgd2FzdGUgZ2VuZXJhdGlvbiwgaGFuZGxpbmcsIHRyZWF0bWVudCwgc3RvcmFnZSwgZGlzcG9zYWwgb3IgdHJhbnNwb3J0YXRpb247IChpdilcfg0KZXhwb3N1cmUgdG8gaGF6YXJkb3VzLCB0b3hpYyBvciBvdGhlciBoYXJtZnVsIHN1YnN0YW5jZXM7IGFuZCAodilcfnRoZSBwcm90ZWN0aW9uIGFuZCBlbmhhbmNlbWVudCBvZiB0aGUgZW52aXJvbm1lbnQuICBFbnZpcm9ubWVudGFsIExhd3MgaW5jbHVkZXMgbGF3cyB3aGljaCByZWxhdGVzIHRvIGVudmlyb25tZW50YWwgcXVhbGl0eSwgaGVhbHRoLCBzYWZldHksIHBvbGx1dGkNCm9uLCBjb250YW1pbmF0aW9uLCBjbGVhbnVwLCBvciB0aGUgcHJvdGVjdGlvbiBvZiBodW1hbiBoZWFsdGgsIGFtYmllbnQgYWlyLCB3YXRlcnMgKGluY2x1ZGluZyBncm91bmQgd2F0ZXJzKSBvciBsYW5kLCBhbmQ6IHRoZSBDbGVhbiBBaXIgQWN0LCA0MiBVLlMuQy4gXCdhNzc0MDEgZXQgc2VxLiAoQ0FBKSwgdGhlIENsZWFuIFdhdGVyIEFjdCwgMzMgVS5TLkMuIFwnYTcNCiAxMjUxIGV0IHNlcS4gKENXQSksIHRoZSBOYXRpb25hbCBFbnZpcm9ubWVudGFsIFBvbGljeSBBY3QsIDQyIFUuUy5DLiBcJ2E3IDQzMjEgZXQgc2VxLiwgdGhlIEVuZGFuZ2VyZWQgU3BlY2llcyBBY3QsIDE2IFUuUy5DLiBcJ2E3IDE1MzEgZXQgc2VxLiwgdGhlIFJlc291cmNlIENvbnNlcnZhdGlvbiBSZWNvdmVyeSBBY3QsIDQyIFUuUy5DLiBcJ2E3DQo2OTAxIGV0IHNlcS4gKFJDUkEpLCB0aGUgU2FmZSBEcmlua2luZyBXYXRlciBBY3QuIDQyIFUuUy5DLiBcJ2E3MzAwZiBldCBzZXEuLCB0aGUgQ29tcHJlaGVuc2l2ZSBFbnZpcm9ubWVudGFsIFJlc3BvbnNlLCBDb21wZW5zYXRpb24sIGFuZCBMaWFiaWxpdHkgQWN0IGFzIGFtZW5kZWQgYnkgdGhlIFN1cGVyZnVuZCBBbWVuZG1lbnRzIGFuZCBSZWF1dGhvcml6YXRpb24gQWN0LCAzMiBVLlMuQy4gXCdhNw0KOTYwMSBldCBzZXEuIChDRVJDTEEpLCB0aGUgRmVkZXJhbCBJbnNlY3RpY2lkZSwgRnVuZ2ljaWRlIGFuZCBSb2RlbnRpY2lkZSBBY3QsIDcgVS5TLkMuIFwnYTcgMTM2IGV0IHNlcS4sIHRoZSBIYXphcmRvdXMgU3Vic3RhbmNlcyBUcmFuc3BvcnRhdGlvbiBBY3QsIDQ5IFUuUy5DLiBcJ2E3MTgwMSBldCBzZXEuLCB0aGUgVG94aWMgU3Vic3RhbmNlcyBDb250cm9sIEFjdCwgMTUgVS5TLkMuIFwnYTcNCjI2MDEgZXQgc2VxLiAoVFNDQSksIGFuZCB0aGUgRW1lcmdlbmN5IFBsYW5uaW5nIGFuZCBDb21tdW5pdHkgUmlnaHQtdG8tS25vdyBBY3QsIDQyIFUuUy5DLiBcJ2E3MTEwMDEgZXQgc2VxLiwgYW55IHN0YXRlIG9yIGxvY2FsIGxhd3MgcmVsYXRpbmcgdG8gcGVybWl0cywgbG9jYWwgbGFuZCB1c2UgY29udHJvbCBvcmRpbmFuY2VzIA0Kb3Igc2ltaWxhciBsYXdzLCBhbmQgYW55IHN0YXRlIG9yIGxvY2FsIGxhd3MgaW1wbGVtZW50aW5nIG9yIHN1YnN0YW50aWFsbHkgZXF1aXZhbGVudCB0byB0aGUgZm9yZWdvaW5nIGZlZGVyYWwgcmVxdWlyZW1lbnRzLCBhbmQgb3RoZXIgc2ltaWxhciBsYXdzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEV2ZW50IG9mIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBhcyBnaXZlbiBpbiBTZWN0aW9uXH4xMy4xLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRXh0cmFvcmRpbmFyeSBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfg0KNi45Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEZhY2lsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBoYXZlIHRoZSBtZWFuaW5ncyBnaXZlbiBpbiBSZWNpdGFsIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjUxMDk4MiBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwODU5NDYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxMjA4NTk0NiBGRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwODU5NDYgIG1lYW5zIHRoZSBGZWRlcmFsIEVuZXJneSBSZWd1bGF0b3J5IENvbW1pc3Npb24gYW5kIGFueSBzdWNjZXNzb3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDg0Njk5MDBcY2hhcnJzaWQ4NDY5OTAwIEZpYmVyIE9wdGljIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDY5OTAwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDY5OTAwIA0KIHRoZSBtZWFuaW5nIGdpdmVuIGluIEV4aGliaXQgQi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDY5OTAwXGNoYXJyc2lkODQ2OTkwMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRm9yY2UgTWFqZXVyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhbiBldmVudCBvciBjaXJjdW1zdGFuY2Ugd2hpY2ggcHJldmVudHMgYSBDby1Pd25lciBmcm9tIHBlcmZvcm1pbmcgaXRzIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50LCB3aGljaCBldmVudCBvciBjaXJjdW1zdGFuY2UgaXMgbm90IHdpdGhpbiB0aGUgcmVhc29uYWJsZSBjb250cm9sIG9mLCBvciBhIHJlc3VsdCBvZiB0aGUgbmVnbGlnZW5jZSBvZiwgdGhlIENsYWltaW5nIFBhcnR5LCBhbmQgd2hpY2gsIGJ5IHRoZSBleGVyY2lzZQ0KIA0Kb2YgY29tbWVyY2lhbGx5IHJlYXNvbmFibGUgZWZmb3J0cywgdGhlIENsYWltaW5nIFBhcnR5IGlzIHVuYWJsZSB0byBvdmVyY29tZSBvciBhdm9pZCBvciBjYXVzZSB0byBiZSBhdm9pZGVkLiAgRm9yY2UgTWFqZXVyZSBpbmNsdWRlcyB0aGUgZm9sbG93aW5nOiBmaXJlczsgc3Rvcm1zOyBlYXJ0aHF1YWtlczsgZmxvb2RzOyBsaWdodG5pbmc7IGxhbmRzbGlkZXM7IHZvbGNhbmljIGVydXB0aW9uczsgaHVycmljYW5lczsgdGlkYWwgd2F2ZXM7IGVwDQppDQpkZW1pY3M7IGV4cGxvc2lvbnM7IGN5Y2xvbmVzOyB0b3JuYWRvZXM7IGFjdHMgb2YgR29kOyB0ZW1wZXN0czsgb3RoZXIgbmF0dXJhbCBkaXNhc3RlcnM7IHN0cmlrZXMsIHdvcmsgc3RvcHBhZ2VzLCB3YWxrb3V0cywgbG9ja291dHMgYW5kIG90aGVyIGxhYm9yIGRpZmZpY3VsdGllczsgY2l2aWwgZGlzdHVyYmFuY2VzOyBzYWJvdGFnZTsgdmFuZGFsaXNtOyBsYWJvciwgbWF0ZXJpYWwgYW5kIGVxdWlwbWVudCBzaG9ydGFnZXMgKGluY2x1ZGluZyANCnNwYXJlIHBhcnRzIHNob3J0YWdlcyk7IGVxdWlwbWVudCBmYWlsdXJlIG9yIGJyZWFrZG93bjsgaW50ZXJydXB0aW9ucyB0byB0cmFuc3BvcnRhdGlvbjsgYWN0cyBvZiBtaWxpdGFyeSBhdXRob3JpdGllczsgY291cnQgYWN0aW9uczsgd2FyIChkZWNsYXJlZCBvciBub3QpOyByaW90OyBwdWJsaWMgZGlzb3JkZXI7IGNvbmRlbW5hdGlvbiBvZiBwcm9wZXJ0eTsgcXVhcmFudGluZTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDQ2NzUgYWN0aW9ucywgZmFpbHVyZXMgdG8gYWN0IG9yIGRlbGF5cyBpbiBhY3RpbmcgYnkgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHk7IGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KbGF0ZSBkZWxpdmVyeSBvciBub24tZGVsaXZlcnkgb2YgbWFjaGluZXJ5LCBlcXVpcG1lbnQsIGZ1ZWwsIG1hdGVyaWFscywgY29tcG9uZW50cywgcGFydHMgb3IgY29uc3VtYWJsZXMgYW5kIGRlbGF5IGluIHRoZSBwZXJmb3JtYW5jZSBvciB0aGUgbm9uLXBlcmZvcm1hbmNlIGJ5IGEgQ28tT3duZXJccnF1b3RlIHMgY29udHJhY3RvcnMgb3Igc3ViY29udHJhY3RvcnMsIGluIGVhY2ggY2FzZSBhcyBhIHJlc3VsdCBvZiBhbiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSBldmVudCBvciBvY2N1cnJlbmNlIHRoYXQgaXMgb3RoZXJ3aXNlIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZXZlbnQgb2YgRm9yY2UgTWFqZXVyZS4gIEEgQ28tT3duZXIgd2lsbCBub3QgY2xhaW0gRm9yY2UgTWFqZXVyZSBiYXNlZCBvbiAoaSlcfnRoZSBsb3NzIG9mIG1hcmtldCBmb3IgYSBGYWNpbGl0eVxycXVvdGUgDQpzIGVsZWN0cmljYWwgb3V0cHV0LCAoaWkpXH50aGUgZWNvbm9taWMgaW5mZWFzaWJpbGl0eSBvZiBnZW5lcmF0aW5nIGVsZWN0cmljaXR5IGZyb20gYSBDby1Pd25lclxycXVvdGUgcyBGYWNpbGl0eSwgb3IgKGlpaSlcfml0cyBpbmFiaWxpdHkgdG8gbWFrZSBhIHBheW1lbnQgb2JsaWdhdGlvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzIyODgzNSBGUEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMjI4ODM1ICBtZWFucyB0aGUgRmVkZXJhbCBQb3dlciBBY3QsIGFzIGFtZW5kZWQsIGFuZCB0aGUgcmVndWxhdGlvbnMgb2YgRkVSQyB0aGVyZXVuZGVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMjg4MzVcY2hhcnJzaWQzMjI4ODM1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBHb29kIFV0aWxpdHkgUHJhY3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogYW55IG9mIHRoZSBwcmFjdGljZXMsIG1ldGhvZHMgYW5kIGFjdHMgZW5nYWdlZCBpbiBvciBhcHByb3ZlZCBieSBhDQogc2lnbmlmaWNhbnQgcG9ydGlvbiBvZiB0aGUgZWxlY3RyaWMgdXRpbGl0eSBpbmR1c3RyeSBkdXJpbmcgdGhlIHJlbGV2YW50IHRpbWUgcGVyaW9kLCBvciBhbnkgb2YgdGhlIHByYWN0aWNlcywgbWV0aG9kcyBhbmQgYWN0cyB3aGljaCwgaW4gdGhlIGV4ZXJjaXNlIG9mIHJlYXNvbmFibGUganVkZ21lbnQgaW4gbGlnaHQgb2YgdGhlIGZhY3RzIGtub3duIGF0IHRoZSB0aW1lIHRoZSBkZWNpc2lvbiB3YXMgbWFkZSwgY291bGQgaGF2ZSBiZWVuIGUNCngNCnBlY3RlZCB0byBhY2NvbXBsaXNoIHRoZSBkZXNpcmVkIHJlc3VsdCBhdCBhIHJlYXNvbmFibGUgY29zdCBjb25zaXN0ZW50IHdpdGggZ29vZCBidXNpbmVzcyBwcmFjdGljZXMsIHJlbGlhYmlsaXR5LCBzYWZldHkgYW5kIGV4cGVkaXRpb24uICBHb29kIFV0aWxpdHkgUHJhY3RpY2UgaXMgbm90IGludGVuZGVkIHRvIGJlIGxpbWl0ZWQgdG8gdGhlIG9wdGltdW0gcHJhY3RpY2UsIG1ldGhvZCBvciBhY3QgdG8gdGhlIGV4Y2x1c2lvbiBvZiBhbGwgbw0KdA0KaGVycywgYnV0IHJhdGhlciB0byBiZSBhY2NlcHRhYmxlIHByYWN0aWNlcywgbWV0aG9kcyBvciBhY3RzIGdlbmVyYWxseSBhY2NlcHRlZCBpbiB0aGUgcmVnaW9uIGluIHdoaWNoIHRoZSBGYWNpbGl0aWVzIGFyZSBsb2NhdGVkLiAgR29vZCBVdGlsaXR5IFByYWN0aWNlIHNoYWxsIGluY2x1ZGUsIGJ1dCBub3QgYmUgbGltaXRlZCB0bywgTkVSQyBjcml0ZXJpYSwgcnVsZXMsIGd1aWRlbGluZXMgYW5kIHN0YW5kYXJkcywgY3JpdGVyaWEsIHJ1bGVzDQosIGd1aWRlbGluZXMgYW5kIHN0YW5kYXJkcywgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSB0aGUgQ0FJU09ccnF1b3RlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIGNyaXRlcmlhLCBydWxlcywgZ3VpZGVsaW5lcyBhbmQgc3RhbmRhcmRzLCB3aGVyZSBhcHBsaWNhYmxlLCBhcyB0aGV5IG1heSBiZSBhbWVuZGVkIGZyb20gdGltZSB0byB0aW1lLCBpbmNsdWRpbmcgdGhlIHJ1bGVzLCBndWlkZWxpbmVzIGFuZCBjcml0ZXJpYSBvZiBhbnkgc3VjY2Vzc29yIG9yZ2FuaXphdGlvbiB0byB0aGUgZm9yZWdvaW5nIGVudGl0aWVzLiAgV2hlbiBhcA0KcGxpZWQgdG8gdGhlIENvLU93bmVycyBpbiB0aGVpciBvcGVyYXRpb24gb2YgdGhlaXIgRmFjaWxpdGllcywgdGhlIHRlcm0gR29vZCBVdGlsaXR5IFByYWN0aWNlIHNoYWxsIGFsc28gaW5jbHVkZSBzdGFuZGFyZHMgYXBwbGljYWJsZSB0byBhbiBpbmRlcGVuZGVudCBwb3dlciBwcm9kdWNlciBjb25uZWN0aW5nIHRvIHRoZSBkaXN0cmlidXRpb24gb3IgdHJhbnNtaXNzaW9uIGZhY2lsaXRpZXMgb3Igc3lzdGVtIG9mIGEgdXRpbGl0eS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEdvdmVybm1lbnRhbCBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogYW55IGZlZGVyYWwsIHN0YXRlLCBsb2NhbCwgdHJpYmFsIG9yIGZvcmVpZ24gZ292ZXJubWVudGFsIGF1dGhvcml0eSAoaW5jbHVkaW5nIGFueSByZWd1bGF0b3J5IGF1dGhvcml0eSk7IGEgc3RhdGUsIHByb3ZpbmNlLCBjb21tb253ZWFsdGgsIHRlcnJpdG9yeSBvciBkaXN0cmljdCB0aGVyZW9mOyBhIGNvdW50eSBvciBwYXJpc2g7IGEgY2l0eSwgdG93biwgdG93bnNoaXAsIHZpbGxhZ2Ugb3Igb3RoZXIgbXVuDQppY2lwYWxpdHk7IGEgZGlzdHJpY3QsIHdhcmQgb3Igb3RoZXIgc3ViZGl2aXNpb24gb2YgYW55IG9mIHRoZSBmb3JlZ29pbmc7IGFuIGV4ZWN1dGl2ZSwgbGVnaXNsYXRpdmUgb3Igb3RoZXIgZ292ZXJuaW5nIGJvZHkgb2YgYW55IG9mIHRoZSBmb3JlZ29pbmc7IGFueSBhZ2VuY3ksIGF1dGhvcml0eSwgYm9hcmQsIGRlcGFydG1lbnQsIHN5c3RlbSwgc2VydmljZSwgb2ZmaWNlLCBjb21taXNzaW9uLCBjb21taXR0ZWUsIGNvdW5jaWwgb3Igb3RoZXINCiBhZG1pbmlzdHJhdGl2ZSBib2R5IG9mIGFueSBvZiB0aGUgZm9yZWdvaW5nOyBhbnkgY291cnQgb3Igb3RoZXIganVkaWNpYWwgYm9keTsgYW5kIGFueSBvZmZpY2VyLCBvZmZpY2lhbCBvciBvdGhlciByZXByZXNlbnRhdGl2ZSBvZiBhbnkgb2YgdGhlIGZvcmVnb2luZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTE2NTg1IA0KLCBvciBxdWFzaS1nb3Zlcm5tZW50YWwgZW50aXR5IGFjdGluZyB1bmRlciBkZWxlZ2F0ZWQgYXV0aG9yaXR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhdmluZyBvciBhc3NlcnRpbmcganVyaXNkaWN0aW9uIG92ZXIgYSBDby1Pd25lciwgdGhlIHN1YmplY3QgbWF0dGVyIG9mIHRoaXMgQWdyZWVtZW50LCBvciB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4NjY3MiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ4NjY3MiBHcmFudGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyIA0KIGhhcyB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH40LjEuDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBIYXphcmRvdXMgTWF0ZXJpYWxzIExhd3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW55IGFwcGxpY2FibGUgbGF3IG9yIHJlZ3VsYXRpb24gcmVsYXRpbmcgdG8gYW55IHN1YnN0YW5jZSwgbWF0ZXJpYWwgb3Igd2FzdGUgY2xhc3NpZmllZCBhcyBoYXphcmRvdXMgb3IgdG94aWMsIG9yIHdoaWNoIGlzIHJlZ3VsYXRlZCBhcyB3YXN0ZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEluZGVtbml0ZWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+MTUuMS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEluZGVtbml0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNS4xLiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNDI1MzAgdGhhdCBjZXJ0YWluIExhcmdlIEdlbmVyYXRvciBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IGRhdGVkIGFzIG9mIE1hcmNoIDI3LCANCjIwMTMsIGJ5IGFuZCBhbW9uZyB0aGUgQ0FJU08sIHRoZSBUcmFuc21pc3Npb24gT3duZXIsIHRoZSBDby1Pd25lcnMgKGluIHRoZSBjYXNlIG9mIFJpc2luZyBUcmVlIElJSSwgYXMgc3VjY2Vzc29yIHRvIEFkZGlzb24gV2luZCBSZXNvdXJjZXMsIExMQyksIGFuZCBSaXNpbmcgVHJlZSBJLCBhcyBtYW5hZ2VyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExhc3QgVXNlIE5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjguMS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExhdGUgUGF5bWVudCBSYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaGFzIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiBTZWN0aW9uXH42LjEwLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExlbmRlcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNC4xLn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTGVuZGVyXHJxdW90ZSBzIExpZW5zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+MTQuMS4gDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjA0MjUzMCBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA0MjUzMCAgaGFzIHRoZSBtZWFuaW5nIGdpdmVuIGluIFJlY2l0YWwgRC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDQyNTMwXGNoYXJyc2lkNzA3ODAwMiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTGluZSBMb3NzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGxvc3Mgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNzEyMTY0IGVsZWN0cmljIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZW5lcmd5IHRyYW5zbWl0dGVkIG9uIFRyYW5zbWlzc2lvbiBMaW5lLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxMzU4OTIwMFxjaGFycnNpZDEzNTg5MjAwIExvc3Nlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwICBoYXMgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvbiAxNS4xLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjUxMDk4MiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCB0aGlzIEFncmVlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpwdXJjaGFzZSBvciB3YXJyYW50eSBhZ3JlZW1lbnRzIHJlbGF0aW5nIHRvIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMjg4MjQgLCBhbmQgY2VydGFpbiBvdGhlciBhZ3JlZW1lbnRzIHJlbGF0ZWQgdG8gdGhlIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMDcxMTcwIHNldCBmb3J0aCBvbiBFeGhpYml0IEQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCm90aGVyIGFncmVlbWVudHMgdG8gYmUgaW5jbHVkZWQgdXBvbiB0aGUgbXV0dWFsIGFncmVlbWVudCBvZiB0aGUgQ28tT3duZXJzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTA4MzhcY2hhcnJzaWQ1OTA4MzggTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQzNDI4NTkgIGhhcyB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uIDE3LjIwLiAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ0NjA3ODk0IE1ldGVyZWQgRW5lcmd5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwNzg5NCAgbWVhbnMgdGhlIGFtb3VudCBvZiBlbGVjdHJpYyBlbmVyZ3kgbWVhc3VyZWQgYXQgYSBnaXZlbiBwb2ludCwgc3VjaCBhcyBhdCB0aGUgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDYwNzg5NFxjaGFycnNpZDEzMTc2NzEzIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBNV317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW5zIG1lZ2F3YXR0cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBORVJDIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbWVhbnMgdGhlIE5vcnRoIEFtZXJpY2FuIEVsZWN0cmljIFJlbGlhYmlsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE3MTIxNjQgQ29ycG9yYXRpb24gYW5kIGl0cyBzdWNjZXNzb3JzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBOb24tQ3VyYWJsZSBEZWZhdWx0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjE0LjUufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBOb24tRGVmYXVsdGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfg0KMTMuMi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCAzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTyZNIENvc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+Ni43LiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gRmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFucyBhbiBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIGJ1aWxkaW5nIGFuZCByZWxhdGVkIGZhY2lsaXRpZXMgZm9yIGEgRmFjaWxpdHksIGluY2x1ZGluZyBlcXVpcG1lbnQgYW5kIHN5c3RlbXMgaG91c2VkIHRoZXJlaW4ufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH42LjEuIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTyZNIFNlcnZpY2VzIENvbW1lbmNlbWVudCBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH42LjMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI1MTA5ODIgb3Igb3RoZXIgUGVyc29uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQplbmdhZ2VkIGJ5IHRoZSBDby1Pd25lcnMgdG8gbWFuYWdlLCBvcGVyYXRlLCBtYWludGFpbiBhbmQgcmVwYWlyIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdG8gcGVyZm9ybSBvdGhlciBkdXRpZXMgcGVydGFpbmluZyB0byB0aGUgU2hhcmVkIEFzc2V0cyBhcyBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudC4gICBUaGUgT3BlcmF0b3Igc2hhbGwgaW5pdGlhbGx5IGJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjUxMDk4MiBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0OTA1OSAgb3IgYW4gQWZmaWxpYXRlIGRlc2lnbmF0ZWQgYnkgaXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgc3ViamVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCByZXBsYWNlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcHVyc3VhbnQgdG8gU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggNi4xNyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCjEzLjIuMi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogdGhlIHVuZGl2aWRlZCBpbnRlcmVzdCBvZiBhIENvLU93bmVyIGluIGEgU2hhcmVkIEFzc2V0IEdyb3VwLCBhcyBzZXQgZm9ydGggaW4gRXhoaWJpdCBCLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBQZXJmb3JtYW5jZSBTdGFuZGFyZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhcyB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH42LjIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIzMjM4OTQgUGVybWl0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCAgbWVhbnMgYW55IHBlcm1pdCwgbGljZW5zZSwgYXBwcm92YWwsIGNvbnNlbnQsIHJpZ2h0IHRvIHVzZSwgZnJhbmNoaXNlIG9yIHNpbWlsYXIgYXV0aG9yaXphdGlvbiBmcm9tIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NFxjaGFycnNpZDcwNzgwMDIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFBlcm1pdHRlZCBBc3NpZ25lZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggMTcuM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODkzNzkwIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBQZXJzb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFucyBhbnkgbmF0dXJhbCBwZXJzb24sIGNvcnBvcg0KYXRpb24sIGdlbmVyYWwgcGFydG5lcnNoaXAsIGxpbWl0ZWQgcGFydG5lcnNoaXAsIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIHByb3ByaWV0b3JzaGlwLCBvdGhlciBidXNpbmVzcyBvcmdhbml6YXRpb24sIHRydXN0LCB1bmlvbiwgYXNzb2NpYXRpb24gb3IgR292ZXJubWVudGFsIEF1dGhvcml0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBQb2ludCBvZiBJbnRlcmNvbm5lY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY0NjA1NyBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2NDYwNTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkODY2NzIgdGhlIHBvaW50IGF0IHdoaWNoIHRoZSBUcmFuc21pc3Npb24gTGluZSBpbnRlcmNvbm5lY3RzIHRvIHRoZSBTb3V0aGVybiBDYWxpZm9ybmlhIEVkaXNvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjI1MzYgMjIwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyIA0Ka1YgV2luZCBIdWIgU3Vic3RhdGlvbiwgYXMgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGluIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4NDgyMzM2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI1MTA5ODIgUFBUIG9yIFByZXZhaWxpbmcgUGFjaWZpYyBUaW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjUxMDk4MiANCiBtZWFucyB0aGUgdGhlbiBhcHBsaWNhYmxlIHRpbWUgaW4gdGhlIFBhY2lmaWMgdGltZSB6b25lLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODJcY2hhcnJzaWQ5NDQ2NzUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ4NDgyMzM2IFByb2plY3QgU3Vic3RhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0ODIzMzYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIG1lYW5zIHRoZSBcJzkzUHJvamVjdCBTdWJzdGF0aW9uXCc5NCBhcyBkZXNjcmliZWQgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDg0ODIzMzYgIEV4aGliaXQgQi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFByb3BvcnRpb25hdGUgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIG1lYW5zLCBhcyBhcHBsaWVkIHdpdGggcmVzcGVjdCB0byB0aGUgc2hhcmluZyBhbmQgYWxsb2NhdGlvbiBvZiBjb3N0cywgcmlnaHRzLCBpbnRlcmVzdCwgb2JsaWdhdGlvbnMgYW5kL29yIGxpYWJpbGl0aWVzIHJlbGF0ZWQgdG8gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIGFtb25nIGl0cyBDby1Pd25lcnMsIHRoZSBwcm9wb3J0aW9uIG9mIGEgRmFjaWxpdHlccnF1b3RlIA0KcyBpbnN0YWxsZWQgbmFtZXBsYXRlIGNhcGFjaXR5IGNvbm5lY3RlZCB0byBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYmVhcnMgdG8gdGhlIGFnZ3JlZ2F0ZSBpbnN0YWxsZWQgbmFtZXBsYXRlIGNhcGFjaXR5IG9mIGFsbCBzdWNoIEZhY2lsaXRpZXMgdXNpbmcgc3VjaCBTaGFyZWQgQXNzZXRzIGF0IHRoZSB0aW1lOyBwcm92aWRlZCB0aGF0LCBmb3IgdGhlIHB1cnBvc2Ugb2Ygc3VjaCBjYWxjdWxhdGlvbiwgdGhlIGluc3RhbGxlZCBuDQphbWVwbGF0ZSBjYXBhY2l0eSBvZjogICgxKSBhbnkgRmFjaWxpdHkgdGhhdCBoYXMgbm90IHlldCBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlIHNoYWxsIGJlIGRlZW1lZCB0byBiZSAwIE1XOyBhbmQgKDIpIGFueSBGYWNpbGl0eSB0aGF0IGhhcyBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlIHNoYWxsIGJlIGRlZW1lZCB0byBiZSB0aGUgcG9ydGlvbiBvZiB0aGUgZXhwZWN0ZWQgbmFtZXBsYXRlIGNhcGFjaXR5IHNldCBmb3INCnRoIGluIFJlY2l0YWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgQiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoYXQgaXMgZXhwZWN0ZWQgdG8gYmUgY29ubmVjdGVkIHRvIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cC4gIEluIHRoaXMgQWdyZWVtZW50LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDg5MjU5OSANCmV4Y2VwdCBhcyBvdGhlcndpc2UgZXhwcmVzc2x5IHByb3ZpZGVkLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGEgcmVmZXJlbmNlIHRvIGEgUHJvcG9ydGlvbmF0ZSBTaGFyZSB3aXRoIHJlc3BlY3QgdG8gYSBnaXZlbiBDby1Pd25lciBzaGFsbCBtZWFuIHRoZSBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHN1Y2ggQ28tT3duDQplciBpbiBlYWNoIG9mIHRoZSBTaGFyZWQgQXNzZXRzIEdyb3VwcyBpbiB3aGljaCBzdWNoIENvLU93bmVyIGhhcyBhbiBVbmRpdmlkZWQgVXNlIEludGVyZXN0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNzYxMjk3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTcgUlNUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTdcY2hhcnJzaWQxMDE5MDQ1NiANCiBJIEZhY2lsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2MTI5NyAgbWVhbnMgdGhlIHBvcnRpb24gb2YgdGhlIFJpc2luZyBUcmVlIFdpbmQgRmFybSBvd25lZCBieSBSaXNpbmcgVHJlZSBJLiAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3IFJTVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3XGNoYXJyc2lkMTAxOTA0NTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjc2MTI5N1xjaGFycnNpZDEwMTkwNDU2IEkgRmFjaWxpdHl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjEyOTcgIG1lYW5zIHRoZSBwb3J0aW9uIG9mIHRoZSBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gb3duZWQgYnkgUmlzaW5nIFRyZWUgSUkuICANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTcgUlNUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTdcY2hhcnJzaWQxMDE5MDQ1NiAgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3IElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTdcY2hhcnJzaWQxMDE5MDQ1NiAgRmFjaWxpdHl9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjEyOTcgIG1lYW5zIHRoZSBwb3J0aW9uIG9mIHRoZSBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gb3duZWQgYnkgUmlzaW5nIFRyZWUgSUlJLiAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNjY2Mzg1MSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNjY2Mzg1MSBSU1QgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gRXhoaWJpdCBCLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTY2NjM4NTEgUlNUIEkvSUkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgDQogdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gRXhoaWJpdCBCLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2VjdXJpdHkgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNC4xLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ2MTUzOTQgU2V0dGxlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTRcY2hhcnJzaWQ5NDQ2NzUgSW50ZXJ2YWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0ICB0aGUgbWVhbmluZyBnaXZlbiBpbiB0aGUgQ0FJU08gVGFyaWZmLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDI1MTA5ODIgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwODE1NTYwIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDgxNTU2MCAgYW55IG9yIGFsbCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBhIFNoYXJlZCBBc3NldHMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBBc3NldHMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTMxMTE5MzEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjMufQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTIyODgyNCA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4zLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMjg4MjQgMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+My59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjI4ODI0IDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU3NDY5MDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTU3NDY5MDUgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTc0NjkwNSANCiBoYXMgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+My42Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMjg4MjQgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiB0aGUgZWFzZW1lbnQgYWdyZWVtZW50cyBvciBjb252ZXlhbmNlIGRvY3VtZW50cyBkZXNjcmliZWQgaW4gRXhoaWJpdCBCLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFRyYW5zbWlzc2lvbiBMaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gRXhoaWJpdCBCLiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTY1OTQzNjAgU291dGhlcm4gQ2FsaWZvcm5pYSBFZGlzb24gQ29tcGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBpdHMgc3VjY2Vzc29ycyBhbmQgYXNzaWduZWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ2NjQwMDc5IFVuZGVybHlpbmcgR3JhbnRpbmcgRG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY0MDA3OSAgaGFzIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb24gNC4xLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2NDAwNzlcY2hhcnJzaWQ1NTk0NTI0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBVbmRpdmlkZWQgVXNlIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+NC4yLn0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCBCLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxpbnNyc2lkMzQzODA3OCAgUEFHRSB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTY1MTkwOCANCjQzfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzg2NTUzMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTQyODY5NyB7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejVcc2hwbGlkMjIzMXtcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19DQp7XHNwe1xzbiBsVHhpZH17XHN2IDM5MzIxNn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMzF9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF82fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NjE5Mn19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgxOTdcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyODgwMzYgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBFWEhJQklUIEJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFNIQVJFRCBGQUNJTElUSUVTfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNjc3NjMgLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiAgU0hBUkVEIFJFQUwgUFJPUEVSVFl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI2Nzc2MyAgQU5EIFNIQVJFRCBQRVJNSVRTfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQS5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM2XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eC0zMTUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw1XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ2NTk5ODYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEFzc2V0cyBKb2ludGx5IE93bmVkIGFuZCBTaGFyZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyODgwMzYgQWxsIENvLU93bmVycyAoUlNUIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM3IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczdccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsNlxvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDY1OTk4NiBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTYwNzEyOTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgYS5cdGFiIFByb2plY3QgU3Vic3RhdGlvbjogIFNlZSBFeGhpYml0IEItMSBhdHRhY2hlZCBoZXJldG8uDQpccGFyIGIuXHRhYiBUcmFuc21pc3Npb24gTGluZTogIFNlZSBFeGhpYml0IEItMiBhdHRhY2hlZCBoZXJldG8uDQpccGFyIGMuXHRhYiBSb2Fkcw0KXHBhciBkLlx0YWIgTyZNIEJ1aWxkaW5nDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTE1MjEgZS5cdGFiIENvbmRvciBEZXRlY3Rpb24gVG93ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjExNTIxXGNoYXJyc2lkNDgxMzU4MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczcgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzN1xxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw2XG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNjU5OTg2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBTaGFyZWQgUmVhbCBQcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgYS5cdGFiIFByb2plY3QgU3Vic3RhdGlvbjogIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlcG9zaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gcGF0ZW50ZWQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0ZWQgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFtZXJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGF0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTkwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDY0MjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZSAxOTA0IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMTQxLTIyDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBiLlx0YWIgVHJhbnNtaXNzaW9uIExpbmU6ICANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxmaTM2MFxsaTEwODBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMzI0MDc3NSBUcmFjdCAxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlIEVhc3QgaGFsZiBvZiB0aGUgRWFzdCBoYWxmIG9mIFNlY3Rpb24gOSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIE1lcmlkaWFufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCAgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEgb2YgdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhcyBwZXIgdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZiBvbiBmaWxlIGluIHRoZSBPZmZpY2Ugb2YgdGhlIFN1cnZleW9yIEdlbmVyYWwsIGFwcHJvdmVkIFNlcHRlbWJlciAxOSwgMTg1Nn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTU0XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xNTRcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEV4Y2VwdGluDQpnIHRoZXJlZnJvbSBvbmUgaGFsZiBvZiBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIGh5ZHJvY2FyYm9uIHN1YnN0YW5jZXMgYW5kIG1pbmVyYWxzIGluIGFuZCB1bmRlciBzYWlkIGxhbmQsIGFzIGV4Y2VwdGVkIGluIGRlZWQgZGF0ZWQgRGVjZW1iZXIgMSwgMTk1NSBmcm9tIE0mUiBTaGVlcCBDb21wYW55LCByZWNvcmRlZCBNYXJjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyLCAxOTU2IGluIEJvb2sgMjU4MSwgUGFnZSAyMzMgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTAyMi0xMw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDMyNDA3NzUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTEwODBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk4Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODJcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNldmVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLWZpdmUgKDE3NSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpZHRoLCBzaXR1YXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcJ2JjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAxNywgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTm9ydGgsIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCYXNlIGFuZH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sIEtlcm59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHksfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLCBiZWluZyBhIHBvcnRpb24gb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0IHByb3B9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJ0eSBjb252fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgeWVkIHRvfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSZXNpZHVhbCBSYW5jaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvcnBvcmF0aW9uLCBpbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDYwNzAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWdlcyAxMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgOX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLTEyMTAsIHJlY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmRlZCBvbiBOb3ZlbWJlciAyNSwgMTk4NywgS2VybiBDb3VudHkgRGVlZCBSZWNvcmRzLCBhbmQgYmVpbmcgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTEwODBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTBcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRoaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSw5MDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3BlcnR5LCBiZWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2V2ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCB5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAtZml2ZSAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA3NSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB3aWR0aCwgdGhlIHNvdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhlcmx5IGxpbmUgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdoaWNoIGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbmNpZGVudCBhbmQgcGFyYWxsZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGggdGhlIG5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmx5IHJpZ2h0IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXkgbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xN1xpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmIE9hayB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZWsgUm9hZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIChDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJvYWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOby59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDY0OCksIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMwLjAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGhlcmx5IG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2VudGVybGluZSBvZiBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcm9hZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4gbWVhc3VyZWQgYXQgcmlnaHQgYW5nbGVzLiAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkyNTIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI1MjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMDMxLTA0DQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkyNTIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI1MjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcdGFiIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBRdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy05XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpbm8gTWVyaWRpYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMzE2NDgwICBpbiB0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCBvZiBzYWlkIGxhbmQgYnkgdGhlIFN1cnZleW9yIEdlbmVyYWwgZGF0ZWQgU2VwdGVtYmVyIDE5LCAxODU2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGl2aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLzE2dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb2FsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNoYWxlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGhvc3BoYXRlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIGR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGl1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlcG9zaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgbGVnaXNsYXRpb24sIHN0YXR1dGVzIG9mIDE5MjEgcGFnZSA0MDQgYW5kIGFtZW5kbWVudHMgdGhlcmV0by4NClxwYXIgDQpccGFyIEFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLCBoeWRyb2NhcmJvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNpbWlsYXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRob3V0IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlbnRyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gZGVwdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNTAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VyZmFjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvcGVydHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdyYW50ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vzc2xlcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnJpZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1hbiwgaW4gZGVlZCByZWNvcmRlZCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQoyMywgMTk1NiBpbiBCb29rIDI2NTQsIHBhZ2UgMzAwIG9mIG9mZmljaWFsIHJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMDMxLTA4DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk4Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODJcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh1bmRyZWR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2V2ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCB5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAtZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAoMTc1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lkdGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNpdHVhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFwnYmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE2LCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmFzZSBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgS2Vybn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsIGJlaW5nIGEgcG9ydGlvbiBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdCBwcm9wfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnR5IGNvbnZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHllZCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBNdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaWVsIFBvbGxpYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEZvdW5kYXRpb24sIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEb2N1bWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vLiAwMjA3MjIwNjMxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZCBvbiBOb3ZlbWJlciAyLCAyMDA3LCBLZXJuIENvdW50eSBEZWVkIFJlY29yZHMsIGFuZCANCmJlaW5nIG1vcmUgcGFydGljdWxhcmx5IGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkxMDgwXHJpMFxzbC0yNDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNldmVudHktZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgKDE3NSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXCdiZCwgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBodW5kcmVkIHNldmVudHktZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICgxNzUpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBmb290fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdoaWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpcyBjb2luY2lkZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXJhbGxlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtM1xleHBuZHR3LTE4XGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Ygd2F5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgT2FrIENyZWVrfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUm9hZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgKENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJvYWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDY0OCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMwLjAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGhlcmx5IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZW50ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBzYWlkIHJvYWQsIHdoZW4gbWVhc3VyZWQgYXQgcmlnaHQgYW5nbGVzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTAzMS0zOA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgDQp0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgDQpkZXBvc2l0cyBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgaW4gRGVlZCByZWNvcmRlZCBBdWd1c3QgMTQsIDE5NjMgaW4gQm9vayAzNjM0LCBQYWdlIDgzNSBvZiBPZmZpY2lhbCBSZWNvcmRzLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTAxDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZw0KIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cyBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgaW4gRA0KZWVkIHJlY29yZGVkIFNlcHRlbWJlciAyMCwgMTk2NyBpbiBCb29rIDQwOTAsIFBhZ2UgODUxIG9mIE9mZmljaWFsIFJlY29yZHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTAyDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTI2MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMjYwXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFdlc3QgaGFsZiBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgQmFzZSBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTAzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTUzMFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMTQ5MDQwMTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCANCkV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gDQpwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgZXhjZXB0ZWQgYW5kIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgcmVjb3JkZWQgaW4gQm9vayAzMjU5LCBQYWdlIDY0MSBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTE0MS0wNA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOCwgYXMgZXhjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHRlZCBhbmQgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzI5MCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTEzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDEwDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTEwODBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpFeGNlcHRpbmcgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWZyb20gYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLCBnYXN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsIGRlcG9zaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGF0ZW50ZWQsIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZSAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHhjZXB0ZWQgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzZXJ2ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRoZSBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEFtZXJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdGhlIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VwdGVtYmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgsIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gQm9va317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzMwNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgUGFnZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgODY0LCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTIwDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCANCnBsYXQgb2Ygc2FpZCBsYW5kIGZpbGVkIGluIHRoZSBEaXN0cmljdCBMYW5kIE9mZmljZSBPY3RvYmVyIDcsIDE5MzYuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTEwODBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpFeGNlcHRpbmcgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWZyb20gYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLCBnYXN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsIGRlcG9zaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBhbmQgdW5kZXIgc2FpZCBsYW5kLCB0b2dldGhlcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEp1bmUgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB4Y2VwdGVkIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGVzZXJ2ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBTdGF0ZXMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQppbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VwdGVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4LCAxOTYwfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMzMDYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgUGFnZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDg2MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xNDEtMjENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE1MzBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTUzMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwYXRlbnRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5OTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjQyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlIDE5MDQgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE1MzBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTUzMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxmaTQxNFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMTQxLTIyDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgYy5cdGFiIENvbGxlY3Rpb24gYW5kIERpc3RyaWJ1dGlvbiBMaW5lczogIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwYXRlbnRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5OTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjQyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlIDE5MDQgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0yMg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIA0KLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTRcc2IyOVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTRcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQxMzMxNjQ4MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCAgaW4gdGhlIGxhbmQgc28gUGF0ZW50ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgcHJvdmlzaW9ucyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHNhaWQgQWN0IG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgLCBhcyByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHBhdGVudCByZWNvcmRlZCBEZWNlbWJlciA3LCAxOTYyIGluIEJvb2sgMzU1MiwgUGFnZShzKSA5NjYgb2YgT2ZmaWNpYWwgUmVjb3Jkc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTI1DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFdlc3QgaGFsZiBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIE9mZmljaWFsIFBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgRXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvcw0KcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgZXhjZXB0ZWQgYW5kIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBBdWd1c3QgMjMsIDE5OTAgb24gQm9vayA2NDIyLCBQYWdlIDIzODYgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0yNg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0IGhhbGYgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIGV4Y2VwdGVkIGFuZCByZXNlcnZlZCBieSANCnRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBKYW51YXJ5IDQsIDE5NjIgb24gQm9vayAzNDQ5LCBQYWdlIDQ0IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTQxLTI3DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIEV4Y2VwdCB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzLCBhcyByZXNlcnZlZCBpbiBCb29rIDMzMjYsIFBhZ2UgOTgyLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xNDItMjUNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0Mi0yNg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkxNDQwXHJpMFxzYjE2XHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxmczIwXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcc2IyOVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRvIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlcG9zaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0ZW50ZWQsIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0IHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9ucyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsIDE5MzgsIGFzIHJlc2VydmVkIGluIHBhdGVudCByZWNvcmRlZCBKdW5lfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjksIDE5OTAgaW4gQm9vayA2NDAwLCBQYWdlIDIzNjAgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0Mi0zMg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgYW5kIHJlc2VydmluZyB0byB0aGUgVW5pdGVkIFN0YXRlcyBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byANCnByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGluIHBhdGVudCByZWNvcmRlZCBBdWd1c3QgMjksIDE5NjEgaW4gQm9vayAzNDEwLCBQYWdlIDIxNCwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wMQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZw0KYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgQXByaWwgMjEsDQogMTk2MCBpbiBCb29rIDMyNjAsIFBhZ2UgODQyLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTAyDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDEwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRoZWFzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUgYWMNCmNvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgZGF0ZWQgSmFudWFyeSAxNCwgMTk2MCBQYXRlbnQgTm8uIDEyMDM3NTUgYW5kIHJlY29yZGVkIEF1Z3VzdCAxNywgMTk2MCBpbiBCb29rIDMyOTMsIFBhZ2UgOTQ5LCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTAzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRoZWFzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdCBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYXMgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIE9jdG9iZXIgMjYsIDE5NjAgaW4gQm9vayAzMzE0LCBQYWcNCmUgODgwLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTA0DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDEyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aGVhc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wNQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSANCmFuZCBNZXJpZGlhbi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTFcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlcG9zaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgc2FtZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBwYXRlbnQgcmVjb3JkZWQgQXByaWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1LCAxOTYwIGluIEJvb2sgMzI1NiwgUGFnZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCAxOCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDYNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFdlc3QgaGFsZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQxMzMxNjQ4MCBOb3J0aGVhc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aA0KZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCBhbmQgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIEp1bmUgMTYsIDE5NjAgaW4gQm9vayAzMjc2LCBQYWdlIDUxLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTMzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDE1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlubyBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZS1oYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5hdHVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcywgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI1MTksIFBhZ2UgMjgzLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMjg0LTAxDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDE2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTE3M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTczXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlIFdlc3QgaGFsZiBvZiB0aGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aGVhc3QNCiBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYXMgcGVyIENlcnRpZmljYXRlIG9mIENvbXBsaWFuY2UgTm8uIDQ0NiByZWNvcmRlZCBNYXl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOCwgMTk4MiBpbiBCb29rIDU0NjIsIFBhZ2UgMTQ4MyBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTMwODVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjMwODVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRXhjZXB0IDUwJSBvZiBhbGwgb2lsIGFuZCBtaW5lcmFsIHJpZ2h0cyBhcyByZXNlcnZlZCBpbiByZWNvcmRzIG9mIHNhaWQgQ291bnR5Lg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NC0wMg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IDE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSwgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZmZpY2lhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWFwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZpbGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQnVyZWF1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1hbmFnZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KYW5kIGFwcHJvdmVkIGJ5IHRoZSBTdXJ2ZXlvciBHZW5lcmFsIG9uIFNlcHRlbWJlciAxOSwgMTg1Ni4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmUtaGFsZiBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTlcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcyBleGNlcHRlZCBpbiBEfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWQgZGF0ZWQgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0LCAxOTU1IGZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlIgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLiwgdG8gQy5NLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFR1cmxleSwgcmVjb3JkZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBOfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdmVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsIDE5NTUgaW4gQm9vayAyNTE5LCBQYWdlIDI4OSwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4gDQogU2FpZCBkZWVkIHByb3ZpZGVzIGluIHBhcnQ6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29uZHVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRyaWxsaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcGVyYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdXBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VyZmFjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlc2NyaWJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yIGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbiB0aGVyZW9mLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGhvdXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZpcnN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZWN1cmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3cml0dGVufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29uc2VudCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2Vjb25kIHBhcnRpZXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVpcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhlaXJzIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xOFxpbnNyc2lkMjc2NDA0MCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpZ25zLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgb3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb25zIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1heX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1c2VkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRyaWxsaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2l0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcGVyYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlvbnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBidXQgbm90aGluZyBoZXJlaW4gY29udGFpbmVkIHNoYWxsIGJlIGRlZW1lZCB0byBwcmV2ZW50IHRoZSBHcmFudG9yIGl0cyBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIGZyb20gZXh0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY3Rpbmcgb3IgY2FwdHVyaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpkcmlsbGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWRqYWNlbnR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmVpZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTNcaW5zcnNpZDI3NjQwNDAgaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYm9yaW5nIGxhbmRzIGFuZC9vciBmcm9tIGNvbmR1Y3Rpbmcgc3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCBifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwIC19ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VyZmFjZSBkcmlsbGluZyBvciBvdGhlciBvcGVyYXRpb25zIHVuZGVyIHNhaWQgbGFuZHMgbGFzdCBhYm92ZSBkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0Kc2NyaWJlZCBhdCBzdWNoIGRlcHRocyBhcyBub3QgdG8gZGlzdHVyYiB0aGUgc3VyZmFjZSB0aGVyZW9mIG9yIGFueSBpbXByb3ZlbWVudHMgdGhlcmVvbiwgd2FzIHdhaXZlZCBieSB0aGUgR3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbnRvcnMgaW4gc2FpZCBEZWVkLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mIHRoZSBOb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBod2VzdCBxdWFydGVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBzZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZCBzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGlvbiBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvbnZleWVkIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRG9jdW1lbnQgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9vayA1MTAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyNDUgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODQtMDUNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSwgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSwgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gdGhlIG9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDEzMzE2NDgwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmV4Y2VwdGVkIGJ5IE0mUiBTaGVlcCBDby4sIGluIGRlZWQgcmVjb3JkZWQgTm92ZW1iZXIgMjIsIDE5NTUgaW4gQm9vayAyNTE5LCBQYWdlIDI4OSBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NC0wNg0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDE5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2IyOVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NCg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZS1oYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW5jaWRlbnRhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmV0byx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTSZSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlciAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvb2sgMjUxOSwgUGFnZSAyODksIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg0LTA3DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCBSYW5nZSAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSwgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTgxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFwnYmR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcyBleGNlcHRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWQgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNTE5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTgwMFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xODAwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0yODUtMDUNClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IGQuXHRhYiBSb2FkczoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTBcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0IGhhbGYgb2YgdGhlIEVhc3QgaGFsZiBvZiBTZWN0aW9uIDksIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCBNZXJpZGlhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMzMTY0ODAgLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSBvZiB0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFzIHBlciB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mIG9uIGZpbGUgaW4gdGhlIE9mZmljZSBvZiB0aGUgU3VydmV5b3IgR2VuZXJhbCwgYXBwcm92ZWQgU2VwdGVtYmVyIDE5LCAxODU2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTU0XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xNTRcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEV4Y2VwdGluZyB0aGVyZWZyb20gb25lIGhhbGYgb2YgYWxsIG9pbCwgZ2FzIA0KYW5kIG90aGVyIGh5ZHJvY2FyYm9uIHN1YnN0YW5jZXMgYW5kIG1pbmVyYWxzIGluIGFuZCB1bmRlciBzYWlkIGxhbmQsIGFzIGV4Y2VwdGVkIGluIGRlZWQgZGF0ZWQgRGVjZW1iZXIgMSwgMTk1NSBmcm9tIE0mUiBTaGVlcCBDb21wYW55LCByZWNvcmRlZCBNYXJjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIDIyLCAxOTU2IGluIEJvb2sgMjU4MSwgUGFnZSAyMzMgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTAyMi0xMw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaW5vIE1lcmlkaWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgDQosIGluIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IG9mIHNhaWQgbGFuZCBieSB0aGUgU3VydmV5b3IgR2VuZXJhbCBkYXRlZCBTZXB0ZW1iZXIgMTksIDE4NTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kaXZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEvMTZ0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvYWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2hhbGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwaG9zcGhhdGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaXVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBsZWdpc2xhdGlvbiwgc3RhdHV0ZXMgb2YgMTkyMSBwYWdlIDQwNCBhbmQgYW1lbmRtZW50cyB0aGVyZXRvLg0KXHBhciANClxwYXIgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGh5ZHJvY2FyYm9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2ltaWxhcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBidXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGhvdXQgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVudHJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBkZXB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1MDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9wZXJ0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ3JhbnRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEoufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXNzbGVyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBycmllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWFuLCBpbiBkZWVkIHJlY29yZGVkIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMywgMTk1NiBpbg0KIEJvb2sgMjY1NCwgUGFnZSAzMDAgb2YgT2ZmaWNpYWwgcmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE4MDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTgwMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTAzMS0wOA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAzDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh1bmRyZWR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2V2ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCB5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAtZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAoMTc1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lkdGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNpdHVhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFwnYmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE2LCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmFzZSBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgS2Vybn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsIGJlaW5nIGEgcG9ydGlvbiBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdCBwcm9wfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnR5IGNvbnZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHllZCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBNdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaWVsIFBvbGxpYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEZvdW5kYXRpb24sIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEb2N1bWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vLiAwMjA3MjIwNjMxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KZGVkIG9uIE5vdmVtYmVyIDIsIDIwMDcsIEtlcm4gQ291bnR5IERlZWQgUmVjb3JkcywgYW5kIGJlaW5nIG1vcmUgcGFydGljdWxhcmx5IGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh1bmRyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZXZlbnR5LWZpdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICgxNzUpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFwnYmQsIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZCBzZXZlbnR5LWZpdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAoMTc1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgZm9vdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN0cmlwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aGljaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaXMgY29pbmNpZGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGFyYWxsZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTNcZXhwbmR0dy0xOFxpbnNyc2lkMjc2NDA0MCBofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHdheX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIE9hayBDcmVla317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJvYWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIChDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSb2FkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOby59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2NDgpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmVpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMC4wMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRoZXJseSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2VudGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Ygc2FpZCByb2FkLCB3aGVuIG1lYXN1cmVkIGF0IHJpZ2h0IGFuZ2xlcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0wMzEtMzgNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA0DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaW5vIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmF0dXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLCB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjUxOSwgUGFnZSAyODMsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTMzMTY0ODAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBBUE46ICAyMzctMjg0LTAxDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDkwNDAxNyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMzMTY0ODBcY2hhcnJzaWQxNTU0MDc2MyBUcmFjdCA1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMzMTY0ODBcY2hhcnJzaWQxNDkwNDAxNyANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3INCnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byANCnRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgaW4gRGVlZCByZWNvcmRlZCBBdWd1c3QgMTQsIDE5NjMgaW4gQm9vayAzNjM0LCBQYWdlIDgzNSBvZiBPZmZpY2lhbCBSZWNvcmRzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0wMQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMzMxNjQ4MCA2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgRWFzdCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIA0KU2VjdGlvbiAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMgaW4gdGhlIGxhbmQgc28gcGF0ZQ0KbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgaW4gRGVlZCByZWNvcmRlZCBTZXB0ZW1iZXIgMjAsIDE5NjcgaW4gQm9vayA0MDkwLCBQYWdlIDg1MSBvZiBPZmZpY2lhbCBSZWNvcmRzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTAyDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDEzMzE2NDgwIDd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTI2MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMjYwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlIFdlc3QgaGFsZiBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgQmFzZSBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTAzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDEzMzE2NDgwIDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzMxNjQ4MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzMxNjQ4MCBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCANCmFuZCByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIHJlY29yZGVkIGluIEJvb2sgMzI1OSwgUGFnZSA2NDEgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTE0MS0wNA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMzMxNjQ4MCA5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byANCnByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOCwgYXMgZXhjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHRlZCBhbmQgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzI5MCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTEzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDEzMzE2NDgwIDEwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkxNDQwXHJpMFxzbC0yNDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KRXhjZXB0aW5nIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVmcm9tIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCwgZ2FzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlciBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudGVkLCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0IHRvIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEp1bmUgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB4Y2VwdGVkIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlc2VydmVkIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0aGUgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnRoZSBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlcHRlbWJlcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4LCAxOTYwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIEJvb2t9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMzMDYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGFnZSA4NjQsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMjANClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlIFdlc3QgaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IG9mIHNhaWQgbGFuZCBmaWxlZCBpbiB0aGUgRGlzdHJpY3QgTGFuZCBPZmZpY2UgT2N0b2JlciA3LCAxOTM2Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFuZCB1bmRlciBzYWlkIGxhbmQsIHRvZ2V0aGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZSAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHhjZXB0ZWQgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgZXNlcnZlZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFN0YXRlcyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFtZXJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZXB0ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgsIDE5NjB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzMwNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IFBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4NjMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTQxLTIxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwYXRlbnRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5OTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjQyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlIDE5MDQgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0yMg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5NFxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45NFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQxNjY3NTU3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgIGluIHRoZSBsYW5kIHNvIFBhdGVudGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCByZW1vdmUgdGhlIHNhbWUgYWNjb3JkaW5nIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgcHJvdmlzaW9ucyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHNhaWQgQWN0IG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTY2NzU1NyAsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gcGF0ZW50IHJlY29yZGVkIERlY2VtYmVyIDcsIDE5NjIgaW4gQm9vayAzNTUyLCBQYWdlKHMpIDk2NiBvZiBPZmZpY2lhbCBSZWNvcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMjUNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdCBoYWxmIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxNDQwXHJpMFxzYjE2XHNsLTI2MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciBFeGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANCmFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCBhbmQgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTDQp0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgQXVndXN0IDIzLCAxOTkwIG9uIEJvb2sgNjQyMiwgUGFnZSAyMzg2IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMjYNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGUgRWFzdCBoYWxmIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbg0KZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHBybw0Kc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIGV4Y2VwdGVkIGFuZCByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgSmFudWFyeSA0LCAxOTYyIG9uIEJvb2sgMzQ0OSwgUGFnZSA0NCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE0MS0yNw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxNn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTY2NzU1NyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyANCkV4Y2VwdCB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzLCBhcyByZXNlcnZlZCBpbiBCb29rIDMzMjYsIFBhZ2UgOTgyLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxNDQwXHJpMFxzYjE2XHNsLTI2MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1N1xjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xNDItMjUNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDItMjYNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHNiMTZcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGZzMjBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MlxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdG8gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgaW4gcGF0ZW50IHJlY29yZGVkIEp1bmV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOSwgMTk5MCBpbiBCb29rIDY0MDAsIFBhZ2UgMjM2MCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQyLTMyDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgYW5kIHJlc2VydmluZyB0byB0aGUgVW5pdGVkIFN0YXRlcyBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBpbiBwYXRlbnQgcmVjb3JkZWQgQQ0KdWd1c3QgMjksIDE5NjEgaW4gQm9vayAzNDEwLCBQYWdlIDIxNCwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wMQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDIwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoDQplIHNhbWUgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIEFwcmlsIDIxLCAxOTYwIGluIEJvb2sgMzI2MCwgUGFnZSA4NDIsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDINClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAyMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGkNCm4gdGhlIHBhdGVudCBkYXRlZCBKYW51YXJ5IDE0LCAxOTYwIFBhdGVudCBOby4gMTIwMzc1NSBhbmQgcmVjb3JkZWQgQXVndXN0IDE3LCAxOTYwIGluIEJvb2sgMzI5MywgUGFnZSA5NDksIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAyMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0IGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdA0KaCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBPY3RvYmVyIDI2LCAxOTYwIGluIEJvb2sgMzMxNCwgUGFnZSA4ODAsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDQNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAyM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRoZWFzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTA1DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQoxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzYW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHBhdGVudCByZWNvcmRlZCBBcHJpbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUsIDE5NjAgaW4gQm9vayAzMjU2LCBQYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgMTggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTA2DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDI1fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBXZXN0IGhhbGYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRoZWFzdCBxdWFydGVyIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMTY2NzU1NyBOb3J0aGVhc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgZXhjZXB0ZWQgYW5kIHJlc2VydmVkIGJ5IHRoZSBVDQpuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIEp1bmUgMTYsIDE5NjAgaW4gQm9vayAzMjc2LCBQYWdlIDUxLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTMzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDI2fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBTb3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBod2VzdCBxdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJ0ZXIgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE1LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIENvdW50eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2VybiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZmZpY2lhbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpwbGF0IG9mIHRoZSBzdXJ2ZXkgb2Ygc2FpZCBsYW5kLCBhcHByb3ZlZCBieSB0aGUgU3VydmV5b3IgR2VuZXJhbCBPY3RvYmVyIDcsIDE5MzYuDQpccGFyIA0KXHBhciBFeGNlcHQgb25lIGhhbGYgb2YgYWxsIG9pbCwgZ2FzIGFuZCBtaW5lcmFscyBhbmQgaHlkcm9jYXJib24gc3Vic3RhbmNlcyBpbiBhbmQgdW5kZXIgc2FpZCBsYW5kIGFzIHJlc2VydmVkIGJ5IHRoZSBNICYgUiBTaGVlcCBDby4gaW4gZGVlZCBkYXRlZCBBdWd1c3QgNCwgMTk1NSwgcmVjb3JkZWQgaW4gQm9vayAyNTE5LCBQYWdlIDI5OCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE4NS0wNw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDI3fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpbm8gTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmUtaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuYXR1cn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTSZSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNTE5LCBQYWdlIDI4Mywgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTI4NC0wMQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDI4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxNzNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjE3M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZSBXZXN0IGhhbGYgb2YgdGhlIFdlc3QgaGFsZiBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LA0KIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFzIHBlciBDZXJ0aWZpY2F0ZSBvZiBDb21wbGlhbmNlIE5vLiA0NDYgcmVjb3JkZWQgTWF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgMjgsIDE5ODIgaW4gQm9vayA1NDYyLCBQYWdlIDE0ODMgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkzMDg1XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4zMDg1XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEV4Y2VwdCA1MCUgb2YgYWxsIG9pbCBhbmQgbWluZXJhbCByaWdodHMgYXMgcmVzZXJ2ZWQgaW4gcmVjb3JkcyBvZiBzYWlkIENvdW50eS4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODQtMDINClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDI5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1hcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmlsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJ1cmVhdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWFuYWdlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgYXBwcm92ZWQgYnkgdGhlIFN1cnZleW9yIEdlbmVyYWwgb24gU2VwdGVtYmVyIDE5LCAxODU2Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZS1oYWxmIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOVxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIGV4Y2VwdGVkIGluIER9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlZCBkYXRlZCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQsIDE5NTUgZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUiBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLCB0byBDLk0ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVHVybGV5LCByZWNvcmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIE59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCjIyLCAxOTU1IGluIEJvb2sgMjUxOSwgUGFnZSAyODksIG9mIE9mZmljaWFsIFJlY29yZHMuICBTYWlkIGRlZWQgcHJvdmlkZXMgaW4gcGFydDoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25kdWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZHJpbGxpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9wZXJhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1cG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVzY3JpYmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3IgYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9uIHRoZXJlb2YsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aG91dH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmlyc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNlY3VyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdyaXR0ZW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25zZW50IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWNvbmQgcGFydGllcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZWlyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGVpcnMgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE4XGluc3JzaWQyNzY0MDQwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlnbnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBvd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbnMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZHJpbGxpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzaXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9wZXJhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW9ucyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ1dCBub3RoaW5nIGhlcmVpbiBjb250YWluZWQgc2hhbGwgYmUgZGVlbWVkIHRvIHByZXZlbnQgdGhlIEdyYW50b3IgaXRzIHN1Y2Nlc3NvcnMgYW5kIGFzc2lnbnMgZnJvbSBleHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCByfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjdGluZyBvciBjYXB0dXJpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXMgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmRyaWxsaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhZGphY2VudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuZWlnfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xM1xpbnNyc2lkMjc2NDA0MCBofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBib3JpbmcgbGFuZHMgYW5kL29yIGZyb20gY29uZHVjdGluZyBzdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwIGJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgLX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlIGRyaWxsaW5nIG9yIG90aGVyIG9wZXJhdGlvbnMgdW5kZXIgc2FpZCBsYW5kcyBsYXN0IGFib3ZlIGR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpzY3JpYmVkIGF0IHN1Y2ggZGVwdGhzIGFzIG5vdCB0byBkaXN0dXJiIHRoZSBzdXJmYWNlIHRoZXJlb2Ygb3IgYW55IGltcHJvdmVtZW50cyB0aGVyZW9uLCB3YXMgd2FpdmVkIGJ5IHRoZSBHcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBudG9ycyBpbiBzYWlkIERlZWQuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2YgdGhlIE5vcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh3ZXN0IHF1YXJ0ZXIgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXIgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkIHNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aW9uIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29udmV5ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEb2N1bWVudCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rIDUxMDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjI0NSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NC0wNQ0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMzB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHRoZSBvZmZpY2lhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZS1oYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDE2Njc1NTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkIGJ5IE0mDQpSIFNoZWVwIENvLiwgaW4gZGVlZCByZWNvcmRlZCBOb3ZlbWJlciAyMiwgMTk1NSBpbiBCb29rIDI1MTksIFBhZ2UgMjg5IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg0LTA2DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAzMX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNiMjlcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBnfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmNpZGVudGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZXRvLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyIDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9vayAyNTE5LCBQYWdlIDI4OSwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTI4NC0wN1x0YWIgXHRhYiBcdGFiIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTI0NzMyNSBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDMyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDEyNDczMjUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCBSYW5nZSAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTExXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpODFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjgxXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXCdiZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlciBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIGV4Y2VwdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI1MTksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxODAwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE4MDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTI4NS0wNVx0YWIgXHRhYiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IGUuXHRhYiBDcm9zc2luZyBBZ3JlZW1lbnRzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGkpXHRhYn19XHBhcmQgXGx0cnBhcg0KXHMxNVxxaiBcZmktMzYwXGxpMTgwMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KUGVybWl0IHRvIENyb3NzIFJpZ2h0IG9mIFdheSBGYWNpbGl0aWVzIGRhdGVkIEp1bHkgMjgsIDIwMTQgYnkgYW5kIGJldHdlZW4gUmlzaW5nIFRyZWUgV2luZCBGYXJtIExMQywNCiBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQyBhbmQgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBmb3IgcGVybWFuZW50IHJvYWQgYW5kIGZpYmVyIG9wdGljIGNyb3NzaW5nIG9mIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgYW5kIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDXHJxdW90ZSBzIHBpcGVsaW5lcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpaSlcdGFifVBlcm1pdCB0byBDcm9zcyBSaWdodCBvZiBXYXkgRmFjaWxpdGllcyBkYXRlZCBKdWx5IDI4LCAyMDE0IGJ5IA0KYW5kIGJldHdlZW4gUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJIExMQywgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCBMTEMgYW5kIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgZm9yIHBlcm1hbmVudCByb2FkIGFuZCBmaWJlciBvcHRpYyBjcm9zc2luZyBvZiBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGFuZCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQ1xycXVvdGUgcyBwaXBlbGluZXMufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMjc4MDA4MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpaWkpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBlcm1pdCB0byBDcm9zcyBSaWdodCANCm9mIFdheSBGYWNpbGl0aWVzIGRhdGVkIEp1bHkgMjgsIDIwMTQgYnkgYW5kIGJldHdlZW4gUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJSSBMTEMsIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDIGFuZCBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGZvciBwZXJtYW5lbnQgcm9hZCBhbmQgZmliZXIgb3B0aWMgY3Jvc3Npbmcgb2YgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBhbmQgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYQ0KbnksIExMQ1xycXVvdGUgcyBwaXBlbGluZXMuLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQyNzgwMDgyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGl2KVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkxldHRlciBvZiBDcm9zc2luZyBDb25zZW50IGRhdGVkIEZlYnJ1YXJ5IDI2LCAyMDE0IGZyb20gQVQmVCB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDLCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDLCBhbmQgUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJSSBMTEMgZm9yIGNyb3NzaW5nIG9mIEFUJlRccnF1b3RlIHMgaW5mcmFzdHJ1Y3R1cmUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAodilcdGFifUxldHRlciBvZiBDcm9zc2luZyBDb25zZW50IGRhdGVkIE1heSAxNCwgDQoyMDE0IGZyb20gUEcmRSB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDLCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDLCBhbmQgUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJSSBMTEMgZm9yIHJvYWQgYW5kIHRyYW5zbWlzc2lvbiBsaW5lIGNyb3NzaW5nIG9mIFBHJkVccnF1b3RlIHMgcGlwZWxpbmVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKHZpKVx0YWJ9TGV0dGVyIG9mIENyb3NzaW5nIENvbnNlbnQgZGF0ZWQgU2VwdGVtYmVyIDEwLCAyMDE0IGZyb20gUEcmRSB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0NCiBMTEMsIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSSBMTEMsIGFuZCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQyBmb3IgZmliZXIgb3B0aWMgbGluZSBjcm9zc2luZyBvZiBQRyZFXHJxdW90ZSBzIHBpcGVsaW5lcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwICh2aWkpXHRhYn1QZXJtaXQgdG8gQ3Jvc3MgUmlnaHQgb2YgV2F5IEZhY2lsaXRpZXMgZGF0ZWQgTm92ZW1iZXIgMTEsIDIwMTQgYnkgYW5kIGJldHdlZW4gUmlzaW5nIFRyZWUgV2luZCBGYXJtIExMQywgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCANCkxMQyBhbmQgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBmb3IgcGVybWFuZW50IHRyYW5zbWlzc2lvbiBsaW5lIGNyb3NzaW5nIG9mIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgYW5kIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDXHJxdW90ZSBzIHBpcGVsaW5lcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwICh2aWlpKVx0YWJ9UGVybWl0IHRvIENyb3NzIFJpZ2h0IG9mIFdheSBGYWNpbGl0aWVzIGRhdGVkIE5vdmVtYmVyIDExLCAyMDE0IGJ5IGFuZCBiZXR3ZWVuIFJpc2luZyBUcmVlIFdpbmQgDQpGYXJtIElJIExMQywgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCBMTEMgYW5kIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgZm9yIHBlcm1hbmVudCB0cmFuc21pc3Npb24gbGluZSBjcm9zc2luZyBvZiBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGFuZCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQ1xycXVvdGUgcyBwaXBlbGluZXMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaXgpXHRhYn1QZXJtaXQgdG8gQ3Jvc3MgUmlnaHQgb2YgV2F5IEZhY2lsaXRpZXMgZGF0ZWQgTm92ZW1iZXINCiAxMSwgMjAxNCBieSBhbmQgYmV0d2VlbiBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQywgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCBMTEMgYW5kIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgZm9yIHBlcm1hbmVudCB0cmFuc21pc3Npb24gbGluZSBjcm9zc2luZyBvZiBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGFuZCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQ1xycXVvdGUgcyBwaXBlbGluZXMuDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwICh4KVx0YWJ9TGV0dGVyIG9mIEMNCnJvc3NpbmcgQ29uc2VudCBkYXRlZCBNYXkgMjgsIDIwMTQgZnJvbSBTQ0UgdG8gUmlzaW5nIFRyZWUgV2luZCBGYXJtIExMQywgUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJIExMQywgYW5kIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSUkgTExDIGZvciBjcm9zc2luZyBvZiBTQ0VccnF1b3RlIHMgb3ZlcmhlYWQgZGlzdHJpYnV0aW9uIGxpbmVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDI3ODAwODIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1OTYwNDYgZi5cdGFiIE5laWdoYm9yIEFncmVlbWVudHMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIExvdCAyOCBvZiBTZWN0aW9uIDIsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTY0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluNjQwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTEyMS0yMg0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDINClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk2NDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjY0MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTIyLTAxDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0ZWQgYXJlYSwgDQpDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTIyLTE5DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTEwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIA0KYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTIyLTIzDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVHJhY3QgNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQ4MDY2NTU2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBlYXN0IGhhbGYgb2YgdGhlIG5vcnRoZWFzdCBxdWFydGVyIG9mIHRoZSBzb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgc291dGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuIDIsIFRvd25zaGlwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQoNClxwYXIgDQpccGFyIEFQTjogIDIzNy0xMzEtMjQNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA2DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQxNjY3NTU3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMiwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMTY2NzU1NyBCYXNlICYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTg2NlxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMTMyLTE5DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyA3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpODY2XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44NjZcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgJn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQp0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTg2NlxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0Mi0yMA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgOH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4NjZcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2NlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgRWFzdCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlDQpyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAyLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTMyLTIyDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyA5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTE2M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTYzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoYXQgcG9ydGlvbiBvZiB0aGUgV2VzdCBoYWxmIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIFNlY3Rpb24gMiwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBpbiB0aGUgdW4taW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhDQpzIHBlciB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mIG9uIGZpbGUgaW4gdGhlIE9mZmljZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgU3VydmV5b3IgR2VuZXJhbCwgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGZzMjZcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQ4NjgyMDA1IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTE3NFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTc0XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgQmVnaW5uaW5nIGF0IHRoZSBOb3J0aGVhc3QgY29ybmVyIG9mIHRoZSBXZXN0IGhhbGYgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2Ygc2FpZCBTZWN0aW9uIDI7IFRoZW5jZSANClNvdXRoZXJseSAxMzIgZmVldDsgVGhlbmNlIFdlc3Rlcmx5IDE2NSBmZWV0OyBUaGVuY2UgTm9ydGhlcmx5IDEzMiBmZWV0OyBUaGVuY2UgRWFzdGVybHkgMTY1IGZlZXQgdG8gdGhlIHBvaW50IG9mIGJlZ2lubmluZy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcZnMyNlxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDg2ODIwMDUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTM1XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMzVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cyBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCjEsIDE5MzgsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EsIGluIFBhdGVudCByZWNvcmRlZCBGZWJydWFyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNCwgMTk2MCBpbiBCb29rIDMyNDIsIFBhZ2UgMTUxIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTMyLTI2DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxMH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTM1XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMzVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZiBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy03XGluc3JzaWQyNzY0MDQwIHF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2YgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTLkIuQi5NLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWQgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTFcaW5zcnNpZDI3NjQwNDAgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGF0ZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBlcn0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgT2ZmaWNpYWx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBsYXQgdGhlcmVvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmaWxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN1cnZleW9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgR2VuZXJhbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlc2N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpYmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEJlZ2lubmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBwb2ludH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTY1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcm5lciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE2NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMzJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0OyB0aGVuY2UgZWFzdGVybHkgMTY1IGZlZXQ7IHRoZW5jZSBub3J0aGVybHkgMTMyIGZlZXQsIHRvIHRoZSBiZWdpbm5pbmcgcG9pbnQuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxbCBcbGkxNDQwXHJpLTIwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4tMjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudGVkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZyB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdmlzaW9ucyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBGZWJydWFyeSAyNCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTYwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMjQyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCBjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xMzItMjcNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTM1XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMzVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTEwMFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTAwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGUgZWFzdCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3QgcXVhcnRlciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXIgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiAyLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvd25zaGlwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyAgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICBXfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnRvIHRoZSBPZmZpY2lhbCBQbGF0IG9mIHNhaWQgbGFuZCBmaWxlZCBpbiB0aGUgRGlzdHJpY3QgTGFuZCBPZmZpY2UgT2N0b2Jlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA3LCAxOTM2Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIHRoYXQgcG9ydGlvbiB3aXRoaW4gdGhlIGZvbGxvd2luZyBkZXNjcmliZWQgbGFuZDoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGF0IHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0IGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdCBxdWFydGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlciBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgcX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBTZWN0aW9uIDIsIFRvd25zaGlwIDExIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgLCBSYW5nZSAxMyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClMuQi5CTS4sIGluIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIE99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZpY2lhbCBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXQgdGhlcmVvZix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGx5aW5nIHNvdXRoZWFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXJseSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmUgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGxpZXMgMTAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQgbm9ydGh3ZXN0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mLCBwYXJhbGxlbCB3aXRoIGFuZCBtZWFzdXJlZCBhdCByaWdodCBhbmdsZXMgZnJvbSB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBsaW5lIGFuZCBpdHMgcHJvbG9uZ2F0aW9uOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEJlZ2lubmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb24gU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTRcaW5zcnNpZDI3NjQwNDAgXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjVcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEuNzV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQgZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNlY3Rpb247fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQ3XCdiMDQ3XHJxdW90ZSA1N1wnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3QgMi40MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0ZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHNhaWQgc2VjdGlvbiwgZGlzdGFudCB0aGVyZW9uIG5vcnRoIDFcJ2IwMDBccnF1b3RlIDU0XCc5NCBlYXN0IDEuNTkgZmVldCBmcm9tIHNhaWQgc291dGhlYXN0IHNlY3Rpb24gY29ybmVyLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTE3NjVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjE3NjVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJhc2lzIG9mIGJlYXJpbmdzIGlzIExhbWJlcnQgUHJvamVjdGlvbiwgTm9ydGggQW1lcmljYW4gMTkyNyBEQVRVTSwgQ2FsaWZvcm5pYSBab25lIDUuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkxXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ3JhbnRvcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGl0bGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdhdGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2hldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2Ugb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3VyZmFjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAga2luZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW5jbHVkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFwcHVydGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluY2lkZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3BlcnR5IGhlcmVpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlc2NyaWJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1c2VkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ubmVjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmV3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCBifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkIHJlY29yZGVkIEZlYnJ1YXJ5IDE0LCAxOTY3IGluIGJvb2sgNDAyNCwgcGFnZSA2Nzggb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBbHNvIGV4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXB0IHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbCBvfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbCBkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgdW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgeGNlcHRlZCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEZlYnJ1YXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgOSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTYwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzIzNyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMzOSBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTEzNVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTM1XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE2Njc1NTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMTY2NzU1NyBBUE46ICAyMzctMTMyLTQxDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDkwNDAxNyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQxNjY3NTU3XGNoYXJyc2lkMTQ5MDQwMTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQxNjY3NTU3XGNoYXJyc2lkMTQ5MDQwMTcgVHJhY3QgMTINClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTI2MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMjYwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZSBXZXN0IGhhbGYgb2YgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgQmFzZSBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE0MS0wMw0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMjYwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4yNjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLA0KIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOCwgYXMgZXhjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHRlZCBhbmQgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzI5MCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE0MS0xMw0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBXZXN0IGhhbGYgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgDQpOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0xNA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmcgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWZyb20gYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLCBnYXN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsIGRlcG9zaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGF0ZW50ZWQsIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZSAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHhjZXB0ZWQgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzZXJ2ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRoZSBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEFtZXJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdGhlIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VwdGVtYmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgsIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gQm9va317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzMwNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYWdlIDg2NCwgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xNDEtMjANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgU291dGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMTY2NzU1NyBCYXNlICYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTQyLTIwDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxN317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xNTEtMDcNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE4fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE1MS0yMg0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMTUNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyNQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCk5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMTUyLTE2DQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1OTYwNDYgZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IC5cdGFiIE8mTSBCdWlsZGluZw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTQ4OTgwNjYgDQpUaGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDE1LCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgUy5CLkIuTS4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMjc2NDA0MCAgU3RhdGUgb2YgQ2FsaWZvcm5pYS4NClxwYXIgDQpccGFyIEV4Y2VwdCBhbiB1bmRpdmlkZWQgXCdiZCBpbnRlcmVzdCBpbiA1MCUgb2YgdGhlIG9pbCwgZ2FzLCBtaW5lcmFscyBhbmQgb3RoZXIgaHlkcm9jYXJib24gc3Vic3RhbmNlcywgYWZmZWN0aW5nIHNhaWQgbGFuZCBhcyByZXNlcnZlZCBieSBkZWVkcyBvZiByZWNvcmQuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTQ4OTgwNjYgXGxpbmUgQnkgYSBkb2N1bWVudCBlbnRpdGxlZCBcJzkzT3JkZXIgU2V0dGxpbmcgRmlyc3QgQWNjb3VudCBhbmQgUmVwb3J0IG9mIEV4ZWN1dG9ycw0KLCBmb3IgUHJlbGltaW5hcnkgRGlzdHJpYnV0aW9uIGluIHRoZSBtYXR0ZXIgb2YgdGhlIGVzdGF0ZSBvZiBPc2NhciBSdWRuaWNrLCBkZWNlYXNlZCwgZmlsZWQgaW4gdGhlIFN1cGVyaW9yIENvdXJ0IG9mIHRoZSBTdGF0ZSBvZiBDYWxpZm9ybmlhIGZvciB0aGUgQ291bnR5IG9mIEtlcm4sIENhc2UgTm8uIDE1Nzc2LCB0aGUgZGVjZWRlbnRzIGludGVyZXN0IGluIHRoZSBhYm92ZSBtaW5lcmFsIGV4Y2VwdGlvbiB3YXMgZGlzdHJpYnV0ZWQgdG8gDQpTb3BoaWUgUnVkbmljaywgTWFyY3VzIFJ1ZG5pY2sgYW5kIEZyYW5jZXMgQS4gTW9vcmUsIFRydXN0ZWVzIG9mIHRoZSBUZXN0YW1lbnRhcnkgVHJ1c3QgY3JlYXRlZCBieSB0aGUgZGVjZWRlbnRzIFdpbGwgYnkgZG9jdW1lbnQgcmVjb3JkZWQgSmFudWFyeSAxMiwgMTk3OSBpbiBib29rIDUxNjgsIHBhZ2UgNzk3IG9mIE9mZmljaWFsIFJlY29yZHMuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xODUtMDUNClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU5NjA0NiBofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgLlx0YWIgTGF5ZG93biBBcmVhDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE1LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0zXGV4cG5kdHctMTVcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMTY2NzU1NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFscyBhbmQgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXMgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgaW59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyLCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rIDI1MTksIFBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyODl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpY2lhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSZWNvcmRzLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQxNjY3NTU3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlciBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm90fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJldmlvdXNseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlbmphbWluIFdpbnRlcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQphIG1hcnJpZWQgbWFuLCBpbiBkZWVkIHJlY29yZGVkIG9uIEJvb2sgNTk1NCwgUGFnZSAyMTkyIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBTkQNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xNVxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTEwMjZccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDI2XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGZzMjZcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlcyBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTSZSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNTE5LCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjg5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgT2ZmaWNpYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmVjb3Jkcy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMTY2NzU1NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByZXZpb3VzbHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZW5qYW1pbiBXaW50ZXIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KYSBtYXJyaWVkIG1hbiwgaW4gZGVlZCByZWNvcmRlZCBpbiBCb29rIDU5NTQsIFBhZ2UgMjE5MiBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQU5EDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0zXGV4cG5kdHctMTVcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXMgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcyByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjUxOSwgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJlY29yZHMuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODg4NTEgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDEzODg4NTEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcmV2aW91c2x5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVuamFtaW4gV2ludGVyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIA0KbWFycmllZCBtYW4sIGluIGRlZWQgcmVjb3JkZWQgaW4gQm9vayA1OTU0LCBQYWdlIDIxOTIgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx0eDI1NjJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTiAyMzctMTg1LTAxDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzA4MzcwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTE1MjEgaS5cdGFiIENvbmRvciBEZXRlY3Rpb24gVG93ZXINClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDMwODM3MDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3OTQ3MjkgDQpUaGUgRWFzdCBoYWxmIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgZnJhY3Rpb25hbCBTZWN0aW9uIDE4LCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTQgV2VzdCwgUy5CLk0uLCBhY2NvcmRpDQpuZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCBvZiB0aGUgc3VydmV5IG9mIHNhaWQgbGFuZCBvbiBmaWxlIGluIHRoZSBPZmZpY2Ugb2YgdGhlIEJ1cmVhdSBvZiBMYW5kIE1hbmFnZW1lbnQgYW5kIGFwcHJvdmVkIG9uIE5vdmVtYmVyIDIxLCAxODk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTE1MjEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc5NDcyOSBBUE4gMjM3LTA4My0wOX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc5NDcyOVxjaGFycnNpZDQ4MTM1ODIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM3IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDMwODg5MjcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczdccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsNlxvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjcgU2hhcmVkIFBlcm1pdHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGEuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxNVxxaiBcZmktMzYwXGxpMTgwMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM3XGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuIENvdW50eSBTdWJzdGF0aW9uIEJ1aWxkaW5nIHBlcm1pdCBOby4gSzIwMTQwMzYwOSBpc3N1ZWQgQXVndXN0IDI5LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgYi5cdGFifUtlcm4gQ291bnR5IFRyYW5zbWlzc2lvbiBMaW5lIEJ1aWxkaW5nIFBlcm1pdCBOby4gSzIwMTQwNDIzNCBpc3N1ZWQgQXVndXN0IDE0LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgYy5cdGFifUtlcm4gQ291bnR5IEVuY3JvYWNobWVudCBQZXJtaXQgZm9yIGZpbG1pbmcgb2Ygcm9hZHMuIFBlcm1pdCBOby4gMDM1My0xNCBpc3N1ZWQgQXByaWwgOSwgMjAxNC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGQuXHRhYn1LZXJuIENvdW50eSBFbmNyb2FjaG1lbnQgUGVybWl0IGZvciBib3JpbmcgdW5kZXIgT2FrIENyZWVrIFJvYWQuIFBlcm1pdCBOby4gMDYyNi0xNCBpc3N1ZWQgSnVuZSAxMiwgMjAxNC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGUuXHRhYn1LZXJuIENvdW50eSBFbmNyb2FjaG1lbnQgUGVybWl0IGZvciBwcml2YXRlIGFjY2Vzcy4gUGVybWl0IE5vLiAwMzYzLTE0IGlzc3VlZCBBcHJpbCA5LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgZi5cdGFifUtlcm4gQ291bnR5IEVuY3JvYWNobWVudCBQZXJtaXQgZm9yIHRyYW5zbWlzc2lvbiBsaW5lIHByaXZhdGUgYWNjZXNzLiBQZXJtaXQgTm8uIDA4MDktMTQgaXNzdWVkIEF1Z3VzdCA2LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgZy5cdGFifUtlcm4gQ291bnR5IEVuY3JvYWNobWVudCBQZXJtaXQgZm9yIHRyYW5zbWlzc2lvbiBsaW5lIGNvbnN0cnVjdGlvbi4gUGVybWl0IE5vLiAwNDc3LTE0IGlzc3VlZCBNYXkgOCwgMjAxNC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGguXHRhYn1LZXJuIENvdW50eSBFbmNyb2FjaG1lbnQgUGVybWl0IGZvciB0cmVuY2hpbmcgaW4gS2VybiBDb3VudHkgZnJhbmNoaXNlLiBQZXJtaXQgTm8uIDEyMDEtMTQgZGF0ZWQgTm92ZW1iZXIgNSwgMjAxNC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGkuXHRhYn1FYWdsZSBUYWtlIFBlcm1pdDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkNTcwMTY0OSB5ZXQgdG8gYmUgaXNzdWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwICBieSB0aGUgVVMgRmlzaCBhbmQgV2lsZGxpZmUgU2VydmljZS4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjc2NDA0MCBbZG9lcyBub3QgcmVsYXRlIHRvIFNoYXJlZCBGYWNpbGl0aWVzXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBqLlx0YWJ9QXV0aG9yaXR5IHRvIGNvbnN0cnVjdCAxMjUta3cgZW1lcmdlbmNlIGdlbmVyYXRvciBpc3N1ZWQgYnkgS2VybiBDb3VudHkgQWlyIFBvbGx1dGlvbiBDb250cm9sIERpc3RyaWN0IG9uIE9jdG9iZXIgOCwgMjAxNC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGsuXHRhYn1LZXJuIENvdW50eSBPcmRpbmFuY2UgTm8uIEY1ODkgZ3JhbnRpbmcgUmlzaW5nIFRyZWUgV2luZCBGYXJtIExMQyBhIGZyYW5jaGlzZSB0bw0KIGNvbnN0cnVjdCwgaW5zdGFsbCwgbWFpbnRhaW4sIG9wZXJhdGUsIHJlcGFpciwgcmVuZXcgYW5kIHJlbW92ZSB1bmRlcmdyb3VuZCBmaWJlciBvcHRpYyBjYWJsZSBkYXRlZCBOb3ZlbWJlciA0LCAyMDE0LiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQ2NTE4MTYxIFtQYXJ0aWFsIGFzc2lnbm1lbnQgdG8gUmlzaW5nIFRyZWUgSUkgYW5kIFJpc2luZyBUcmVlIElJSSBwZW5kaW5nLl19ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM3IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDMwODg5MjcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczdccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsNlxvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDMwODg5MjcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg4OTI3IFRoaXJkIFBhcnR5IFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjdcY2hhcnJzaWQzMDg4OTI3IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDMwODM3MDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgYS5cdGFiIE8mTSBCdWlsZGluZzogIFJpZ2h0cyBvZiBMb25lIFZhbGxleSBTb2xhciBQYXJrIEkgTExDIGFuZCBMb25lIFZhbGxleSBTb2xhciBQYXJrIElJIExMQyAoY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNjA3MTI5NlxjaGFycnNpZDQ4MTM1ODIgU3VibGVzc2Vlc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgXCc5NCkgdW5kZXIgdGhhdCBjZXJ0YWluIFN1YmxlYXNlIEFncmVlbWVudCBkYXRlZCBbX19fX19dLCAyMDE0IGJ5IGFuZCBiZXR3ZWVuIHRoZSBDby1Pd25lcnMsIGFzIHN1Ymxlc3NvcnMsIGFuZCB0aGUgU3VibGVzc2VlcywgYXMgc3VibGVzc2Vlcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBCLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzNlxxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDVcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDY1OTk4NiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQXNzZXRzIEpvaW50bHkgT3duZWQgYW5kIFNoYXJlZCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiBSaXNpbmcgVHJlZSBJIGFuZCBSaXNpbmcgVHJlZSBJSSAoUlNUIEkvSUkgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczcgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzN1xxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw2XG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNjU5OTg2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNjA3MTI5NiBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBhLlx0YWIgUm9hZHMNClxwYXIgYi5cdGFiIE1ldGVvcm9sb2dpY2FsIFRvd2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTZcY2hhcnJzaWQ0ODEzNTgyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM3XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBTaGFyZWQgUmVhbCBQcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjY3NzYzIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IGEuXHRhYiBDb2xsZWN0aW9uIGFuZCBEaXN0cmlidXRpb24gTGluZXM6ICANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBTb3V0aCBoYWxmIG9mIHRoZSBTb3V0aCBoYWxmIG9mIHRoZSBXZXN0IGhhbGYgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIA0Kb2YgZnJhY3Rpb25hbCBTZWN0aW9uIDM2LCBUb3duc2hpcCAxMiBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sICBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgQVBOOiAgMjI0LTQ0MC0zMQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzDQp0IHF1YXJ0ZXIgb2YgdGhhdCBwb3J0aW9uIG9mIHRoZSBOb3J0aCBoYWxmIG9mIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSBDb3VudHkgIG9mICBLZXJuLCAgU3RhdGUgIG9mICBDYWxpZm9ybmlhLCAgYWNjb3JkaW5nICB0byAgdGhlICBvZmZpY2lhbCAgcGxhdCAgdGgNCmVyZW9mLCAgbHlpbmcgIG5vcnRoZXJseSAgb2YgIHRoZSBub3J0aHdlc3Rlcmx5IGxpbmUgb2YgdGhhdCBjZXJ0YWluIHN0cmlwIG9mIGxhbmQgMjAwIGZlZXQgaW4gd2lkdGggY29udmV5ZWQgdG8gdGhlIENpdHkgb2YgTG9zIEFuZ2VsZXMsIGEgbXVuaWNpcGFsIGNvcnBvcmF0aW9uIGJ5IGRlZWQgcmVjb3JkZWQgTWFyY2ggMTMsIDE5MjAgaW4gQm9vayAzNDYsIFBhZ2UgNDIxIG9mIERlZWRzLg0KXHBhciANClxwYXIgRXhjZXB0IHRoZXJlZnJvbSB0aGF0IHBvcnRpb24gb2Ygc2FpZCBsYW5kIGRlZWRlZCB0byB0aGUgQ2l0eSBvZiBMb3MgQW5nZWxlcywgYSBtdW5pY2lwYWwgY29ycG9yYXRpb24gYnkgZGVlZCByZWNvcmRlZCBBcHJpbCAxOCwgMTk2OCBpbiBCb29rIDQxNTEsIFBhZ2UgNDAwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjYxLTAzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdXRoIGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEsIFQNCm93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBleGNlcHRpbmcgZnJvbSB0aGUgU291dGggaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHNhaWQgU2VjdGlvbiAxLCB0aGF0IHBvcnRpb24gdGhlcmVvZiB3aXRoaW4gdGhhdCBjZXJ0YWluIHN0cmlwIG9mIGxhbmQgMjAwIGZlZXQgaW4gd2lkdGgsIGNvbnZleWVkIHRvIHRoZSBDaXR5IG9mIA0KTA0Kb3MgQW5nZWxlcywgYSBtdW5pY2lwYWwgY29ycG9yYXRpb24sIGJ5IERlZWQgcmVjb3JkZWQgTWFyY2ggMTMsIDE5MjAgaW4gQm9vayAzNDYsIFBhZ2UgNDIxIG9mIERlZWRzOyBhbHNvIGV4Y2VwdGluZyB0aGVyZWZyb20gdGhhdCBwb3J0aW9uIHRoZXJlb2YgY29udmV5ZWQgdG8gdGhlIENpdHkgb2YgTG9zIEFuZ2VsZXMgaW4gZGVlZCByZWNvcmRlZCBKdW5lIDE5LCAxOTY4IG9uIEJvb2sgNDE3MSwgUGFnZSAyNTYgb2YgT2ZmaWNpYWwgUmVjb3JkDQpzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0wNg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA0DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBOb3J0aCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4ODg1MSBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIFNlY3Rpb24gMSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbnkgcG9ydGlvbiBvZiBzYWlkIGxhbmQgYXMgZGVlZGVkIHRvIHRoZSBDaXR5IG9mIExvcyBBbmdlbGVzLCBhIG11bmljaXBhbCBjb3Jwb3JhdGlvbiBmb3IgTG9zIEFuZ2VsZXMgQXF1ZWR1Y3QgYnkgZGVlZCByZWNvcmRlZCBBcHJpbCAxOCwgMTk2OSBpbiBCb29rIDQxNTEsIFBhZ2UgMzkzLCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0xMw0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA1DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFBhcmNlbCA0IG9mIFBhcmNlbCBNYXAgTm8uIDQxMjAsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYXMgcGVyIG1hcCByZWNvcmRlZCBKYW51YXJ5IDQsIDE5NzggaW4gQm9vayAyMCwgUGFnZSA2IG9mIE1hcHMgb2YgUGFyY2VsIE1hcHMsIGluIHRoZSBPZmZpY2Ugb2YgdGhlIENvdW50eSBSZWNvcmRlciBvZiBzYWlkIENvdW50eS4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMjINClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdCBoYWxmIG9mIHRoZSBFYXN0IGhhbA0KZiBvZiB0aGUgTm9ydGggaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgbHlpbmcgbm9ydGhlcmx5IGFuZCB3ZXN0ZXJseSBvZiB0aGUgbm9ydGh3ZXN0IGxpbmUgb2YgdGhhdCBwb3J0aW9uIHRoZXJlDQpvZiB3aXRoaW4gdGhhdCBjZXJ0YWluIHN0cmlwIG9mIGxhbmQgMjAwIGZlZXQgaW4gd2lkdGgsIGNvbnZleWVkIHRvIHRoZSBDaXR5IG9mIExvcyBBbmdlbGVzLCBhIG11bmljaXBhbCBjb3Jwb3JhdGlvbiwgYnkgZGVlZCByZWNvcmRlZCBNYXJjaCAxMywgMTkyMCBpbiBCb29rIDM0NiwgUGFnZSA0MjEgb2YgRGVlZHMsIHRoZSBjZW50ZXJsaW5lIG9mIHdoaWNoIGlzIGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciANClxwYXIgQmVnaW5uaW5nIGF0IGEgcG9pbnQgb24gdGhlIGVhc3QgbGluZSBvZiBzYWlkIFNlY3Rpb24gMSwgYSBkaXN0YW5jZSBvZiA1LDE1My4yOCBmZWV0IG5vcnRoIDAwXCdiMDA4XHJxdW90ZSAxMFwnOTQgd2VzdCBvZiB0aGUgc291dGhlYXN0IGNvcm5lciBvZiBzYWlkIFNlY3Rpb24gMSwgYW5kIHJ1bm5pbmcgdGhlbmNlIFNvdXRoIDUxXCdiMDIyXHJxdW90ZSAzMFwnOTQNCiB3ZXN0IDUxOS44MCBmZWV0IHRvIGEgcG9pbnQ7IHRoZW5jZSBvbiBhIGN1cnZlIHRvIHRoZSBsZWZ0IGhhdmluZyBhIHJhZGl1cyBvZiA3MTYuMjMgZmVldCwgYSBkaXN0YW5jZSBvZiAxMDUuMjEgZmVldDsgdGhlbmNlIFNvdXRoIDQyXCdiMDU3XHJxdW90ZSAzMFwnOTQNCiB3ZXN0LCAxLDQwMC4xMSBmZWV0OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgcmlnaHQsICBoYXZpbmcgYSByYWRpdXMgb2YgNzE2LjIzIGZlZXQsIGEgZGlzdGFuY2Ugb2YgODkuNTggZmVldDsgdGhlbmNlIFNvdXRoIDUwXCdiMDA3XHJxdW90ZSAzMFwnOTQgd2VzdCwgMSwwNTkuODAgZmVldDsgdGhlbmNlIG9uIGEgY3VydmUgdG8gdGhlIGxlZnQsIGhhdmluZyBhIHJhZGl1cyBvZiAzNTguMTcNCiBmZWV0LCBhIGRpc3RhbmNlIG9mIDIyNi4xNCBmZWV0OyB0aGVuY2UgU291dGggMTNcJ2IwNTZccnF1b3RlIDMwXCc5NCB3ZXN0LCA0NTAuMTIgZmVldDsgdGhlbmNlIG9uIGEgY3VydmUgdG8gdGhlIHJpZ2h0LCBoYXZpbmcgYSByYWRpdXMgb2YgMzA1LjE3IGZlZXQsIGEgZGlzdGFuY2Ugb2YgMTk2LjQ1IGZlZXQ7IHRoZW5jZSBTb3V0aCA0NVwnYjAyMlxycXVvdGUgMzBcJzk0DQogd2VzdCwgMSwwOTcuODggZmVldDsgdGhlbmNlIG9uIGEgY3VydmUgdG8gdGhlIGxlZnQsIGhhdmluZyBhIHJhZGl1cyBvZiAzNTguMTcgZmVldCwgYSBkaXN0YW5jZSBvZiAxMDcuMTMgZmVldDsgdGhlbmNlIFNvdXRoIDI4XCdiMDE0XHJxdW90ZSANCiB3ZXN0IDcwNS4wNSBmZWV0OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgcmlnaHQsIGhhdmluZyBhIHJhZGl1cyBvZiAzNTguMTcgZmVldCwgYSBkaXN0YW5jZSBvZiAxNDkuOTUgZmVldDsgdGhlbmNlIFNvdXRoIDUyXCdiMDEzXHJxdW90ZSAzMFwnOTQgd2VzdCwgODc2LjMwIGZlZXQgdG8gYSBwb2ludCBvbiB0aGUgU291dGggbGluZSBvZiBzYWlkIFNlY3QNCmlvbiwgYSBkaXN0YW5jZSBvZiA2NjAgZmVldCBlYXN0IG9mIHRoZSBzb3V0aHdlc3QgY29ybmVyIHRoZXJlb2YsIGFzIHBlciBDZXJ0aWZpY2F0ZSBvZiBDb21wbGlhbmNlIHJlY29yZGVkIE5vdmVtYmVyIDYsIDE5ODkgaW4gQm9vayA2MzExLCBQYWdlIDIzNzMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBbHNvIGV4Y2VwdCB0aGUgTm9ydGggaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIFNlY3Rpb24gMSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLg0KXHBhciANClxwYXIgQWxzbyBleGNlcHRpbmcgdGhhdCBwb3J0aW9uIG9mIHNhaWQgbGFuZCBhcyBkZWVkZWQgdG8gdGhlIENpdHkgb2YgTG9zIEFuZ2VsZXMsIGEgbXVuaWNpcGFsIGNvcnBvcmF0aW9uLCBhcyBzaG93biBpbiBzYWlkIGRlZWQgcmVjb3JkZWQgQXByaWwgMTgsIDE5ODggaW4gQm9vayA0MTUxLCBQYWdlIDM5MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMjMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBbGwgdGhhdCBwb3J0aW9uIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEgb2YgdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBiZWluZyBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgDQpccGFyIENvbW1lbmNpbmcgYXQgdGhlIFNvdXRod2VzdCBjb3JuZXIgb2Ygc2FpZCBTZWN0aW9uLCB0aGVuY2UgTm9ydGggMDEgZGVncmVlcyAwMSBtaW51dGVzIDEyIHNlY29uZHMgRWFzdCBvbiBhbmQgYWxvbmcgdGhlIFdlc3QgbGluZSBvZiBzYWlkIFNlY3Rpb24gYSBkaXN0YW5jZSBvZiAxMzguODEgZmVldCB0byBhIHBvaW50IGluIHRoZSBOb3J0aGVybHkgYm91bmRhcnkgb2YgdGhlIExvcyBBbmdlbGVzIEFxdWVkdWN0LCBhcyBjb252ZQ0KeWVkIHRvIHRoZSBDaXR5IG9mIExvcyBBbmdlbGVzIGluIHRoZSBEZWVkIHJlY29yZGVkIE1heSAzMSwgMTk2OCBpbiBCb29rIDQxNjUsIFBhZ2UgNDM0IG9mIE9mZmljaWFsIFJlY29yZHMsIHNhaWQgcG9pbnQgYWxzbyBiZWluZyB0aGUgVHJ1ZSBQb2ludCBvZiBCZWdpbm5pbmc7IHRoZW5jZSBjb250aW51aW5nIE5vcnRoIDAxIGRlZ3JlZSAwMSBtaW51dGVzIDEyIHNlY29uZHMgRWFzdCBvbiBhbiBhbG9uZyBzYWlkIFdlc3QgbGluZSBhIGRpc3RhDQpuDQpjZSBvZiAxMjAzLjIxIGZlZXQgdG8gYSBwb2ludCBvbiB0aGUgTm9ydGggbGluZSBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHNhaWQgU2VjdGlvbjsgdGhlbmNlIE5vcnRoIDg5IGRlZ3JlZXMgMjQgbWludXRlcyA1MiBzZWNvbmRzIEVhc3Qgb24gYW5kIGFsb25nIHNhaWQgTm9ydGggbGluZSBhIGRpc3RhbmNlIG9mIDEsMTg3LjAwIGZlZXQgdG8gYSBwb2ludCBvbiB0aGUgTm9ydGhlcmx5IGJvdW4NCmQNCmFyeSBvZiBzYWlkIExvcyBBbmdlbGVzIEFxdWVkdWN0LCBzYWlkIHBvaW50IGFsc28gYmVpbmcgdGhlIGJlZ2lubmluZyBvbiBhIG5vbi10YW5nZW50IDM0NTAuNTEgZm9vdCByYWRpdXMgY3VydmUsIGZyb20gd2hpY2ggcG9pbnQgdGhlIHJhZGl1cyBwb2ludCBiZWFycyBTb3V0aCA1OSBkZWdyZWVzIDEzIG1pbnV0ZXMgMzcgc2Vjb25kcyBFYXN0OyB0aGVuY2UgU291dGh3ZXN0ZXJseSwgb24gYW5kIGFsb25nIHNhaWQgTm9ydGhlcmx5IGJvdW5kYQ0Kcg0KeSBhbmQgY3VydmUsIHRocm91Z2ggYSBjZW50cmFsIGFuZ2xlIG9mIDAzIGRlZ3JlZXMgMjAgbWludXRlcyAwMSBzZWNvbmRzIGFuIGFyYyBkaXN0YW5jZSBvZiAyMDAuNzYgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgMzg2Ljk2IGZvb3QgcmFkaXVzIHJldmVyc2UgY3VydmU7IHRoZW5jZSBTb3V0aHdlc3Rlcmx5LCBvbiBhbmQgYWxvbmcgc2FpZCBOb3J0aGVybHkgYm91bmRhcnkgYW5kIGN1cnZlLCB0aHJvdWdoIGEgY2VudHJhbCBhbmdsZSBvDQpmIDIwIGRlZ3JlZXMgMjEgbWludXRlcyA0MCBzZWNvbmRzIGFuIGFyYyBkaXN0YW5jZSBvZiAxMzcuNTEgZmVldDsgdGhlbmNlIFNvdXRoIDQ3IGRlZ3JlZXMgNDggZmVldCAwMiBzZWNvbmRzIFdlc3Qgb24gYW5kIGFsb25nIHNhaWQgTm9ydGhlcmx5IGJvdW5kYXJ5IGEgZGlzdGFuY2Ugb2YgMTM4Ni42MSBmZWV0IHRvIHRoZSBUcnVlIFBvaW50IG9mIEJlZ2lubmluZy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMzAgKGZvcm1lcmx5IDIzNy0yNjEtMTApDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDgNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQSB0cmFjdCBvZiBsYW5kIHNpdHVhdGVkIGluIHRoZSBOb3J0aCBoYWxmIG9mIHRoZSBOb3J0aCBoYWxmIG9mIHRoZSBFYXN0IGhhbGYgb2YgdGhlIEVhc3QgaGFsZiBvZiBTZWN0aW9uIDExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIEtlcm4gQ291bnR5LCBDYWxpZm9ybmlhLCBiZWluZyBhIHBvcnRpb24gb2YgdGhhdCBwcm9wZXJ0eSBkZXNjcmliZWQgaW4gQm9vDQprIDQ3NjksIFBhZ2UgNzk4LCByZWNvcmRlZCBvbiBGZWJydWFyeSA4LCAxOTczLCBLZXJuIENvdW50eSBEZWVkIFJlY29yZHMsIGFuZCBiZWluZyBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgDQpccGFyIFRoYXQgcG9ydGlvbiBvZiBzYWlkIHByb3BlcnR5IGx5aW5nIG5vcnRod2VzdCBvZiB0aGF0IHByb3BlcnR5IGRlc2NyaWJlZCBpbiBCb29rIDQxOTgsIFBhZ2UgNDI5LCBLZXJuIENvdW50eSBEZWVkIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg1LTAzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDkNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdXRoZWFzdCBcJ2JjIG9mIHRoZSBOb3J0aHdlc3QgXCdiYyBvZiB0aGUgTm9ydGhlYXN0IFwnYmMgb2YgU2VjdGlvbiAxMSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLg0KXHBhciANClxwYXIgRVhDRVBUOg0KXHBhciBQYXJjZWwgTm8uIDgwIGNvbXByaXNpbmcgb2YgdGhhdCBwb3J0aW9uIG9mIHRoZSBTb3V0aGVhc3QgXCdiYyBvZiB0aGUgTm9ydGh3ZXN0IFwnYmMgb2YgdGhlIE5vcnRoZWFzdCBcJ2JjDQogb2YgU2VjdGlvbiAxMSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLCBseWluZyBzb3V0aGVhc3Rlcmx5IG9mIGEgbGluZSB0aGF0IGxpZXMgMTAwIGZlZXQgbm9ydGhlYXN0ZXJseSBvZiwgcGFyYWxsZWwgd2l0aCBhbmQgbWVhc3UNCnJlZCBhdCByaWdodCBhbmdsZXMgZnJvbSB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBsaW5lIGFuZCBpdHMgcHJvbG9uZ2F0aW9uOg0KXHBhciANClxwYXIgQmVnaW5uaW5nIGF0IGEgcG9pbnQgaW4gdGhlIFNvdXRoZXJseSBsaW5lIG9mIHNhaWQgU2VjdGlvbiAxMSwgZGlzdGFudCB0aGVyZW9uIE5vcnRoIDg5IGRlZ3JlZXMgMzAgbWludXRlcyAyMSBzZWNvbmRzIEVhc3QgNzY5Ljc0IGZlZXQgZnJvbSB0aGUgU291dGh3ZXN0IGNvcm5lciBvZiBzYWlkIFNlY3Rpb247IHQNCmhlbmNlIE5vcnRoIDI5IGRlZ3JlZXMgMTEgbWludXRlcyA0OCBzZWNvbmRzIEVhc3QgMTc0MC44NCBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSBjdXJ2ZSBjb25jYXZlIHNvdXRoZWFzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiA0NTUuMTkgZmVldDsgdGhlbmNlIG5vcnRoZWFzdGVybHkgYWxvbmcgc2FpZCBjdXJ2ZSB0aHJvdWdoIGFuIGFuZ2xlIG9mIDQ3IGRlZ3JlZXMgNDcgbWludXRlcyA0MyBzZWNvbmRzLCBhbiBhcmMgbGVuZ3RoIA0Kbw0KZiAzNzkuNzEgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgcmV2ZXJzZSBjdXJ2ZSBjb25jYXZlIG5vcnRod2VzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiAyNTAuMDQgZmVldDsgYSByYWRpYWwgbGluZSBhdCBzYWlkIHBvaW50IG9mIHJldmVyc2UgY3VydmF0dXJlIGJlYXJzIE5vcnRoIDEzIGRlZ3JlZXMgMDAgbWludXRlcyAyOSBzZWNvbmRzIFdlc3Q7IHRoZW5jZSBub3J0aGVhc3Rlcmx5IGFsb25nIHNhaWQgcmV2ZXJzZSBjdXJ2ZSwgDQp0DQpocm91Z2ggYW4gYW5nbGUgb2YgNTIgZGVncmVlcyAxNiBtaW51dGVzIDE4IHNlY29uZHMsIGFuIGFyYyBsZW5ndGggb2YgMjI4LjExIGZlZXQ7IHRoZW5jZSBOb3J0aCAyNCBkZWdyZWVzIDQzIG1pbnV0ZXMgMTMgc2Vjb25kcyBFYXN0IDU2MC44MSBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSBjdXJ2ZSBjb25jYXZlIHNvdXRoZWFzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiAzNjUuMDYgZmVldDsgdGhlbmNlIG5vcnRoZWFzdGVybHkgYWwNCm8NCm5nIHNhaWQgY3VydmUsIHRocm91Z2ggYW4gYW5nbGUgb2YgMzcgZGVncmVlcyAwNSBtaW51dGVzIDM4IHNlY29uZHMsIGFuIGFyYyBsZW5ndGggb2YgMjM2LjM0IGZlZXQ7IHRoZW5jZSBOb3J0aCA2MSBkZWdyZWVzIDQ4IG1pbnV0ZXMgNTEgc2Vjb25kcyBFYXN0IDcyMy4yMyBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSBjdXJ2ZSBjb25jYXZlIG5vcnRod2VzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiAzMTAuMTYgZmVldDsgdGhlbmNlIA0Kbg0Kb3J0aGVhc3Rlcmx5IGFsb25nIHNhaWQgY3VydmUgdGhyb3VnaCBhbiBhbmdsZSBvZiA1NiBkZWdyZWVzIDI2IG1pbnV0ZXMgMjcgc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiAzMDUuNTQgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgcmV2ZXJzZSBjdXJ2ZSwgY29uY2F2ZSBzb3V0aGVhc3Rlcmx5IGFuZCBoYXZpbmcgYSByYWRpdXMgb2YgNzY1LjEyIGZlZXQsIGEgcmFkaWFsIGxpbmUgYXQgc2FpZCBwb2ludCBvZiByZXZlcnNlIGN1cnZhdHVyDQplDQogYmVhcnMgU291dGggODQgZGVncmVlcyAzNyBtaW51dGVzIDM2IHNlY29uZHMgRWFzdDsgdGhlbmNlIE5vcnRoZWFzdGVybHkgYWxvbmcgc2FpZCByZXZlcnNlIGN1cnZlIHRocm91Z2ggYW4gYW5nbGUgb2YgMzQgZGVncmVlcyA0NCBtaW51dGVzIDU3IHNlY29uZHMsIGFuIGFyYyBsZW5ndGggb2YgNDY0LjAzIGZlZXQ7IHRoZW5jZSBOb3J0aCA0MCBkZWdyZWVzIDA3IG1pbnV0ZXMgMjEgc2Vjb25kcyBFYXN0IGZlZXQgdG8gdGhlIGJlZ2lubmluZyANCm8NCmYgYSBjdXJ2ZSBjb25jYXZlIFNvdXRoZWFzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiAyMDAwLjMwIGZlZXQ7IHRoZW5jZSBOb3J0aGVhc3Rlcmx5IGFsb25nIHNhaWQgY3VydmUsIHRocm91Z2ggYW4gYW5nbGUgb2YgNyBkZWdyZWVzIDQwIG1pbnV0ZXMgMzYgc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiAyNjguMDEgZmVldDsgdGhlbmNlIE5vcnRoIDQ3IGRlZ3JlZXMgNDcgbWludXRlcyA1NyBzZWNvbmRzIEVhc3QgMTU2NC42MiBmZWV0IA0KdG8gYSBwb2ludCBpbiB0aGUgTm9ydGhlcmx5IGxpbmUgb2Ygc2FpZCBTZWN0aW9uIDExLCBkaXN0YW50IHRoZXJlb24gU291dGggODkgZGVncmVlcyAyMyBtaW51dGVzIDI1IHNlY29uZHMgV2VzdCAxLjc1IGZlZXQgZnJvbSB0aGUgTm9ydGhlYXN0IGNvcm5lciBvZiBzYWlkIFNlY3Rpb24uDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg1LTA0DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDEwDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTEsIFRvd25zaGlwIDExIE5vcnRoIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIFwnYmQgb2YgYWxsIG9pbCwgZ2FzLCBtaW5lcmFscyBhbmQgaHlkcm9jYXJib24gc3Vic3RhbmNlcyBpbiBhbmQgdW5kZXIgc2FpZCBsYW5kLCBhcyBleGNlcHRlZCBieSBNICYgUiBTaGVlcCBDby4sIGluIGRlZWQgcmVjb3JkZWQgTm92ZW1iZXIgMjIsIDE5NTUgaW4gQm9vayAyNTE5LCBQYWdlIDI4MyBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NS0wNQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3OTQ3MjkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBiLlx0YWIgUm9hZHMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTdcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk3XGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsZiBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIFd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzdCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBmcmFjdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTExXGluc3JzaWQyNzY0MDQwIDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDYsIFRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCB3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuc2hpcCAxMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjI0LTQ0MC0zMQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpMTAwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMDBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGUgZWFzdCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3QgcXVhcnRlciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXIgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4gMiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpvd25zaGlwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICBXfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB0aGUgT2ZmaWNpYWwgDQpQbGF0IG9mIHNhaWQgbGFuZCBmaWxlZCBpbiB0aGUgRGlzdHJpY3QgTGFuZCBPZmZpY2UgT2N0b2Jlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA3LCAxOTM2Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIHRoYXQgcG9ydGlvbiB3aXRoaW4gdGhlIGZvbGxvd2luZyBkZXNjcmliZWQgbGFuZDoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk4Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODJcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGF0IHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0IGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdCBxdWFydGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlciBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgcX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAyLCBUb3duc2hpcCAxMSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg4ODUxIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAsIFJhbmdlIDEzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODg4NTEgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLCBTLkIuQk0uLCBpbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBPfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmljaWFsIFB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGF0IHRoZXJlb2YsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbHlpbmcgc291dGhlYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGVybHkgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZSB0aGF0DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGllcyAxMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCBub3J0aHdlc3RlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpvZiwgcGFyYWxsZWwgd2l0aCBhbmQgbWVhc3VyZWQgYXQgcmlnaHQgYW5nbGVzIGZyb20gdGhlIGZvbGxvd2luZyBkZXNjcmliZWQgbGluZSBhbmQgaXRzIHByb2xvbmdhdGlvbjoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTFcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBCZWdpbm5pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9uIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgODl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTE0XGluc3JzaWQyNzY0MDQwIFwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI1XCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLjc1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0IGZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcm5lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZWN0aW9uO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0N1wnYjA0N1xycXVvdGUgNTdcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0IDIuNDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWFzdGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBzYWlkIHNlY3Rpb24sIGRpc3RhbnQgdGhlcmVvbiBub3J0aCAxXCdiMDAwXHJxdW90ZSA1NFwnOTQgZWFzdCAxLjU5IGZlZXQgZnJvbSBzYWlkIHNvdXRoZWFzdCBzZWN0aW9uIGNvcm5lci4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmkxNzY1XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xNzY1XGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCYXNpcyBvZiBiZWFyaW5ncyBpcyBMYW1iZXJ0IFByb2plY3Rpb24sIE5vcnRoIEFtZXJpY2FuIDE5MjcgREFUVU0sIENhbGlmb3JuaWEgWm9uZSA1Lg0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTFcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdyYW50b3JzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRpdGxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdhdGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2hldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3VyZmFjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGtpbmQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW5jbHVkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFwcHVydGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdhdGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmNpZGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9wZXJ0eSBoZXJlaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlc2NyaWJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1c2VkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ubmVjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJld2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCBifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBkZWVkIHJlY29yZGVkIEZlYnJ1YXJ5IDE0LCAxOTY3IGluIGJvb2sgNDAyNCwgcGFnZSA2Nzggb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBbHNvIGV4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXB0IHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbCBvfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbCBkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgdW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgeGNlcHRlZCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEZlYnJ1YXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgOSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTYwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzIzNyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMzOSBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTEzMi00MQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGUgU291fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGVhc3QgcXV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnJ0ZXIgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb24gb2Z9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgTn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J0aGVhc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQyNzY0MDQwIHF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVhcnRlciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgQ291bnR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mZmljaWFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwbGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb2YsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBseWluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aGVybHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBub3J0aHdlc3Rlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlcnRhaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN0cmlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aWR0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29udmV5ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eSBvZiBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xOVxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcywgYSBtdW5pY2lwYWwgY29ycG9yYXRpb24gYnkgZGVlZCByZWNvcmRlZCBNYXJjaH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzLCAxOTIwIGluIEJvb2sgMzQ2LCBQYWdlIDQyMSBvZiBEZWVkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpOTkwXHJpMFxzbC0yNDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjk5MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpFeGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbXVuaWNpcGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcnBvcmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmJ5IGRlZWQgcmVjb3JkZWQgQXByaWwgMTgsIDE5NjggaW4gQm9vayA0MTUxLCBQYWdlIDQwMCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0wMw0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDQNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTEwMFxzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMDBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBTb3V0aCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxLCBUb3duc2hpcCAxMSBOb3J0aCx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlIDEzIFdlc3QsIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZnJvbSB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZiBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy03XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb24gMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2VydGFpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIwMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aWR0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29udmV5ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbXVuaWNpcGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ycG9yYXRpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNYXJjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0zXGV4cG5kdHctMTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzQ2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0MjEgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERlZWRzO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29udmV5ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2VsZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWQgcmVjb3JkZWQgSnVuZSAxOSwgMTk2OCBvbiBCb29rIDQxNzEsIFBhZ2UgMjU2IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjYxLTA2DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTEwMFxzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMDBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTY0MFxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW42NDBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBOb3J0aCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4ODg1MSBxdWFydGVyIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW55fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWwgY299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEzXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcmF0aW9uIGZvciBMb3MgQW5nZWxlcyBBcXVlZHVjdCBieSBkZWVkIHJlY29yZGVkIEFwcmlsIDE4LCAxOTY5IGluIEJvb2sgNDE1MSwgUGFnZSAzOTMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjYxLTEzDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVHJhY3QgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQ4MDY2NTU2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYXJjZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KUGFyY2VsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1hcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOby59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0MTIwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTRcaW5zcnNpZDI3NjQwNDAgZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXMgcGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1hcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEphbnVhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTc4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1hcHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYXJjZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWFwcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTlcaW5zcnNpZDI3NjQwNDAgdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbnR5IFJlY29yZGVyIG9mIHNhaWQgQ291bnR5Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0yNjEtMjINClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA3DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSwgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuaWEsIGx5aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3Rlcmx5IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRoaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZXJ0YWlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIwMCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lkdGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvbnZleWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbXVuaWNpcGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ycG9yYXRpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1hcmNoIDEzLCAxOTIwIGluIEJvb2sgMzQ2LCBQYWdlIDQyMSBvZiBEZWVkcywgdGhlIGNlbnRlcmxpbmUgb2Ygd2hpY2ggaXMgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkxXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQmVnaW5uaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUsMTUzLjI4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAwMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMDhccnF1b3RlIDEwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcm5lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJ1bm5pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNTFcJ2IwMjJccnF1b3RlIDMwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNTE5LjgwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwIGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpwb2ludDsgdGhlbmNlIG9uIGEgY3VydmUgdG8gdGhlIGxlZnQgaGF2aW5nIGEgcmFkaXVzIG9mIDcxNi4yMyBmZWV0LCBhIGRpc3RhbmNlIG9mIDEwNS4yMSBmZWV0OyB0aGVuY2UgU291fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGggNDJcJ2IwNTdccnF1b3RlIDMwXCc5NCB3ZXN0LH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSw0MDAuMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgY3VydmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJhZGl1cyBvZiA3MTYuMjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDg5LjU4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0OyB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aCA1MFwnYjAwN1xycXVvdGUgMzBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0LCAxLDA1OS44MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBjdXJ2ZSB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBsZWZ0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nIGEgcmFkaXVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDM1OC4xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyNi4xNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTNcJ2IwNTZccnF1b3RlIDMwXCc5NCB3ZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQ1MC4xMn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDsgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY3VydmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgcmFkaXVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzA1LjE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5Ni40NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy03XGluc3JzaWQyNzY0MDQwIFwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyXHJxdW90ZSAzMFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLDA5Ny44OH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgY3VydmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGVmdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJhZGl1c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzNTguMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0LCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwNy4xM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDsgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4XCdiMDE0XHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA3MDUuMDUgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGN1cnZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmFkaXVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzU4LjE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE0OS45NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoIDUyXCdiMDEzXHJxdW90ZSAzMFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0LH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgODc2LjMwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgNjYwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgc291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcm5lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb2YsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENlcnRpZmljYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ29tcGxpYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5ODl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjMxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGFnZSAyMzczLCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9uIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2VsZXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbXVuaWNpcGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ycG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQphcyBzaG93biBpbiBzYWlkIGRlZWQgcmVjb3JkZWQgQXByaWwgMTgsIDE5ODggaW4gQm9vayA0MTUxLCBQYWdlIDM5MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMjMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCA4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlciBvZiBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJkaW5vIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmVpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1vcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXJ0aWN1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJseSBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgDQpccGFyIENvbW1lbmNpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcm5lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAwMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZ3JlZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW51dGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2Vjb25kc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0IG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbG9uZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbiBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzOC44MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50IGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBib317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIHV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5kYXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2VsZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBcXVlZHVjdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb252ZXllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWF5IDMxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5Njh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgbiBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDE2NSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClBhZ2UgNDM0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpY2lhbH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmVjb3Jkcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJlaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUcnVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVnaW5uaW5nO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlIGNvbnRpbnVpbmcgTm9ydGggMDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWdyZWUgMDEgbWludX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXMgMTIgc2Vjb25kc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3Qgb24gYW59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsb25nIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0IGxpbmUgYSBkfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdGFuY2Ugb2YgMTIwM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQyNzY0MDQwIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIxIGZlZXQgdG99e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbjt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCA4OSBkZWd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVlcyAyNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbnV0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUyIHNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25kcyBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbiBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbG9uZyBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpZCBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmUgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiAxLDE4Ny4wMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYm91bmRhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXF1ZWR1Y3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmVnaW5uaW5nIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy03XGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC10fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuZ2VudCAzNDUwLjUxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9vdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmFkaXVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY3VydmUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2hpY2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmVhcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWdyZWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbnV0ZXMgMzd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xM1xpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25kcyBFYXN0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0ZXJseSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbG9uZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJvdW5kYXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdXJ2ZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRocm91Z2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZW50cmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5nbGUgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDAzIGRlZ3JlZXMgMjAgbWludX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzIDAxIHNlY29uZHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuIGFyYyBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIDIwMC43NiBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB0aGUgYmVnaW5uaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgYSAzODYuOTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvb3QgcmFkaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwIHV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHMgcmV2ZXJzZSBjdXJ2ZTt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3Rlcmx5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsb25nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJvdW5kYXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY3VydmUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhyb3VnaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlbnRyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmdsZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjAgZGVncmVlcyAyMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbnV0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2Vjb25kc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW4gYXJjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIDEzNy41MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aCA0N317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVncmVlcyA0OH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZHMgV2VzdCBvbiBhbmQgYWxvbmcgc2FpZCBOb3J0aGVybHkgYm91bmRhcnkgYSBkaXN0YW5jZSBvZiAxMzg2LjYxIGZlZXQgdG8gdGhlIFRydWUgUG9pbnQgb2YgQmVnaW5uaW5nLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTEwMFxzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMDBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMjYxLTMwIChmb3JtZXJseSAyMzctMjYxLTEwKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA5DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk4Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODJcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRyYWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0Kc2l0dWF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZiBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgRWFzdCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIEVhc3QgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJhc2UgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sIEtlcm59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkNhbGlmb3JuaWEsIGJlaW5nIGEgcG9ydGlvbiBvZiB0aGF0IHByb3BlcnR5IGRlc2NyaWJlZCBpbiBCb29rIDQ3NjksIFBhZ2UgNzk4LCByZWNvcmRlZCBvbiBGZWJydWFyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4LCAxOTczLCBLZXJuIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRGVlZCBSZWNvcmRzLCBhbmQgYmVpbmcgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxbCBcbGkxNDA0XHJpOTRcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk0XGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGx5aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXNjcmliZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDE5OCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQyOSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgS317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBlcm4gQ291bnR5IERlZWQgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODUtMDMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCAxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQ4MDY2NTU2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWwgXGxpMTQwNFxyaTk0XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45NFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxbCBcbGkxNDA0XHJpMjUzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjI1M1xsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIFNvdXRoZWFzdCBcJ2JjIG9mIHRoZSBOb3J0aHdlc3QgXCdiYyBvZiB0aGUgTm9ydGhlYXN0IFwnYmMNCiBvZiBTZWN0aW9uIDExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpMzAyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4zMDJcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFWENFUFQ6DQpccGFyIFBhcmNlbCBOby4gODAgY29tcHJpc2luZyBvZiB0aGF0IHBvcnRpb24gb2YgdGhlIFNvdXRoZWFzdCBcJ2JjIG9mIHRoZSBOb3J0aHdlc3QgXCdiYyBvZiB0aGUgTm9ydGhlYXN0IFwnYmMgb2YgU2VjdGlvbiANCjExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YsIGx5aW5nIHNvdXRoZWFzdGVybHkgb2YgYSBsaW5lIHRoYXQgbGllcyAxMDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRoZWFzdGVybHkgb2YsIHBhcmFsbGVsIHdpdGggYW5kIG1lYXN1cmVkIGF0IHJpZ2h0IGFuZ2xlcyBmcm9tIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIGxpbmUgYW5kIGl0cyBwcm9sb25nYXRpb246DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTk5MFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW45OTBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZnMyMFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmkxODBcc2IyOVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTgwXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgQmVnaW5uaW5nIGF0IGEgcG9pbnQgaW4gdGhlIFNvdXRoZXJseSBsaW5lIG9mIHNhaWQgU2VjdGlvbiAxMSwgZGlzdGFudCB0aGVyZW9uIE5vcnRoIDg5IGRlZ3JlZXMgMzB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQptaW51dGVzIDIxIHNlY29uZHMgRWFzdCA3NjkuNzQgZmVldCBmcm9tIHRoZSBTb3V0aHdlc3QgY29ybmVyIG9mIHNhaWQgU2VjdGlvbjsgdGhlbmNlIE5vcnRoIDI5IGRlZ3INCmVlcyAxMSBtaW51dGVzIDQ4IHNlY29uZHMgRWFzdCAxNzQwLjg0IGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgc291dGhlYXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDQ1NS4xOSBmZWV0OyB0aGVuY2Ugbm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIGN1cnZlIHRocm91Z2ggYW4gYW5nbGUgb2YgNDcgZGVncmVlcyA0NyBtaW51dGVzIDQzIHNlY29uZHMsIGFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJjIGxlbmd0aCBvZiAzNzkuNzEgZmVldCB0byB0aA0KZSBiZWdpbm5pbmcgb2YgYSByZXZlcnNlIGN1cnZlIGNvbmNhdmUgbm9ydGh3ZXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDI1MC4wNCBmZWV0OyBhIHJhZGlhbCBsaW5lIGF0IHNhaWQgcG9pbnQgb2YgcmV2ZXJzZSBjdXJ2YXR1cmUgYmVhcnMgTm9ydGggMTMgZGVncmVlcyAwMCBtaW51dGVzIDI5IHNlY29uZHMgV2VzdDsgdGhlbmNlIG5vcnRoZWFzdGVybHkgYWxvbmcgc2FpZCByZXZlcnNlIGN1cnZlLCB0aHJvdWdoIGFuIGFuZ2xlIG9mDQogDQo1MiBkZWdyZWVzIDE2IG1pbnV0ZXMgMTggc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiAyMjguMTEgZmVldDsgdGhlbmNlIE5vcnRoIDI0IGRlZ3JlZXMgNDMgbWludXRlcyAxMyBzZWNvbmRzIEVhc3QgNTYwLjgxIGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgc291dGhlYXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDM2NS4wNiBmZWV0OyB0aGVuY2Ugbm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIGN1cnZlLCB0aHINCm8NCnVnaCBhbiBhbmdsZSBvZiAzNyBkZWdyZWVzIDA1IG1pbnV0ZXMgMzggc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiAyMzYuMzQgZmVldDsgdGhlbmNlIE5vcnRoIDYxIGRlZ3JlZXMgNDggbWludXRlcyA1MSBzZWNvbmRzIEVhc3QgNzIzLjIzIGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgbm9ydGh3ZXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDMxMC4xNiBmZWV0OyB0aGVuY2Ugbm9ydGhlYXN0ZXJseSBhbG9uZw0KIHNhaWQgY3VydmUgdGhyb3VnaCBhbiBhbmdsZSBvZiA1NiBkZWdyZWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KMjYgbWludXRlcyAyNyBzZWNvbmRzLCBhbiBhcmMgbGVuZ3RoIG9mIDMwNS41NCBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSByZXZlcnNlIGN1cnZlLCBjb25jYXZlIHNvdXRoZWFzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiA3NjUuMTIgZmVldCwgYSByYWRpYWwgbGluZSBhdCBzYWlkIHBvaW50IG9mIHJldmVyc2UgY3VydmF0dXJlIGJlYXJzIFNvdXRoIDg0IGRlZw0KcmVlcyAzNyBtaW51dGVzIDM2IHNlY29uZHMgRWFzdDsgdGhlbmNlIE5vcnRoZWFzdGVybHkgYWxvbmcgc2FpZCByZXZlcnNlIGN1cnZlIHRocm91Z2ggYW4gYW5nbGUgb2YgMzQgZGVncmVlcyA0NCBtaW51dGVzIDU3IHNlY29uZHMsIGFuIGFyYyBsZW5ndGggb2YgNDY0LjAzIGZlZXQ7IHRoZW5jZSBOb3J0aCA0MCBkZWdyZWVzIDA3IG1pbnV0ZXMgMjEgc2Vjb25kcyBFYXN0IGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgDQpTb3V0aGVhc3Rlcmx5IGFuZCBoYXZpbmcgYSByYWRpdXMgb2YgMjAwMC4zMCBmZWV0OyB0aGVuY2UgTm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIGN1cnZlLCB0aHJvdWdoIGFuIGFuZ2xlIG9mIDcgZGVncmVlcyA0MCBtaW51dGVzIDM2IHNlY29uZHMsIGFuIGFyYyBsZW5ndGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgZiAyNjguMDEgZmVldDsgdGhlbmNlIE5vcnRoIDQ3IGRlZ3JlZXMgNDcgbWludXRlcyA1NyBzZWNvbmRzIEVhc3QgMTU2NC42MiBmZWV0IHRvIGEgcG9pbnQgaW4gdGhlIE5vcnRoZXJseSBsaW5lIG9mIHNhaWQgU2VjdGlvbiAxMSwgZGlzdGFudCB0aGVyZW9uIFNvdXRoIDg5IGRlZ3JlZXMgMjMgbWludXRlcyAyNSBzZWNvbmRzIFdlc3QgMS43NSBmZWV0IGZyb20gdGhlIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcm5lciBvZiBzYWlkIFNlY3Rpb24uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGk0MTRccmkxODBcc2IyOVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTgwXGxpbjQxNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQwNFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0yODUtMDQNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzk0NzI5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgYy5cdGFiIE1ldGVvcm9sb2dpY2FsIFRvd2VyDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCk1lcmlkaWFuLCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBLZXJuLH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTExXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5pYSwgbHlpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3Rlcmx5IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRoaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZXJ0YWlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIwMCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lkdGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29udmV5ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2VsZXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ycG9yYXRpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTWFyY2ggMTMsIDE5MjAgaW4gQm9vayAzNDYsIFBhZ2UgNDIxIG9mIERlZWRzLCB0aGUgY2VudGVybGluZSBvZiB3aGljaCBpcyBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTFcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBCZWdpbm5pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNSwxNTMuMjh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAwOFxycXVvdGUgMTBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnVubmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1MVwnYjAyMlxycXVvdGUgMzBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1MTkuODB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnBvaW50OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgbGVmdCBoYXZpbmcgYSByYWRpdXMgb2YgNzE2LjIzIGZlZXQsIGEgZGlzdGFuY2Ugb2YgMTA1LjIxIGZlZXQ7IHRoZW5jZSBTb3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCA0MlwnYjA1N1xycXVvdGUgMzBcJzk0IHdlc3QsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLDQwMC4xMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmFkaXVzIG9mIDcxNi4yM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgODkuNTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoIDUwXCdiMDA3XHJxdW90ZSAzMFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3QsIDEsMDU5LjgwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIGN1cnZlIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIGxlZnQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmcgYSByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzU4LjE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjI2LjE0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM1wnYjA1NlxycXVvdGUgMzBcJzk0IHdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDUwLjEyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0OyB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMDUuMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk2LjQ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTdcaW5zcnNpZDI3NjQwNDAgXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjJccnF1b3RlIDMwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsMDk3Ljg4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsZWZ0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmFkaXVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDM1OC4xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTA3LjEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0OyB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjhcJ2IwMTRccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDcwNS4wNSBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY3VydmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzNTguMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTQ5Ljk1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGggNTJcJ2IwMTNccnF1b3RlIDMwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4NzYuMzB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiA2NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvZix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2VydGlmaWNhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb21wbGlhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk4OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2MzExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwIFB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgYWdlIDIzNzMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb24gb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3Jwb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmFzIHNob3duIGluIHNhaWQgZGVlZCByZWNvcmRlZCBBcHJpbCAxOCwgMTk4OCBpbiBCb29rIDQxNTEsIFBhZ2UgMzkzLCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTI2MS0yMw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzMDg4OTI3IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM3XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyNyBTaGFyZWQgUGVybWl0cw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgYS5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczE1XHFqIFxmaS0zNjBcbGkxODAwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczVcYWRqdXN0cmlnaHRccmluMFxsaW4xODAwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4gQ291bnR5IEdyYWRpbmcgUGVybWl0IE5vLiBLMjAxNDAyMTIzOiBJc3N1ZWQgSnVseSAyNSwgMjAxNA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgYi5cdGFifQ0KSW5jaWRlbnRhbCBUYWtlIFBlcm1pdCAyMDgxLTIwMTQtMDIzLTA0OiBJc3N1ZWQgdG8gUmlzaW5nIFRyZWUgV2luZCBGYXJtIExMQyBhbmQgUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJIExMQyBieSBDYWxpZm9ybmlhIERlcGFydG1lbnQgb2YgRmlzaCBhbmQgV2lsZGxpZmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGMuXHRhYn1Ob3RpY2Ugb2YgDQpBcHBsaWNhYmlsaXR5IHVuZGVyIFdhc3RlIERpc2NoYXJnZSBSZXF1aXJlbWVudHMgV0RJRCBOby4gNkIxNTE0MDMwMDQ6IElzc3VlZCB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDIGFuZCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDIGJ5IExhaG9udGFuIFJlZ2lvbmFsIFdhdGVyIFF1YWxpdHkgQ29udHJvbCBCb2FyZA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTYwNzEyOTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NlxjaGFycnNpZDE0MDQxNTMwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzMDg4OTI3IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM3XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyNyBUaGlyZCBQYXJ0eSBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTI3MjUzNSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1XGNoYXJyc2lkMTMxNzY3MTMgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDUxOTM5NjQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTE5Mzk2NFxjaGFycnNpZDUxOTM5NjQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTcgXHBhZ2UgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NzYzOTk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNjc2Mzk5NyBFWEhJQklUIEItMQ0KXHBhciANClxwYXIgUFJPSkVDVCBTVUJTVEFUSU9OIFNIQVJFRCBGQUNJTElUSUVTDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTcgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIE9uZSAoMSkgMjMwa1YgRGVhZCBFbmQgU3RydWN0dXJlIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpUYXBlcmVkIFR1YnVsYXIgU3RydWN0dXJhbCBTdGVlbCBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIExpZ2h0bmluZyBTdXJnZSBBcnJlc3RvcnMsIDE4MGtWLCAxNDRrViBNQ09WDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgQ29tcHJlc3Npb24gVGVlcywgNzk1IEFDU1IgdG8gTkVNQSA0LUhvbGUgUGFkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaGlydHkgKDMwKSBGZWV0IG9mIDEyNzIga2NtaWwgQUFDIChOYXJjaXNzdXMpIGNvbmR1Y3Rvcg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4ICg2KSBXZWxkZWQgVGVybWluYWwgQWRhcHRvcnMsIDEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgQ2FibGUgU3VwcG9ydHMsIDItMTI3MiBBQUMgY29uZHVjdG9ycyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9Rml2ZSBIdW5kcmVkICg1MDApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1BcyBOZWVkZWQgQ2FibGUgU3BhY2VycyAyLTEyNzIgQUFDIGNvbmR1Y3RvcnMsIDRcJzk0IHNlcGFyYXRpb24NClxwYXIgfVxwYXJkIFxsdHJwYXJcczZccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NzYzOTk3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KVGhyZWUgKDMpIDIzMGtWIFNpbmdsZSBQaGFzZSBCdXMgU3VwcG9ydHMsIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgQ2FibGUgU3VwcG9ydHMsIDItMTI3MiBBQUMgY29uZHVjdG9ycyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgT25lICgxKQ0KIDIzMGtWLCAxMjAwQSwgR2FuZ2VkIDMtUGhhc2UsIE1vdG9yIE9wZXJhdGVkIERpc2Nvbm5lY3QgU3dpdGNoIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciwgYXNzb2NpYXRlZCBoYXJkd2FyZSwgYW5kIHN3aXRjaCBncm91bmRpbmcgcGxhdGZvcm0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVNpeCAoNikgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVNpeCAoNikgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4dHkgKDYwKSBGZWV0IG9mIDEyNzIga2NtaWwgQUFDIChOYXJjaXNzdXMpIGNvbmR1Y3Rvcg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9QXMgTmVlZGVkIENhYmxlIFNwYWNlcnMgMi0xMjcyIEFBQyBjb25kdWN0b3JzLCA0XCc5NCBzZXBhcmF0aW9uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM2XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBPbmUgKDEpIDIzMGtWLCBNZXRlcmluZyBTdGF0DQppb24sIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RXF1aXBtZW50IGNvbnRyb2wgd2lyaW5nIGFuZCBpbnRlcmNvbm5lY3RpbmcgY29uZHVpdCBpbmNsdWRpbmcgSnVuY3Rpb24gQm94ZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSAyMzBrViwgNjAwOjUgU2luZ2xlIFJhdGlvIER1YWwgV2luZGluZywgSW5zdHJ1bWVudCBDdXJyZW50IFRyYW5zZm9ybWVycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIDIzMGtWLCAxMjAwLzIwMDA6MToxIER1YWwgV2luZGluZywgSW5zdHJ1bWVudCBQb3RlbnRpYWwgVHJhbnNmb3JtZXJzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TaXggKDYpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDYWJsZSBTcGFjZXIgVGVlcywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBBbHVtaW51bSBDYWJsZSBTdXBwb3J0IEJyYWNrZXRzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaGlydHkgKDMwKSBGZWV0IG9mIDEyNzIga2NtaWwgQUFDIChOYXJjaXNzdXMpIGNvbmR1Y3Rvcg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQoyMzBrViBTdWJzdGF0aW9uIFN1bW1hdGlvbiBCdXMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANCk9uZSAoMSkgMjMwa1YsIFRocmVlIFBoYXNlIExvdyBCdXMgU3VwcG9ydCwgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRocmVlICgzKSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhyZWUgKDMpIEJ1cyBTdXBwb3J0cywgNFwnOTQgSVBTIEFsdW1pbnVtIEJ1cyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhyZWUgKDMpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRoaXJ0eSAoMzApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpUaGlydGVlbiAoMTMpIDIzMGtWLCBTaW5nbGUgUGhhc2UgTG93IEJ1cyBTdXBwb3J0cywgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRoaXJ0ZWVuICgxMykgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRoaXJ0ZWVuICgxMykgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpTaXggKDYpIDIzMGtWLCBTaW5nbGUgUGhhc2UgSGlnaCBCdXMgU3VwcG9ydHMsIHdoaWNoIGluY2x1ZGVzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwyXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFN0cnVjdHVyYWwgU3RlZWwgYW5kIEFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVN0cnVjdHVyZSBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TaXggKDYpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TaXggKDYpIEJ1cyBTdXBwb3J0cywgNFwnOTQgSVBTIEFsdW1pbnVtIEJ1cyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KRm91ciAoNCkgMjMwa1YsIFRocmVlIFBoYXNlIEhpZ2ggQnVzIFN1cHBvcnQsIHdoaWNoIGluY2x1ZGVzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwyXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFN0cnVjdHVyYWwgU3RlZWwgYW5kIEFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVN0cnVjdHVyZSBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1Ud2VsdmUgKDEyKSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VHdlbHZlICgxMikgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpUaHJlZSAoMykgMjMwa1YsIFRocmVlIFBoYXNlIExvdyBCdXMgU3VwcG9ydCwgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1OaW5lICg5KSBCdXMgU3VwcG9ydHMsIDRcJzk0IElQUyBBbHVtaW51bSBCdXMgdG8gNVwnOTQgQm9sdCBDaXJjbGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmV0eSAoOTApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpOaW5lICg5KSAyMzBrViwgQWx1bWludW0gQS1GcmFtZXMsIHdoaWNoIGluY2x1ZGVzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwyXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIEVpZ2h0ZWVuICgxOCkgVGVlIENvbm5lY3RvciwgNFwnOTQgSVBTIE1haW4gdG8gMw0KXCc5NCBJUFMgVGFwLCAxNVwnYjANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIFRlZSBDb25uZWN0b3IsIDRcJzk0IElQUyBNYWluIHRvIDItM1wnOTQgSVBTIFRhcHMsIDE1XCdiMA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VHdvIEh1bmRyZWQgVGVuICgyMTApIEZlZXQgb2YgM1wnOTQgSVBTIEFsdW1pbnVtIEJ1cywgNjA2My1UNg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIEVpZ2h0IEh1bmRyZWQgRmlmdHkgKDg1MCkgRmVldCBvZiA0XCc5NA0KIElQUyBBbHVtaW51bSBCdXMsIDYwNjMtVDYNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUVpZ2h0IEh1bmRyZWQgRmlmdHkgKDg1MCkgRmVldCBvZiA3OTUga2NtaWwgQUNTUiAoRHJha2UpIENvbmR1Y3Rvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTcgDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIEFib3ZlIGFuZCBCZWxvdyBHcm91bmQgUmFjZXdheXMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpDb25kdWl0cywgZml0dGluZ3MsIGFuZCBjb25uZWN0b3JzIGNvbm5lY3Rpbmcgc2hhcmVkIGZhY2lsaXR5IGVxdWlwbWVudCBvciBhcHBhcmF0dXMgdG8gb3RoZXIgU3Vic3RhdGlvbiBjb21wb25lbnRzIGxvY2F0ZWQgd2l0aGluIHRoZSBTdWJzdGF0aW9uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1DYWJsZSBUcmVuY2gsIFRyZW5jaCBDb3ZlcnMsIFRyZW5jaCBIYW5nZXJzLCBhbmQgVHJlbmNoIEdyb3VuZGluZyBNYXRlcmlhbHMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczZccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NzYzOTk3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFN1YnN0YXRpb24gR3JvdW5kIEdyaWQgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClR3ZW50eSBUaHJlZSBUaG91c2FuZCAoMjMsMDAwKSBGZWV0IG9mICM0LzAga2NtaWwgMTkgU3RyYW5kLCBCYXJlIENvcHBlciANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUV4b3RoZXJtaWMgQ3Jvc3MgY29ubmVjdGlvbnMgfiBpbmNsdWRpbmcgbW9sZHMsIHNob3RzLCBhbmQgYWNjZXNzb3JpZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUV4b3RoZXJtaWMgVGVlIGNvbm5lY3Rpb25zIH4gaW5jbHVkaW5nIG1vbGRzLCBzaG90cywgYW5kIGFjY2Vzc29yaWVzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1FeG90aGVybWljIEx1ZyBjb25uZWN0aW9ucyB+IGluY2x1ZGluZyBtb2xkcywgc2hvdHMsIGFuZCBhY2Nlc3Nvcmllcw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NzYzOTk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyNFxsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpTdWJzdGF0aW9uIExpZ2h0aW5nIGFuZCBMaWdodG5pbmcgUHJvdGVjdGlvbiBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KRWlnaHQgKDgpIFN0YXRpYyBNYXN0cywgOTBcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwICBUYWxsIHdpdGggcHJvdmlzaW9uIGZvciB5YXJkIGxpZ2h0aW5nDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIEZpZnRlZW4gKDE1KSA0MDBXLCBIUFMgRmxvb2QgTGlnaHRzDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1M1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NzYzOTk3XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KU3Vic3RhdGlvbiBGZW5jaW5nIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIG1hdFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBlcmlhbHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KRmlmdGVlbiBIdW5kcmVkICgxNTAwKSBGZWV0IG9mIGZlbmNlLCA4XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCAgdGFsbCwgN1xoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgIG1lc2ggd2l0aCB0aHJlZSBzdHJhbmRzIG9mIGJhcmJlZCB3aXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIEZlbmNlIHBvc3RzLCBnYXRlcywgaGFuZ2VycywgYW5kIGdyb3VuZGluZyBtYXRlcmlhbHMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5NyBccGFnZSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQ2NzYzOTk3IEVYSElCSVQgQi0yDQpccGFyIA0KXHBhciBUUkFOU01JU1NJT04gTElORSBTSEFSRUQgRkFDSUxJVElFUw0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTlcY2hhcnJzaWQxMTQxNzAzMyBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQozLjk5LW1pbGUgMjIwa1YgZ2VuZXJhdGlvbiB0aWUtbGluZSwgb3B0aWNhbCBncm91bmQgd2lyZSBvbiB0aGUgZ2VuZXJhdGlvbiB0aWUtbGluZSBmb3IgdGhlIHByaW1hcnkgdGVsZWNvbW11bmljYXRpb25zIHBhdGgsIHNpbmdsZS1tb2RlIGZpYmVyIG9wdGljIGNhYmxlIGZvciB0aGUgZGl2ZXJzZSB0ZWxlY29tbXVuaWNhdGlvbnMgcGF0aCwgYXBwdXJ0ZW5hbnQgc3RydWN0dXJlcywgYW5kIGZhY2lsaXRpZXMsIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBpbmNsdWRpbmcgdGhlIGZvbGxvd1xoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBpbmc6DQpccGFyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyNFxsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRm9ydHkgVHdvICg0MikgdHJhbnNtaXNzaW9uIHN0cnVjdHVyZXMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRm9ydHkgVHdvICg0MikgdHVidWxhciBzdGVlbCBwb2xlcw0KDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIE9uZSBIdW5kcmVkIFR3ZW50eSAoMTIwKSAyMzBrViAzMEsgSW5zdWxhdG9ycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCANCk9uZSBIdW5kcmVkIFR3ZW50eSAoMTIwKSBTdXNwZW5zaW9uIEhhcmR3YXJlIEFzc2VtYmxpZXMgZm9yIDc5NSBLQ01JTCBBQ1NSIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBEcmFrZVwnOTQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRm9ydHkgKDQwKSAyXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIDMwa1YgNTBLIEluc3VsYXRvcnMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgRm9ydHkgKDQwKSBEZWFkIEVuZCBIYXJkd2FyZSBBc3NlbWJsaWVzIGZvciA3OTUgS0NNSUwgQUNTUiBcJzkzDQpcbG9jaFxmMCBcaGljaFxmMCBEcmFrZVwnOTQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRm9ydHkgRml2ZSAoNDUpIE9QR1cgSGFyZHdhcmUgQXNzZW1ibGllcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCBGb3VyICg0KSBEZWFkIEVuZCBIYXJkd2FyZSBBc3NlbWJsaWVzIGZvciAzLzhcJzk0XGxvY2hcZjAgDQogU2hpZWxkIFdpcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5XGNoYXJyc2lkMTEyMDc4MDUgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMDM5OTE5XGNoYXJyc2lkMTEyMDc4MDUgDQpcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgU3RydWN0dXJlIGdyb3VuZGluZyByb2RzIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAwMzk5MTkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFN0cnVjdHVyZSBzaWduYWdlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgU2VcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgDQp2ZW50eSBUaG91c2FuZCBUd28gSHVuZHJlZCAoNzAsMjAwKSBGZWV0IG9mIDc5NSBLQ01JTCBBQ1NSIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBEcmFrZVwnOTRcbG9jaFxmMCAgQ29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KVHdlbnR5IFRocmVlIFRob3VzYW5kICgyMywwMDApIEZlZXQgb2YgNDggRmliZXIsIFNpbmdsZSBNb2RlIE9QR1csIEROTyA2MjExDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIFRocmVlICgzKSBPUEdXIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBDb3lvdGVcJzk0XGxvY2hcZjAgDQogU3BsaWNlcyBpbmNsdWRpbmcgc3BsaWNlIGNhc2UsIHNwbGljZXMgYW5kIG1vdW50aW5nIGhhcmR3YXJlLiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgT25lIFRob3VzYW5kIEZvdVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANCnIgSHVuZHJlZCBhbmQgRmlmdHkgKDEsNDUwKSBCaXJkIEZsaWdodCBEaXZlcnRlcnMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVHdvIEh1bmRyZWQgKDIwMCkgRmVldCBvZiAzLzhcJzk0XGxvY2hcZjAgDQogSFMgNy1TdHJhbmQgU2hpZWxkIFdpcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpUd2VudHkgRml2ZSBUaG91c2FuZCBGaXZlIEh1bmRyZWQgKDI1LDUwMCkgRmVldCBvZiBBRFNTIEZpYmVyIE9wdGljIENhYmxlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIFR3ZW50eSBUd28gVGhvdXNhbmQgKDIyLDAwMCkgRmVldCBvZiAxIFwnYmNcJzk0XGxvY2hcZjAgDQogaW5uZXIgZHVjdA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDEyNjQyMDcgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDUxOTM5NjQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTE5Mzk2NFxjaGFycnNpZDk0NDY3NSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczIwXHFqIFxmaTcwNVxsaTcyMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCBDLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGluc3JzaWQzNDM4MDc4ICBQQUdFIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjUxOTA4IDF9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjRcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczE2IFxsdHJjaFxmY3MwIA0KXGZzMTZcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDc4NjU1MzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQyODY5NyANCntcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAzXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6NlxzaHBsaWQyMjMye1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX0NCntcc3B7XHNuIGxUeGlkfXtcc3YgNDU4NzUyfX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIzMn19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19DQp7XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4Xzd9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjU3MjE2fX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDANClxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5OFxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAzXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc4NjU1MzMgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBFWEhJQklUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBDfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNjU5OTg2IElOVEVSRVNUUyBBTkQgUFJPUE9SVElPTkFURSBTSEFSRVN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ1OTE4MzI5IEEuXHRhYiBVbmRpdmlkZWQgT3duZXJzaGlwIEludGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFRoZSBPd25lcnNoaXAgSW50ZXJlc3Qgb2YgZWFjaCBDby1Pd25lciBpbiBlYWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgc2hhbGwgYmUgYXMgc2V0IGZvcnRoIGluIFRhYmxlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjQzMjggQyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGJlbG93LiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkNTkxODMyOSBCLlx0YWIgUHJvcG9ydGlvbmF0ZSBTaGFyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBUaGUgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZiBlYWNoIENvLU93bmVyIHNoYWxsIGJlIGFzIHNldCBmb3J0aCBpbiBUYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjY0MzI4IEMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBiZWxvdy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDU5MTgzMjkgQy5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTEzNDk2NDUgU2hhcmVkIEFzc2V0IEdyb3Vwc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkOTQ0Njc1IFJTVCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCAoQWxsIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1NDMwNjM0XGNoYXJyc2lkOTQ0Njc1IE93bmVycyl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDk0NDY3NSANClxwYXIgXGx0cnJvd31cdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTMNClxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDU5MTgzMjkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBFcXVpcG1lbnQgTmFtZVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NSBSU1QgSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfVxwYXJkIFxsdHJwYXINClxzMTdccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IFJTVCBJfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBJXGNlbGwgDQp9XHBhcmQgXGx0cnBhclxzMTdccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkNTkxODMyOSB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NSBSU1QgSUlJfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnYNClxicmRyc1xicmRydzEwIFx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybA0KXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWxiDQpcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IFxsdHJyb3d9XHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnYNClxicmRyc1xicmRydzEwIFx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybA0KXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ1OTE4MzI5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFByb2plY3QgU3Vic3RhdGlvblxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgNDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgNX17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIA0KXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIFx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHQNClxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSANClxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkNTkxODMyOSBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gTGluZVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgNDAlfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiANClxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSA1fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXHRyb3dkIFxpcm93Mlxpcm93YmFuZDJcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmINClxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IA0KXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ1OTE4MzI5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IEZpYmVyIE9wdGljIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDQwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDV9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzNcaXJvd2JhbmQzXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDU5MTgzMjkgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgUm9hZHMgW2luIFNlY3Rpb25zIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkOTQ0OTA1OSA5LCAxMCwgMTEsIDE1IGFuZCAxNn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgNDAlXGNlbGwgMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSBcY2VsbCA1fXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzRcaXJvd2JhbmQ0XGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANClxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkNTkxODMyOSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzkzMDEgTyZNIEZhY2lsaXR5XGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQ1MzkzMDEgNDAlXGNlbGwgMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkNTM5MzAxXGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkNTM5MzAxIFxjZWxsIA0KNX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkNTM5MzAxXGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkNTM5MzAxIFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzkzMDEgXHRyb3dkIFxpcm93NVxpcm93YmFuZDVcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQyNTEwOTgyXHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANClxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkNTkxODMyOSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSBbb3RoZXJdXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSA0MCVcY2VsbCAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IA0KXGNlbGwgNX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXHRyb3dkIFxpcm93Nlxpcm93YmFuZDZcbGFzdHJvdyBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsDQpcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQyNTEwOTgyXHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANCn1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NDQ2NzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkOTQ0Njc1IFJTVCBJL0lJIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwIChSaXNpbmcgVHJlZSBJIGFuZCBSaXNpbmcgVHJlZSBJSSBvbmx5KQ0KDQpccGFyIFxsdHJyb3d9XHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxMTM0OTY0NSBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IEVxdWlwbWVudCBOYW1lXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IFJTVCBJfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH1ccGFyZCBcbHRycGFyXHMxN1xxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDUgDQpSU1QgSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgSVxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRycg0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxyb3cgXGx0cnJvd31cdHJvd2QgXGlyb3cxXGlyb3diYW5kMVxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIA0KXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMTEzNDk2NDUgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXGNlbGwgXGNlbGwgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSANClx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDc3NDM3MzIgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgUm9hZHMgW2luIFNlY3Rpb25zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1OTYwNDYgMSwgMiwgMzUgYW5kIDM2XX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgfVxwYXJkIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDExMzQ5NjQ1IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSA4MCVcY2VsbCAyfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIA0KXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzJcaXJvd2JhbmQyXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiDQpcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxMTM0OTY0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzMzcxOTA5IE1ldCBUb3dlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1OTYwNDYgIFJTVCAxLUIvUlNUIDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDgwJVxjZWxsIDJ9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXHRyb3dkIFxpcm93M1xpcm93YmFuZDNcbGFzdHJvdyBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxyb3cgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSANClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzggRC19e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcaW5zcnNpZDM0MzgwNzggIFBBR0UgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2NTE5MDggDQoxfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDExNDI4Njk3IA0Ke1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHo3XHNocGxpZDIyMzN7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fQ0Ke1xzcHtcc24gbFR4aWR9e1xzdiA1MjQyODh9fXtcc3B7XHNuIGR4VGV4dExlZnR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRUb3B9e1xzdiAwfX17XHNwe1xzbiBkeFRleHRSaWdodH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dEJvdHRvbX17XHN2IDB9fXtcc3B7XHNuIGhzcE5leHR9e1xzdiAyMjMzfX17XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX17XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX0NCntcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBUcmFpbGVyXzEwNzhfOH19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NTgyNDB9fXtcc3B7XHNuIGZQc2V1ZG9JbmxpbmV9e1xzdiAwfX17XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzaHB0eHQgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MA0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MTk5XGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDNcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzMwMDkzMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFWEhJQklUIERcbGluZSBcbGluZSBNQVRFUklBTCBQUk9KRUNUIEFHUkVFTUVOVFMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzMwMDkzMCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzYxMjY0IChDZXJ0YWluIE90aGVyIEFncmVlbWVudHMgUmVsYXRpbmcgdG8gdGhlIENvbnN0cnVjdGlvbiwgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzMDcxMTcwIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgT3BlcmF0aW9uIGFuZCBVc2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjVccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3MzAwOTMwIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMTMwNzExNzBcY2hhcnJzaWQ3MzAwOTMwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNTc2MTI2NFxjaGFycnNpZDczMDA5MzAgMS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNTc2MTI2NCANCiAgQSBIaWdoIFZvbHRhZ2UgT3BlcmF0aW9ucyBhbmQgTWFpbnRlbmFuY2UgQWdyZWVtZW50IHRvIGJlIGVudGVyZWQgaW50byBieSBhbmQgYmV0d2VlbiB0aGUgQ28tT3duZXJzIGFuZCBFRFAgUmVuZXdhYmxlcyBOb3J0aCBBbWVyaWNhIExMQyAob3Igb25lIG9mIGl0cyBBZmZpbGlhdGVzKS4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzYxMjY0XGNoYXJyc2lkNzMwMDkzMCBbZXhwZWN0ZWR9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDczMDA5MzAgIHRvIGJlIHNpZ25lZCBiZWZvcmUgRGVjZW1iZXIgMzEsIDIwMTRdfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDczMDA5MzBcY2hhcnJzaWQ3MzAwOTMwIA0KXHBhciAyLiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNzMwMDkzMCBBIFNlcnZpY2VzIEFncmVlbWVudCBmb3IgYSBSZW1vdGUgT3BlcmF0aW9ucyBDb250cm9sIENlbnRlciB0byBiZSBlbnRlcmVkIGludG8gYnkgYW5kIGJldHdlZW4gdGhlIENvLU93bmVycyBhbmQgRURQIFJlbmV3YWJsZXMgTm9ydGggQW1lcmljYSBMTEMgKG9yIG9uZSBvZiBpdHMgQWZmaWxpYXRlcykuICB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDczMDA5MzBcY2hhcnJzaWQxNTk5NjI5NCBbZXhwZWN0ZWR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzAwOTMwICB0byBiZSBzaWduZWQgYmVmb3JlIERlY2VtYmVyIDMxLCAyMDE0XX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDczMDA5MzAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaVxpbnNyc2lkNzMwMDkzMFxjaGFycnNpZDczMDA5MzAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDE1NzYxMjY0XGNoYXJyc2lkNzMwMDkzMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCBFLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxpbnNyc2lkMzQzODA3OCAgUEFHRSB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTY1MTkwOCANCjJ9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTE0Mjg2OTcgDQp7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejhcc2hwbGlkMjIzNHtcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19DQp7XHNwe1xzbiBsVHhpZH17XHN2IDU4OTgyNH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMzR9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF85fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1OTI2NH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgyMDBcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc4NjU1MzMgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBFWEhJQklUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgRElTUFVURSBSRVNPTFVUSU9OIFBST0NFRFVSRVN9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAxLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBDb25zaWRlcmF0aW9uIGJ5IHRoZSBBdXRob3JpemVkIFJlcHJlc2VudGF0aXZlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBBbGwgcXVlc3Rpb25zIGNvbmNlcm5pbmcgaW50ZXJwcmV0YXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIHRoZSBhY2NlcHRhYmxlIGZ1bGZpbGxtZW50IG9mIHRoZSBDby1Pd25lcnNccnF1b3RlIA0KIHJlc3BlY3RpdmUgb2JsaWdhdGlvbnMgaGVyZXVuZGVyLCBhcyB3ZWxsIGFzIGFsbCBvdGhlciBxdWVzdGlvbnMgcmVnYXJkaW5nIHRoaXMgQWdyZWVtZW50IGluIGVhY2ggY2FzZSB0aGF0IGNhbm5vdCByZWFkaWx5IGJlIHJlc29sdmVkIGJ5IHRoZSBDby1Pd25lcnMgc2hhbGwgYmUgcmVzb2x2ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNzExNzAgRXhoaWJpdCBFfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEluIHRoZSBldmVudCB0aGF0IHRoZSBhdXRob3JpemVkIHJlcHJlc2VudGF0aXZlcyBvZiB0aGUgQ28tT3duZXJzIGNhbm5vdCByZWFjaCBhZ3JlZW1lbnQgb24gYW55IHF1ZXN0aW9uIGFyaXNpbmcgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHN1Y2ggZGlzcHV0ZSBzaGFsbCBiZSByZWZlcnJlZCB0byBzZW5pb3Igb2ZmaWNlcnMgb2YgdGhlIENvLU93bmVycyANCnB1cnN1YW50IHRvIFBhcmFncmFwaCAyIGJlbG93Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAyLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBOZWdvdGlhdGlvbnMgYnkgU2VuaW9yIE9mZmljZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEFueSBkaXNwdXRlcyBhcmlzaW5nIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IHRoYXQgY2Fubm90IGJlIHJlc29sdmVkIGJ5IHRoZSBhdXRob3JpemVkIHJlcHJlc2VudGF0aXZlcyBvZiB0aGUgQ28tT3duZXJzIHdpdGhpbiBmb3VydGVlbiAoMTQpIGRheXMgYWZ0ZXIgcmVjZWlwdCBvZiBub3RpY2Ugb2Ygc3VjaCBkaXNwdXRlIChzcGVjaWZpY2FsbHkgcmVmZXJlbmNpbmcgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgKSBzaGFsbCBiZSByZWZlcnJlZCB0byB0aGUgdmljZSBwcmVzaWRlbnQgb3Igb3RoZXIgc2VuaW9yIG9mZmljZXIgb2YgZWFjaCBvZiB0aGUgQ28tT3duZXJzIGhhdmluZyBleGVjdXRpdmUgcmVzcG9uc2liaWxpdHkgZm9yIHN1Y2ggQ28tT3duZXJccnF1b3RlIA0KcyBGYWNpbGl0eS4gIElmIHN1Y2ggc2VuaW9yIG9mZmljZXJzLCBuZWdvdGlhdGluZyBpbiBnb29kIGZhaXRoLCBmYWlsIHRvIHJlDQphY2ggYW4gYWdyZWVtZW50IHdpdGhpbiBhIHJlYXNvbmFibGUgcGVyaW9kIG9mIHRpbWUsIG5vdCBleGNlZWRpbmcgdHdlbnR5ICgyMCkgZGF5cyBhZnRlciBzdWNoIHJlZmVycmFsLCB0aGVuIGFueSBDby1Pd25lciB0byBzdWNoIGRpc3B1dGUgbWF5IGluc3RpdHV0ZSBwcm9jZWVkaW5ncyBhcyBzZXQgZm9ydGggaW4gUGFyYWdyYXBoIDMgYmVsb3cufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IDMuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IEZvcm1hbCBEaXNwdXRlIFJlc29sdXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgKGEpXHRhYiBJZiBhIGRpc3B1dGUgZGVzY3JpYmVkIGluIFBhcmFncmFwaCAyIGlzIG5vdCByZXNvbHZlZCBieSB0aGUgZXhlY3V0aXZlIG1hbmFnZW1lbnQgb2YgdGhlIENvLU93bmVycywgdGhlIENvLU93bmVycyBzaGFsbCBlbmdhZ2UgaW4gbm9uLWJpbmRpbmcgbWVkaWF0aW9uIG9mIHN1Y2ggZGlzcHV0ZS4gIFN1Y2ggbWVkaWF0aW9uIHNoYWxsIGJlIGNvbmR1Y3RlZCAoaSlcfmluIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzc0NzIzMyBIb3VzdG9uLCBUZXhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCAoaWkpXH53aXRoaW4gdGhpcnR5ICgzMCkgZGF5cyBvZiBhIENvLU93bmVyIGluc3RpdHV0aW5nIGRpc3B1dGUgcmVzb2x1dGlvbiB1bmRlciB0aGlzIFBhcmFncmFwaCAzLCAoaWlpKVx+DQpieSBhIHNpbmdsZSwgaW1wYXJ0aWFsIG1lZGlhdG9yIHdobyBpcyBzZWxlY3RlZCBieSB0aGUgbXV0dWFsIGFncmVlbWVudCBvZiB0aGUgQ28tT3duZXJzLCBhbmQgKGl2KVx+aW4gYWNjb3JkYW5jZSB3aXRoIHN1Y2ggcHJvY2VkdXJlcyBhcyBtYXkgYmUgYWRvcHRlDQpkIGJ5IHN1Y2ggbWVkaWF0b3IuICBTdWNoIG1lZGlhdGlvbiBzaGFsbCBub3QsIHdpdGhvdXQgdGhlIGV4cHJlc3MgYWdyZWVtZW50IG9mIHRoZSBDby1Pd25lcnMgYXQgdGhlIHRpbWUsIGV4dGVuZCBmb3IgYSBwZXJpb2Qgb2YgbW9yZSB0aGFuIHR3byAoMikgZGF5cy4gIEVhY2ggQ28tT3duZXIgbWF5IGJlIHJlcHJlc2VudGVkIGJ5IHBlcnNvbnMgb2Ygc3VjaCBDby1Pd25lclxycXVvdGUgDQpzIGNob2ljZSBkdXJpbmcgc3VjaCBtZWRpYXRpb24uICBOb3RoaW5nDQogaGVyZWluIHNoYWxsIGJlIGRlZW1lZCB0byBncmFudCBhbnkgbWVkaWF0b3IgdGhlIGF1dGhvcml0eSB0byBpbXBvc2UgYSByZXNvbHV0aW9uIG9mIGFueSBkaXNwdXRlIGJlaW5nIG1lZGlhdGVkLiAgQW55IGluZm9ybWF0aW9uIGludHJvZHVjZWQsIHByb3Bvc2FscyBtYWRlIG9yIHBvc2l0aW9ucyB0YWtlbiBpbiB0aGUgbWVkaWF0aW9uIHNoYWxsIGJlIGRlZW1lZCB0byBiZSBjb25maWRlbnRpYWwgYW5kIGZvciBzZXR0bGVtZW50IHB1cnBvc2UNCnMgb25seSBhbmQgbWF5IG5vdCBiZSBpbnRyb2R1Y2VkIGJ5IHRoZSBvdGhlciBDby1Pd25lciBpbiBhbnkgc3Vic2VxdWVudCBsaXRpZ2F0aW9uIG9mIHRoZSBtYXR0ZXJzIHN1YmplY3QgdG8gbWVkaWF0aW9uLiAgVGhlIENvLU93bmVycyBzaGFsbCBzaGFyZSB0aGUgY29zdHMgb2YgdGhlIG1lZGlhdG9yLCBpbmNsdWRpbmcgYW55IGZlZXMgYW5kIG1lZXRpbmcgcm9vbSByZW50YWxzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAoYilcdGFiIElmIGEgZGlzcHV0ZSBkZXNjcmliZWQgaW4gUGFyYWdyYQ0KcGggMiBpcyBub3QgcmVzb2x2ZWQgYnkgdGhlIGV4ZWN1dGl2ZSBtYW5hZ2VtZW50IG9mIHRoZSBDby1Pd25lcnMgYW5kIHRoZSBDby1Pd25lcnMgaGF2ZSBub3Qgb3RoZXJ3aXNlIHJlc29sdmVkIHN1Y2ggZGlzcHV0ZSB0aHJvdWdoIG1lZGlhdGlvbiBwdXJzdWFudCB0byBQYXJhZ3JhcGggMyhhKSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzc0NzIzMyBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciBtYXkgc3VibWl0IHRoZSBtYXR0ZXIgYXQgaXNzdWUgZm9yIHJlc29sdXRpb24gaW4gYW4gYWN0aW9uIGJyb3VnaHQgYmVmb3JlIHRoZSBjb3VydHMgb2YgdGhlIFN0YXRlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgQ2FsaWZvcm5pYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGluIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSBLZXJuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ291bnR5IG9yIGluIHRoZSBVbml0ZWQgU3RhdGVzIERpc3RyaWN0IENvdXJ0IGZvciB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSBFYXN0ZXJuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRGlzdHJpY3Qgb2YgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IENhbGlmb3JuaWF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgd2hpY2ggY291cnRzIHNoYWxsIGhhdmUgbm9uLWV4Y2x1c2l2ZSBqdXJpc2RpY3Rpb24gd2l0aCByZXNwZWN0IHRvIHN1Y2ggbWF0dGVycy4gIEZPUiBQVVJQT1NFUyBPRiBUSEUgRk9SRUdPSU5HLCBCWSBFWEVDVVRJTw0KTiBPRiBUSElTIEFHUkVFTUVOVCwgRUFDSCBDTy1PV05FUiBIRVJFQlkgSVJSRVZPQ0FCTFkgQUNDRVBUUyBGT1IgSVRTRUxGIEFORCBJTiBSRVNQRUNUIE9GIElUUyBQUk9QRVJUWSwgR0VORVJBTExZIEFORCBVTkNPTkRJVElPTkFMTFksIFRIRSBOT04tRVhDTFVTSVZFIEpVUklTRElDVElPTiBPRiBTVUNIIENPVVJUUyBBTkQgRUFDSCBDTy1PV05FUiBIRVJFQlkgQ09OU0VOVFMgVE8gVEhFIFNFUlZJQ0UgT0YgUFJPQ0VTUyBPVVQgT0YgQU5ZIFNVDQpDSCBBQ1RJT04gT1IgUFJPQ0VFRElORyBCWSBUSEUgTUFJTElORyBPRiBDT1BJRVMgVEhFUkVPRiBCWSBSRUdJU1RFUkVEIE9SIENFUlRJRklFRCBNQUlMLCBQT1NUQUdFIFBSRVBBSUQsIFRPIFNVQ0ggUEVSU09OIElOIEFDQ09SREFOQ0UgV0lUSCBUSEUgTk9USUNFIFBST1ZJU0lPTlMgT0YgVEhJUyBBR1JFRU1FTlQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA0Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBTcGVjaWZpYyBQZXJmb3JtYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgTm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIHRvIHRoZSBjb250cmFyeSBjb250YWluZQ0KZCBpbiB0aGlzIEFncmVlbWVudCwgaWYsIGR1ZSB0byBhIG1hdGVyaWFsIGJyZWFjaCBvciB0aHJlYXRlbmVkIG1hdGVyaWFsIGJyZWFjaCBvciBkZWZhdWx0IG9yIHRocmVhdGVuZWQgZGVmYXVsdCwgYSBDby1Pd25lciBpcyBzdWZmZXJpbmcgb3Igd2lsbCBzdWZmZXIgaXJyZXBhcmFibGUgaGFybSBmb3Igd2hpY2ggbW9uZXRhcnkgZGFtYWdlcyBhcmUgaW5hZGVxdWF0ZSwgc3VjaCBDby1Pd25lciBtYXkgcGV0aXRpb24gYSBjb3VydCBvZiBjb21wDQpldGVudCBqdXJpc2RpY3Rpb24gZm9yIGluanVuY3RpdmUgcmVsaWVmLCBzcGVjaWZpYyBwZXJmb3JtYW5jZSBvciBvdGhlciBlcXVpdGFibGUgcmVsaWVmLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgNS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgQ29udGludWluZyBPYmxpZ2F0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQouICBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZywgYWxsIHRlcm1zLCBjb25kaXRpb25zLCBhbmQgb2JsaWdhdGlvbnMgb2YgdGhlIENvLU93bmVycyBjb250YWluZWQgaW4gdGhpcyBBZ3JlZW1lbnQgc2hhbGwgY29udGludWUgYW5kIHJlbWFpDQpuIGluIGVmZmVjdCBkdXJpbmcgdGhlIGNvdXJzZSBvZiBhbnkgZGlzcHV0ZSByZXNvbHV0aW9uLCBvciBvdGhlciBwcm9jZWVkaW5nIHB1cnN1YW50IGhlcmV0bywgYW5kIGVhY2ggb2YgdGhlIENvLU93bmVycyBzaGFsbCBwcm9jZWVkIHdpdGggcGVyZm9ybWFuY2Ugb2YgaXRzIG9ibGlnYXRpb25zIHBlbmRpbmcgdGhlIHJlc29sdXRpb24gb2YgdGhlIHF1ZXN0aW9uLCBkaXNwdXRlIG9yIGNsYWltLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA2Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBNYXR0ZXJzIE5vdCBTdWJqZWN0IHRvIERpc3B1dGUgUmVzb2x1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQouICBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgdG8gdGhlIGNvbnRyYXJ5IGluIHRoaXMgQWdyZWVtZW50LCBubyBkaXNwdXRlIHRoYXQgY29uY2VybnMgYSBtYXR0ZXIsIGRlY2lzaW9uIG9yIG90aGVyIGlzc3VlIHRoYXQgaXMgdG8gYmUgZGVjaWRlZCBieSBhIENvLU93bmVyIGFjdGluZyBpbiBpdHMgc29sZSBkaXNjcmV0aW9uIHNoYWxsIGJlIHN1YmplY3QgdG8gdGhlIGRpc3B1dGUgcmVzb2x1dGlvbiBwcm92aXNpb25zIG9mIHRoaXMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQyMTc2NzM2XHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzg2NTUzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCBGLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDcxNjM3OTkgIFBBR0UgICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjUxOTA4IDJ9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMTQyODY5NyB7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejlcc2hwbGlkMjIzNQ0Ke1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBsVHhpZH17XHN2IDY1NTM2MH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMzV9fQ0Ke1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19e1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF8xMH19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NjAyODh9fXtcc3B7XHNuIGZQc2V1ZG9JbmxpbmV9e1xzdiAwfX17XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzaHB0eHQgDQpcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgyMDFcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc4NjU1MzMgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBFWEhJQklUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxsaW5lIEZPUk0gT0YgSk9JTkRFUlxsaW5lIFRPXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFJJU0lORyBUUkVFfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBTSEFSRUQgRkFDSUxJVElFUyBBR1JFRU1FTlR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUmVmZXJlbmNlIGlzIGhlcmVieSBtYWRlIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50IGRhdGVkIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxNTA0MDMgSnVuZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgW19fXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCAyMDEwIGJ5IGFuZCBhbW9uZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFdpbmQgRmFybSBMTEMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgV2luZCBGYXJtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IExMQyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBXaW5kIEZhcm0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IElJSSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNGQX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KS4gVW5sZXNzIG90aGVyd2lzZSBpbmRpY2F0ZWQsIGNhcGl0YWxpemVkIHRlcm1zIHVzZWQgYnV0IG5vdCBkZWZpbmVkIGhlcmVpbiBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIGFzY3JpYmVkIHRvIHRoZW0gaW4gdGhlIFNGQSwgYXMgdGhlIGNvbnRleHQgZGljdGF0ZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEJ5IGl0cyBleGVjdXRpb24gYmVsb3csIHRoZSB1bmRlcnNpZ25lZCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgW2luc2VydCBuYW1lIGFuZCBmb3JtL2p1cmlzZGljdGlvbiBvZiBOZXcgQ28tT3duZXJdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgKHRoZSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBOZXcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLCBhZ3JlZXMgdG8gYmVjb21lLCBhbmQgZG9lcyBoZXJlYnkgYmVjb21lLCBhIENvLU93bmVyIHdpdGggcmVzcGVjdCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgDQpbZGVzY3JpYmUgUHJvamVjdCAob3IgcG9ydGlvbiB0aGVyZW9mKSBiZWluZyBhZGRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IE5ldyBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSB1bmQNCmVyIHRoZSBTRkEsIGFuZCBhZ3JlZXMgdG8gYmUgYm91bmQgYnkgdGhlIFNGQSBmcm9tIGFuZCBhZnRlciB0aGUgZGF0ZSBoZXJlb2YuIFdpdGhvdXQgbGltaXRpbmcgdGhlIGZvcmVnb2luZywgZnJvbSBhbmQgYWZ0ZXIgdGhlIGRhdGUgaGVyZW9mLCBhbGwgcmVmZXJlbmNlcyBpbiB0aGUgU0ZBIHRvIHRoZSBvd25lciBvZiB0aGUgTmV3IFByb2plY3Qgc2hhbGwgYmUgZGVlbWVkIHRvIHJlZmVyIHRvIE5ldyBDby1Pd25lci59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQnkgaXRzIGV4ZWN1dGlvbiBiZWxvdywgTmV3IENvLU93bmVyIGNvdmVuYW50cywgcmVwcmVzZW50cyBhbmQgd2FycmFudHMgYXMgZm9sbG93czp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDEuXHRhYiBOZXcgQ28tT3duZXIgd2lsbCBleHByZXNzbHkgYXNzdW1lIGluIHdyaXRpbmcgYWxsIG9ibGlnYXRpb25zIGFzIGEgQ28tT3duZXIgdW5kZXIgdGhlIFNGQSB3aXRoIHJlc3BlY3QgdG8gdGhlIE5ldyBQcm9qZWN0IGFuZCBpdHMgT3duZXJzaGlwIEludGVyZXN0IGFuZCBVbmRpdmlkZWQgVXNlIEludGVyZXN0IChpZiBhcHANCmxpY2FibGUpIHRvIHRoZSBleHRlbnQgb2YgdGhlIE5ldyBQcm9qZWN0LCBpbiBlYWNoIGNhc2UgYXJpc2luZyBvbiBvciBhZnRlciB0aGUgZGF0ZSBoZXJlb2Y7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAyLlx0YWIgVGhlIGFmb3JlbWVudGlvbmVkIE5ldyBQcm9qZWN0IGlzIGluIGFjY29yZGFuY2Ugd2l0aCBTZWN0aW9uXH40LjQgb2YgdGhlIFNGQTsgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAzLlx0YWIgTmV3IENvLU93bmVyIHdpbGwgY29tcGx5IHdpdGggYWxsIGNvdmVuYW50cyBhbmQgb2JsaWdhdGlvbnMgY29udGFpbmVkIGluIHRoZSBTRkEufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFtzaWduYXR1cmUgcGFnZSBmb2xsb3dzLl19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBccGFnZSBTSUdOQVRVUkUgUEFHRSBUT1xsaW5lIEpPSU5ERVJcbGluZSBUT1xsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSSVNJTkcgVFJFRX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIFNIQVJFRCBGQUNJTElUSUVTIEFHUkVFTUVOVH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgSU4gV0lUTkVTUyBXSEVSRU9GLCB0aGUgdW5kZXJzaWduZWQgaGFzIGV4ZWN1dGVkIGFuZCBkZWxpdmVyZWQgdGhpcyBqb2luZGVyIHRvIHRoZSBTRkEgYXMgb2YgdGhpcyBfX19fXyBkYXkgb2YgX19fX19fX19fX19fX19fX18sIDIwX18ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkxNzdcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFtJTlNFUlQgTkFNRSBPRiBORVcgQ08tT1dORVJdXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQnk6XGxpbmUgTmFtZTpcbGluZSBUaXRsZToNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODQ4NTczMSBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMjE3NjczNlxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjJccWMgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDc4NjU1MzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzggRy19e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IA0KXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3MTYzNzk5ICBQQUdFICAgXFwqIE1FUkdFRk9STUFUIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTY1MTkwOCA1fX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTE0Mjg2OTcge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHoxMFxzaHBsaWQyMjM2DQp7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fXtcc3B7XHNuIGxUeGlkfXtcc3YgNzIwODk2fX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIzNn19DQp7XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX17XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzExfX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY2MTMxMn19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCANClxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODIwMlxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAzXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzg2NTUzMyANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyOFxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTE3N1x3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDg0ODU3MzEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjczQ1XGJcaW5zcnNpZDg0ODU3MzFcY2hhcnJzaWQxMzUwNzMxMiB7XCpcYmtta3N0YXJ0IF9EVl9DNTN9RVhISUJJVCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNzNDVcYlxpbnNyc2lkMTMwNzExNzAge1wqXGJrbWtlbmQgX0RWX0M1M31HfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDg0ODU3MzFcY2hhcnJzaWQxMzUwNzMxMiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjczQ1XGJcaW5zcnNpZDE1Njg0NTk3XGNoYXJyc2lkMTM1MDczMTIge1wqXGJrbWtzdGFydCBfRFZfQzU0fUZPUk0gT0YgTUVNT1JBTkRVTX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkODQ4NTczMVxjaGFycnNpZDEzNTA3MzEyIHtcKlxia21rZW5kIF9EVl9DNTR9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk1NzQyNDUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU2ODQ1OTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTY4NDU5NyBSRUNPUkRJTkcgUkVRVUVTVEVEIEJZfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU2ODQ1OTcgQU5EIFdIRU4gUkVDT1JERUQgTUFJTCBUTzoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMzcxOTA5XGNoYXJyc2lkMTU2ODQ1OTcgUklTSU5HIFRSRUUgV0lORCBGQVJNIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTY4NDU5NyANClxwYXIgODA4IFRyYXZpcywgU3VpdGUgNzAwDQpccGFyIEhvdXN0b24sIFRYIDc3MDAyDQpccGFyIEF0dG46IEdlbmVyYWwgQ291bnNlbA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkNzQ4NjUzMCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgTUVNT1JBTkRVTSBPRlxsaW5lIFNIQVJFRCBGQUNJTElUfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IEl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IA0KRVMgQUdSRUVNRU5UIEFORFxsaW5lIEdSQU5UIE9GIFJJR0hUUw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IFRISVMgTUVNT1JBTkRVTSBPRiBTSEFSRUQgRkFDSUxJVElFUyBBR1JFRU1FTlQgQU5EIEdSQU5UIE9GIFJJR0hUUyAodGhpcyBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDEwMzc4NDQxIE1lbW9yYW5kdW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IFwnOTQNCiksIGlzIG1hZGUgYW5kIGVudGVyZWQgaW50byBhcyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyIERlY2VtYmVyIDMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IDIwMTQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSAodGhlIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc3NDY2OTIgRXhlY3V0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzc0NjY5MlxjaGFycnNpZDEwMzc4NDQxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTAzNzg0NDEgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgXCc5NA0KKSwgYnkgYW5kIGFtb25nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyAgV2luZCBGYXJtIExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1NDA4MTI3IFwnOTQpLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgV2luZCBGYXJtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBMTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgXCc5NCksIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1NDA4MTI3IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1NDA4MTI3IExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgXCc5NCksIGVhY2ggb2Ygd2hpY2ggaXMgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LiAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU5OTg2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJLCBSaXNpbmcgVHJlZSBJSSBhbmQgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgSUlJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGhlcmVpbiBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDg4NjUwNTcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBcJzk0IGFuZCBjb2xsZWN0aXZlbHkgYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ4ODY1MDU3IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBcJzk0DQouIFRoZSBDby1Pd25lcnMgYXJlIGNvbGxlY3RpdmVseSByZWZlcnJlZCB0byBoZXJlaW4gYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ4ODY1MDU3IFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgDQogYW5kIGluZGl2aWR1YWxseSBhcyBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkODg2NTA1NyBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBcJzk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTkwODM4IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwNDQyNyB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzOTF9QS5cdGFiIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzOTUxNDI1XGNoYXJyc2lkMzk1MTQyNSBUaGUgUGFydGllcyBoYXZlIGVudGVyZWQgaW50byB0aGF0IGNlcnRhaW4gdW5yZWNvcmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDk0NDY3NSBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzk1MTQyNVxjaGFycnNpZDM5NTE0MjUgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50IG9mIGV2ZW4gZGF0ZSBoZXJld2l0aH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgDQpcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDUzOTE2MzQgIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzOTUxNDI1XGNoYXJyc2lkMzk1MTQyNSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFx1bFxpbnNyc2lkMzk1MTQyNVxjaGFycnNpZDM5NTE0MjUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzk1MTQyNVxjaGFycnNpZDM5NTE0MjUgXCc5NCksIHdoaWNoIGFmZmVjdHMgKGkpIGNlcnRhaW4gcmVhbCBwcm9wZXJ0eSBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgaW4gRXhoaWJpdCBBIGF0dGFjaGVkIGhlcmV0byBhbmQgbWFkZSBhIHBhcnQgaGVyZW9mIChzdWNoIHJlYWwgcHJvcGVydHkgY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcdWxcaW5zcnNpZDM5NTE0MjVcY2hhcnJzaWQzOTUxNDI1IFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM5NTE0MjVcY2hhcnJzaWQzOTUxNDI1IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxMzUwNzMxMiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzkxfQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjA0NDI3IHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5Mn1CLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNTkwODM4XGNoYXJyc2lkNTkwODM4IA0KVGhlIFBhcnRpZXMgaGF2ZSBleGVjdXRlZCBhbmQgYWNrbm93bGVkZ2VkIHRoaXMgTWVtb3JhbmR1bSBhbmQgYXJlIHJlY29yZGluZyB0aGUgc2FtZSBmb3IgdGhlIHB1cnBvc2Ugb2YgcHJvdmlkaW5nIGNvbnN0cnVjdGl2ZSBub3RpY2Ugb2YgdGhlIEFncmVlbWVudCBhbmQgdGhlIFBhcnRpZXNccnF1b3RlIA0KIHJpZ2h0cyB0aGVyZXVuZGVyLiAgQ2FwaXRhbGl6ZWQgdGVybXMgdXNlZCBhbmQgbm90IGRlZmluZWQgaGVyZWluIGhhdmUgdGhlIG1lYW5pbmcgZ2l2ZW4gdGhlIHNhbWUgaW4gdGhlIEFncmVlbWVudC57XCpcYmtta2VuZCBfVG9jNDA0MDEzMzkyfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNFxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEwNTYyMjUzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjhcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgTk9XLCBUSEVSRUZPUkUsIHRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYyMjUzIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNFxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwNTYyMjUzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjIyNTMgMS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTA1NjIyNTMgR3JhbnQgb2YgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDEwNTYyMjUzIC4gIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NTE0MjVcY2hhcnJzaWQxMDU2MjI1MyANClN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudCBhbmQgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGluIGVhY2ggb2YgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MjI1MyA6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzUwNzMxMlxjaGFycnNpZDEwNTYyMjUzIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkIFxsdHJwYXJcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IA0KZWFjaCBDby1Pd25lciBvZiBTaGFyZWQgRmFjaWxpdGllcyBhbmQvb3IgU2hhcmVkIFJlYWwgUHJvcGVydHkgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NTQyOTkgKGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzOTU0Mjk5XGNoYXJyc2lkNTUyNDMzMSBHcmFudGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzk1NDI5OSBcJzk0KSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgaGVyZWJ5IHNlbGxzLCBncmFudHMsIGFzc2lnbnMsIHRyYW5zZmVycyBhbmQgY29udmV5cyB0byB0aGUgb3RoZXIgQ28tT3duZXJzIG9mIFNoYXJlZCBGYWNpbGl0aWVzIGFuZC9vciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBzdWNoIFNoYXJlZCBBc3NlDQp0cyBHcm91cCBhbiB1bmRpdmlkZWQgaW50ZXJlc3QsIGFzIHRlbmFudHMtaW4tY29tbW9uLCBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NTQyOTkgDQppbmNsdWRpbmcgc3VjaCByaWdodHMsIGJlbmVmaXRzIGFuZCBpbnRlcmVzdHMgYXMgdGhlIEdyYW50aW5nIENvLU93bmVyIG1heSBoYXZlIGluLCB0byBvciB1bmRlciBhbnkgZGVlZHMsIGNvbnZleWFuY2VzLCBncmFudHMsIGVhc2VtZW50cywgYWdyZWVtZW50cywgbGVhc2VzIG9yIG90aGVyIGluc3RydQ0KbWVudHMgb3IgZG9jdW1lbnRzIGNyZWF0aW5nLCBncmFudGluZywgYXNzaWduaW5nIG9yIGNvbnZleWluZyB0aGUgR3JhbnRpbmcgQ28tT3duZXIgaXRzIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QgaW4gc3VjaCBTaGFyZWQgQXNzZXQgR3JvdXAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiANCnN1Y2ggdGhhdCBlYWNoIHN1Y2ggQ28tT3duZXIgc2hhbGwgb3duIGFuIHVuZGl2aWRlZCBpbnRlcmVzdCwgYXMgYSB0ZW5hbnQtaW4tY29tbW9uLCBpbiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXRzIEdyb3VwIGVxdWFsIHRvIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIGluIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cCBhcyBkZXNjcmliZWQgaW4gRXhoaWJpdCBCIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDEzNTA3MzEyIGF0dGFjaGVkIHRvIHRoZSBBZ3JlZW1lbnQ7fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk1NDI5OSAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4XGNoYXJyc2lkMTM1MDczMTIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzOTU0Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk1NDI5OSANCmVhY2ggQ28tT3duZXIgd2hvIGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIHNoYWxsIGhhdmUgYW4gdW5kaXZpZGVkIHJpZ2h0IHRvIHRoZSB1c2Ugb3IgY2FwYWNpdHkgb2YgdGhlIFNoYQ0KcmVkIEFzc2V0cyBpbiBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSB0aGVyZWluLCB3aGljaCByaWdodCBpcyBleGVyY2lzYWJsZSB1cG9uIHRoZSBDb21taXNzaW9uaW5nIERhdGUgb2YgaXRzIEZhY2lsaXR5LCBhbGwgYXMgbW9yZSBwYXJ0aWN1bGFybHkgc2V0IGZvcnRoIGluIHRoZSBBZ3JlZW1lbnQuICBJbiBhZGRpdGlvbiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDY5Mjg0OCBlYWNoIENvLU93bmVyIHNoYWxsIGhhdmUgYSBub24tZXhjbHVzaXZlIHJpZ2h0IG9mIGFjY2VzcyAoYSlcfnRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBpdCBoYXMgYW4gVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBhcyBwcm92aWRlZCBpbiB0aGUgQWdyZWVtZW50LCBhbmQgKGIpXH4NCm92ZXIgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5IHVuZGVybHlpbmcgb3IgcmVxdWlyZWQgZm9yIHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIHdoaWNoIHN1Y2ggQ28tT3duZXIgaGFzIGFuIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGluIHRoZSBBZ3JlZW1lbnQuIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk0NDY3NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzOTN9Mi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjA4NjIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkNDQ4MTgyNSBUZXJtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQ1OTA4MzhcY2hhcnJzaWQ1OTA4MzggLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNDY5Mjg0OFxjaGFycnNpZDk0NDY3NSBUaGlzIEFncmVlbWVudCBpcyBlZmZlY3RpdmUgYXMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzM3MTkwOSB0aGUgRWZmZWN0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDE0NjkyODQ4XGNoYXJyc2lkOTQ0Njc1ICBhbmQgc2hhbGwgcmVtYWluIGluIGZvcmNlIGFuZCBlZmZlY3QgdW50aWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzM3MTkwOSAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMTQ2OTI4NDhcY2hhcnJzaWQ5NDQ2NzUgdGhlIGVhcmxpZXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMTQ2OTI4NDhcY2hhcnJzaWQ3NzQ2NjkyIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDc3NDY2OTJcY2hhcnJzaWQ3NzQ2NjkyICh2KVx+dGhlIGRhdGUgdGhhdCBpcyB0aGlydHktZml2ZSAoMzUpIHllYXJzIGFmdGVyIHRoZSBFZmZlY3RpdmUgRGF0ZSwgKHcpIHRoZSBleHBpcmF0aW9uIGRhdGUgb2YgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNDY5Mjg0OFxjaGFycnNpZDk0NDY3NSAgKHgpIHRoZSBkYXRlIHRoYXQgYWxsIGludGVyZXN0cyBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhcmUgb3duZWQgYnkgYSBzaW5nbGUgUGVyc29uLCAoeSlcfg0KdGhlIHJldGlyZW1lbnQgYW5kIGZpbmFsIGRpc3Bvc2l0aW9uIG9mIGFsbCBjb21wb25lbnRzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgYWxsIFNoYXJlZCBSZWFsIFByb3BlcnR5LCBhbmQgKHopIHRoZSBkYXRlIHRoYXQgYWxsIENvLU93bmVycyBhbmQgdGhlaXIgTGVuZGVycyB1bmFuaW1vdXNseSBhZ3JlZSB0byB0ZXJtaW5hdGUgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDMzNzE5MDkgLCBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzMzcxOTA5XGNoYXJyc2lkNzc0MzczMiAoaWkpIHN1Y2ggb3RoZXIgZGF0ZSAoYnV0IG5vIGxhdGVyIHRoYW4gbmluZXR5LW5pbmUgKDk5KSB5ZWFycyBhZnRlciB0aGUgRWZmZWN0aXZlIERhdGUpIGFzIG1heSBiZSB1bmFuaW1vdXNseSBhZ3JlZWQgYnkgYWxsIG9mIHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIExlbmRlcnN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDE0NjkyODQ4XGNoYXJyc2lkOTQ0Njc1IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4Mzgge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM5M30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkODYwODYyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5NH0zLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDQ0ODE4MjUgT3RoZXIgUHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCBUaGUgcmlnaHRzIGdyYW50ZWQgaGVyZXVuZGVyIGFyZSBvZiB0aGUgbmF0dXJlLCBhbmQgYXJlIHN1YmplY3QgdG8gdGhlIHJlcXVpcmVtZW50cyBhbmQgbGltaXRhdGlvbnMsIHNldCBmb3J0aCBpbiB0aGUgQWdyZWVtZW50LiBUaGUgQWdyZWVtZW50IGFsc28gY29udGFpbnMgdmFyaW91cyBjb3ZlbmFuDQp0cywgb2JsaWdhdGlvbnMgYW5kIHJpZ2h0cyBvZiB0aGUgUGFydGllcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIHByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdXNlLCBjb25kdWN0IG9mIG9wZXJhdGlvbnMsIGFzc2lnbm1lbnQsIG93bmVyc2hpcCBvZiBpbXByb3ZlbWVudHMsIGZlZXMsIGRlZmF1bHQsIGN1cmUgcmlnaHRzIGFuZCBsZW5kZXIgcHJvdGVjdGlvbnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTA4Mzgge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM5NH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkODYwODYyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5NX00Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDQ0ODE4MjUgUHVycG9zZSBvZiB0aGlzIE1lbW9yYW5kdW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQ1OTA4MzhcY2hhcnJzaWQ1OTA4MzggVGhlIHRlcm1zLA0KIGNvbmRpdGlvbnMgYW5kIGNvdmVuYW50cyBvZiB0aGUgQWdyZWVtZW50IGFyZSBpbmNvcnBvcmF0ZWQgaGVyZWluIGJ5IHJlZmVyZW5jZSBhcyB0aG91Z2ggZnVsbHkgc2V0IGZvcnRoIGhlcmVpbi4gVGhpcyBNZW1vcmFuZHVtIGRvZXMgbm90IHN1cGVyc2VkZSwgbW9kaWZ5LCBhbWVuZCBvciBvdGhlcndpc2UgY2hhbmdlIHRoZSB0ZXJtcywgY29uZGl0aW9ucyBvciBjb3ZlbmFudHMgb2YgdGhlIEFncmVlbWVudCwgYW5kIHRoaXMgTWVtb3JhbmR1DQptIHNoYWxsIG5vdCBiZSB1c2VkIGluIGludGVycHJldGluZyB0aGUgdGVybXMsIGNvbmRpdGlvbnMgb3IgY292ZW5hbnRzIG9mIHRoZSBBZ3JlZW1lbnQuIEluIHRoZSBldmVudCBvZiBhbnkgY29uZmxpY3QgYmV0d2VlbiB0aGlzIE1lbW9yYW5kdW0gYW5kIHRoZSBBZ3JlZW1lbnQsIHRoZSBBZ3JlZW1lbnQgc2hhbGwgY29udHJvbC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzk1fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ4NjA4NjIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzk2fTUuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkNDQ4MTgyNSBCaW5kaW5nIG9uIFN1Y2Nlc3NvcnMgYW5kIEFzc2lnbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IC4gIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNTkwODM4XGNoYXJyc2lkNTkwODM4IFRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSB0aGENCnQgYWxsIG9mIHRoZSBjb3ZlbmFudHMsIGNvbnNlbnRzIGFuZCBhZ3JlZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGUgQWdyZWVtZW50IHRvdWNoIGFuZCBjb25jZXJuIHRoZSBQcm9wZXJ0eSBhbmQgYXJlIGV4cHJlc3NseSBpbnRlbmRlZCB0bywgYW5kIHNoYWxsLCBiZSBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kIGFuZCBzaGFsbCBiZSBiaW5kaW5nIGFuZCBhIGJ1cmRlbiB1cG9uIHNhaWQgcmVhbCBlc3RhdGUgYW5kIGVhY2ggUGFydHkNClxycXVvdGUgcyANCnByZXNlbnQgb3IgZnV0dXJlIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluIGFuZCB1cG9uIGVhY2ggb2YgdGhlIFBhcnRpZXMsIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhcyBob2xkZXJzIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCBpbiBzYWlkIHJlYWwgZXN0YXRlIChpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgbGVuZGVyIG9yIG90aGVyIHBlcnNvbiBhY3F1aXJpbmcgdGl0bGUgZnJvbSBhbnkgcw0KdQ0KY2ggcGVyc29uIHVwb24gZm9yZWNsb3N1cmUgb3IgYnkgZGVlZCBpbiBsaWV1IG9mIGZvcmVjbG9zdXJlKSwgYW5kIHNoYWxsIGJlbmVmaXQgdGhlIFBhcnRpZXMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhbmQgdGhlIHJlYWwgZXN0YXRlIGFuZCBhbnkgcHJlc2VudCBvciBmdXR1cmUgaG9sZGVyIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluLiAgVG8gdGhlIGV4dGVudCBhbnkgb2YgdGhlIHByb3ZpDQpzaW9ucyBvZiB0aGlzIEFncmVlbWVudCBhcmUgbm90IGVuZm9yY2VhYmxlIGFzIGNvdmVuYW50cyBydW5uaW5nIHdpdGggdGhlIGxhbmQsIHRoZXkgc2hhbGwgYmUgZW5mb3JjZWFibGUgYXMgZXF1aXRhYmxlIHNlcnZpdHVkZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzOTZ9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDg2MDg2MiB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzOTd9Ni5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ0NDgxODI1IENvdW50ZXJwYXJ0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCBUaGlzIE1lbW9yYW5kdW0gbWF5IGJlIGV4ZWN1dGVkIGluIGNvdW50ZXJwYXJ0cywgZWFjaCBvZiB3aGljaCBzaGFsbCBiZSBkZWVtZWQgYW4gb3JpZ2luYWwgYW5kIGFsbCBvZiB3aGljaCB3aGVuIHRha2VuIHRvZ2V0aGVyIHNoYWxsIGNvbnN0aXR1dGUgb25lIGFuZCB0aGUgc2FtZSBkb2N1bWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzk3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ0NDgxODI1IFtTSUdOQVRVUkVTIE9OIE5FWFQgUEFHRV19e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk1NzQyNDUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NSAgXHBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSBJTiBXSVRORVNTIFdIRVJFT0YsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExOTQ1Nzc2IHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IA0KaGUgUGFydGllcyBoYXZlIGNhdXNlZCB0aGlzIE1lbW9yYW5kdW0gdG8gYmUgZXhlY3V0ZWQgYXMgb2YgdGhlIGRhdGUgZmlyc3Qgd3JpdHRlbiBhYm92ZS4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0NjkyODQ4IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NTc0MjQ1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExOTQ1Nzc2IFdpbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NTc0MjQ1IEZhcm0gTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMTE4NjQ4MzUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExODY0ODM1IFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTE4NjQ4MzUgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTg2NDgzNSBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ2OTI4NDggUmlzaW5nIFRyZWUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NTc0MjQ1IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0NjkyODQ4IElJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NSBMTENcbGluZSBcbGluZSBcbGluZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1NzQyNDUgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxMTg2NDgzNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE4NjQ4MzUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxMTg2NDgzNSBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODY0ODM1IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTg2NDgzNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDY5Mjg0OCBSaXNpbmcgVHJlZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ1MDU4NzU0IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0NjkyODQ4IElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQxNDY5Mjg0OFxjaGFycnNpZDUwNTg3NTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDUwNTg3NTQgTExDDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSBCeToNClxwYXIgVGl0bGU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDExODY0ODM1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTg2NDgzNSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDExODY0ODM1IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE4NjQ4MzUgQnk6XGxpbmUgVGl0bGU6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjkyODQ4IFtBZGQgbm90YXJpYWwgYWNrbm93bGVkZ21lbnRzXQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU2ODQ1OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IEVYSElCSVQgQQ0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU2ODQ1OTdcY2hhcnJzaWQxNTY4NDU5NyBERVNDUklQVElPTiBPRiBUSEUgUFJPUEVSVFl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU2ODQ1OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWMgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzMjE1OTEzICBQQUdFICAgXFwqIE1FUkdFRk9STUFUIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTY1MTkwOCAxOH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDMyMTU5MTMgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyM1xxciBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDY3NTMwNiBFWEVDVVRJT04gVkVSU0lPTg0KXHBhciB9fXtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDExNDI4Njk3IHtcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAwXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6MTFcc2hwbGlkMjIzOQ0Ke1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBsVHhpZH17XHN2IDc4NjQzMn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19DQp7XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzF9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBtZXRyb0Jsb2J9e1xzdiB7XCpcc3ZiIA0KNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGI2ODMzODkyZmUwMDAwMDBlMTAxMDAwMDEzMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM5NDkxNDE0ZWMzMzAxMDQ1Zjc0OGRjYzFmMjE2MjU0ZWJiNDAwODI1ZTk4MmI0NGI0MGE4MWM2MDY0NGYxMjhiNjQ2Yzc5NGM2ODZmOGY5M2I2MWI0NDkxNThkYTMzZmZiZjI3YmJkYzFjYzY0MTRjMThkODNhYWFlNDJhMmZhNDQwZDJjZTU4ZWEyYWY5YmVkZjY1MGY1MjcwMDQNCjMyMzAzOGMyNGExZTkxZTVhNmJlYmQyOWY3NDc4ZjJjNTI5YWI4OTI3ZDhjZmU1MTI5ZDYzZDhlYzBiOWYzNDg2OWQyYmEzMDQyNGNjN2QwMjkwZmZhMDMzYTU0ZWJhMmI4NTdkYTUxNDQ4YTU5OWMzYjY0NWQzNmQ4YzJlNzEwYzVmNjkwYWU0ZjI2MDEwNzk2ZTJlOWI0MzhiMzJhMDlkZTBmNTY0MzRjYTY2YTIyZjM4MzkyOWQwOTc5NGEyZTNiZGM1YmNmNzc0OTQzYWE1ZjA5ZjNlNDNhZTA5YzdiNDk0ZjEzYWM0MWYxMGEyMTNlYzM5ODM0OTQwOWFjDQo3MGVkMWFhN2YzYmYzYjY2Yzk5MTMzZDdiNjU2NjNkZTA0ZGUyZWE5OGJkM2I1NmVlM2JlMjhlMGY0ZGZmMjI2YzVkZTcwYmFiNGFiZTU4M2VhNmYwMDAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDAzOGZkMjFmZmQ2MDAwMDAwOTQwMTAwMDAwYjAwMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzNhNDkwYzE2YWMzMzAwYzg2ZWY4M2JkODNkMTdkNzE5YWMzMThhMzRlMmZhM2QwNmJlOTFlYzBkODhhNjMxYTViNDYzMmQ5ZmFmNg0KMzM4M2MxMzI3YWRiNTFiZmQwZjc4OTdmN2ZmODRjOGI1YTkxMjU1MjM2YjBlYjdhNTA5ODFkZjk5ODgzODFmN2NiZjFlOTA1OTQ1NDliYmQ1ZDI4YTM4MTFiMGExY2M2Yzc4N2ZkMTkxNzViZGI5MWNjYjE4ODZhOTQyYzA2ZTY1YWNiYWJkNmUyNjY0YzU2M2EyYTk4ZGI2NjIyNGViNmI2OTE4MzJlZDY1ZDZkNDAzZGY0ZmRiM2U2ZGYwYzE4Mzc0Yzc1ZjIwNmY4ZTQwNzUwOTc1YjY5ZTYzZmVjMTQxZDkzZDA1NDNiNDc0OWQzMzQ0NTc3OGZhYTNkN2QNCmU0MzNhZThkNjIzOTYwMzVlMDU5YmU0M2M2YjU2YmNmODFiZWVmZGRmZGQzMWJkODk2MzliYTIzZGI4NDZmZTRiNjdlMWNhODY1M2Y3YWJkZTk3MmZjMDIwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwNzZiOTk5YThiYzAyMDAwMGI5MDUwMDAwMGUwMDAwMDA2NDcyNzMyZjY1MzI2ZjQ0NmY2MzJlNzg2ZDZjYWM1NGRiNmU5YzMwMTA3ZGFmZDQ3ZmIwZmM0ZWI4ODQ2NTAxODU4ZDkyNjVhOTJhYTUxNzI5ZTk3M2U0MDViMzU4DQowNTliZGFkZTg1YTRlYWJmNzc2Y2MyNjY5M2FhNTJkNTk2MDczNGI2YzdjNzczNjZjZWNjYzVlNWQ4YjVlODQwYTU2MjgyNjdkODNmZjMzMGEyYmMxNDE1ZTNiYjBjN2ZiOTJiOWMxODIzYTUwOWFmNDgyYjM4Y2RmMDAzNTVmODcyZjVmNmNkYzVkMGE3MzQxMDhkNjgyYjJhMTE4MDcwOTUwZTdkODYxYmFkZmJkNDc1NTVkOWQwOGVhODMzZDE1MzBlODdiNTkwMWRkMWIwOTQzYmI3OTI2NDAwZjRhZTc1MDNjZjhiZGM0MWM4YWE5N2EyYTQ0YWMxNmUzZQ0KMWRlMjk1YzVhZjZiNWFlYTRmNzVhZGE4NDY2ZDg2MjEzNjZkZmZkMmZlYjdlNmVmYWUyZTQ4YmE5M2E0NmY1OGY5MTQwNmY5OGIyODNhYzIzODNjN2E4NGNhODkyNjY4MmZkOTJmNTAxZDJiYTU1MGEyZDY2N2E1ZTg1YzUxZDdhY2E0OTYwM2IwZjFiZDU3NmM2ZTFiZDI1M2NiMDU5MmEzZmE2MzlhZDRmZjgzMmQzZjFlM2U0YmM0YWEwYzQ3MTg3MWQyNDE4OTFlMWZiYmZlNGUxMmQ2NTI3OWVmN2JjYmY4ZGUzNzU5MWE3YTk1ODJmMzZkMGZlZTdhYmMNCjE2MjM1NGRiMzI1NmZkOGQyOGJmMmFjNGM1YmEyMTdjNDdhZmE0MTQ0MzQzNDkwNTUxZGE5YmVlYzlkNTA5NDcxOTkwZWRmMDQxNTRmMDFjZDk2YjYxODFjNjVhNzYyNjg1OTAxNDA0ZTg1MGFkODc2Mzg1ZThhODUxMDk5YmMxMjJmMmNlMDMzODJhZTEyYzU4ODQ5ZTY3NGJlODkyNzRiZWRkNGJhNWRmNTFkMTIxNjM2NDU4ODIwMjJjM2EzOWRjMjgwZDNjYzA3NTc2MzE4ZjcxNTFiMGI2YjUyYTY4Zjk4YjBkNzA5Yzc2ZTA2ZGI4NmFjZTRjMTRiNmE4DQpkZjEzMmZkOWM0OWIzODc0YzIyMGRhMzhhMTk3ZTdjZTU1YjEwZTlkYThmMDk3OGJmYzNjNWZhZjczZmY4Nzc5ZDcwZmQzODY1NTE1ZTVlNjk5NTk2MDdlZjg2NzA1N2M5MmZhMjQ4ZGEzYzQ5NDY4NTk2NWUwNGM0ODRhZWViNmViNTZhMjAzMDE4MTE3ZjYzM2Q1ODJlMDRmZGNkYzk3NjFkODYzZTBmMjhhOTIxZjg0ZGU3NTkwMzg0NTE0MmY5ZGIwMDgxNzRlYjJmNDYyYzdmMzkzZWIyNGYyYzIyNGNjOGI5Nzk0NmUxOGE3ZmY0ZTA5MGQxOTRlMTZjMQ0KNjIxMmQzNmZiOTQxYTU5ZjhiN2RjMjhkYTQxZGQzMzA0MjVhZDY2NTM4M2UzYTkxZDQ0ODcwYzMyYjViNWEwZDZhOWVlYzkzNTQ5OGYwOWY1MzAxMTk5YjBiNmQwNTZiMzQzYWE5NTU4ZmRiZDE3Njg4N2YzZTM3YzI1NjU0MGYyMDYxMjk0MDYxMjA0Njk4N2Y2MDM0NDIzZTYyMzRjMDJjYzliMGZhYjYyNzkyNjJkNGJlZTdkMDA2NjZmMGNjODY5YzhkZWQ2YzEwNWVjMmQ1MGM2YjhjMjY3M2FkYTcwMWI1ZWYyNWRiMzU4MDNjMzdkYTE1YjQ0YWMxYWMNCjhhNGQ0ZjRkNTEwMDA1YjM4MGY5NjBjOTNjY2QzMjMzODA0ZWQ3ZDZlYjc5ZTJhZTdlMDIwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwNWM0MTY2YzBkOTAwMDAwMDA0MDEwMDAwMGYwMDAwMDA2NDcyNzMyZjY0NmY3NzZlNzI2NTc2MmU3ODZkNmM0YzhmMzE0ZmMzMzAxMDg1NzdhNGZlMDdlYjJhYjEyMDZhMjdhMDBhNDI5Y2FhYWE2MDYxYTM2NTYxYmJjNjQ3MTI2MTlmYTNkODRkNDI3ZjNkMmUwYjJjYTc3NzdhYTdmN2JlDQoyYjM3YjNiMzYyYTQyMTc0OWUzNTY0MmIwNTgyYjhmNmE2ZTM0NmMzZmJlMWU1ZjYwMTQ0ODhjODA2YWQ2N2QyZjA0ZDAxMzZkNWUyYWFjNGMyZjg4OWRmNjhkY2M3NDZhNDEwMGUwNTZhNjg2M2VjMGIyOTQzZGQ5MmMzYjBmMjNkNzFmMjNlZmRlMDMwYTY3NTY4YTQxOTcwNGFlMWNlY2E1Y2E5YjU3NGQ4NzE2YTY4YjFhNzVkNGJmNWQ3ZmVlNDM0YWNlN2U3ZmVlNmY1OTFmMmU5NWNkYjkxM2ZjZTU5MTYyOWQzZmE3YTM5NmY5ZjQwNDQ5YWUzZGYzMQ0KNWNmMDEzM2E1NDg5ZTllODRmNmM4MmIwMWFkMjIzZjE3NzI2ZWY1ZWRkZTUyMDhlMTdhMTQwNTZhNWZjMGY1ZmZkMDAwMDAwZmZmZjAzMDA1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMGI2ODMzODkyZmUwMDAwMDBlMTAxMDAwMDEzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDAzOGZkMjFmZmQ2MDANCjAwMDA5NDAxMDAwMDBiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyZjAxMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDc2Yjk5OWE4YmMwMjAwMDBiOTA1MDAwMDBlMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyZTAyMDAwMDY0NzI3MzJmNjUzMjZmNDQ2ZjYzMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDVjNDE2NmMwZDkwMDAwMDAwNDAxMDAwMDBmMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDE2MDUwMDAwNjQ3MjczMmY2NDZmNzc2ZTcyNjU3NjJlNzg2ZDZjNTA0YjA1MDYwMDAwMDAwMDA0MDAwNDAwZjMwMDAwMDAxYzA2MDAwMDAwMDB9fX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjYyMzM2fX17XHNwe1xzbiBmSGlkZGVufXtcc3YgMH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIA0KXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzYxOTg0NTc5LjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODIwM1xkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc2MTk4NDU3OS4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAwXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBGSVJTVCBBTUVORE1FTlQgVE8NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDMyMTU5MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggUklTSU5HIFRSRUUgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzMjE1OTEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHNjYXBzXGY0MlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyNDEyMzU1IA0KVGhpcyBGaXJzdCBBbWVuZG1lbnQgdG8gUmlzaW5nIFRyZWUgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyNDEyMzU1IEFtZW5kbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NA0KKSBpcyBtYWRlIGFuZCBlbnRlcmVkIGludG8gdGhpcyAyOXRoIGRheSBvZiBKdW5lLCAyMDE1LCBieSBhbmQgYW1vbmcgUmlzaW5nIFRyZWUgV2luZCBGYXJtXH5MTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0KSwgUmlzaW5nIFRyZWUgV2luZCBGYXJtXH5JSSBMTEMgKFwnOTN9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlIElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0KSwgYW5kIFJpc2luZyBUcmVlIFdpbmQgRmFybVx+SUlJIExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlIElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBcJzk0KSwgZWFjaCBvZiB3aGljaCBpcyBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnkuICBUaGUgZm9yZWdvaW5nIGFyZSBzb21ldGltZXMgcmVmZXJyZWQgdG8gaGVyZWluIGluZGl2aWR1YWxseSBhcyBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpcJzk0IGFuZCBjb2xsZWN0aXZlbHkgYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggUkVDSVRBTFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQS5cdGFiIA0KVGhlIENvLU93bmVycyBoYXZlIHByZXZpb3VzbHkgZW50ZXJlZCBpbnRvIHRoYXQgY2VydGFpbiBSaXNpbmcgVHJlZSBTaGFyZWQgRmFjaWxpdGllcyBBZ3JlZW1lbnQgZGF0ZWQgRGVjZW1iZXIgMywgMjAxNCAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyNDEyMzU1IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpcJzk0KSB3aXRoIHJlc3BlY3QgdG8gdGhlIHNoYXJlZCBmYWMNCmlsaXRpZXMgYW5kIHNoYXJlZCByZWFsIHByb3BlcnR5IHVzZWQgaW4gY29ubmVjdGlvbiB3aXRoIGVhY2ggcGhhc2Ugb2YgYSB0aHJlZSBwaGFzZSB3aW5kIHBvd2VyZWQgZWxlY3RyaWMgZ2VuZXJhdGluZyBmYWNpbGl0eSBnZW5lcmFsbHkga25vd24gYXMgdGhlIFJpc2luZyBUcmVlIFdpbmQgRmFybSBsb2NhdGVkIG9uIHJlYWwgcHJvcGVydHkgaW4gS2VybiBDb3VudHksIENhbGlmb3JuaWEgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFwnOTQpLiAgDQpccGFyIEIuXHRhYiBBIG1lbW9yYW5kdW0gb2YgdGhlIEFncmVlbWVudCB3YXMgcmVjb3JkZWQgaW4gdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgS2VybiBDb3VudHksIENhbGlmb3JuaWEgb24gRGVjZW1iZXIgMTAsIDIwMTQsIGFzIEluc3RydW1lbnQgTm8uIDAyMTQxNTI3NTkuDQpccGFyIEMuXHRhYiBUaGUgQ28tT3duZXJzIG5vdyB3aXNoIHRvIGFtZW5kIHRoZSBBZ3JlZW1lbnQgaW4gY2VydGFpbiByZXNwZWN0cyB0byBjbGFyaWZ5IHRoZSBvd25lcnNoaXAgYW5kIHVzZSBvZiBjZXJ0YWluIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBTaGFyZWQgUGVybWl0cyBhbmQgdG8gbWFrZSBvdGhlciBjaGFuZ2VzIGluIGFuZCBjb3JyZWN0aW9ucyB0byB0aGUgQWdyZWVtZW50Lg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTUwNTg4MCBOb3csIHRoZXJlZm9yZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLCBmb3IgZ29vZCBhbmQgdmFsdWFibGUgY29uc2lkZXJhdGlvbiwgdGhlIHJlY2VpcHQgb2Ygd2hpY2ggaXMgaGVyZWJ5IGFja25vd2xlZGdlZCwgdGhlIENvLU93bmVycyBhZ3JlZSBhcyBmb2xsb3dzOg0KXHBhciAxLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk1MDU4ODAgRGVmaW5pdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIEV4DQpjZXB0IGFzIG90aGVyd2lzZSBkZWZpbmVkIGhlcmVpbiwgY2FwaXRhbGl6ZWQgdGVybXMgdXNlZCBpbiB0aGlzIEFtZW5kbWVudCB3aWxsIGhhdmUgdGhlIG1lYW5pbmdzIGRlZmluZWQgaW4gdGhlIEFncmVlbWVudCwgYW5kIHRoZSBydWxlcyBvZiBpbnRlcnByZXRhdGlvbiBpbiB0aGUgQWdyZWVtZW50IHNoYWxsIGFwcGx5IHRvIHRoaXMgQW1lbmRtZW50Lg0KXHBhciAyLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBTaGFyZWQgUmVhbCBQcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiAzLjMgb2YgdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGJ5IHB1dHRpbmcgYSBjb21tYSBhZnRlciBcJzkzY29sbGVjdGlvbiBhbmQgdHJhbnNtaXNzaW9uIGxpbmVzXCc5NA0KIGluIHRoZSB0aGlyZCB0byBsYXN0IGxpbmUgb2YgdGhhdCBzZWN0aW9uIGFuZCBpbnNlcnRpbmcgdGhlIHdvcmRzIFwnOTNmaWJlciBvcHRpYyBjYWJsZSBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMgZmFjaWxpdGllc1wnOTQgaW1tZWRpYXRlbHkgdGhlcmVhZnRlci4NClxwYXIgMy5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIFNlY3Rpb24gMy42IG9mIHRoZSBBZ3JlZW1lbnQgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDMuNlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQouICBUaGUgY29uc3RydWN0aW9uLCBvcGVyYXRpb24gYW5kIHVzZSBvZiBjZXJ0YWluIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBlYWNoIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwLCBhcyB3ZWxsIGFzIHRoZSBjb25zdHJ1Y3Rpb24sIG9wZXJhdGlvbiBhbmQgdXNlIG9mIGNlcnRhaW4gcG9ydGlvbnMgb2YgZWFjaCBDby1Pd25lclxycXVvdGUgDQpzIEZhY2lsaXRpZXMsIHdpbGwgYmUgc3ViamVjdCB0byBjZXJ0YWluIHNoYXJlZCBHb3Zlcm5tZW50YWwgQXV0aG9yaXphdGlvbnMgYXMgc2V0IGZvcnRoIGluIHBhcnRzIEEuMyBhbmQgQi4zIG9mIEV4aGliaXQgQiAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU1OTQ1MjQgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggXCc5NA0KKSwgbm90IGFsbCBvZiB3aGljaCBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMuICBUaGUgU2hhcmVkIFBlcm1pdHMgbWF5IGJlIGlzc3VlZCBpbiB0aGUgbmFtZSBvZiBvbmUgb3IgbW9yZSBvZiB0aGUgQ28tT3duZXJzLCBidXQgc2hhbGwsIHRvIHRoZSBleHRlbnQgdGhleSBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGFuZCB0byB0aGUgZnVsbGVzdCBleHRlbnQgYWxsb3dlZCBieSBBcHBsaWNhYmxlIExhdywgYmUgaGVsZCwgDQp1c2VkIGFuZCBleGVyY2lzZWQgZm9yIHRoZSBtdXR1YWwgYmVuZWZpdCBvZiB0aGUgQ28tT3duZXJzIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldHMgR3JvdXAgYW5kIHRvIGZhY2lsaXRhdGUgdGhlIGNvbnN0cnVjdGlvbiwgdXNlLCBvcGVyYXRpb24sIG1haW50ZW5hbmNlIGFuZCByZXBhaXIgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFzIHByb3ZpZGVkIGhlcmVpbi4gIFRoZSBTaGFyZWQgUGVybWl0cyBzaGFsbCBiZSBhZG1pbmlzdGUNCnINCmVkIGluIHRoZSBzYW1lIG1hbm5lciBhcyB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiA0LjMuMywgYW5kLCB0byB0aGUgZXh0ZW50IHRoZXkgZG8gYXBwbHkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB0aGUgQ28tT3duZXJzIGluIGVhY2ggU2hhcmVkIEFzc2V0IEdyb3VwIHNoYWxsIGluZGVtbmlmeSBhbmQgaG9sZCBSaXNpbmcgVHJlZSBJIGFuZC9vciBPcGVyYXRvciwgYXMgYXBwbGljYWJsZSwgaGFybWxlcw0KcyBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIA0KYW55IGNsYWltcywgZGVtYW5kcywgY29zdHMsIG9ibGlnYXRpb25zIGFuZCBsaWFiaWxpdGllcyBieSBvciB0byBHb3Zlcm5tZW50YWwgQXV0aG9yaXRpZXMgb3Igb3RoZXIgdGhpcmQgcGFydGllcyBhcyBhIHJlc3VsdCBvZiB0aGUgdXNlIG9mIHRoZSBTaGFyZWQgUGVybWl0cyByZWxhdGluZyB0byBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCwgZXhjZXB0IHRvIHRoZSBleHRlbnQgcmVzdWx0aW5nIGZyb20gdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBicmVhY2ggYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyODUwMzcxIFJpc2luZyBUcmVlIEkgYW5kL29yIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCiBvZiBpdHMgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IG9yIHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50LCBhcyBhcHBsaWNhYmxlLCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIA0KIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIFJpc2luZyBUcmVlIEkgYW5kL29yIE9wZXJhdG9yLCBhcyBhcHBsaWNhYmxlLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBUbyB0aGUgDQpleHRlbnQgdGhlIFNoYXJlZCBQZXJtaXRzIGRvIG5vdCBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGJ1dCBpbnN0ZWFkIGFwcGx5IHRvIHRoZSBGYWNpbGl0aWVzIG9yIG90aGVyIHByb3BlcnR5IHNlcGFyYXRlbHkgb3duZWQgYnkgb25lIG9yIG1vcmUgb2YgdGhlIENvLU93bmVycywgdGhlIFNoYXJlZCBQZXJtaXRzIHNoYWxsIGJlIGFkbWluaXN0ZXJlZCBieSBPcGVyYXRvciwgYnV0IHRoZSBDby1Pd25lcnMgc2hhbGwgdGFrZSBzdWMNCmgNCiBhY3Rpb25zIGFzIGFyZSByZXF1aXJlZCBieSB0aGUgT3BlcmF0b3Igb3Igb3RoZXJ3aXNlIHRvIGVuc3VyZSB0aGF0IGVhY2ggc3VjaCBGYWNpbGl0eSBpcyBvcGVyYXRlZCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiBzdWNoIFNoYXJlZCBQZXJtaXQuICBSZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3Igbm90IHRoZSBTaGFyZWQgUGVybWl0cyBhcHBseSB0byBTaGFyZWQgRmFjaWxpdGllcywgT3BlcmF0b3Igc2hhbGwgaGF2ZQ0KIA0KYWNjZXNzIHRvIGFsbCByZWFsIHByb3BlcnR5IGFuZCByZWFsIHByb3BlcnR5IHJpZ2h0cywgaW5jbHVkaW5nIFNoYXJlZCBSZWFsIHByb3BlcnR5IGFuZCByZWFsIHByb3BlcnR5IG9yIHJlYWwgcHJvcGVydHkgcmlnaHRzIG93bmVkLCBsZWFzZWQsIGhlbGQgb3Igb3RoZXJ3aXNlIGNvbnRyb2xsZWQgYnkgYW55IG9mIHRoZSBDby1Pd25lcnMgaW4gb3JkZXIgdG8gYWRtaW5pc3RlciBhbmQgcGVyZm9ybSB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSBTDQpoDQphcmVkIFBlcm1pdHMuICBUbyB0aGUgZXh0ZW50IHRoYXQgZXZlbnRzIG9jY3VycmluZyBhdCBvciB3aXRoIHJlc3BlY3QgdG8gYSBwYXJ0aWN1bGFyIEZhY2lsaXR5IGNvbnN0aXR1dGUgdmlvbGF0aW9ucyBvZiBhIFNoYXJlZCBQZXJtaXQgb3IgcmVxdWlyZSBtb2RpZmljYXRpb25zIHRvIHRoZSBGYWNpbGl0aWVzIG93bmVkIGJ5IG90aGVyIENvLU93bmVycyBvciB0byB0aGUgb3BlcmF0aW9ucyBvZiBzdWNoIEZhY2lsaXRpZXMsIGVhY2ggQ28tT3cNCm5lciB3aG9zZSBGYWNpbGl0eSBpcyByZXNwb25zaWJsZSBmb3Igc3VjaCB2aW9sYXRpb25zIG9yIHRoZSByZXF1aXJlbWVudCBmb3Igc3VjaCBtb2RpZmljYXRpb25zIHNoYWxsIGluZGVtbmlmeSBhbmQgaG9sZCBPcGVyYXRvciBhbmQgZWFjaCBvdGhlciBDby1Pd25lciBoYXJtbGVzcyBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIA0KYW55IGNsYWltcywgZGVtYW5kcywgY29zdHMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbG9zc2VzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiBvYmxpZ2F0aW9ucyBhbmQgbGlhYmlsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICwgaW5jbHVkaW5nIGNvc3RzIGltcG9zZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyICBieSBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGxpYWJpbGl0aWVzIG9yIG9ibGlnYXRpb25zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIHRvIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcyBvciBvdGhlciB0aGlyZCBwYXJ0aWVzDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBhbmQgbG9zdCByZXZlbnVlcyBkdWUgdG8gY3VydGFpbG1lbnQgb3Igb3RoZXIgcmVtZWRpZXMgb3JkZXJlZCBieSBhIEdvdmVybm1lbnRhbCBBdXRob3JpdHksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgIGFzIGEgcmVzdWx0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBzdWNoIGV2ZW50cywgaW5jbHVkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYWN0aW9ucyBvciBvbWlzc2lvbnMgdW5kZXIsIGZhaWx1cmUgdG8gY29tcGx5IHdpdGggb3IgdmlvbGF0aW9ucyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIHRoZSBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIGJ5IHN1Y2ggQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiAsIGV4Y2VwdCB0byB0aGUgZXh0ZW50IHJlc3VsdGluZyBmcm9tIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNzU1ODIzICBicmVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDc1NTgyMyAgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICwgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTA3NTU4MjMgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvciB0aGUgTEdJQSBDby1UZW5hbmN5IEFncmVlbWVudCBieSBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDc1NTgyMyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiBncm9zcyBuZWdsaWdlbmNlIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQogb3IgdGhlIENvLU93bmVyIHNlZWtpbmcgdG8gYmUgaW5kZW1uaWZpZWQuICBJZiB0aGUgdmlvbGF0aW9ucyBvZiB0aGUgU2hhcmVkIFBlcm1pdHMgb3IgdGhlIGV2ZW50cyByZXF1aXJpbmcgbW9kaWZpY2F0aW9uIG9mIEZhY2lsaXRpZXMgYXJlIHRoZSByZXNwb25zaWJpbGl0eSBvZiBtb3JlIHRoYW4gb25lIENvLU93bmVyLCB0aGUgZm9yZWdvaW5nIGluZGVtbml0eSBvYmxpZ2F0aW9ucyB3aWxsIGJlIGVxdWkNCnRhYmx5IGFwcG9ydGlvbmVkIGFtb25nIHRoZSByZXNwb25zaWJsZSBDby1Pd25lcnMsIGNvbnNpZGVyaW5nIGFsbCBvZiB0aGUgZmFjdHMgYW5kIGNpcmN1bXN0YW5jZXMgcmVsYXRpbmcgdG8gdGhlIHZpb2xhdGlvbnMgb3IgbW9kaWZpY2F0aW9ucyBpbiBxdWVzdGlvbi4gIFRoZSBjb3N0cyBvZiBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgU2hhcmVkIFBlcm1pdHMgaW4gY29ubmVjdGlvbiB3aXRoIGFueSB2aW9sYXRpb25zLCBjbGFpbWVkIHZpb2xhdA0KaQ0Kb25zIG9yIHJlcXVpcmVkIG1vZGlmaWNhdGlvbnMgc2hhbGwgYmUgYm9ybmUgYnkgdGhlIHJlc3BvbnNpYmxlIENvLU93bmVycyBhbmQgc2hhbGwgbm90IGJlIGluY2x1ZGVkIGluIHRoZSBPJk0gU2VydmljZXMgcHJvdmlkZWQgaGVyZXVuZGVyLiAgRm9yIHB1cnBvc2VzIG9mIHRoZSBmb3JlZ29pbmcgaW5kZW1uaXR5IG9ibGlnYXRpb24sIGFuZCBub3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgaW4gU2VjdGlvbiAxNy4yMCBvciBlbHNld2hlcmUgaW4gDQp0aGlzIEFncmVlbWVudCB0byB0aGUgY29udHJhcnksIGxvc3QgcmV2ZW51ZXMgKGluY2x1ZGluZyBsb3N0IHByb2R1Y3Rpb24gdGF4IGNyZWRpdHMgYW5kIG90aGVyIGxvc3QgdGF4IGJlbmVmaXRzIGFuZCBjcmVkaXRzKSBzaGFsbCBiZSBjb25zaWRlcmVkIGRpcmVjdCwgbm90IGNvbnNlcXVlbnRpYWwsIGRhbWFnZXMgYW5kIHNoYWxsIGJlIHJlY292ZXJhYmxlIGJ5IHRoZSBhZmZlY3RlZCBDby1Pd25lci4gIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgTm90d2l0aHN0YW5kaW5nIHRoZSBmb3JlZ29pbmcsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCiBlYWNoIENvLU93bmVyIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldCBHcm91cCB0byB3aGljaCBhIFNoYXJlZCBQZXJtaXQgcmVsYXRlcyBzaGFsbCBoYXZlIHRoZSByaWdodCwgaW4gdGhlIGNhc2Ugb2YgRW1lcmdlbmN5IENvbmRpdGlvbiBvciBpZiBuZWNlc3NhcnkgdG8gcHJldmVudCB0aGUgdGVybWluYXRpb24gb3IgcmV2b2NhdGlvbiBvZiBhIFNoYXJlZCBQZXJtaXQsIHRvIHN0ZXAgaW4gYW5kIGV4ZXJjaXNlIHJpZ2h0cywNCiBwZXJmb3JtIGR1dGllcyBhbmQgb2JsaWdhdGlvbnMgYW5kIHRha2UgYWN0aW9ucyB1bmRlciBzdWNoIFNoYXJlZCBQZXJtaXQgYXMgbWF5IGJlIG5lY2Vzc2FyeSB0byBhdm9pZCBvciBtaXRpZ2F0ZSBzdWNoIEVtZXJnZW5jeSBDb25kaXRpb24gb3IgdGVybWluYXRpb24gb3IgcmV2b2NhdGlvbiBvZiBhIFNoYXJlZCBQZXJtaXQsIGFuZCBzaGFsbCBiZSBlbnRpdGxlZCB0byB0aGUgc2FtZSBpbmRlbW5pZmljYXRpb24gYXMgUmlzaW5nIFRyZWUgSQ0KIG9yIE9wZXJhdG9yIHdvdWxkIGhhdmUgYmVlbiB1bmRlciB0aGUgY2lyY3Vtc3RhbmNlczsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgYW55IENvLU93bmVyIGV4ZXJjaXNpbmcgc3VjaCBzdGVwLWluIHJpZ2h0cyBzaGFsbCBhbHNvIGluZGVtbmlmeSBhbmQgaG9sZCB0aGUgb3RoZXIgQ28tT3duZXJzIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldHMgR3JvdXAgZnJvbSBhbmQgYWdhaW5zdCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIGFueSBjbGFpbXMsIGRlbWFuZHMsIGNvc3RzLCBvYmxpZ2F0aW9ucyBhbmQgbGlhYmlsaXRpZXMgYnkgb3IgdG8gR292ZXJubWVudGFsIEF1dGhvcml0aWVzIG9yIG90aGVyIHRoaXJkIHBhcnRpZXMgYXMgYSByZXN1bHQgb2YgaXRzIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IGluIHRoZSBleGVyY2lzZSBvZiBzdWNoIHN0ZXAtaW4gcmlnaHRzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDQuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IA0KVW5kaXZpZGVkIFVzZSBJbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIFNlY3Rpb24gNC4yIG9mIHRoZSBBZ3JlZW1lbnQgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDQuMlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCANClVuZGl2aWRlZCBVc2UgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBFYWNoIENvLU93bmVyIHdobyBoYXMgYW4gT3duZXJzaGlwIEludGVyZXN0IGluIGEgU2hhcmVkIEFzc2V0cyBHcm91cCBzaGFsbCBoYXZlIGFuIHVuZGl2aWRlZCByaWdodCB0byB0aGUgdXNlIG9yIGNhcGFjaXR5IG9mIHRoZSBTaGFyZWQgQXNzZXRzIGluIHN1Y2ggU2hhcmVkIEFzc2V0IEdyb3VwIChhbiBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NA0KKSwgd2hpY2ggcmlnaHQgc2hhbGwgYmUgc2hhcmVkIHdpdGggdGhlIG90aGVyIENvLU93bmVycyBpbiB0aGUgU2hhcmVkIEFzc2V0cyBHcm91cHMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMuICBBIENvLU93bmVyXHJxdW90ZSANCnMgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBpcyBleGVyY2lzYWJsZSAoYSkgd2l0aCByZXNwZWN0IHRvIFNoYXJlZCBBc3NldHMgY29uc3RpdHV0aW5nIHJvYWRzIG9yDQosIGlmIGFwcGxpY2FibGUsIHRoZSBtZXRlb3JvbG9naWNhbCB0b3dlciwgYXMgb2YgdGhlIEV4ZWN1dGlvbiBEYXRlLCBhbmQgKGIpIHdpdGggcmVzcGVjdCB0byBvdGhlciBTaGFyZWQgQXNzZXRzLCB1cG9uIHRoZSBNZWNoYW5pY2FsIENvbXBsZXRpb24gRGF0ZSBvZiBpdHMgRmFjaWxpdHkgYnkgc3VjaCBDby1Pd25lciBieSBwcm92aWRpbmcgd3JpdHRlbiBub3RpY2UgdG8gT3BlcmF0b3IgYW5kIHRvIHRoZSBvdGhlciBDby1Pd25lcnMgaW4gdGgNCmUgc2FtZSBTaGFyZWQgQXNzZXRzIEdyb3VwIHRoYXQgdGhlIE1lY2hhbmljYWwgQ29tcGxldGlvbiBEYXRlIGhhcyBvY2N1cnJlZCwgcHJvdmlkZWQgdGhhdCBzdWNoIENvLU93bmVyIGhhcyBtYWRlIHRoZSBwYXltZW50IG9yIHBheW1lbnRzIHNldCBmb3J0aCBpbiBTZWN0aW9uXH4NCjQuMywgYW5kIHRoYXQgbm8gRXZlbnQgb2YgRGVmYXVsdCBoYXMgb2NjdXJyZWQgYW5kIGlzIGNvbnRpbnVpbmcgd2l0aCByZXNwZWN0IHRvIHN1Y2ggQ28tT3duZXIuICBGDQpvciB0aGUgYXZvaWRhbmNlIG9mIGRvdWJ0LCBlYWNoIENvLU93bmVyIHdob3NlIEZhY2lsaXR5IGhhcyBub3QgcmVhY2hlZCBpdHMgTWVjaGFuaWNhbCBDb21wbGV0aW9uIERhdGUgYXMgb2YgdGhlIEVmZmVjdGl2ZSBEYXRlIChhbmQgdGh1cyB3aG9zZSBQcm9wb3J0aW9uYXRlIFNoYXJlIGluIGFsbCBTaGFyZWQgQXNzZXRzIEdyb3VwcyBpcyAwJSkgc2hhbGwgYmUgZGVlbWVkIG5vdCB0byBoYXZlIGV4ZXJjaXNlZCBpdHMgVW5kaXZpZGVkIFVzZSANCkkNCm50ZXJlc3QgaW4gYW55IFNoYXJlZCBBc3NldHMgR3JvdXAgZXhjZXB0IHdpdGggcmVzcGVjdCB0byByb2FkcyBvciwgaWYgYXBwbGljYWJsZSwgdGhlIG1ldGVvcm9sb2dpY2FsIHRvd2VyIChhbmQgYXMgYSByZXN1bHQgc2hhbGwgbm90IGJlIHJlcXVpcmVkIHRvIGJlYXIgY29zdHMgb3IgZXhwZW5zZXMgcmVsYXRlZCB0byBhbnkgU2hhcmVkIEFzc2V0cyBHcm91cCBleGNlcHQgZm9yIHJvYWQgbWFpbnRlbmFuY2Ugbm9yIGhhdmUgdGhlIHJpZ2h0IA0KdG8gdm90ZSBvbiBtYXR0ZXJzIHVubGVzcyBvdGhlcndpc2Ugc2V0IGZvcnRoIGhlcmVpbiksIGJ1dCBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBleGVyY2lzZSBpdHMgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBhcyBzZXQgZm9ydGggaW4gdGhpcyBBZ3JlZW1lbnQuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA1Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCANCkNvbnN0cnVjdGlvbiBvZiBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA0LjMuMSBvZiB0aGUgQWdyZWVtZW50IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA0LjMuMVx0YWIgDQpTdWJqZWN0IHRvIGl0cyByaWdodCB0byByZWltYnVyc2VtZW50IGFzIHNldCBmb3J0aCBoZXJlaW4sIFJpc2luZyBUcmVlIEkgd2lsbCBkZXNpZ24sIHBlcm1pdCBhbmQgY29uc3RydWN0IGFsbCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIEFwcGxpY2FibGUgTGF3cywgR29vZCBVdGlsaXR5IFByYWN0aWNlIGFuZCB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9uIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSBFeGhpYml0IEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KIGF0dGFjaGVkIGhlcmV0by4gIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBjb250YWluZWQgdG8gdGhlIGNvbnRyYXJ5IGluIHRoaXMgQWdyZWVtZW50LCBhcyBvZiBKdW5lIDMwLCAyMDE1LCB0aGUgZGF0ZSBvbiB3aGljaCB0aGUgaW5pdGlhbCBwb3J0aW9uIG9mIHRoZSBwYXltZW50IGJ5IHRoZSBvdGhlciBDby1Pd25lcnMgb2YgcmVpbWJ1cnNlbWVudCBhbW91bnRzIGR1ZSB0byBSaXNpbmcgVHJlZSBJIGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gDQo0DQouMy4yIHNoYWxsIG9jY3VyLCBSaXNpbmcgVHJlZSBJIHdpbGwgYmUgZGVlbWVkIHRvIGhhdmUgYXNzaWduZWQsIHRyYW5zZmVycmVkIGFuZCBjb252ZXllZCBzdWNoIFNoYXJlZCBGYWNpbGl0aWVzIHRvIHRoZSBDby1Pd25lcnMgKGluY2x1ZGluZyBSaXNpbmcgVHJlZSBJKSBpbiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXQgR3JvdXAgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMsIGluY2wNCnVkaW5nIHJpZ2h0cyB1bmRlciBjb25zdHJ1Y3Rpb24gYW5kIHN1cHBseSBjb250cmFjdHMgIChpbmNsdWRpbmcgdGhlIGFncmVlbWVudHMgc2V0IGZvcnRoIG9uIEV4aGliaXQgRCkgYW5kIGNvbnRyYWN0b3IsIHN1cHBsaWVyIGFuZC9vciBtYW51ZmFjdHVyZXIgd2FycmFudGllcyByZWxhdGVkIHRvIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMsIHdoaWNoIHdhcnJhbnRpZXMgbWF5IGJlIGVuZm9yY2VkIGFzIHByb3ZpZGVkIGJlbG93LiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTU5NDUyNCBIb3dldmVyLCANCm5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBoZXJlaW4gdG8gdGhlIGNvbnRyYXJ5LCBSaXNpbmcgVHJlZSBJIHNoYWxsIGhhdmUgbm8gbGlhYmlsaXR5IHRvIHRoZSBvdGhlciBDby1Pd25lcnMgZm9yIGFueSBkZWZlY3QgaW4gdGhlIGRlc2lnbiwgY29uc3RydWN0aW9uIG9yIHV0aWxpdHkgb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDM0MzgwNzggDQouICBSaXNpbmcgVHJlZSBJIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9ucyBvciB3YXJyYW50aWVzIG9mIGFueSBraW5kIHdpdGggcmVzcGVjdCB0byB0aGUgY29uZGl0aW9uLCB1c2Ugb3IgZml0bmVzcyBvZiBhbnkgb2YgdGhlIFNoYXJlZCBSZWFsIHByb3BlcnR5IG9yIHdpdGggcmVzcGVjdCB0byB0aGUgZGVzaWduLCBjb25zdHJ1Y3Rpb24sIG9wZXJhdGlvbiBvciB1dGlsaXR5IG9mIGFueSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTU5NDUyNCAgYW5kIGhlcmVieSBkaXNjbGFpbXMgYW55IHdhcnJhbnR5IG9mIG1lcmNoYW50YWJpbGl0eSBvciBmaXRuZXNzIGZvciBhIHBhcnRpY3VsYXIgcHVycG9zZSBvciBhbnkgb3RoZXIgd2FycmFudHkgb2YgYW55IGtpbmQgd2l0aCByZXNwZWN0IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxzY2Fwc1xpbnNyc2lkMzQzODA3OCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU1OTQ1MjQgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQogIEVhY2ggb2YgdGhlIENvLU93bmVycyBhZ3JlZXMgdGhhdCB0aGV5IHdpbGwgbG9vayBzb2xlbHkgdG8gdGhlIGRlc2lnbmVycywgY29udHJhY3RvcnMsIHN1cHBsaWVycywgbWFudWZhY3R1cmVycyBhbmQgb3RoZXIgUGVyc29ucyB3aG8gDQpwYXJ0aWNpcGF0ZWQgaW4gdGhlIGRlc2lnbiBhbmQvb3IgY29uc3RydWN0aW9uIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB3aXRoIHJlc3BlY3QgdG8gYW55IGRlZmVjdHMgb3IgYnJlYWNoZXMgb2YgY29udHJhY3Qgb3Igd2FycmFudHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTk1NDM2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNi5cdGFiIA0KUmVpbWJ1cnNhYmxlIENvc3RzLiBTZWN0aW9uIDQuMy4yIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciBcdGFiIDQuMy4yICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTUxMjcgUmlzaW5nIFRyZWUgSUkgYW5kIFJpcw0KaW5nIFRyZWUgSUlJIHNoYWxsIGVhY2ggcmVpbWJ1cnNlIFJpc2luZyBUcmVlIEkgZm9yIGFsbCBjb3N0cyBhbmQgZXhwZW5zZXMgaW5jdXJyZWQgYnkgUmlzaW5nIFRyZWUgSSBpbiBkZXNpZ25pbmcsIHBlcm1pdHRpbmcgYW5kIGNvbnN0cnVjdGluZyB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMgb2YgdGhlIGNvc3RzIG9mIHRoZSBTaGFyZWQgRmFjaWxpDQp0aWVzIGluIGVhY2ggU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXAgb2Ygd2hpY2ggdGhleSBhcmUgbWVtYmVycywgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIFByb3BvcnRpb25hdGUgU2hhcmVzIGluIGVhY2ggc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCBmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvciBwdXJwb3NlcyBvZiB0aGlzIFNlY3Rpb24gNC4zLjJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NTEyNyAsIHRoZSBDby1Pd25lcnMnIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMgc2hhbGwgDQpiZSBkZXRlcm1pbmVkIG9uIHRoZSBiYXNpcyBvZiB0aGUgbmFtZXBsYXRlIGNhcGFjaXRpZXMgc2V0IGZvcnRoIGluIFJlY2l0YWwgQiwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIG9yIG5vdCBhIEZhY2lsaXR5IGhhcyBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlLiBTdWNoIHJlaW1idXJzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NTEyNyAgc2hhbGwgYmUgbWFkZSB3aXRoaW4gZmlmdGVlbiAoMTUpIGRheXMgYWZ0ZXIgcmVjZWlwdCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9uZSBvciBtb3JlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk1MTI3ICBub3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NTEyNyAgZnJvbSBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAsIHdoaWNoIG5vdGljZXMgc2hhbGwgYmUgYWNjb21wYW5pZWQgYnkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NTEyNyANCmEgc3RhdGVtZW50IG9mIHRoZSBhbW91bnQgdG8gYmUgcmVpbWJ1cnNlZCAoaW5jbHVkaW5nIGFwcHJvcHJpYXRlIHN1cHBvcnRpbmcgZG9jdW1lbnRhdGlvbil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gNy5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggQWRkaXRpb25hbCBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA0LjYgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDQuNlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzUwMzY1NiBObyBBZGRpdGlvbmFsIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQouICBFeGNlcHQgYXMgcHJvdmlkZWQgaGVyZWluLCBpbmNsdWRpbmcgU2VjdGlvbiAxNy40LCBubyBQZXJzb24gbWF5IGJlY29tZSBhIENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50IG9yIGFuIGFkZGl0aW9uYWwgY28tb3duZXIgb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IG9yIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzIHdpdGhvdXQgdGhlIHByaW9yDQogd3JpdHRlbiBjb25zZW50IG9mIGFsbCBvZiB0aGUgQ28tT3duZXJzLiAgQW55IFBlcnNvbiBiZWNvbWluZyBhIENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50IChpbmNsdWRpbmcgYW4gYXNzaWduZWUgdW5kZXIgU2VjdGlvbiAxNy40KSBzaGFsbCBleGVjdXRlIGEgam9pbmRlciwgdGhlIGZvcm0gb2Ygd2hpY2ggaXMgYXR0YWNoZWQgYXMgRXhoaWJpdCBGIGhlcmV0byBhbmQsIGV4Y2VwdCBmb3IgYW4gYXNzaWduZWUgcHVyc3VhbnQgdG8gU2UNCmN0aW9uIDE3LjQsIHN1Y2ggb3RoZXIgYW1lbmRtZW50cyBhcyB0aGUgQ28tT3duZXJzIGhhdmUgZGV0ZXJtaW5lZCBtYXkgYmUgbmVjZXNzYXJ5Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggOC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IA0KTWVhc3VyZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIFRoZSBmaXJzdCBwYXJhZ3JhcGggb2YgU2VjdGlvbiA1LjEgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHR4MjE2MFx0eDEyNTEwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDUuMVx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1ODc3MDUgTWVhc3VyZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIEVuZXJneSB0cmFuc21pdHRlZCBvbiB0aGUgVHJhbnNtaXNzaW9uIExpbmUgc2hhbGwgDQpiZSBtZWFzdXJlZCBmb3IgZWFjaCBGYWNpbGl0eSBpbiBlYWNoIFNldHRsZW1lbnQgSW50ZXJ2YWwgYnkgdGhlIHJldmVudWUgbWV0ZXIgZm9yIHN1Y2ggRmFjaWxpdHkuICBIb3dldmVyLCBpZiBhbmQgZm9yIHRoZSBwZXJpb2QgdGhhdCB0aGVyZSBpcyBhbiBlcXVpcG1lbnQgZmFpbHVyZSBvciBvdGhlciBldmVudCB0aGF0IHByZXZlbnRzIG9yIGludGVyZmVyZXMgd2l0aCB0aGUgb3BlcmF0aW9uIG9mIHRoZSBzZXBhcmF0ZSBtZXRlcmluZywgZW4NCmVyZ3kgdHJhbnNtaXR0ZWQgb24gdGhlIFRyYW5zbWlzc2lvbiBMaW5lIHNoYWxsIGJlIG1lYXN1cmVkIGFuZCBhbGxvY2F0ZWQgYmV0d2VlbiB0aGUgRmFjaWxpdGllcyBpbiBlYWNoIFNldHRsZW1lbnQgSW50ZXJ2YWwgaW4gcHJvcG9ydGlvbiB0byB0aGVpciByZXNwZWN0aXZlIE1ldGVyZWQgRW5lcmd5IGFzIG1lYXN1cmVkIGJ5IHRoZSBGYWNpbGl0eVxycXVvdGUgDQpzIGNoZWNrIG1ldGVyIG9yIG90aGVyIGF2YWlsYWJsZSBtZXRlcihzKSBkdXJpbmcgc3VjaCBTZXR0bGVtZW50IEludGVydmFsIGFzIHNldCBmb3J0aCBiZWxvdy4gIEluIHRoZSBldmVudCB0aGF0IG5vIG1ldGVyIGRhdGEgaXMgYXZhaWxhYmxlLCBzdWNoIGFsbG9jYXRpb24gc2hhbGwgYmUgbWFkZSBpbiBhIHJlYXNvbmFibGUgbWFubmVyIG9uIHRoZSBiYXNpcyBvZiB3aGF0ZXZlciBkYXRhIGFuZCBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDkuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODIxNTM4OSANCkVuZ2FnZW1lbnQgb2YgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIFNlY3Rpb24gNi4xIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA2LjFcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTg3NzA1IEVuZ2FnZW1lbnQgb2YgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KLiAgVGhlIENvLU93bmVycyBoZXJlYnkgZW5nYWdlIE9wZXJhdG9yIHRvIG1hbmFnZSwgb3BlcmF0ZSwgbWFpbnRhaW4gYW5kIHJlcGFpciB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHRvIGFkbWluaXN0ZXIgYW5kIHRha2UgYWxsIG5lY2Vzc2FyeSBhY3Rpb25zIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCB0bw0KIGFkbWluaXN0ZXIgYW5kIHRha2UgYWxsIG5lY2Vzc2FyeSBhY3Rpb25zIHVuZGVyIHRoZSBTaGFyZWQgUGVybWl0cywgYW5kIHRvIHBlcmZvcm0gb3RoZXIgZHV0aWVzIHBlcnRhaW5pbmcgdG8gdGhlIFNoYXJlZCBBc3NldHMgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggTyZNIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopLCBhbGwgYXMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50OyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCB0byB0aGUgZXh0ZW50IG9uZSBvciBtb3JlIFBlcm1pdHMgZG8gbm90IA0KYXBwbHkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBidXQgaW5zdGVhZCBhcHBseSB0byB0aGUgRmFjaWxpdGllcyBvciBvdGhlciBwcm9wZXJ0eSBzZXBhcmF0ZWx5IG93bmVkIGJ5IG1vcmUgdGhhbiBvbmUgb2YgdGhlIENvLU93bmVycywgT3BlcmF0b3Igd2lsbCBzdGlsbCBhZG1pbmlzdGVyIGFuZCB0YWtlIGFsbCBuZWNlc3NhcnkgYWN0aW9ucyB1bmRlciBzdWNoIHNlcGFyYXRlIFBlcm1pdHMsIGJ1dCB0aGUgYWRtaW5pc3RyYXRpb24gb2YgDQphDQpuZCBhY3Rpb25zIHRha2VuIHVuZGVyIHN1Y2ggc2VwYXJhdGUgUGVybWl0cyBzaGFsbCBub3QgYmUgaW5jbHVkZWQgaW4gTyZNIFNlcnZpY2VzLCBidXQgc2hhbGwgYmUgcGFpZCBmb3Igc2VwYXJhdGVseSBieSB0aGUgQ28tT3duZXJzIGJlbmVmaXRpbmcgZnJvbSBzdWNoIFNoYXJlZCBQZXJtaXRzIGluIHByb3BvcnRpb24gdG8gdGhlaXIgcmVzcGVjdGl2ZSBiZW5lZml0cy4gIE9wZXJhdG9yIGFjY2VwdHMgc3VjaCBlbmdhZ2VtZW50IGFuZCBhZ3INCmVlcyB0byBwZXJmb3JtIHN1Y2ggZHV0aWVzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgaGVyZW9mLiAgT3BlcmF0b3JccnF1b3RlIA0KcyBhdXRob3JpdHkgc2hhbGwgYmUgbGltaXRlZCB0byBwZXJmb3JtaW5nIHRoZSBPJk0gU2VydmljZXMgYW5kIHN1Y2ggb3RoZXIgc2VydmljZXMgYXMgbWF5IGJlIGFwcHJvdmVkIGJ5IGFsbCBvZiB0aGUgQ28tT3duZXJzIGFuZCBzaGFsbCBiZSBmdXJ0aGVyIGxpbWl0ZWQgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiA2LjE2Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTAuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODIxNTM4OSANClNjaGVkdWxlZCBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA2LjQgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDYuNFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMjg5MDc5IFNjaGVkdWxlZCBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgT3BlcmF0b3Igc2hhbGwgc2NoZWR1bGUgbWFpbnRlbmFuY2UgYW5kIGFueSBwbGFubmVkIG91dGFnZXMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHNvIGFzIHRvIG1pbmltaXplIGludGVyZmVyZW5jZSB3aXRoIHRoZSBDby1Pd25lcnNccnF1b3RlIA0KIHNjaGVkdWxlZCBlbmVyZ3kgZGVsaXZlcmllcy4gIE1haW50ZW5hbmNlIGFuZCBhbnkgcGxhbm5lZCBvdXRhZ2VzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBzaGFsbCBiZSBzY2hlZHVsZWQsIHRvIHRoZSBtYXhpbXVtIGV4dGVudCBwb3NzaWJsZSwgZHVyaW5nIHNjaGVkdWxlZCBtYWludGVuYW5jZSBvdXRhZ2VzIG9mIHRoZSBDby1Pd25lcnNccnF1b3RlICBGYWNpbGl0aWVzLiAgRWFjaCBDby1Pd25lciB3aWxsIHByb3ZpZGUgdA0KbyB0aGUgT3BlcmF0b3IgYW5kIHRoZSBvdGhlciBDby1Pd25lcnMgbm8gbGF0ZXIgdGhhbiBmaWZ0ZWVuICgxNSkgQnVzaW5lc3MgRGF5cyBhZnRlciBKYW51YXJ5XH4xIG9mIGVhY2ggeWVhciBhIHNjaGVkdWxlIG9mIHBsYW5uZWQgbWFpbnRlbmFuY2Ugb3V0YWdlcyBvbiBzdWNoIENvLU93bmVyXHJxdW90ZSANCnMgRmFjaWxpdHkgZm9yIHRoZSBzdWJzZXF1ZW50IHR3ZWx2ZS0gbW9udGggcGVyaW9kLiAgU2NoZWR1bGVkIG91dGFnZXMgb2YgdGhlIFNoYXJlZCBGYWMNCmlsaXRpZXMgd2lsbCBiZSBzdWJqZWN0IHRvIHRoZSBhcHByb3ZhbCBvZiBhbGwgYWZmZWN0ZWQgQ28tT3duZXJzLCBzdWNoIGFwcHJvdmFsIG5vdCB0byBiZSB1bnJlYXNvbmFibHkgd2l0aGhlbGQuICBPcGVyYXRvciB3aWxsIHNlZWsgdG8gbGltaXQgdGhlIGR1cmF0aW9uIG9mIGFueSBvdXRhZ2UsIHBsYW5uZWQgb3IgdW5wbGFubmVkLCB0byB0aGUgbWF4aW11bSBleHRlbnQgcmVhc29uYWJseSBwb3NzaWJsZSBjb25zaXN0ZW50IHdpdGggQXBwbA0KaWNhYmxlIExhd3MgYW5kIEdvb2QgVXRpbGl0eSBQcmFjdGljZS4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDExLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyMTUzODkgDQpEaXNwdXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA2LjEyIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA2LjEyXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQyODkwNzkgRGlzcHV0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIElmIGEgQ28tT3duZXIgZGlzcHV0ZXMgdGhlIGFjY3VyYWN5IG9mIGFsbCBvciBhbnkgcG9ydGlvbiBvZiBhbiBpbnZvaWNlLCBzdWNoIENvLU93bmVyIHNoYWxsLCBuZXZlcnRoZWxlc3MsIHBheSB0aGUgZnVsbCBhDQptb3VudCBvZiB0aGUgaW52b2ljZSAoaW5jbHVkaW5nIHRoZSBkaXNwdXRlZCBwb3J0aW9uKSBhbmQgc3VibWl0IHRvIE9wZXJhdG9yIGEgd3JpdHRlbiBzdGF0ZW1lbnQgZGV0YWlsaW5nIHRoZSBpdGVtcyBkaXNwdXRlZDsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgaWYgdGhlIHRoaXJkIHBhcnR5IGNvbnRyYWN0IHVuZGVyIHdoaWNoIHRoZSBjb3N0cyBhbmQgZXhwZW5zZXMgaW52b2ljZWQgd2VyZSBpbmN1cnJlZCBwZXJtaXRzIHRoZSB3aXRoaG8NCmwNCmRpbmcgb2YgZGlzcHV0ZWQgcGF5bWVudHMsIGFuZCBpZiBPcGVyYXRvciBoYXMgbm90IGFscmVhZHkgcGFpZCBzdWNoIHRoaXJkIHBhcnR5IGZvciBzdWNoIGNvc3RzIGFuZCBleHBlbnNlcywgYSBDby1Pd25lciBtYXkgZGlzcHV0ZSB0aGUgYWNjdXJhY3kgb2YgYWxsIG9yIGEgcGFydCBvZiBhbiBpbnZvaWNlIGJ5IHN1Ym1pdHRpbmcgYSB3cml0dGVuIG5vdGljZSBvZiBkaXNwdXRlIGFuZCBhIHdyaXR0ZW4gc3RhdGVtZW50IGRldGFpbGluZyB0aA0KZQ0KIGl0ZW1zIGRpc3B1dGVkIGFuZCBtYXkgd2l0aGhvbGQgcGF5bWVudCB0byB0aGUgZXh0ZW50IGFsbG93ZWQgdW5kZXIgdGhlIHRoaXJkIHBhcnR5IGNvbnRyYWN0IHVudGlsIHRoZSBlYXJsaWVyIG9mIHRoZSByZXNvbHV0aW9uIG9mIHRoZSBkaXNwdXRlIG9yIHRoZSB0aW1lIHdoZW4gcGF5bWVudCBtYXkgbm8gbG9uZ2VyIGJlIHdpdGhoZWxkIHVuZGVyIHRoZSB0aGlyZCBwYXJ0eSBjb250cmFjdCwgYXQgd2hpY2ggcG9pbnQgdGhlIENvLU93bmVyDQogDQpkaXNwdXRpbmcgdGhlIGFjY3VyYWN5IG9mIGFuIGludm9pY2Ugc2hhbGwgcHJvbXB0bHkgcGF5IHRoZSBkaXNwdXRlZCBhbW91bnQgdG8gT3BlcmF0b3IgYXMgcHJvdmlkZWQgYWJvdmUuICBJZiB0aGUgQ28tT3duZXIgYW5kIE9wZXJhdG9yIGFyZSB1bmFibGUgdG8gcmVzb2x2ZSB0aGUgZGlzcHV0ZWQgaXRlbXMsIHRoZSBtYXR0ZXIgd2lsbCBiZSByZXNvbHZlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGRpc3B1dGUgcmVzb2x1dGlvbiBwcm92aXMNCmlvbnMgaW4gRXhoaWJpdCBFLiAgSWYgdGhlIENvLU93bmVyIHByZXZhaWxzIHdpdGggcmVzcGVjdCB0byB0aGUgZGlzcHV0ZWQgYW1vdW50cywgT3BlcmF0b3Igc2hhbGwgcmVmdW5kIHRoZSBDby1Pd25lciB0aGUgZGlzcHV0ZWQgYW1vdW50cywgaW5jbHVkaW5nIGludGVyZXN0IG9uIHRoZSBkaXNwdXRlZCBhbW91bnRzIGF0IHRoZSBMYXRlIFBheW1lbnQgUmF0ZS4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEyLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCANClJpc2sgb2YgTG9zczsgSW5kZW1uaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuIFNlY3Rpb24gNi4xNSBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgDQo2LjE1LjEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIA0KQXMgYmV0d2VlbiB0aGUgQ28tT3duZXJzIGFuZCB0aGUgT3BlcmF0b3IsIHRoZSBDby1Pd25lcnMgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIHRoZSByaXNrIG9mIGxvc3MgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIGFueSBwb3J0aW9uIHRoZXJlb2YgZHVyaW5nIHRoZSByZXBhaXIsIG1hbmFnZW1lbnQsIG9wZXJhdGlvbiBhbmQgbWFpbnRlbmFuDQpjZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHJlZ2FyZGxlc3Mgb2YgY2F1c2UsIGV4Y2VwdCB0byB0aGUgZXh0ZW50IHN1Y2ggbG9zcyBpcyBjYXVzZWQgaW4gd2hvbGUgb3IgaW4gcGFydCBieSB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBncm9zcyBuZWdsaWdlbmNlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyANCiBmcmF1ZCBvciB3aWxsZnVsIG1pc2NvbmR1Y3Qgb2YgdGhlIE9wZXJhdG9yLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIDYuMTUuMiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIE9wZXJhdG9yIHNoYWxsIG5vdCBiZSBsaWFibGUgdG8gYW55IENvLU93bmVyIGZvciBhbnkgYWN0IHBlcmZvcm1lDQpkIGluIGdvb2QgZmFpdGggYnkgT3BlcmF0b3IgaW4gdGhlIGRpc2NoYXJnZSBvZiBpdHMgZHV0aWVzIGhlcmV1bmRlciBhcyBPcGVyYXRvciBvciBpbiB0aGUgZXhlcmNpc2Ugb2YgaXRzIHBvd2VycyBhbmQgYXV0aG9yaXR5IGhlcmV1bmRlciBhcyBPcGVyYXRvciwgaW5jbHVkaW5nIGRhbWFnZXMgYXJpc2luZyBvdXQgb2YgYW55IGN1cnRhaWxtZW50IG9mIHVzZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgdGhlIGRpc2Nvbm5lY3Rpb24gb2YNCiwgb3IgdGhlIGVsZWN0aW9uIG5vdCB0byBkaXNjb25uZWN0LCBhIEZhY2lsaXR5IGZyb20gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB1bmxlc3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KIGhhcyBtYXRlcmlhbGx5IGJyZWFjaGVkIGl0cyBvYmxpZ2F0aW9ucyBoZXJldW5kZXIgb3IgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgJ3MgYWN0cyBvciBvbWlzc2lvbnMgY29uc3RpdHV0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLCBncm9zcyBuZWdsaWdlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgIGZyYXVkIG9yIHdpbGxmdWwgbWlzY29uZHVjdC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyA2LjE1LjMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIEVhY2ggQ28tT3duZXIgc2gNCmFsbCwgcHJvIHJhdGEgaW4gYWNjb3JkYW5jZSB3aXRoIGl0cyBQcm9wb3J0aW9uYXRlIEludGVyZXN0LCBpbmRlbW5pZnkgYW5kIGhvbGQgaGFybWxlc3MgT3BlcmF0b3IgYW5kIGl0cyBlbXBsb3llZXMgYW5kIGFnZW50cywgZnJvbSBhbnkgY2xhaW0sIGxvc3MsIGxpYWJpbGl0eSBvciBkYW1hZ2UgaW5jdXJyZWQgYnkgcmVhc29uIG9mIGFueSBhY3QgcGVyZm9ybWVkIG9yIG9taXR0ZWQgdG8gYmUgcGVyZm9ybWVkIGJ5IGl0IGluIGl0cyByZWFzbw0KbmFibGUganVkZ21lbnQsIGluIGdvb2QgZmFpdGgsIG9yIGluIHJlYXNvbmFibGUgcmVsaWFuY2Ugb24gYWR2aWNlIG9mIE9wZXJhdG9yJ3MgYXR0b3JuZXlzIG9yIGFjY291bnRhbnRzLCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgdGhpcyBBZ3JlZW1lbnQgKG90aGVyIHRoYW4gYXMgYSByZXN1bHQgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4ICBncm9zcyBuZWdsaWdlbmNlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyAgZnJhdWQgb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE2NTI2NDc4IA0KYSBicmVhY2ggYnkgT3BlcmF0b3Igb2YgaXRzIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50LCB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCBvciB0aGUgTEdJQSBDby1UZW5hbmN5IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyANCiksIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5cycgZmVlcyBpbmN1cnJlZCBieSBPcGVyYXRvciBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGRlZmVuc2Ugb2YgYW55IGFjdGlvbiBiYXNlZCBvbiBhbnkgc3VjaCBhbGxlZ2VkIGFjdCBvci4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyMTUzODkgDQpMaW1pdGF0aW9ucyBvbiBPcGVyYXRvclxycXVvdGUgcyBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIFNlY3Rpb24gNi4xNiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNi4xNlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTY0NzUwNzggTGltaXRhdGlvbnMgb24gT3BlcmF0b3JccnF1b3RlIHMgQXV0aG9yaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgaGVyZWluIHRvIHRoZSBjb250cmFyeSBhbmQgaW4gYWRkaXRpb24gdG8gdGhlIA0KbGltaXRhdGlvbnMgc2V0IGZvcnRoIGluIFNlY3Rpb24gOS4yLCBPcGVyYXRvciBzaGFsbCBoYXZlIG5vIGF1dGhvcml0eSB0byBhbmQgc2hhbGwgbm90IChpKSBhbWVuZCwgYXNzaWduIG9yIHRlcm1pbmF0ZSBhbnkgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnQgb3IgZW50ZXIgaW50bywgYW1lbmQsIGFzc2lnbiBvciB0ZXJtaW5hdGUgYW55IG90aGVyIGNvbnRyYWN0IG9yIGFncmVlbWVudCBvbiBiZWhhbGYgb2YgdGhlIENvLU93bmVycywgKGlpDQopDQogY3JlYXRlIGFueSBsaWVuIG9yIHNlY3VyaXR5IGludGVyZXN0IG9uIG9yIGluIGFueSBTaGFyZWQgRmFjaWxpdGllcywgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgYW55IG90aGVyIGFzc2V0IG9mIGFueSBvciBhbGwgb2YgdGhlIENvLU93bmVycywgZXhjZXB0IGFzIGV4cHJlc3NseSBwZXJtaXR0ZWQgdW5kZXIgU2VjdGlvbiAxMC42LCAoaWlpKSBidXksIHNlbGwsIGNvbnZleSBvciBvdGhlcndpc2UgZGlzcG9zZSBvZiBhbnkgU2hhcmVkIEZhY2kNCmwNCml0aWVzIG9yIFNoYXJlZCBSZWFsIFByb3BlcnR5LCAoaXYpIGluY3VyIGFueSBkZWJ0IG9yIG90aGVyIG9ibGlnYXRpb25zIG9uIGJlaGFsZiBvZiBhbnkgb3IgYWxsIG9mIHRoZSBDby1Pd25lcnMsIGV4Y2VwdCBzaG9ydCB0ZXJtIGFjY291bnRzIHBheWFibGUgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBPJk0gU2VydmljZXMgb3IgYXMgcHJvdmlkZWQgaW4gYSBzZXBhcmF0ZSB3cml0dGVuIGFncmVlbWVudCBhbW9uZyBPcGVyYXRvciBhbmQgYWxsIA0Kbw0KZiB0aGUgQ28tT3duZXJzLCAodikgZW50ZXIgaW50byBsZWFzZXMgb3Igc3VibGVhc2VzIG9mIG9yIGdyYW50IGxpY2Vuc2VzIG9yIG90aGVyIHJpZ2h0cyB3aXRoIHJlc3BlY3QgdG8gYW55IFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNoYXJlZCBSZWFsIEVzdGF0ZSwgb3IgKHZpKSB0ZXJtaW5hdGUgb3IgcmVkdWNlIGFueSBpbnN1cmFuY2UgY292ZXJhZ2UgYmVsb3cgdGhhdCB3aGljaCBpcyByZXF1aXJlZCB1bmRlciB0aGUgTWF0ZXJpYWwgUHJvamVjDQp0IEFncmVlbWVudHMsIGV4Y2VwdCBpbiBlYWNoIGNhc2Ugd2l0aCB0aGUgd3JpdHRlbiBhcHByb3ZhbCBvZiBhbGwgb2YgdGhlIENvLU93bmVycy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE0Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCANClJlcGxhY2VtZW50IG9mIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgU2VjdGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDYuMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzc5MjMzMyAgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IDYuMTdcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDM0MzgwNzggUmVwbGFjZW1lbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzc5MjMzMyBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IC4gfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIE9wZXJhdG9yIG1heSBiZX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICByZW1vdmVkIHVwb24gdGhlIHZvdGUsIHdpdGhvdXQgdGhlIHBhcnRpY2lwYXRpb24gb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDgxNTEwNSAgQ28tT3duZXIgfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCB0aGF0IGlzfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDgxNTEwNSAgT3BlcmF0b3IgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggYXQgc3VjaCB0aW1lLCBvZiAoaSkgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIA0KXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIHR3by10aGlyZHMgb2YgdGhlIENvLU93bmVycyAoYmFzZWQgb24gdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCAgb3IgKGlpKSBhIG1ham9yaXR5IG9mIHRoZSBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIA0KXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMDE5MTIxIChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggKSwgdXBvbiB0aGVpciByZWFzb25hYmxlIGRldGVybWluYXRpb24gfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMDE5MTIxIHRoYXQgdGh9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCBlcmUgaXMgQ2F1c2UgZm9yIHJlbW92YWwuIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBjb250YWluZWQgaW4gdGhpcyBBZ3JlZW1lbnQgdG8gdGhlIGNvbnRyYXJ5LCB0aGUgYXBwb2ludG1lbnQgb2YgYX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzc5MjMzMyBueSBuZXcgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCAgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHdoZXRoZXIgYXMgYSByZXN1bHQgb2YgYW55IHJlbW92YWwgb2YgdGhlIGV4aXN0aW5nIE9wZXJhdG9yIHVuZGVyIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIFNlY3Rpb24gNi4xN317XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICBvciBvdGhlcndpc2UgKGluY2x1ZGluZyBhcyBhIHJlc3VsdCBvZiBhIHRyYW5zZmVyIG9yIGFzc2lnbm1lbnQgdW5kZXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIFNlY3Rpb24gMTcuNH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzICBtdXN0IGJlIGFwcHJvdmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxjZjFcaW5zcnNpZDM0MzgwNzggYSBtYWpvcml0eX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgIHZvdGUgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IA0KICh3aXRob3V0IHRoZSBwYXJ0aWNpcGF0aW9uLCBmb3IgdGhlIGF2b2lkYW5jZSBvZiBkb3VidCwgb2YgYW55IENvLU93bmVyIHdoaWNoIGlzIGJlaW5nIHJlbW92ZWQgYXMgdGhlIE9wZXJhdG9yIHVuZGVyIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzc5MjMzMyBTZWN0aW9uIDYuMTd9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4ICkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NjM2NzY4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTUuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODIxNTM4OSANCkNvbmRlbW5hdGlvbiBBd2FyZHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIFNlY3Rpb24gOS42IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA5LjZcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0Mzg4NDEgQ29uZGVtbmF0aW9uIEF3YXJkc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgQW4NCnkgY29uZGVtbmF0aW9uIG9yIHNpbWlsYXIgYXdhcmRzIHRvIHdoaWNoIHRoZSBDby1Pd25lcnMgc2hhbGwgYmVjb21lIGVudGl0bGVkIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzIG9yIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgc2hhbGwgYmUgdXNlZCB0byByZXBhaXIsIHJlc3RvcmUgb3IgcmVwbGFjZSB0aGUgYWZmZWN0ZWQgU2hhcmVkIFJlYWwgUHJvcGVydHkgYW5kL29yIFNoYXJlZCBGYQ0KYw0KaWxpdGllcyB1bmxlc3Mgc3VjaCByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50IGlzIG5vdCBmZWFzaWJsZSwgdGhlIGNvbmRlbW5hdGlvbiBvciBvdGhlciBhd2FyZCBpcyBpbnN1ZmZpY2llbnQgdG8gY29tcGxldGUgc3VjaCByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50LCBvciBhbGwgb2YgdGhlIENvLU93bmVycyBhZ3JlZSBvdGhlcndpc2UgaW4gd3JpdGluZy4gIElmIHN1Y2ggY29uZGVtbmF0aW9uIG9yIG90aGVyDQogDQphd2FyZHMgYXJlIG5vdCB1c2VkIHRvIHJlcGFpciwgcmVzdG9yZSBvciByZXBsYWNlIHRoZSBhZmZlY3RlZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQvb3IgU2hhcmVkIEZhY2lsaXRpZXMsIHRoZXkgc2hhbGwgYmUgZGl2aWRlZCBhbW9uZyB0aGUgQ28tT3duZXJzIGluIHByb3BvcnRpb24gdG8gdGhlaXIgcmVzcGVjdGl2ZSBPd25lcnNoaXAgSW50ZXJlc3RzIGluIHRoZSBhZmZlY3RlZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQvb3IgU2hhcmUNCmQNCiBGYWNpbGl0aWVzLCBwcm92aWRlZCB0aGF0IGlmIHN1Y2ggc3VtcyBhcmUgaW4gcmVpbWJ1cnNlbWVudCBvZiBvciBjb21wZW5zYXRpb24gZm9yIHNwZWNpZmljIGNvc3RzIG9yIGRhbWFnZXMgaW5jdXJyZWQgYnkgdGhlIENvLU93bmVycyBpbiByYXRpb3MgZGlmZmVyZW50IGZyb20gdGhhdCBvZiB0aGVpciBPd25lcnNoaXAgSW50ZXJlc3RzLCB0aGVuIHN1Y2ggZGlmZmVyZW50IHJhdGlvcyBzaGFsbCBiZSB1c2VkIGluIGFwcG9ydGlvbm1lbnQgbw0KZg0KIHN1Y2ggc3VtcyBhbW9uZyB0aGUgQ28tT3duZXJzLiAgSWYgdGhlIENvLU93bmVycyBhcmUgdW5hYmxlIHRvIGFncmVlIG9uIHdoZXRoZXIgb3Igbm90IGEgcmVwYWlyLCByZXN0b3JhdGlvbiBvciByZXBsYWNlbWVudCBpcyBmZWFzaWJsZSwgdGhlIGNvbmRlbW5hdGlvbiBvciBvdGhlciBhd2FyZCBzaGFsbCBiZSBkaXZpZGVkIGFtb25nIGFuZCBkaXN0cmlidXRlZCB0byB0aGUgQ28tT3duZXJzIGFzIHByb3ZpZGVkIGluIHRoZSBwcmVjZWRpbmcgDQpzDQplbnRlbmNlLCBhbmQgYSBDby1Pd25lciB3aXNoaW5nIHRvIGRvIHNvIG1heSByZXBhaXIsIHJlc3RvcmUgb3IgcmVwbGFjZSB0aGUgYWZmZWN0ZWQgU2hhcmVkIFJlYWwgUHJvcGVydHkgYW5kL29yIFNoYXJlZCBGYWNpbGl0aWVzIGZvciBpdHMgb3duIGFjY291bnQgYW5kIHVzZSwgYnV0IGF0IGl0cyBvd24gZXhwZW5zZSwgYW5kIG5vIG90aGVyIENvLU93bmVyIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHVzZSBzdWNoIHJlcGFpcmVkLCByZXN0b3INCmVkIG9yIHJlcGxhY2VkIHByb3BlcnR5IG9yIGZhY2lsaXRpZXMgdW5sZXNzIGFuZCB1bnRpbCBpdCBoYXMgcmVpbWJ1cnNlZCB0aGUgQ28tT3duZXIgdGhhdCBlZmZlY3RlZCB0aGUgcmVwYWlyLCByZXN0b3JhdGlvbiBvciByZXBsYWNlbWVudCBmb3IgdGhlIG90aGVyIENvLU93bmVyXHJxdW90ZSANCnMgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZiB0aGUgY29zdHMgb2Ygc3VjaCByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50LiAgQW55IHByb3BlcnR5IG9yDQogZmFjaWxpdGllcyB3aG9zZSByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50IGlzIHBhaWQgZm9yIGJ5IGxlc3MgdGhhbiBhbGwgb2YgdGhlIENvLU93bmVycyBzaGFsbCBub3QgYmVjb21lIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZC9vciBTaGFyZWQgRmFjaWxpdGllcywgYXMgYXBwbGljYWJsZSwgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgdW5sZXNzIGFuZCB1bnRpbCBzdWNoIGNvc3RzIGhhdmUgYmVlbiBwYWlkIChpbmNsdWRpbmcgcmUNCmltYnVyc2VtZW50cykgYnkgYWxsIENvLU93bmVycyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDMyMTMxNDMgLlx0YWIgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IERlZmF1bHQgYnkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gU2VjdGlvbiAxMy4xLjQgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwMzY4MjE3IDEzLjEuNCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgDQpcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAzNjgyMTcgRGVmYXVsdCBieSBPcGVyYXRvci59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwMzY4MjE3ICBPcGVyYXRvciBmYWlscyB0byBwZXJmb3JtIGFueSBvZiBpdHMgbWF0ZXJpYWwgb3ANCmVyYXRpb24sIG1haW50ZW5hbmNlLCByZXBhaXIgb3Igb3RoZXIgb2JsaWdhdGlvbnMgaW4gdGhpcyBBZ3JlZW1lbnQsfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IG9yIHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwMzY4MjE3ICwgYW5kIHN1Y2ggZmFpbHVyZSBpcyBub3QgY3VyZWQgd2l0aGluIHRlbiAoMTApIGRheXMgZm9sbG93aW5nIHdyaXR0ZW4gbm90aWNlIGJ5IGEgQ28tT3duZXI7IHByb3ZpZGVkIHRoYXQsIHRoYXQgaWYgc3VjaCBmYWlsDQp1cmUgYnkgT3BlcmF0b3IgY3JlYXRlcyBhbiBFbWVyZ2VuY3kgQ29uZGl0aW9uIG9yIG1hdGVyaWFsbHkgaW50ZXJmZXJlcyB3aXRoIGEgQ28tT3duZXIncyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGluIFNoYXJlZCBGYWNpbGl0aWVzIGluIHdoaWNoIGl0IGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QsIG9yIG9wZXJhdGlvbiBvZiBpdHMgRmFjaWxpdHksIG9ubHkgc3VjaCBhZHZhbmNlIHdyaXR0ZW4gbm90aWNlLCBpZiBhbnksIGFzIG1heSBiZSANCnINCmVhc29uYWJseSBwcmFjdGljYWJsZSB1bmRlciB0aGUgY2lyY3Vtc3RhbmNlcyBzaGFsbCBiZSByZXF1aXJlZCwgYnV0IGlmIHN1Y2ggYWR2YW5jZSBub3RpY2UgaXMgbm90IHByb3ZpZGVkLCB3cml0dGVuIG5vdGljZSB0aGVyZW9mIHNoYWxsIGJlIHByb3ZpZGVkIHByb21wdGx5IHRoZXJlYWZ0ZXIgYnkgdGhlIENvLU93bmVyIHRvIE9wZXJhdG9yOyBwcm92aWRlZCBmdXJ0aGVyIHRoYXQgaWYgdGhlIGRlZmF1bHQgaXMgbm90IHJlYXNvbmFibHkgYw0KYXBhYmxlIG9mIGJlaW5nIGN1cmVkIHdpdGhpbiB0ZW4gKDEwKSBkYXlzLCB0aGVuIHRoZSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAzNjgyMTcgIG1heSBiZSBhbGxvd2VkIHN1Y2ggbG9uZ2VyIHBlcmlvZCBhcyB0aGUgQ28tT3duZXJzfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCAgbXV0dWFsbHkgYWdyZWUgKG5vdCB0byBleGNlZWQgc2l4dHkgKDYwKX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAzNjgyMTcgDQogZGF5cykgYXMgbWF5IGJlIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzIHRvIGN1cmUgc3VjaCBmYWlsdXJlIHNvIGxvbmcgYXMgdGhlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM2ODIxNyANCiBpcyBwdXJzdWluZyBhIGN1cmUgd2l0aCByZWFzb25hYmxlIGRpbGlnZW5jZX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDczNTk0MiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE3Llx0YWIgDQpUaGUgZmlyc3Qgc2VudGVuY2Ugb2YgU2VjdGlvbiAxMy4yLjMgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMTk3NDM4IEluIGFkZGl0aW9uIHRvIHRoZSByZW1lZGllcyBwcm92aWRlZCBpbiBTZWN0aW9uIDEzLjIuMSBhbmQgMTMuMi4yLCBpZiB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBpcyB0aGUgT3BlcmF0b3IsIHRoZSBvdGhlciBDby1Pd25lcnMgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGlcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTIxOTc0MzggDQoiTm9uLURlZmF1bHRpbmcgQ28tT3duZXJzIikgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMjE5NzQzOCBzaGFsbCBoYXZlIHRoZSByaWdodCwgYnkgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggYSBtYWpvcml0eX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMjE5NzQzOCAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggdm90ZSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMTk3NDM4IG9mIHRoZSBOb24tRGVmYXVsdGluZyBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMTk3NDM4IChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKSwgdG8gcmVtb3ZlIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIGZyb20gaXRzIHBvc2l0aW9uIGFzIE9wZXJhdG9yIGFuZCB0byBhcHBvaQ0KbnQgb25lIG9mIHRoZW1zZWx2ZXMgYXMgdGhlIE9wZXJhdG9yIGZvciBwdXJwb3NlcyBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE4Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBBc3NpZ25tZW50fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gU2VjdGlvbiAxNy40fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgMTcuNCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgQXNzaWdubWVudC59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgDQogVGhpcyBBZ3JlZW1lbnQgd2lsbCBiZSBiaW5kaW5nIG9uIGFuZCBpbnVyZSB0byB0aGUgYmVuZWZpdCBvZiB0aGUgQ28tT3duZXJzIGFuZCB0aGVpciByDQplc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgcGVybWl0dGVkIGFzc2lnbnMuIEFsbCB0cmFuc2ZlcnMsIGNvbnZleWFuY2VzLCBhc3NpZ25tZW50cyBvZiBTaGFyZWQgRmFjaWxpdGllcyBvciBTaGFyZWQgUmVhbCBwcm9wZXJ0eSB3aWxsIGJlIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHRoaXMgQWdyZWVtZW50LCB3aGV0aGVyIG9yIG5vdCBleHBsaWNpdGx5IHN0YXRlZC4gRWFjaCBDby1Pd25lciBtYXksIGF0IGFueSB0aW0NCmUgYW5kIGZyb20gdGltZSB0byB0aW1lLCB1cG9uIG5vdGljZSBidXQgd2l0aG91dCB0aGUgb3RoZXIgQ28tT3duZXJzJyBjb25zZW50IG9yIGFwcHJvdmFsLH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgDQooaSkgc3ViamVjdCB0byBjb21wbGlhbmNlIHdpdGggU2VjdGlvbiA5LjcsIHRyYW5zZmVyIG9yIGFzc2lnbiB0aGlzIEFncmVlbWVudCBhbmQgdGhlIHJpZ2h0cyBhbmQgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgdG8gYSBQZXJzb24gdGhhdCBhY3F1aXJlcyBhbGwgb3Igc3ViDQpzdGFudGlhbGx5IGFsbCBvZiBzdWNoIENvLU93bmVyJ3MgYXNzZXRzLCBpbmNsdWRpbmcgc3VjaCBDby1Pd25lcidzIFNoYXJlZCBBc3NldHMsIGFuZCBhZ3JlZXMgdG8gYXNzdW1lIGFsbCBvYmxpZ2F0aW9ucyBvZiB0aGF0IENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50IChhIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcaVxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NjQwMzg3IA0KIlBlcm1pdHRlZCBBc3NpZ25lZSIpOyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgYW5kL29yIChpaSkgY3JlYXRlIExlbmRlcidzIExpZW5zIHB1cnN1YW50IHRvIEFydGljbGUgWElWfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggLCBwcm92aWRlZCwgDQp0aGF0LCBmb3IgdGhlIGF2b2lkYW5jZSBvZiBkb3VidCwgYW55IHN1Y2ggYXNzaWdubWVudCBzaGFsbCBpbiBhbGwgZXZlbnRzIGJlIHN1YmplY3QgdG8gY29tcGxpYW5jZSB3aXRoIFNlY3Rpb24gNi4xNyBhbmQgbm8gYXNzaWduZWUgdGhhdCBhc3N1bWVzIGFueSBDby1Pd25lclxycXVvdGUgDQpzIChpbmNsdWRpbmcgYW55IENvLU93bmVyIHRoYXQgaXMgY3VycmVudGx5IE9wZXJhdG9yKSBpbnRlcmVzdCBpbiB0aGlzIEFncmVlbWVudCBzaGFsbCBiZWNvbWUgT3BlcmF0b3IsIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggU2VjdGlvbiA2LjE3fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NjQwMzg3IA0KLiBPdGhlcndpc2UsIG5vIENvLU93bmVyIHNoYWxsIHRyYW5zZmVyIG9yIGFzc2lnbiBhbGwgb3IgYW55IHBhcnQgb2YgaXRzIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QgaW4gb3IgdG8gdGhpcyBBZ3JlZW1lbnQgb3IgYW55IG9mIGl0cyByaWdodHMgaGVyZXVuZGVyIHdpdGhvdXQgdGhlIHByaW9yIGNvbnNlbnQgb2YgYWxsIG9mIHRoZSBvdGhlciBDby1Pd25lcnM7IA0KcHJvdmlkZWQsIGZ1cnRoZXIsIHRoYXQgaWYgRkVSQyBhcHByb3ZhbCBpcyByZXF1aXJlZCBmb3IgYW55IHN1Y2ggYXNzaWdubWVudCBvciB0cmFuc2ZlciwgaXQgc2hhbGwgbm90IGJlIGVmZmVjdGl2ZSB1bmxlc3MgYW5kIHVudGlsIEZFUkMgYXBwcm92YWwgaGFzIGJlZW4gb2J0YWluZWQuIEZvciBwdXJwb3NlcyBvZiB0aGlzIEFncmVlbWVudCwgYSBDaGFuZ2Ugb2YgQ29udHJvbCBvZiBhIENvLU93bmVyIHNoYWxsIGJlIGNvbnNpZGVyZWQgYW4gDQphDQpzc2lnbm1lbnQgYnkgc3VjaCBDby1Pd25lciBvZiBpdHMgcmlnaHRzIGFuZCBpbnRlcmVzdHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgYW5kIHNoYWxsIGJlIHN1YmplY3QgdG8gdGhlIHJlcXVpcmVtZW50cyBoZXJldW5kZXIgd2l0aCByZXNwZWN0IHRvIGFzc2lnbm1lbnRzLiBBbnkgUGVybWl0dGVkIEFzc2lnbmVlIHNoYWxsIGFzc3VtZSBhbGwgb2YgdGhlIG9ibGlnYXRpb25zIG9mIHRoZSBhc3NpZ25pbmcgQ28tT3duZXIgaGVyZXVuZGVyIGFuZCANCnMNCmhhbGwgZXhlY3V0ZSBhbnkgZG9jdW1lbnRzIHdoaWNoIG1heSByZWFzb25hYmx5IGJlIHJlcXVpcmVkIGJ5IHRoZSBvdGhlciBDby1Pd25lcnMsIG9yIGJ5IExlbmRlcnMsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gYW55IGRvY3VtZW50IGluIGNvbm5lY3Rpb24gd2l0aCBhIGdvdmVybm1lbnRhbCBwZXJtaXQsIGFwcHJvdmFsLCBhdXRob3JpemF0aW9uLCBlbnRpdGxlbWVudCBvciBvdGhlciBjb25zZW50LiBVbmRlciBubyBjaXJjdW1zdA0KYQ0KbmNlcyBzaGFsbCBhbnkgTGVuZGVyIG9yIFBlcm1pdHRlZCBBc3NpZ25lZSBoYXZlIGFueSBncmVhdGVyIHJpZ2h0cyBvZiBvd25lcnNoaXAgb3IgdXNlIG9mIHRoZSBTaGFyZWQgQXNzZXRzIHRoYW4gdGhlIHJpZ2h0cyBncmFudGVkIHRvIHRoZSBDby1Pd25lcnMgaW4gdGhpcyBBZ3JlZW1lbnQuIEFueSBhc3NpZ25tZW50IHBlcm1pdHRlZCB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCByZWxlYXNlIHRoZSBhc3NpZ25pbmcgQ28tT3duZXIgZnJvDQptDQogb2JsaWdhdGlvbnMgYWNjcnVpbmcgYWZ0ZXIgdGhlIGRhdGUgdGhhdCBsaWFiaWxpdHkgaXMgYXNzdW1lZCBieSBhIHRyYW5zZmVyZWUsIGJ1dCB0aGUgYXNzaWduaW5nIENvLU93bmVyIHNoYWxsIGNvbnRpbnVlIHRvIGJlIGxpYWJsZSB0byB0aGUgb3RoZXIgQ28tT3duZXJzIGZvciBhbGwgcGVyZm9ybWFuY2UgZHVlIGJ5IHRoZSBhc3NpZ25pbmcgQ28tT3duZXIgZm9yIG1hdHRlcnMgdGhhdCBoYXZlIGFjY3J1ZWQgYW5kIGFyZSB1bnNhdGlzZmkNCmVkIGFzIG9mIHRoZSBkYXRlIG9mIHRoZSBhc3NpZ25tZW50LiBBbnkgcHVycG9ydGVkIGFzc2lnbm1lbnQgaW4gY29udHJhdmVudGlvbiBvZiB0aGlzIFNlY3Rpb24gMTcuMyB3aWxsIGJlIHZvaWQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxOS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggTm90aWNlc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuIFNlY3Rpb24gMTcuMTcgaXMgYW1lbmRlZCBieSBhZGRpbmcgdGhlIGZvbGxvd2luZyBub3RpY2UgaW5mb3JtYXRpb24gdG8gdGhlIGV4aXN0aW5nIGFkZHJlc3NlcyBzZXQgZm9ydGggZm9yIFJpc2luZyBUcmVlIElJSToNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0YWIgd2l0aCBmdXJ0aGVyIGNvcGllcyB0bzoNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM4NFxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjgwODY4IEpQTSBDYXBpdGFsIENvcnBvcmF0aW9uDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzhcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjgwODY4IDEwIFNvdXRoIERlYXJib3JuLCAxMnRoIEZsb29yDQpccGFyIE1haWwgQ29kZSBJTEkgMDUwMg0KXHBhciBDaGljYWdvLCBJbGxpbm9pcyA2MDYwMy0yMDAzDQpccGFyIEF0dGVudGlvbjogIFByZXNpZGVudA0KXHBhciBUZWxlcGhvbmU6ICAoMzEyKSA3MzItMzQxNg0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmkxNDQwXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjgwODY4IEVtYWlsOiAgfXtcZmllbGRcZmxkZGlydHl7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCAgSFlQRVJMSU5LICJtYWlsdG86anBtY2MuZW5lcmd5QGpwbW9yZ2FuLmNvbSIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMThcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjgwODY4IGpwbWNjLmVuZXJneUBqcG1vcmdhbi5jb219fX1cc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDM0MzgwNzhcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyODA4NjggIGFuZCB9e1xmaWVsZFxmbGRkaXJ0eXtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgSFlQRVJMSU5LICJtYWlsdG86fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDI4MDg2OCBqb2VsLnNwZW5hZGVsQGpwbW9yZ2FuLmNvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY3M0OFx1bFxjZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ2ODU3NDEgam9lbC5zcGVuYWRlbEBqcG1vcmdhbi5jb219fX1cc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDM0MzgwNzhcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyODA4NjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzhcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCYW5rZXJzIENvbW1lcmNpYWwgQ29ycG9yYXRpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQyOTIzNTYgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA0NDUgU291dGggRmlndWVyb2EgU3RyZWV0LCBHMTQtMjAwXGxpbmUgTG9zIEFuZ2VsZXMsIENBIDkwMDcxXGxpbmUgQXR0ZW50aW9uOlx+IDIwMTUgVmVudG8gWElJSSBBY2NvdW50IE9mZmljZXINClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMjAuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEFtZW5kZWQgTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgRWFjaCBDby1Pd25lciANCmFncmVlcyB0byBzaWduIGFuZCBhY2tub3dsZWRnZSBhbiBBbWVuZGVkIE1lbW9yYW5kdW0gb2YgUmlzaW5nIFRyZWUgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50ICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBcJzkzQW1lbmRlZCBNZW1vcmFuZHVtXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQopIGluIHRoZSBmb3JtIGF0dGFjaGVkIHRvIHRoaXMgQW1lbmRtZW50IGFzIEV4aGliaXQgRS4gIEFmdGVyIGl0IGhhcyBiZWVuIHNpZ2huZWQgYW5kIGFja25vd2xlZGdlZCBieSBhbGwgb2YgdGhlIENvLW93bmVycywgT3BlcmF0b3Igc2hhbGwgDQpyZWNvcmQgdGhlIEFtZW5kZWQgTWVtb3JhbmR1bSBwcm9tcHRseSBpbiB0aGUgT2ZmaWNlIG9mIHRoZSBDb3VudHkgUmVjb3JkZXIgb2YgS2VybiBDb3VudHksIENhbGlmb3JuaWEgYXQgdGhlIGV4cGVuc2Ugb2YgdGhlIENvLU93bmVycy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODUzOTk4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAyMS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IE1pbm9yIEFkZGl0aW9uYWwgQW1lbmRtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgVGhlIGZvbGxvd2luZyBzZWN0aW9ucyBhcmUgaGVyZWJ5IGFtZW5kZWQgYXMgZm9sbG93czoNCg0KXHBhciAoYSlcdGFiIFNlY3Rpb24gNS4zIGlzIGhlcmVieSBhbWVuZGVkIGJ5IGRlbGV0aW5nIHRoZSBicmFja2V0cyBpbiBTZWN0aW9ucyA1LjMuMSBhbmQgNS4zLjIgYW5kIGJ5IGRlbGV0aW5nIGZvb3Rub3RlIDEgaW4gU2VjdGlvbiA1LjMuMS4NClxwYXIgKGIpXHRhYiBTZWN0aW9uIDYuMTAgaXMgYW1lbmRlZCBieSBjaGFuZ2luZyBcJzkzU2VjdGlvbiAxNy4xNVwnOTQgdG8gXCc5M1NlY3Rpb24gMTcuMTdcJzk0IGluIHRoZSB0aGlydGVlbnRoICgxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3MTUyODYzIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCApIGxpbmUgb2YgdGhhdCBzZWN0aW9uLg0KXHBhciAoYylcdGFiIFNlY3Rpb24gNi4xMyBpcyBhbWVuZGVkIGJ5IGNoYW5naW5nIFwnOTNEdWUgRGF0ZVwnOTQgdG8gXCc5M2R1ZSBkYXRlXCc5NCBpbiB0aGUgc2l4dGggKDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzE1Mjg2MyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggKSBsaW5lIG9mIHRoYXQgc2VjdGlvbi4NClxwYXIgKGQpXHRhYiBTZWN0aW9uIDkuMSBpcyBhbWVuZGVkIGJ5IHJlcGxhY2luZyBcJzkzU2VjdGlvbiA5LjhcJzk0IGluIHRoZSBmaXJzdCBsaW5lIG9mIHRoZSBzZWN0aW9uIHdpdGggXCc5M1NlY3Rpb25zIDYuMTYsIDkuMiBhbmQgOS44XCc5NC4NClxwYXIgKGUpXHRhYiBTZWN0aW9uIDkuMiBpcyBhbWVuZGVkIGJ5IGFkZGluZyB0aGUgcGhyYXNlIFwnOTNJbiBhZGRpdGlvbiB0byB0aGUgbGltaXRhdGlvbnMgc2V0IGZvcnRoIGluIFNlY3Rpb24gNi4xNixcJzk0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhhdCBzZWN0aW9uLg0KXHBhciAoZilcdGFiIFNlY3Rpb24gMTQuMSBpcyBhbWVuZGVkIGJ5IHJlcGxhY2luZyB0aGUgcGhyYXNlIFwnOTNhbnkgcGFydHkgcHJvdmlkaW5nIGRlYnQgb3IgZXF1aXR5IGZpbmFuY2luZyBvciByZWZpbmFuY2luZ1wnOTQgaW4gdGhlIGZvdXJ0aCAoNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3VwZXJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4ICkgbGluZSBvZiB0aGF0IHNlY3Rpb24gd2l0aCB0aGUgcGhyYXNlIFwnOTNhbnkgcGFydHkgcHJvdmlkaW5nIGRlYnQsIHRheCBlcXVpdHkgb3Igb3RoZXIgZXF1aXR5IGZpbmFuY2luZyBvciByZWZpbmFuY2luZ1wnOTQuDQpccGFyIChnKVx0YWIgU2VjdGlvbiAxNy4zIGlzIGFtZW5kZWQgYnkgcmVwbGFjaW5nIHRoZSByZWZlcmVuY2UgdG8gXCc5M1NlY3Rpb24gMTcuM1wnOTQgaW4gdGhlIGZpcnN0IGxpbmUgb2YgdGhlIHNlY3Rpb24gd2l0aCBcJzkzU2VjdGlvbiAxNy40XCc5NC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzA4MzgxNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAyMi5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggQW1lbmRtZW50cyB0byBEZWZpbml0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLg0KXHBhciAoYSlcdGFiIFRoZSBmb2xsb3dpbmcgZGVmaW5pdGlvbnMgaW4gRXhoaWJpdCBBIHRvIHRoZSBBZ3JlZW1lbnQgYXJlIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIHRoZWlyIGVudGlyZXRpZXMgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCANCiBtZWFucyB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCwgdGhpcyBBZ3JlZW1lbnQsIHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50LCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cywgcHVyY2hhc2Ugb3Igd2FycmFudHkgYWdyZWVtZW50cyByZWxhdGluZyB0byBTaGFyZWQgRmFjaWxpdGllcywgYW5kIHN1Y2ggb3RoZXIgYWdyZWVtZW50cyB0byBiZSBpbmNsdWRlZCB1cG9uIHRoZSBtdXR1YWwgYWdyZWVtZW50IG9mIA0KdGhlIENvLU93bmVycywgaW5jbHVkaW5nIHRob3NlIG9uIEV4aGliaXQgRC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODIxNTM4OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggTWV0ZXJlZCBFbmVyZ3l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBtZWFucyB0aGUgYW1vdW50IG9mIGVsZWN0cmljIGVuZXJneSBtZWFzdXJlZCBhdCBhIGdpdmVuIHBvaW50Lg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgbWVhbnMgdGhlIENvLU93bmVyIG9yIG90aGVyIFBlcnNvbiBlbmdhZ2VkIGJ5IHRoZSBDby1Pd25lcnMgdG8gbWFuYWdlLCBvcGVyYXRlLCBtYWludGFpbiBhbmQgcmVwYWlyIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQNCiB0byBwZXJmb3JtIG90aGVyIGR1dGllcyBwZXJ0YWluaW5nIHRvIHRoZSBTaGFyZWQgQXNzZXRzIGFzIHNldCBmb3J0aCBpbiB0aGUgQWdyZWVtZW50LiAgSWYgdGhlIE9wZXJhdG9yIGlzIGEgQ28tT3duZXIsIHJlZmVyZW5jZXMgdG8gXCc5M09wZXJhdG9yXCc5NA0KIHNoYWxsIG1lYW4gdGhlIENvLU93bmVyIGFjdGluZyBvbmx5IGluIGl0cyBjYXBhY2l0eSBhcyBPcGVyYXRvciBhbmQgbm90IGluIGFueSBvdGhlciBjYXBhY2l0eS4gIFRoZSBPcGVyYXRvciBzaGFsbCBpbml0aWFsbHkgYmUgUmlzaW5nIFRyZWUgSSBvciBhbiBBZmZpbGlhdGUgZGVzaWduYXRlZCBieSBpdCwgc3ViamVjdCB0byByZXBsYWNlbWVudCBwdXJzdWFudCB0byBTZWN0aW9uc1x+Ni4xNyBhbmQgMTMuMi4yLiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAoYilcdGFiIFRoZSBmb2xsb3dpbmcgZGVmaW5pdGlvbnMgYXJlIGFkZGVkIHRvIEV4aGliaXQgQSB0byB0aGUgQWdyZWVtZW50IGluIHRoZSBhcHByb3ByaWF0ZSBhbHBoYWJldGljYWwgb3JkZXI6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyNzc3NDUgQ2F1c2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODI3Nzc0NSBtZWFucyB3aXRoIHJlc3BlY3QgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODI3Nzc0NSANCiwgYWN0aW5nIGluIHRoZSBjYXBhY2l0eSBhcyBzdWNoLCBmcmF1ZCwgd2lsbGZ1bCBtaXNhcHByb3ByaWF0aW9uIG9mIGZ1bmRzLCBncm9zcyBuZWdsaWdlbmNlLCBvciB3aWxsZnVsIG1pc2NvbmR1Y3Qgb3IgYSB3aWxsZnVsIHZpb2xhdGlvbiBvZiBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQptYXRlcmlhbCBwcm92aXNpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IG9yIHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4Mjc3NzQ1IGFwcGxpY2FibGUgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT3BlcmF0b3J9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4Mjc3NzQ1ICwgc29sZWx5IGluIHRoYXQgY2FwYWNpdHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggDQpccGFyIE1lY2hhbmljYWwgQ29tcGxldGlvbiBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgbWVhbnMgdGhlIGRhdGUgdGhhdCB0aGUgZmlyc3Qgd2luZCB0dXJiaW5lIG9mIHRoZSBGYWNpbGl0eSBvciBBZGRpdGlvbmFsIFBoYXNlIGluIHF1ZXN0aW9uIGlzIG1lY2hhbmljYWxseSBjb21wbGV0ZSBhbmQgcmVhZHkgdG8gZW5lcmdpemVkLCBjb21taXNzaW9uZWQgYW5kIHRlc3RlZC59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDk3MDE0OSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDIzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBBDQptZW5kbWVudHMgdG8gRXhoaWJpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4NClxwYXIgYS5cdGFiIEV4aGliaXQgQSB0byB0aGUgQWdyZWVtZW50IGlzIGFtZW5kZWQgYnkgZGVsZXRpbmcgdGhlIGRlZmluaXRpb24gb2YgXCc5M0ZpYmVyIE9wdGljIEZhY2lsaXRpZXNcJzk0Lg0KXHBhciBiLlx0YWIgRXhoaWJpdCBCIHRvIHRoZSBBZ3JlZW1lbnQgaXMgYW1lbmRlZCBpbiB0aGUgZm9sbG93aW5nIHJlc3BlY3RzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IChpKVx0YWIgU2VjdGlvbiBBLjEgb2YgRXhoaWJpdCBCIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eQ0KIGFzIHNldCBmb3J0aCBpbiBTZWN0aW9uIDEgb2YgRXhoaWJpdCBCIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgKGlpKVx0YWIgVGhlIGhlYWRpbmcgdG8gU2VjdGlvbiBBLjIuYyBvZiBFeGhpYml0IEIgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IHRvIGJlIFwnOTNDb2xsZWN0aW9uIGFuZCBEaXN0cmlidXRpb24gTGluZXMgKGluY2x1ZGluZyBmaWJlciBvcHRpYyBjYWJsZSBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMgZmFjaWxpdGllcylcJzk0Lg0KXHBhciAoaWlpKVx0YWIgVHJhY3QgMjEgYXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gMi5hIG9mIEV4aGliaXQgQiBhdHRhY2hlZCBoZXJldG8gc2hhbGwgYmUgYWRkZWQgdG8gdGhlIGVuZCBvZiBTZWN0aW9uIEEuMi5jIG9mIEV4aGliaXQgQi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IChpdikgXHRhYiBUaGUgbGVnYWwgZGVzY3JpcHRpb24gb2YgVHJhY3QgNyBpbiBTZWN0aW9uIEEuMi5mIG9mIEV4aGliaXQgQiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgc2V0IGZvcnRoIGluIFNlY3RpDQpvbiAzLmEgb2YgRXhoaWJpdCBCIGF0dGFjaGVkIGhlcmV0bywgYW5kIGNlcnRhaW4gcGFyY2VscyBvZiByZWFsIHByb3BlcnR5IGFyZSBhZGRlZCB0byBTZWN0aW9uIEEuMi5mIG9mIEV4aGliaXQgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiAzLmMgb2YgRXhoaWJpdCBCIGF0dGFjaGVkIGhlcmV0by4gVGhlIG5hbWUgb2YgVHJhY3QgTnVtYmVyIDI1IGluIFNlY3Rpb24gQS4yLmYgb2YgRXhoaWJpdCBCIGlzIGFtZW5kZWQgdG8gYmUgVHJhY3QgTnVtYmUNCnIgMjAuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmk3MjBcbGk3MjBccmk4NjZcc2EyNDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2NlxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAodilcdGFiIA0KU2VjdGlvbnMgQS4yLmogYW5kIEEuMi5rIGFzIHNldCBmb3J0aCBpbiBTZWN0aW9uIDIgb2YgRXhoaWJpdCBCIGF0dGFjaGVkIGhlcmV0byBhcmUgYWRkZWQgdG8gRXhoaWJpdCBCIHRvIHRoZSBBZ3JlZW1lbnQgYWZ0ZXIgU2VjdGlvbiBBLjIuaSBhbmQgYmVmb3JlIFNlY3Rpb24gQS4zLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAodmkpXHRhYiBTZWN0aW9uIEEuMy5rIG9mIEV4aGliaXQgQiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czogXCc5Mw0Kay4gIEtlcm4gQ291bnR5IE9yZGluYW5jZSBOby4gRjU4OSBncmFudGluZyBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDIGEgZnJhbmNoaXNlIHRvIGNvbnN0cnVjdCwgaW5zdGFsbCwgbWFpbnRhaW4sIG9wZXJhdGUsIHJlcGFpciwgcmVuZXcgYW5kIHJlbW92ZSB1bmRlcmdyb3VuZCBmaWJlciBvcHRpYyBjYWJsZSBkYXRlZCBOb3ZlbWJlciA0LCAyMDE0LCBhcyBwYXJ0aWFsbHkgYXNzaWduZWQgdG8gUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJIEwNCkxDIGFuZCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQyBvbiBNYXJjaCAxNywgMjAxNS5cJzk0DQpccGFyICh2aWkpXHRhYiBTZWN0aW9uIEEuNC5hIG9mIEV4aGliaXQgQiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gNCBvZiBFeGhpYml0IEIgYXR0YWNoZWQgaGVyZXRvDQpccGFyICh2aWlpKVx0YWIgU2VjdGlvbiBCLjEuYiBvZiBFeGhpYml0IEIgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6IFwnOTMNCmIuICBNZXRlb3JvbG9naWNhbCBUb3dlciwgaW5jbHVkaW5nIGluc3RydW1lbnRhdGlvbiwgcG93ZXIgbG9vcCBhbmQgZmliZXIgb3B0aWMgY2FibGUgYW5kIGFzc29jaWF0ZWQgc3BsaWNlIGJveGVzLCBqdW5jdGlvbiBib3hlcyBhbmQgdGVybWluYXRpb25zIGZyb20gdGhlIENvbnRyb2wgQnVpbGRpbmcgKGRlc2NyaWJlZCBvbiBFeGhpYml0IEItMSkgdG8gdGhlIHRvd2VyLlwnOTQNClxwYXIgKGl4KVx0YWIgVGhlIGhlYWRpbmcgdG8gU2VjdGlvbiBCLjIuYSBvZiBFeGhpYml0IEIgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IHRvIGJlIFwnOTNDb2xsZWN0aW9uIGFuZCBEaXN0cmlidXRpb24gTGluZXMgKGluY2x1ZGluZyBmaWJlciBvcHRpYyBjYWJsZSBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMgZmFjaWxpdGllcylcJzk0Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYy5cdGFiIA0KRXhoaWJpdCBCLTEgdG8gdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgc2V0IGZvcnRoIG9uIEV4aGliaXQgQi0xIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgZC5cdGFiIEV4aGliaXQgQi0yIHRvIHRoZSBBZ3JlZW1lbnQgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIHNldCBmb3J0aCBvbiBFeGhpYml0IEItMiBhdHRhY2hlZCBoZXJldG8uDQpccGFyIGUuXHRhYiBFeGhpYml0IEMgdG8gdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgc2V0IGZvcnRoIG9uIEV4aGliaXQgQyBhdHRhY2hlZCBoZXJldG8uDQpccGFyIGYuXHRhYiBFeGhpYml0IEQgdG8gdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgc2V0IGZvcnRoIG9uIEV4aGliaXQgRCBhdHRhY2hlZCBoZXJldG8uDQpccGFyIDI0Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBObyBPdGhlciBBbWVuZG1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIEV4Y2VwdCBhcyBleHByZXNzbHkgc2V0IGZvcnRoIGluIHRoaXMgQW1lbmRtZW50LCB0aGUgQWdyZWVtZW50IGlzIHVubW9kaWZpZWQgYW5kIGNvbnRpbnVlcyBpbiBmdWxsIGZvcmNlIA0KYW5kIGVmZmVjdC4gIEZyb20gYW5kIGFmdGVyIHRoZSBkYXRlIGhlcmVvZiwgcmVmZXJlbmNlcyB0byB0aGUgQWdyZWVtZW50IHdpbGwgYmUgdW5kZXJzdG9vZCB0byByZWZlciB0byB0aGUgQWdyZWVtZW50IGFzIGFtZW5kZWQgYnkgdGhpcyBBbWVuZG1lbnQuDQpccGFyIDI1Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNjI2MjE5OSBHb3Zlcm5pbmcgTGF3Ln17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTYyNjIxOTkgIFRoaXMgQX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IG1lbmRtZW50fXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE2MjYyMTk5ICBzaGFsbCBiZSBnb3Zlcm5lZCBieSwgY29uc3RydWVkIGFuZCBlbmZvcmNlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGxhd3Mgb2YgdGhlIFN0YXRlIG9mIENhbGlmb3JuaWEsIHdpdGhvdXQgcmVnYXJkIHRvIHByaW5jaXBsZXMgb2YgY29uZmxpY3Qgb2YgbGF3cy59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgDQpcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IA0KXHBhciAyNi5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTYyNjIxOTkgQ291bnRlcnBhcnRzLn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTYyNjIxOTkgIFRoaXMgQX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IG1lbmRtZW50fXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE2MjYyMTk5ICBtYXkgYmUgZXhlY3V0ZWQgaW4gb25lIG9yIG1vcmUgY291bnRlcnBhcnRzLCBlYWNoIG9mIHdoaWNoIHdpbGwgYmUgYW4gb3JpZ2luYWwgYnV0IGFsbCBvZiB3aGljaCwgdGFrZW4gdG9nZXRoZXIsIHdpbGwgY29uc3RpdHV0ZSBvbmx5IG9uZSBsZWdhbCBpbg0Kc3RydW1lbnQuIEl0IHdpbGwgbm90IGJlIG5lY2Vzc2FyeSBpbiBtYWtpbmcgcHJvb2Ygb2YgdGhpcyBBfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggbWVuZG1lbnR9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE2MjYyMTk5ICB0byBwcm9kdWNlIG9yIGFjY291bnQgZm9yIG1vcmUgdGhhbiBvbmUgY291bnRlcnBhcnQufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQzNDM4MDc4IFtUaGUgbmV4dCBwYWdlIGlzIHRoZSBzaWduYXR1cmUgcGFnZS5dXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xoZWFkZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjNccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU2ODQ1OTcgDQpccGFyIH19e1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzNDM4MDc4IFx0YWIgQi0zfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTE0Mjg2OTcgDQp7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwMFxzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejEzXHNocGxpZDIyMzh7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fQ0Ke1xzcHtcc24gbFR4aWR9e1xzdiA4NTE5Njh9fXtcc3B7XHNuIGR4VGV4dExlZnR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRUb3B9e1xzdiAwfX17XHNwe1xzbiBkeFRleHRSaWdodH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dEJvdHRvbX17XHN2IDB9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fXtcc3B7XHNuIHd6TmFtZX17XHN2IA0KenptcFRyYWlsZXJfMTA3OF80fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gbWV0cm9CbG9ifXtcc3Yge1wqXHN2YiANCjUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBiNjgzMzg5MmZlMDAwMDAwZTEwMTAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjOTQ5MTQxNGVjMzMwMTA0NWY3NDhkY2MxZjIxNjI1NGViYjQwMDgyNWU5ODJiNDRiNDBhODFjNjA2NDRmMTI4YjY0NmM3OTRjNjg2ZjhmOTNiNjFiNDQ5MTU4ZGEzM2ZmYmYyN2JiZGMxY2M2NDE0YzE4ZDgzYWFhZTQyYTJmYTQ0MGQyY2U1OGVhMmFmOWJlZGY2NTBmNTI3MDA0DQozMjMwMzhjMjRhMWU5MWU1YTZiZWJkMjlmNzQ3OGYyYzUyOWFiODkyN2Q4Y2ZlNTEyOWQ2M2Q4ZWMwYjlmMzQ4NjlkMmJhMzA0MjRjYzdkMDI5MGZmYTAzM2E1NGViYTJiODU3ZGE1MTQ0OGE1OTljM2I2NDVkMzZkOGMyZTcxMGM1ZjY5MGFlNGYyNjAxMDc5NmUyZTliNDM4YjMyYTA5ZGUwZjU2NDM0Y2E2NmEyMmYzODM5MjlkMDk3OTRhMmUzYmRjNWJjZjc3NDk0M2FhNWYwOWYzZTQzYWUwOWM3YjQ5NGYxM2FjNDFmMTBhMjEzZWMzOTgzNDk0MDlhYw0KNzBlZDFhYTdmM2JmM2I2NmM5OTEzM2Q3YjY1NjYzZGUwNGRlMmVhOThiZDNiNTZlZTNiZTI4ZTBmNGRmZjIyNmM1ZGU3MGJhYjRhYmU1ODNlYTZmMDAwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwMzhmZDIxZmZkNjAwMDAwMDk0MDEwMDAwMGIwMDAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczYTQ5MGMxNmFjMzMwMGM4NmVmODNiZDgzZDE3ZDcxOWFjMzE4YTM0ZTJmYTNkMDZiZTkxZWMwZDg4YTYzMWE1YjQ2MzJkOWZhZjYNCjMzODNjMTMyN2FkYjUxYmZkMGY3ODk3ZjdmZjg0YzhiNWE5MTI1NTIzNmIwZWI3YTUwOTgxZGY5OTg4MzgxZjdjYmYxZTkwNTk0NTQ5YmJkNWQyOGEzODExYjBhMWNjNmM3ODdmZDE5MTc1YmRiOTFjY2IxODg2YTk0MmMwNmU2NWFjYmFiZDZlMjY2NGM1NjNhMmE5OGRiNjYyMjRlYjZiNjkxODMyZWQ2NWQ2ZDQwM2RmNGZkYjNlNmRmMGMxODM3NGM3NWYyMDZmOGU0MDc1MDk3NWI2OWU2M2ZlYzE0MWQ5M2QwNTQzYjQ3NDlkMzM0NDU3NzhmYWEzZDdkDQplNDMzYWU4ZDYyMzk2MDM1ZTA1OWJlNDNjNmI1NmJjZjgxYmVlZmRkZmRkMzFiZDg5NjM5YmEyM2RiODQ2ZmU0YjY3ZTFjYTg2NTNmN2FiZGU5NzJmYzAyMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDg2Yzg5ZjVhYmMwMjAwMDBiOTA1MDAwMDBlMDAwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2Y2FjNTQ1YjZmOWIzMDE0N2U5ZmI0ZmY2MGY5OWQ3MjI5MjQ4MDRhYWEzNjg0Njk1Mjc3OTFkYTNkNTcwZTk4NjAwZA0KNmM2NjNiMjE2ZGI1ZmZiZTYzMTM5MmI0N2I5OWI2ZjE2MDFkN2M4ZWJmNzNmYmNlYjliYWRlNzcyZGRhNTFhOTk4ZTAxOWY2MmYzYzhjMjgyZjQ1YzVmODI2YzNkZjFlMGEyN2M2NDg2OWMyMmJkMjBhNGUzM2ZjNDQxNWJlNWViYzdmNzczNWY0MjkwZDQ0MjNkYThhNGEwNDIwNWNhNTQzOWZlMTQ2ZWIzZTc1NWQ1NTM2YjQyM2VhNDJmNDk0ODNiMjE2YjIyMzFhN2VlNWM2YWQyNDE5MDBiZDZiZGRjMGYzNjZlZTIwNjRkNTRiNTE1MmE1ZTAzNjFmOTUNCjc4NjFmMWViOWE5NmZhNGI1ZDJiYWE1MTliNjE4ODRkZGI1M2RhNzM2ZDRlNzc3MTQ1ZDI4ZDI0N2RjM2NhNDMxOGU0MmZhMmU4MDhlM2UwZjQwODk1MTM0ZGQwNTZiMmRmYTAzYTU2NGFhMTQ0YWQyZjRhZDFiOWEyYWU1OTQ5NmQwZTkwOGRlZmJkYzllNmJlMjEzZGI1Yjk0MDcxNTQ3ZjJjOTNmYTdmYjBlNWU3ZGQ1Nzg5NTg5NWUxMDgyMzRlM2E2OGQxZjM3M2Q3M2Y0OGMyNWEyYTFmN2Q2ZjFlM2Y4NmE2NGE0M2FmNTIzMGJlZWZjMTVjZWY2ZmM1DQoxZWJhNmQzMzU2ZmQ5ZDI4YmYyYmM0YzViMjIxN2M0MzZmYTQxNDQzNDM0OTA1NTFmYWU2YTU3YmY2NzRjNDUxMDY2NDNkN2MxMjE1YjgyMzViMmQyY2QwYmU5NjlkMjkyMTE0MDUwMTNhNzRlYmU5ZDgyMWJhZDdhODg0Y2IyMDlhNzk5NzAxYTg0YWQwMDU1MWU4NzliNjg1MmU0OWE3ZDdiZDU0ZmEwMzE1MWQzMjQyODYyNTMwYzBhMjkzZGQ5ZGQyMjYxYTkyNGUyNmM2MTkxNzA1NmI1YmNiODI5NmJmYmEwMGMzZjEwNjdjYzM1M2EzMzM1MWQ4YTZiZQ0KMjQ1ZWIyOGE1NzcxZTg4NGMxNmNlNTg0NWU5ZTNiMzdjNTMyNzQ2Njg1M2Y4ZmYyY2I3Y2I5Y2NmZDlmYzZhZjFmYTYwZGFiMmFjYThkOWI4OTYwN2VmODY3MGQzYzUwN2RhNGM2OTE2MjRhYjRhYzMyNzAyNjI0MjUzN2ViNjUyYmQxOGUwMGMxMGJmYmQ5OWE4M2U2NjRlNmJlMGVjMzE2MDE3Mjc5OTM5MjFmODRkZTZkOTAzOGM1MmM5ZTNiNjExMTQ2NGUzMmY3NjJjN2YzOTNkYjY0ZTY4NTQ5OTgxN2FmNTNiYTYzOWNmZTdiNGE2OGM4NzAxMjA1ZDENCjQ4YTY1M2QwNmY3MjgzNGU5ZjlhN2Q5NjFiNDkzYmE2NjE4NWI0YWNjYjcwN2MzNDIyYTlhMWUwOGE1N2I2YjUxYWQ4M2NjYTY3YTUzMGUxOWY0YTAxZWQ5ZTFhNmQwOTZiMzgzYWIyNTVlZmQ3N2IzYjIxN2UzMDBkYzI1YTU0NGY0MDYxMjk4MDYxNDA0NmQ4N2YyMDM0NDIzZTYzMzRjMDJlYzliMGZhYjEyNTkyNjJkNDdlZTQzMDA2NjZmMTRjODI5Yzg0ZjUyNDEwNWVjMmQzMGM2YjhjNDY3MWE5YzcwNWI1ZWQyNWRiMzQ4MDNjMGRkYTBkOGM0YWMxDQoyYzhiY2Q0YzhkNTExYzA2MGNmNjgzNGRlNmIwY2JjYzAyM2FmZmI3NTZhNzhkYmJmODA1MDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDVjNDE2NmMwZDkwMDAwMDAwNDAxMDAwMDBmMDAwMDAwNjQ3MjczMmY2NDZmNzc2ZTcyNjU3NjJlNzg2ZDZjNGM4ZjMxNGZjMzMwMTA4NTc3YTRmZTA3ZWIyYWIxMjA2YTI3YTAwYTQyOWNhYWFhNjA2MWEzNjU2MWJiYzY0NzEyNjE5ZmEzZDg0ZDQyN2YzZDJlMGIyY2E3Nzc3YWE3ZjdiZQ0KMmIzN2IzYjM2MmE0MjE3NDllMzU2NDJiMDU4MmI4ZjZhNmUzNDZjM2ZiZTFlNWY2MDE0NDg4YzgwNmFkNjdkMmYwNGQwMTM2ZDVlMmFhYzRjMmY4ODlkZjY4ZGNjNzQ2YTQxMDBlMDU2YTY4NjNlYzBiMjk0M2RkOTJjM2IwZjIzZDcxZjIzZWZkZTAzMGE2NzU2OGE0MTk3MDRhZTFjZWNhNWNhOWI1NzRkODcxNmE2OGIxYTc1ZDRiZjVkN2ZlZTQzNGFjZTdlN2ZlZTZmNTkxZjJlOTVjZGI5MTNmY2U1OTE2MjlkM2ZhN2EzOTZmOWY0MDQ0OWFlM2RmMzENCjVjZjAxMzNhNTQ4OWU5ZTg0ZjZjODJiMDFhZDIyM2YxNzcyNmVmNWVkZGU1MjA4ZTE3YTE0MDU2YTVmYzBmNWZmZDAwMDAwMGZmZmYwMzAwNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBiNjgzMzg5MmZlMDAwMDAwZTEwMTAwMDAxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwMzhmZDIxZmZkNjAwDQowMDAwOTQwMTAwMDAwYjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMmYwMTAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDA4NmM4OWY1YWJjMDIwMDAwYjkwNTAwMDAwZTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMmUwMjAwMDA2NDcyNzMyZjY1MzI2ZjQ0NmY2MzJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDA1YzQxNjZjMGQ5MDAwMDAwMDQwMTAwMDAwZjAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAxNjA1MDAwMDY0NzI3MzJmNjQ2Zjc3NmU3MjY1NzYyZTc4NmQ2YzUwNGIwNTA2MDAwMDAwMDAwNDAwMDQwMGYzMDAwMDAwMWMwNjAwMDAwMDAwfX19e1xzcHtcc24gZGhndH17XHN2IDI1MTY2NDM4NH19e1xzcHtcc24gZkhpZGRlbn17XHN2IDB9fXtcc3B7XHNuIGZQc2V1ZG9JbmxpbmV9e1xzdiAwfX17XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzaHB0eHQgXGx0cnBhciANClxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc2MTk4NDU3OS4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgyMDVcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NjE5ODQ1NzkuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwMFxkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjNccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fXtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBUbyBldmlkZW5jZSBpdHMgYWNjZXB0YW5jZSBvZiB0aGlzIEFtZW5kbWVudCwgYW5kIGludGVuZGluZyB0byBiZSBsZWdhbGx5IGJvdW5kLCBlYWNoIENvLU93bmVyIGhhcyBjYXVzZWQgaXRzIGF1dGhvcml6ZWQgcmVwcmVzZW50YXRpdmUgdG8gc2lnbiBiZWxvdyBhcyBvZiB0aGUgZGF0ZSBmaXJzdCB3cml0dGVuIGFib3ZlLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQ1xsaW5lIFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxwZ25zdGFydHMyXHBnbnVjbHRyXGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHBnbmhuMVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDM0MzgwNzhcc2Z0bmJqIHtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzNDM4MDc4IEItMi0xDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBFWEhJQklUIEINClxwYXIgQU1FTkRNRU5UUyBUTyBFWEhJQklUIEIgVE8gVEhFIEFHUkVFTUVOVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDExMzA0MDEgDQpBbWVuZGVkIGFuZCByZXN0YXRlZCBTZWN0aW9uIEEuMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzN1xxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxLlx0YWIgU2hhcmVkIEZhY2lsaXRpZXMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhLlx0YWIgUHJvamVjdCBTdWJzdGF0aW9uOiAgU2VlIEV4aGliaXQgQi0xIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgYi5cdGFiIFRyYW5zbWlzc2lvbiBMaW5lOiAgU2VlIEV4aGliaXQgQi0yIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxmaS03MjBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgYy5cdGFiIA0KU3VwZXJ2aXNvcnkgQ29udHJvbCBhbmQgRGF0YSBBY3F1aXNpdGlvbiAoU0NBREEpIFN5c3RlbSwgYXMgZnVydGhlciBkZXNjcmliZWQgb24gRXhoaWJpdCBCLTIgYXR0YWNoZWQgaGVyZXRvLCBleGNsdWRpbmcgZmVlZGVyIHJlbGF5cywgYnJlYWtlcnMgYW5kIGNvbGxlY3Rpb24gc3lzdGVtIGZpYmVyIG9wdGljIGNhYmxlcyBmb3IgdGhlIGluZGl2aWR1YWwgd2luZCB0dXJiaW5lIGdlbmVyYXRvcnN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBkLlx0YWIgUm9hZHMNClxwYXIgZS5cdGFiIE8mTSBCdWlsZGluZw0KXHBhciBmLlx0YWIgQ29uZG9yIERldGVjdGlvbiBUb3dlcg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiBnLlx0YWIgDQpNZXRlb3JvbG9naWNhbCBUb3dlciwgaW5jbHVkaW5nIGluc3RydW1lbnRhdGlvbiwgcG93ZXIgbG9vcCBhbmQgZmliZXIgb3B0aWMgY2FibGUgYW5kIGFzc29jaWF0ZWQgc3BsaWNlIGJveGVzLCBqdW5jdGlvbiBib3hlcyBhbmQgdGVybWluYXRpb25zIGZyb20gdGhlIENvbnRyb2wgQnVpbGRpbmcgKGRlc2NyaWJlZCBvbiBFeGhpYml0IEItMSkgdG8gdGhlIHRvd2VyDQpccGFyIGguXHRhYiBFbnZpcm9ubWVudGFsIE1pdGlnYXRpb24gUGFyY2Vsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMi5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggQWRkaXRpb24gdG8gU2VjdGlvbiBBLjIuY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggOw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpNzIwXHJpODY2XHNhMjQwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44NjZcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGEuXHRhYiBUaGUgZm9sbG93aW5nIHBhcmNlbHMgYXJlIGFkZGVkIHRvIFNlY3Rpb24gQS4yLmM6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDI1Njk3IFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggMjF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDI1NjIwODAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmk5OFxzYTI0MFxzbC0yNTBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjU2OTcgVGhlIFNvdXRod2VzdCBxdWFydGVyIA0Kb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTUsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgb2YgdGhlIHN1cnZleSBvZiBzYWlkIGxhbmQsIGFwcHJvdmVkIGJ5IHRoZSBTdXJ2ZXlvciBHZW5lcmFsIE9jdG9iZXIgNywgMTkzNi4NCg0KXHBhciBFeGNlcHQgb25lIGhhbGYgb2YgYWxsIG9pbCwgZ2FzIGFuZCBtaW5lcmFscyBhbmQgaHlkcm9jYXJib24gc3Vic3RhbmNlcyBpbiBhbmQgdW5kZXIgc2FpZCBsYW5kIGFzIHJlc2VydmVkIGJ5IHRoZSBNICYgUiBTaGVlcCBDby4gaW4gZGVlZCBkYXRlZCBBdWd1c3QgNCwgMTk1NSwgcmVjb3JkZWQgaW4gQm9vayAyNTE5LCBQYWdlIDI5OCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBUE46ICAyMzctMTg1LTA3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyNTY5NyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBBbWVuZGVkIGFuZCByZXN0YXRlZCBkZXNjcmlwdGlvbiBpbiBTZWN0aW9uIEEuMi5mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA7DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYS5cdGFiIA0KVGhlIGRlc2NyaXB0aW9uIG9mIFRyYWN0IDcgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2EyNDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggVHJhY3QgN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MDY2NTU2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQzNDM4MDc4IG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAyLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggJn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhcmVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQp0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTg2NlxzYTI0MFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBUE46ICAyMzctMTMyLTIwDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGk3MjBccmk4NjZcc2EyNDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2NlxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBiLlx0YWIgVGhlIG5hbWUgb2YgVHJhY3QgTnVtYmVyIDI1IGlzIGFtZW5kZWQgdG8gYmUgVHJhY3QgTnVtYmVyIDIwLg0KXHBhciBjLlx0YWIgVGhlIGZvbGxvd2luZyBwYXJjZWxzIGFyZSBhZGRlZCB0byBTZWN0aW9uIEEuMi5mOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTg2NlxzYTI0MFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE4NDgzNTAgVHJhY3QgMjENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTkyXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9cYWRqdXN0cmlnaHRccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBUaGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy03XGluc3JzaWQzNDM4MDc4IHF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2YgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDExfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDM0MzgwNzggIE59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDM0MzgwNzggIFd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGVzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTLkIuQi5NLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDM0MzgwNzggU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGF0ZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHBlcn0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT2ZmaWNpYWx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFBsYXQgdGhlcmVvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBmaWxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9mZmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFN1cnZleW9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggR2VuZXJhbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGRlc2N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMzQzODA3OCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpYmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkxNDQwXHJpOTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xhZGp1c3RyaWdodFxyaW45MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU3RhcnRpbmcgYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDM0MzgwNzggdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBoZSBub3J0aHdlc3QgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2YgdGhlIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGhhbGYgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc291dGhlYXN0IHF1YXJ0ZXIgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZSBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQzNDM4MDc4IG99e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBTZWN0aW9uIDI7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQppbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzb3V0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGRpcmVjdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxMzJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYmVnaW5uaW5nOyB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEzXGluc3JzaWQzNDM4MDc4IG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZWFzdGVybHkgMzMwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU291dGhlcmx5IDEzMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB3ZXN0ZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMzMwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZmVldDsgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBub3J0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxMzJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcG9pfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2YgYmVnaW5uaW5nLg0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkxNDQwXHJpOTJcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xhZGp1c3RyaWdodFxyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYW5kfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBwYXRlbnRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHNhbWUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtM1xleHBuZHR3LTE1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTkzOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDM0MzgwNzggcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBlc2VydmVkIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBbWVyaWNhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEZlYnJ1YXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMjQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTk2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMzI0Mix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMzQzODA3OCAgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE1MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9mZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctN1xpbnNyc2lkMzQzODA3OCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBjaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpODY2XHNhMjQwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44NjZcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE4NDgzNTAgQVBOIDIzNy0xMzItMjgNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBOZXcgU2VjdGlvbnMgQS4yLmogYW5kIEEuMi5rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggai5cdGFiIE1ldGVvcm9sb2dpY2FsIFRvd2VyIChSU1QtM0EpDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBUcmFjdCAxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE5vcnRod2VzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCZXJuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMzQzODA3OCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBkaW5vIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9uZS1oYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9pbCx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc3Vic3RhbmNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBuYXR1cn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBnYXMsIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTSZSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggRGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDI1MTksIFBhZ2UgMjgzLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEFQTjogIDIzNy0yODQtMDENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggay5cdGFiIEVudmlyb25tZW50YWwgTWl0aWdhdGlvbiBQYXJjZWxzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTEyNjBccmk4NlxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODZcbGluMTI2MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGlcZGJjaFxhZjMxNTA1XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQxODA4MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0MTgwODE4IHtcKlxia21rc3RhcnQgX0RWX002OH17XCpcYmtta2VuZCBfRFZfTTY4fVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBUcmFjdCAxfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDUzNTIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTE0NDBccmk5MlxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MDM3MTkge1wqXGJrbWtzdGFydCBfRFZfTTY5fXtcKlxia21rc3RhcnQgX0RWX003MH17XCpcYmtta2VuZCBfRFZfTTY5fXtcKlxia21rZW5kIF9EVl9NNzB9DQpUaGUgbm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIHNvdXRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIE9mZmljaWFsIFBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMTQ0MFxyaTgxXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUwMzcxOSBFeGNlcHQgdGhlcmVmcm9tIFwnYmQNCiBvZiBhbGwgb2lsLCBnYXMgYW5kIG1pbmVyYWxzIGFuZCBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzLCBpbiBhbmQgdW5kZXIgc2FpZCBsYW5kLCBhcyBleGNlcHRlZCBpbiBkZWVkIGRhdGVkIEF1Z3VzdCA0LCAxOTU1IGZyb20gTSAmIFIgU2hlZXAgQ28uLCB0byBDLk0uIFR1cg0KbGV5LCByZWNvcmRlZCBOb3ZlbWJlciAyMiwgMTk1NSBpbiBCb29rIDI1MTksIFBhZ2UgMjgzIG9mIE9mZmljaWFsIFJlY29yZHM7IHdoaWNoIGZ1cnRoZXIgcHJvdmlkZXMgYXMgZm9sbG93czoNClxwYXIgVGhlIHJpZ2h0IHRvIGNvbmR1Y3QgZHJpbGxpbmcgb3Igb3RoZXIgb3BlcmF0aW9ucyB1cG9uIHRoZSBzdXJmYWNlIG9mIHNhaWQgbGFuZHMgbGFzdCBkZXNjcmliZWQgb3IgYW55IHBvcnRpb24gdGhlcmVvZiwgd2l0aG91dCBmaXJzdCBoYXZpbmcgc2VjdQ0KcmVkIHRoZSB3cml0dGVuIGNvbnNlbnQgb2YgdGhlIHNlY29uZCBwYXJ0aWVzLCB0aGVpciBoZWlycyBhbmQgYXNzaWducywgb3IgdGhlIG93bmVyIG9yIG93bmVycyBvZiBzdWNoIHBvcnRpb25zIG9mIHRoZSBzdXJmYWNlIGFzIG1heSBiZSB1c2VkIGZvciBhIGRyaWxsaW5nIHNpdGUgb3Igc3VyZmFjZSBvcGVyYXRpb25zLCBidXQgbm90aGluZyBoZXJlaW4gY29udGFpbmVkIHNoYWxsIGJlIGRlZW1lZCB0byBwcmV2ZW50IHRoZSBncmFudG9yLCBpDQp0DQpzIHN1Y2Nlc3NvcnMgYW5kIGFzc2lnbnMsIGZyb20gZXh0cmFjdGluZyBvciBjYXB0dXJpbmcgc2FpZCBvaWwsIGdhcyBvciBvdGhlciBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzIG9yIG1pbmVyYWxzIGJ5IGRyaWxsaW5nIG9uIGFkamFjZW50IG9yIG5laWdoYm9yaW5nIGxhbmRzIGFuZC9vciBmcm9tIGNvbmR1Y3Rpbmcgc3Vic3VyZmFjZSBkcmlsbGluZyBvciBvdGhlciBvcGVyYXRpb25zIHVuZGVyIHNhaWQgbGFuZHMgbGFzdCBhYm92ZSBkZXNjcmkNCmJlZCBhdCBzdWNoIGRlcHRocyBhcyBub3QgdG8gZGlzdHVyYiB0aGUgc3VyZmFjZSB0aGVyZW9mIG9yIGFueSBpbXByb3ZlbWVudHMgdGhlcmVvbiwgd2FzIHdhaXZlZCBieSB0aGUgZ3JhbnRvcnMgaW4gc2FpZCBkZWVkLg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDUzNTIge1wqXGJrbWtzdGFydCBfRFZfTTcxfXtcKlxia21rZW5kIF9EVl9NNzF9XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KQVBOOiAgMjM3LTI4Ni0wMQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDUzNTIge1wqXGJrbWtzdGFydCBfRFZfTTcyfXtcKlxia21rZW5kIF9EVl9NNzJ9XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFRyYWN0IDINCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjMxNTA1XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTM1MiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ2NjA0NyB7XCpcYmtta3N0YXJ0IF9EVl9NNzN9e1wqXGJrbWtzdGFydCBfRFZfTTc0fXtcKlxia21rZW5kIF9EVl9NNzN9e1wqXGJrbWtlbmQgX0RWX003NH0NClRoZSB3ZXN0IFwnYmQgb2YgdGhlIHNvdXRod2VzdCBcJ2JjIG9mIHRoZSBub3J0aGVhc3QgXCdiYyBvZiB0aGUgc291dGhlYXN0IFwnYmMgb2YgU2VjdGlvbiAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIA0KUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NDY2MDQ3IA0KRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHNhaWQgbGFuZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgDQpmb3IsIG1pbmUgYW5kIHJlbW92ZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCBhbmQgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIFNlcHRlbWJlciAxMywgMTk2MCBpbiBCb29rIDMzMDIsIFBhZ2UgNDk5IG9mIE9mZmljaWFsIFJlY29yZHMufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDUzNTIgDQpccGFyIHtcKlxia21rc3RhcnQgX0RWX003NX17XCpcYmtta2VuZCBfRFZfTTc1fVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBBUE46ICAyMzctMTUyLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjMxNTA1XGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAxMg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciANClxwYXIgDQpccGFyIDQuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEFtZW5kZWQgYW5kIHJlc3RhdGVkIFNlY3Rpb24gQS40LmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxmaS03MjBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhLlx0YWIgDQpPJk0gQnVpbGRpbmc6ICBSaWdodHMgb2YgTG9uZSBWYWxsZXkgU29sYXIgUGFyayBJIExMQyBhbmQgTG9uZSBWYWxsZXkgU29sYXIgUGFyayBJSSBMTEMgKGNvbGxlY3RpdmVseSwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNjk1NDg4NCBTdWJsZXNzZWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopIHVuZGVyIHRoYXQgY2VydGFpbiBTdWJsZWFzZSBBZ3JlZW1lbnQgZGF0ZWQgRmVicnVhcnkgNiwgMjAxNSBieSBhbmQgYmV0d2VlbiB0aGUgQ28tT3duZXJzLCBhcyBzdWJsZXNzb3JzLCBhbmQgdGhlIFN1Ymxlc3NlZXMsIGFzIHN1Ymxlc3NlZXMuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDI1NjIwODAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmogXHBhcmRccGxhaW4gXGx0cnBhcg0KXHM1MVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMzQzODA3OCBFWEhJQklUIEItMQ0KXHBhciBQUk9KRUNUIFNVQlNUQVRJT04gU0hBUkVEIEZBQ0lMSVRJRVMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgT25lICgxKSAyMzBrViBEZWFkIEVuZCBTdHJ1Y3R1cmUgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClRhcGVyZWQgVHVidWxhciBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgTGlnaHRuaW5nIFN1cmdlIEFycmVzdG9ycywgMTgwa1YsIDE0NGtWIE1DT1YNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDb21wcmVzc2lvbiBUZWVzLCA3OTUgQUNTUiB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRoaXJ0eSAoMzApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TaXggKDYpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMTI3MiBrY21pbCBBQUMgdG8gTkVNQSA0LUhvbGUgUGFkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDYWJsZSBTdXBwb3J0cywgMi0xMjcyIEFBQyBjb25kdWN0b3JzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1GaXZlIEh1bmRyZWQgKDUwMCkgRmVldCBvZiAxMjcyIGtjbWlsIEFBQyAoTmFyY2lzc3VzKSBjb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUFzIE5lZWRlZCBDYWJsZSBTcGFjZXJzIDItMTI3MiBBQUMgY29uZHVjdG9ycywgNFwnOTQgc2VwYXJhdGlvbg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpUaHJlZSAoMykgMjMwa1YgU2luZ2xlIFBoYXNlIEJ1cyBTdXBwb3J0cywgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDYWJsZSBTdXBwb3J0cywgMi0xMjcyIEFBQyBjb25kdWN0b3JzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIH1ccGFyZCBcbHRycGFyXHM2XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANCk9uZSAoMSkgMjMwa1YsIDEyMDBBLCBHYW5nZWQgMy1QaGFzZSwgTW90b3IgT3BlcmF0ZWQgRGlzY29ubmVjdCBTd2l0Y2ggaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yLCBhc3NvY2lhdGVkIGhhcmR3YXJlLCBhbmQgc3dpdGNoIGdyb3VuZGluZyBwbGF0Zm9ybQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4ICg2KSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4ICg2KSBXZWxkZWQgVGVybWluYWwgQWRhcHRvcnMsIDItMTI3MiBrY21pbCBBQUMgdG8gTkVNQSA0LUhvbGUgUGFkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TaXh0eSAoNjApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1BcyBOZWVkZWQgQ2FibGUgU3BhY2VycyAyLTEyNzIgQUFDIGNvbmR1Y3RvcnMsIDRcJzk0IHNlcGFyYXRpb24NClxwYXIgfVxwYXJkIFxsdHJwYXJcczZccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KT25lICgxKSAyMzBrViwgTWV0ZXJpbmcgU3RhdGlvbiwgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1FcXVpcG1lbnQgY29udHJvbCB3aXJpbmcgYW5kIGludGVyY29ubmVjdGluZyBjb25kdWl0IGluY2x1ZGluZyBKdW5jdGlvbiBCb3hlcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIDIzMGtWLCA2MDA6NSBTaW5nbGUgUmF0aW8gRHVhbCBXaW5kaW5nLCBJbnN0cnVtZW50IEN1cnJlbnQgVHJhbnNmb3JtZXJzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgMjMwa1YsIDEyMDAvMjAwMDoxOjEgRHVhbCBXaW5kaW5nLCBJbnN0cnVtZW50IFBvdGVudGlhbCBUcmFuc2Zvcm1lcnMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVNpeCAoNikgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIENhYmxlIFNwYWNlciBUZWVzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIEFsdW1pbnVtIENhYmxlIFN1cHBvcnQgQnJhY2tldHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRoaXJ0eSAoMzApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIH1ccGFyZCBcbHRycGFyXHM2XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCAyMzBrViBTdWJzdGF0aW9uIFN1bW1hdGlvbiBCdQ0KcyBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBlcXVpcG1lbnQgYW5kIG1hdGVyaWFsOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KT25lICgxKSAyMzBrViwgVGhyZWUgUGhhc2UgTG93IEJ1cyBTdXBwb3J0LCB3aGljaCBpbmNsdWRlczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMlxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TdHJ1Y3R1cmUgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhyZWUgKDMpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1UaHJlZSAoMykgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1UaHJlZSAoMykgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhpcnR5ICgzMCkgRmVldCBvZiAxMjcyIGtjbWlsIEFBQyAoTmFyY2lzc3VzKSBjb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClRoaXJ0ZWVuICgxMykgMjMwa1YsIFNpbmdsZSBQaGFzZSBMb3cgQnVzIFN1cHBvcnRzLCB3aGljaCBpbmNsdWRlczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMlxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TdHJ1Y3R1cmUgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhpcnRlZW4gKDEzKSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhpcnRlZW4gKDEzKSBCdXMgU3VwcG9ydHMsIDRcJzk0IElQUyBBbHVtaW51bSBCdXMgdG8gNVwnOTQgQm9sdCBDaXJjbGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTaXggKDYpIDIzMGtWLCBTaW5nbGUgUGhhc2UgSGlnaCBCdXMgDQpTdXBwb3J0cywgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVNpeCAoNikgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVNpeCAoNikgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgRm91ciAoNCkgMjMwa1YsIFRocmVlIFBoYXNlIA0KSGlnaCBCdXMgU3VwcG9ydCwgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVR3ZWx2ZSAoMTIpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1Ud2VsdmUgKDEyKSBCdXMgU3VwcG9ydHMsIDRcJzk0IElQUyBBbHVtaW51bSBCdXMgdG8gNVwnOTQgQm9sdCBDaXJjbGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBUaHJlZSAoMykgMjMNCjBrViwgVGhyZWUgUGhhc2UgTG93IEJ1cyBTdXBwb3J0LCB3aGljaCBpbmNsdWRlczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMlxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TdHJ1Y3R1cmUgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZSAoOSkgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIEJ1cyBTdXBwb3J0cywgNFwnOTQgSVBTIEFsdW1pbnVtIEJ1cyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZSAoOSkgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZXR5ICg5MCkgRmVldCBvZiAxMjcyIGtjbWlsIEFBQyAoTmFyY2lzc3VzKSBjb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANCk5pbmUgKDkpIDIzMGtWLCBBbHVtaW51bSBBLUZyYW1lcywgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgRWlnaHRlZW4gKDE4KSBUZWUgQ29ubmVjdG9yLCA0XCc5NCBJUFMgTWFpbiB0byAzDQpcJzk0IElQUyBUYXAsIDE1XCdiMA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZSAoOSkgVGVlIENvbm5lY3RvciwgNFwnOTQgSVBTIE1haW4gdG8gMi0zXCc5NCBJUFMgVGFwcywgMTVcJ2IwDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1Ud28gSHVuZHJlZCBUZW4gKDIxMCkgRmVldCBvZiAzXCc5NCBJUFMgQWx1bWludW0gQnVzLCA2MDYzLVQ2DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgRWlnaHQgSHVuZHJlZCBGaWZ0eSAoODUwKSBGZWV0IG9mIDRcJzk0DQogSVBTIEFsdW1pbnVtIEJ1cywgNjA2My1UNg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RWlnaHQgSHVuZHJlZCBGaWZ0eSAoODUwKSBGZWV0IG9mIDc5NSBrY21pbCBBQ1NSIChEcmFrZSkgQ29uZHVjdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCANCg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgQWJvdmUgYW5kIEJlbG93IEdyb3VuZCBSYWNld2F5cyBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANCkNvbmR1aXRzLCBmaXR0aW5ncywgYW5kIGNvbm5lY3RvcnMgY29ubmVjdGluZyBzaGFyZWQgZmFjaWxpdHkgZXF1aXBtZW50IG9yIGFwcGFyYXR1cyB0byBvdGhlciBTdWJzdGF0aW9uIGNvbXBvbmVudHMgbG9jYXRlZCB3aXRoaW4gdGhlIFN1YnN0YXRpb24NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUNhYmxlIFRyZW5jaCwgVHJlbmNoIENvdmVycywgVHJlbmNoIEhhbmdlcnMsIGFuZCBUcmVuY2ggR3JvdW5kaW5nIE1hdGVyaWFscw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3Vic3RhdGlvbiBHcm91bmQgR3JpZCBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHMNCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KVHdlbnR5IFRocmVlIFRob3VzYW5kICgyMywwMDApIEZlZXQgb2YgIzQvMCBrY21pbCAxOSBTdHJhbmQsIEJhcmUgQ29wcGVyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RXhvdGhlcm1pYyBDcm9zcyBjb25uZWN0aW9ucyB+IGluY2x1ZGluZyBtb2xkcywgc2hvdHMsIGFuZCBhY2Nlc3Nvcmllcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RXhvdGhlcm1pYyBUZWUgY29ubmVjdGlvbnMgfiBpbmNsdWRpbmcgbW9sZHMsIHNob3RzLCBhbmQgYWNjZXNzb3JpZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUV4b3RoZXJtaWMgTHVnIGNvbm5lY3Rpb25zIH4gaW5jbHVkaW5nIG1vbGRzLCBzaG90cywgYW5kIGFjY2Vzc29yaWVzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI0XGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANClN1YnN0YXRpb24gTGlnaHRpbmcgYW5kIExpZ2h0bmluZyBQcm90ZWN0aW9uIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIG1hdGVyaWFscw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpFaWdodCAoOCkgU3RhdGljIE1hc3RzLCA5MFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgIFRhbGwgd2l0aCBwcm92aXNpb24gZm9yIHlhcmQgbGlnaHRpbmcNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRmlmdGVlbiAoMTUpIFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANCjQwMFcsIEhQUyBGbG9vZCBMaWdodHMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUzXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzhcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpTdWJzdGF0aW9uIEZlbmNpbmcgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTEwODBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANCkZpZnRlZW4gSHVuZHJlZCAoMTUwMCkgRmVldCBvZiBmZW5jZSwgOFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgIHRhbGwsIDdcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwICBtZXNoIHdpdGggdGhyZWUgc3RyYW5kcyBvZiBiYXJiZWQgd2lyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpGZW5jZSBwb3N0cywgZ2F0ZXMsIGhhbmdlcnMsIGFuZCBncm91bmRpbmcgbWF0ZXJpYWxzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTFccWogXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxNlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiBDb250cm9sIEJ1aWxkaW5nIGFuZCBhbGwgZXF1aXBtZW50IGFuZCBmaXh0dXJlcyBsb2NhdGVkIHRoZXJlaW59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIGV4Y2VwdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAyMzkyNDMgZmVlZGVyIHJlbGF5cywgYnJlYWtlcnMgYW5kIGNvbGxlY3Rpb24gc3lzdGVtIGZpYmVyIG9wdGljIGNhYmxlcyBmb3IgdGhlIGluZGl2aWR1YWwgd2luZCB0dXJiaW5lIGdlbmVyYXRvcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQzNDM4MDc4XHNmdG5iaiBccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBFWEhJQklUIEItMg0KXHBhciBUUkFOU01JU1NJT04gTElORSBTSEFSRUQgRkFDSUxJVElFUw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTE0MTcwMzMgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIDMuOTktbWlsZSAyMjBrViBnZW5lcmF0aW9uIHRpZS1saW5lLCBvcHRpY2FsIGdyb3VuZCB3aVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCByZSBvbiB0aGUgZ2VuZXJhdGlvbiB0aWUtbGluZSBmb3IgdGhlIHByaW1hcnkgdGVsZWNvbW11bmljYXRpb25zIHBhdGgsIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBpbmNsdWRpbmcgb25lIG9yIG1vcmUgc2luZ2xlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMTQxNzAzMyBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgLW1vZGUgZmliZXIgb3B0aWMgY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMTQxNzAzMyBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgIGZvciB0aGUgZGl2ZXJzZSB0ZWxlY29tbXVuaWNhdGlvbnMgcGF0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwICBhbmQgU0NBREEgU3lzdGVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMTQxNzAzMyBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgLCBhcHB1cnRlbmFudCBzdHJ1Y3R1cmVzLCBhbmQgZmFjaWxpdGllcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmc6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1XGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjRcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjM3XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRm9ydHkgVHdvXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KICg0MikgdHJhbnNtaXNzaW9uIHN0cnVjdHVyZXMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIEZvcnR5IFR3byAoNDIpIHR1YnVsYXIgc3RlZWwgcG9sZXMNCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIE9uZSBIdW5kcmVkIFR3ZW50eSAoMTIwKSAyMzBrViAzMEsgSW5zdWxhdG9ycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIA0KT25lIEh1bmRyZWQgVHdlbnR5ICgxMjApIFN1c3BlbnNpb24gSGFyZHdhcmUgQXNzZW1ibGllcyBmb3IgNzk1IEtDTUlMIEFDU1IgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIERyYWtlXCc5NA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIEZvcnR5ICg0MCkgMjMwa1YgNTBLIEluc3VsYVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCB0b3JzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgRm9ydHkgKDQwKSBEZWFkIEVuZCBIYXJkd2FyZSBBc3NlbWJsaWVzIGZvciA3OTUgS0NNSUwgQUNTUiBcJzkzDQpcbG9jaFxmMCBcaGljaFxmMCBEcmFrZVwnOTQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSBGaXZlICg0NSkgT1BHVyBIYXJkd2FyZSBBc3NlbWJsaWVzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgRm91ciAoNCkgRGVhZCBFbmQgSGFyZHdhcmUgQXNzZW1ibGllcyBmb3IgMy84XCc5NFxsb2NoXGYwIA0KIFNoaWVsZCBXaXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTEyMDc4MDUgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMTIwNzgwNSANClxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBTdHJ1Y3R1cmUgZ3JvdW5kaW5nIHJvZHMgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFN0cnVjdHVyZSBzaWduYWdlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFNldmVudHkgVGhvdXNhbmQgDQpcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVHdvIEh1bmRyZWQgKDcwLDIwMCkgRmVldCBvZiA3OTUgS0NNSUwgQUNTUiBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgRHJha2VcJzk0XGxvY2hcZjAgIENvbmR1Y3Rvcg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KVHdlbnR5IFRocmVlIFRob3VzYW5kICgyMywwMDApIEZlZXQgb2YgNDggRmliZXIsIFNpbmdsZSBNb2RlIE9QR1csIEROTyA2MjExDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVGhyZWUgKDMpIE9QR1cgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIENveW90ZVwnOTRcbG9jaFxmMCANCiBTcGxpY2VzIGluY2x1ZGluZyBzcGxpY2UgY2FzZSwgc3BsaWNlcyBhbmQgbW91bnRpbmcgaGFyZHdhcmUuIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIE9uZSBUaG91c2FuZCBGb3VyIEh1bmRyZWQgYW5kIFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANCkZpZnR5ICgxLDQ1MCkgQmlyZCBGbGlnaHQgRGl2ZXJ0ZXJzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVHdvIEh1bmRyZWQgKDIwMCkgRmVldCBvZiAzLzhcJzk0XGxvY2hcZjAgDQogSFMgNy1TdHJhbmQgU2hpZWxkIFdpcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBUd2VudHkgRml2ZSBUaG91c2FuZCBGaXZlIEh1bmRyZWQgKDI1LDUwMCkgRmVldCBvZiBBRFNTIEZpYmVyIE9wdGljIENhYmxlDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCBUd2VudHkgVHdvIFRob3VzYW5kICgyMiwwMDApIEZlZXQgb2YgMSBcJ2JjXCc5NFxsb2NoXGYwIA0KIGlubmVyIGR1Y3QNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiANClxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBTcGxpY2UgYm94L3B1bGwgYm94LCBpbmNsdWRpbmcgc3BsaWNlc1xoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCAsIGZvciBjYWJsZSB0byBBVCZUDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIENhcmJvbiBmaWJlciBqdW5jdGlvbiAoQ0ZKKSBwZWRlc3RhbA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCBGaWZ0eSAoNTApIGZlZXQgb2YgMlwnOTRcbG9jaFxmMCANCiBTY2hlZHVsZSA0MCBQVkMgY29uZHVpdCB0by9mcm9tIENGSiBwZWRlc3RhbCB0byBob3VzZSBib3RoIGZpYmVyIG9wdGljIGNhYmxlIGFuZCBjb3BwZXIgY29uZHVjdG9ycw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmoge1xmb290ZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWMgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEMtMQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggRVhISUJJVCBDDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ2NTk5ODYgSU5URVJFU1RTIEFORCBQUk9QT1JUSU9OQVRFIFNIQVJFU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBBLlx0YWIgVW5kaXZpZGVkIE93bmVyc2hpcCBJbnRlcmVzdHMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBUaGUgT3duZXJzaGlwIEludGVyZXN0IG9mIGVhY2ggQ28tT3duZXIgaW4gZWFjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIHNoYWxsIGJlIGFzIHNldCBmb3J0aCBpbiBUYWJsZSBDIGJlbG93LiAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBCLlx0YWIgUHJvcG9ydGlvbmF0ZSBTaGFyZXMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBUaGUgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZiBlYWNoIENvLU93bmVyIHNoYWxsIGJlIGFzIHNldCBmb3J0aCBpbiBUYWJsZSBDIGJlbG93LiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IEMuXHRhYiBTaGFyZWQgQXNzZXQgR3JvdXBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSBSU1QgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXAgKEFsbCBDby1Pd25lcnMpDQpccGFyIFxsdHJyb3d9XHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5Mw0KXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgRXF1aXBtZW50IE5hbWVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OCBSU1QgSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgDQpcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQzNDM4MDc4IFJTVCBJfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IElcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OCBSU1QgSUlJfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGJcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IA0KXGx0cnJvd31cdHJvd2QgXGlyb3cxXGlyb3diYW5kMVxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzDQpccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgUHJvamVjdCBTdWJzdGF0aW9uXGNlbGwgfVxwYXJkIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxpbnNyc2lkMzQzODA3OCA0MCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IDV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANClxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFRyYW5zbWlzc2lvbiBMaW5lXGNlbGwgfVxwYXJkIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxpbnNyc2lkMzQzODA3OCA0MCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IDV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRyb3dkIFxpcm93Mlxpcm93YmFuZDJcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANClxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJvYWRzIGluIFNlY3Rpb25zIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCA5LCAxMCwgMTEsIDE1IGFuZCAxNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGNlbGwgfVxwYXJkIFxsdHJwYXINClxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCA0MCVcY2VsbCAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJQ0KfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IFxjZWxsIDV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHRyb3dkIFxpcm93M1xpcm93YmFuZDNcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQpcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPJk0gRmFjaWxpdHlcY2VsbCB9XHBhcmQgXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCA0MCVcY2VsbCAxfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IFxjZWxsIDV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcaW5zcnNpZDM0MzgwNzggXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRyb3dkIFxpcm93NFxpcm93YmFuZDRcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQpcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgRW52aXJvbm1lbnRhbCBNaXRpZ2F0aW9uIFBhcmNlbHNcY2VsbCB9XHBhcmQgXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiA3MCVcY2VsbCAxNSVcY2VsbCAxNSVcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcdHJvd2QgXGlyb3c1XGlyb3diYW5kNVxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHQNClxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSANClxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEFsbCBvdGhlciBTaGFyZWQgRmFjaWxpdGllc1xjZWxsIH1ccGFyZCBcbHRycGFyDQpcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggNDAlXGNlbGwgMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgMCUNCn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCBcY2VsbCA1fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClx0cm93ZCBcaXJvdzZcaXJvd2JhbmQ2XGxhc3Ryb3cgXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IA0KfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1IA0KUlNUIEkvSUkgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXAgKFJpc2luZyBUcmVlIEkgYW5kIFJpc2luZyBUcmVlIElJIG9ubHkpDQpccGFyIFxsdHJyb3d9XHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgRXF1aXBtZW50IE5hbWVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OCBSU1QgSX17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQzNDM4MDc4IFJTVCBJfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IElcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgDQpcdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccm93IFxsdHJyb3d9XHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgXGNlbGwgXGNlbGwgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IA0KXHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSb2FkcyBpbiBTZWN0aW9ucyAxLCAyLCAzNSBhbmQgMzZcY2VsbCB9XHBhcmQgXGx0cnBhcg0KXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IDgwJVxjZWxsIDJ9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlDQp9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRyb3dkIFxpcm93Mlxpcm93YmFuZDJcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIA0KXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIFx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMTdccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IE1ldCBUb3dlciBSU1QgMS1CL1JTVCAyXGNlbGwgfVxwYXJkIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggODAlXGNlbGwgMn17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcdHJvd2QgXGlyb3czXGlyb3diYW5kM1xsYXN0cm93IFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxyb3cgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQzNDM4MDc4XHNmdG5iaiB7XGZvb3RlcmYgXGx0cnBhciANClxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBELTENClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEVYSElCSVQgRA0KXHBhciBNQVRFUklBTCBQUk9KRUNUIEFHUkVFTUVOVFMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFsIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1NDcxNTY0IA0KSGlnaCBWb2x0YWdlIEVuZ2luZWVyaW5nLCBQcm9jdXJlbWVudCBhbmQgQ29uc3RydWN0aW9uIENvbnRyYWN0IGJ5IGFuZCBiZXR3ZWVuIEJsYXR0bmVyIEVuZXJneSBJbmMuLCBhIE1pbm5lc290YSBjb3Jwb3JhdGlvbiBhbmQgUmlzaW5nIFRyZWUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCBJLCBkYXRlZCBhcyBvZiBGZWJydWFyeSAzLCAyMDE1Lg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM0NDI4MDkgDQpPcGVyYXRpb25zIGFuZCBNYWludGVuYW5jZSBGYWNpbGl0eSBFbmdpbmVlcmluZywgUHJvY3VyZW1lbnQgYW5kIENvbnN0cnVjdGlvbiBDb250cmFjdCwgZGF0ZWQgYXMgb2YgSmFudWFyeSAyMiwgMjAxNSwgYmV0d2VlbiBSaXNpbmcgVHJlZSBJLCBhbmQgV2F0dGVuYmFyZ2VyIFdlbGxzIENvbnN0cnVjdGlvbiwgSW5jLiBEQkEgV1dDSSwgYSBDYWxpZm9ybmlhIGNvcnBvcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDIxNzY3MzZcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTUwODgwNjcgRS19e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSANClxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTA4ODA2NyAgUEFHRSAgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2NTE5MDggNX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDExNDI4Njk3IHtcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAwXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6MTJcc2hwbGlkMjIzNw0Ke1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBsVHhpZH17XHN2IDkxNzUwNH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19DQp7XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiBUZXh0IEJveCA5fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gbWV0cm9CbG9ifXtcc3Yge1wqXHN2YiANCjUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBiNjgzMzg5MmZlMDAwMDAwZTEwMTAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjOTQ5MTQxNGVjMzMwMTA0NWY3NDhkY2MxZjIxNjI1NGViYjQwMDgyNWU5ODJiNDRiNDBhODFjNjA2NDRmMTI4YjY0NmM3OTRjNjg2ZjhmOTNiNjFiNDQ5MTU4ZGEzM2ZmYmYyN2JiZGMxY2M2NDE0YzE4ZDgzYWFhZTQyYTJmYTQ0MGQyY2U1OGVhMmFmOWJlZGY2NTBmNTI3MDA0DQozMjMwMzhjMjRhMWU5MWU1YTZiZWJkMjlmNzQ3OGYyYzUyOWFiODkyN2Q4Y2ZlNTEyOWQ2M2Q4ZWMwYjlmMzQ4NjlkMmJhMzA0MjRjYzdkMDI5MGZmYTAzM2E1NGViYTJiODU3ZGE1MTQ0OGE1OTljM2I2NDVkMzZkOGMyZTcxMGM1ZjY5MGFlNGYyNjAxMDc5NmUyZTliNDM4YjMyYTA5ZGUwZjU2NDM0Y2E2NmEyMmYzODM5MjlkMDk3OTRhMmUzYmRjNWJjZjc3NDk0M2FhNWYwOWYzZTQzYWUwOWM3YjQ5NGYxM2FjNDFmMTBhMjEzZWMzOTgzNDk0MDlhYw0KNzBlZDFhYTdmM2JmM2I2NmM5OTEzM2Q3YjY1NjYzZGUwNGRlMmVhOThiZDNiNTZlZTNiZTI4ZTBmNGRmZjIyNmM1ZGU3MGJhYjRhYmU1ODNlYTZmMDAwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwMzhmZDIxZmZkNjAwMDAwMDk0MDEwMDAwMGIwMDAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczYTQ5MGMxNmFjMzMwMGM4NmVmODNiZDgzZDE3ZDcxOWFjMzE4YTM0ZTJmYTNkMDZiZTkxZWMwZDg4YTYzMWE1YjQ2MzJkOWZhZjYNCjMzODNjMTMyN2FkYjUxYmZkMGY3ODk3ZjdmZjg0YzhiNWE5MTI1NTIzNmIwZWI3YTUwOTgxZGY5OTg4MzgxZjdjYmYxZTkwNTk0NTQ5YmJkNWQyOGEzODExYjBhMWNjNmM3ODdmZDE5MTc1YmRiOTFjY2IxODg2YTk0MmMwNmU2NWFjYmFiZDZlMjY2NGM1NjNhMmE5OGRiNjYyMjRlYjZiNjkxODMyZWQ2NWQ2ZDQwM2RmNGZkYjNlNmRmMGMxODM3NGM3NWYyMDZmOGU0MDc1MDk3NWI2OWU2M2ZlYzE0MWQ5M2QwNTQzYjQ3NDlkMzM0NDU3NzhmYWEzZDdkDQplNDMzYWU4ZDYyMzk2MDM1ZTA1OWJlNDNjNmI1NmJjZjgxYmVlZmRkZmRkMzFiZDg5NjM5YmEyM2RiODQ2ZmU0YjY3ZTFjYTg2NTNmN2FiZGU5NzJmYzAyMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGU3OGY3ZGJlYjIwMjAwMDBiMTA1MDAwMDBlMDAwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2Y2FjNTQ1YjZmOWIzMDE0N2U5ZmI0ZmY2MGY5OWQ2MjI4NDkwMzJhYTlkYTEwYTY0OWRkNDU2YWY3MDMxYzMwYzExYQ0KZDhjYzc2MDJkZGI0ZmZiZTYzMTM3MmU5NWVhNjZkM2M1ODA3ZmJmODNiOTdlZmYzYjliZDFiZGEwNmVkOTlkMjVjOGExNDA3NTcwNDIzMjYwYTU5NzJiMTRkZjE5N2U3ZGM1YjYwYTQwZDE1MjU2ZGE0NjAyOTdlNjExYWRmMmRkZmJlYjllZGJiODQ4NWIyOTY0ZGM5MTQwMjEwYTE5M2JlNGI3MTZkNGM5N2Y4YmUyZTZhZDY1MjdkMjUzYjI2ZTBiMDkyYWFhNTA2N2VkNWQ2MmYxNWVkMDFiZDZkZmM5MDkwYjlkZjRiNTU3NjRhMTY0YzZiZDhjZGM2NDMNCmJjNzRmODU1YzUwYWYzYTlhYTM0MzNhODQ5MzFlNDY2ZGNhYWRjYmFiMWFiYmZiY2E1Yzk1NmQxYWVlNmM1MjEwZGZhMTc1OWI0OTQwYjA4N2E4NGNhYThhMTY4YTdmODZmNTAyZDJmOTRkNGIyMzI1Nzg1NmM3ZDU5NTViYzYwYWUwNmE4MjYyMGFmYWE3OWFhNjljNzVjMmRkMDFjZGQxZGRiYTRmZjFmNmNmMTcxZmY1OTIxNWVhNjM4YzY0OGQwMTYyODdhNjY4MzQxMGY3MjQwYjFlZDRlZGZlOTA0OWM5ZTNhNzAzMzAzNmMwM2NiYWU1MmRkM2RjYWUyDQphYjQ2NDJhZTZhMmFiNmVjNWUyOWQ5ZDc4Yzk2OTA1ZDYwNmZmYTY3NTc0NzFjNmQ0MTM2ZmQwNzU5NDIxOGJhMzNkMjAxMGQ5NTZhNmRlYmEwMTkwOGQwODFhNTk3MjMzMzM2OTUwMjM2YzNkOTljNWM4NzcwNTRjMDU5Mzg4YjA4NzFkNGY5MzQ5OTZlNzc0YTliNzc0Y2I2YzgxYTI5NTZjMGJjNDNhN2ZiNDc2ZDZjMzYzNDk5NWM2YzMwMjE3M2RlMzQ4ZWZkNDY1YzZjODBlM2I4MDNiMWUxYWEzZGIzNTkzODMyN2ZjNDI0NWUyZmQ2OGJjODhiYzJmOQ0KZGE4YjQ4OTY3OWY3ZjkyYWYyZTY3OTcwMzNjYmFlYjNkNTJhMGI3ZWRhYjg0MTk0ZDRiYzJjOTliMDYxMjY2MTA1ZDE5ZjExNzc5MGY4Mjg4OWEzYjRiNDZjNzg2OWUxNmM0YTVhNmQzN2FiNDZhMTNkMDU2MWU3ZWU3MzNkODc5MzkzOWI3Zjk5ODY2YjAyZDRmMmFhYTQyMDhjYzg0MzE4N2JmOTdjNzFlMzQ1NzkzNGYzZTIxYmIyZjA0ODEwM2ZjNDczMTJjNTUxOTY1Zjk2ZjRjODA1ZmJmNzkyNTAwZjlhOWI4NWIzNTE0Y2E3YTQ1ZmQ1MDY0YzlmYzgNCjNlYWI4ZDI2MmQzNzMwM2ExYWRlYTY3ODcxNzRhMjg5OTVlMDVhOTQ4ZTVhNDM3OTMzZGE2N2FkYjBlOTlmNWEwMTc0NGY0NDNiYzE1YThkOGU2YTM1YzM2NjcwMmYyMzcwNzJiNjZhZGVjOGYyMDUyNGFjMjQyODBjYzQwODczMGY4YzVhYWFlZjE4ZjUzMDQzNTJhY2JmZWRhODYyMTgzNWVmMDUzYzAzM2I3MDI2NDM0ZGM2NjYzMmE4MjhlMDZhOGEwZDQ2YTNiOTMyZTM2MGRhNzU4YTZmNmI0MDllMWVkYTNkM2M5NTljM2IxNTlmYjIzODNjMzA5ODBiDQphZTk4YzMwY2IzODNlN2ZjZGY3OTlkMjZlZGYyMTcwMDAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA1YzQxNjZjMGQ5MDAwMDAwMDQwMTAwMDAwZjAwMDAwMDY0NzI3MzJmNjQ2Zjc3NmU3MjY1NzYyZTc4NmQ2YzRjOGYzMTRmYzMzMDEwODU3N2E0ZmUwN2ViMmFiMTIwNmEyN2EwMGE0MjljYWFhYTYwNjFhMzY1NjFiYmM2NDcxMjYxOWZhM2Q4NGQ0MjdmM2QyZTBiMmNhNzc3N2FhN2Y3YmUyYjM3YjNiMzYyYTQyMTc0OWUzNQ0KNjQyYjA1ODJiOGY2YTZlMzQ2YzNmYmUxZTVmNjAxNDQ4OGM4MDZhZDY3ZDJmMDRkMDEzNmQ1ZTJhYWM0YzJmODg5ZGY2OGRjYzc0NmE0MTAwZTA1NmE2ODYzZWMwYjI5NDNkZDkyYzNiMGYyM2Q3MWYyM2VmZGUwMzBhNjc1NjhhNDE5NzA0YWUxY2VjYTVjYTliNTc0ZDg3MTZhNjhiMWE3NWQ0YmY1ZDdmZWU0MzRhY2U3ZTdmZWU2ZjU5MWYyZTk1Y2RiOTEzZmNlNTkxNjI5ZDNmYTdhMzk2ZjlmNDA0NDlhZTNkZjMxNWNmMDEzM2E1NDg5ZTllODRmNmMNCjgyYjAxYWQyMjNmMTc3MjZlZjVlZGRlNTIwOGUxN2ExNDA1NmE1ZmMwZjVmZmQwMDAwMDBmZmZmMDMwMDUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwYjY4MzM4OTJmZTAwMDAwMGUxMDEwMDAwMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDM4ZmQyMWZmZDYwMDAwMDA5NDAxMDAwMDBiMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDJmMDEwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3MzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwZTc4ZjdkYmViMjAyMDAwMGIxMDUwMDAwMGUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJlMDIwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwNWM0MTY2YzBkOTAwMDAwMDA0MDEwMDAwMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMGMwNTAwMDA2NDcyNzMyZjY0NmY3NzZlNzI2NTc2MmU3ODZkNmM1MDRiMDUwNjAwMDAwMDAwMDQwMDA0MDBmMzAwMDAwMDEyMDYwMDAwMDAwMH19fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NjMzNjB9fXtcc3B7XHNuIGZIaWRkZW59e1xzdiAwfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhcg0KXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCk9IU1VTQTo3NjE5ODQ1NzkuMTIgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MjA0XGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzYxOTg0NTc5LjEyIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDBcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTA4ODA2NyANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNDQ1OTIyIEVYSElCSVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBFfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNDQ1OTIyIA0KDQpccGFyIEZPUk0gT0YgQU1FTkRFRCBNRU1PUkFORFVNDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyBSRUNPUkRJTkcgUkVRVUVTVEVEIEJZfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU2ODQ1OTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyBBTkQgV0hFTiBSRUNPUkRFRCBNQUlMIFRPOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU2ODQ1OTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyBSSVNJTkcgVFJFRSBXSU5EIEZBUk0gTExDDQpccGFyIDgwOCBUcmF2aXMsIFN1aXRlIDcwMA0KXHBhciBIb3VzdG9uLCBUWCA3NzAwMg0KXHBhciBBdHRuOiBHZW5lcmFsIENvdW5zZWwNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NDg2NTMwIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQwNzk2NSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQU1FTkRFRCBNRU1PUkFORFVNIE9GXGxpbmUgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UIEFORFxsaW5lIA0KR1JBTlQgT0YgUklHSFRTDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggVEhJUyBBTUVOREVEIE1FTU9SQU5EVU0gT0YgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UIEFORCBHUkFOVCBPRiBSSUdIVFMgKHRoaXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM3ODQ0MSBNZW1vcmFuZHVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopLCBpcyBtYWRlIGFuZCBlbnRlcmVkIGludG8gYXMgb2YgSnVuZSAyOSwgMjAxNSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEV4ZWN1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM3ODQ0MSAgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NA0KKSwgYnkgYW5kIGFtb25nIFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICBXaW5kIEZhcm0gTExDIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgXCc5NCksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBcJzk0KSwgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICBMTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3IFwnOTQpLCBlYWNoIG9mIHdoaWNoIGlzIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueS4gICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSSwgUmlzaW5nIFRyZWUgSUkgYW5kIFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IElJSSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGhlcmVpbiBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDg4NjUwNTcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgXCc5NA0KIGFuZCBjb2xsZWN0aXZlbHkgYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4ODY1MDU3IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBcJzk0LiBUaGUgQ28tT3duZXJzIGFyZSBjb2xsZWN0aXZlbHkgcmVmZXJyZWQgdG8gaGVyZWluIGFzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4ODY1MDU3IFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIGFuZCBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODg2NTA1NyBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBcJzk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQS5cdGFiIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzk1MTQyNSBUaGUgUGFydGllcyBoYXZlIGVudGVyZWQgaW50byB0aGF0IGNlcnRhaW4gdW5yZWNvcmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NDQ2NzUgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzk1MTQyNSBTaGFyZWQgRmFjaWxpdGllcyBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OCBkYXRlZCBEZWNlbWJlciAzLCAyMDE0IH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzk1MTQyNSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDM5NTE0MjUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDM5NTE0MjUgXCc5NCksIHdoaWNoIGFmZmVjdHMgKGkpIGNlcnRhaW4gcmVhbCBwcm9wZXJ0eSBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgaW4gRXhoaWJpdCBBIGF0dGFjaGVkIGhlcmV0byBhbmQgbWFkZSBhIHBhcnQgaGVyZW9mIChzdWNoIHJlYWwgcHJvcGVydHkgY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzOTUxNDI1IFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzOTUxNDI1IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4ICAgQSBtZW1vcmFuZHVtIG9mIHRoZSBBZ3JlZW1lbnQgd2FzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDI1NjIwODAgcmVjb3JkZWQgaW4gdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgS2VybiBDb3VudHksIENhbGlmb3JuaWEgb24gRGVjZW1iZXIgMTAsIDIwMTQsIGFzIEluc3RydW1lbnQgTm8uIDAyMTQxNTI3NTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4IC59e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEIuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4IFRoZSBQYXJ0aWVzIGhhdmUgZW50ZXJlZCBpbnRvIGEgRmlyc3QgQW1lbmRtZW50IHRvIFJpc2luZyBUcmVlIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCBvZiBldmVuIGRhdGUgaGVyZXdpdGggKHRoZSBcJzkzQW1lbmRtZW50XCc5NA0KKS4gIFJlZmVyZW5jZXMgaGVyZWluIHRvIHRoZSBBZ3JlZW1lbnQgbWVhbiB0aGUgQWdyZWVtZW50IGFzIGFtZW5kZWQgYnkgdGhlIEZpcnN0IEFtZW5kbWVudCwgdW5sZXNzIHRoZSBjb250ZXh0IHJlcXVpcmVzIG90aGVyd2lzZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMjU2MjA4MCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MDgzOCBUaGUgUGFydGllcyBoYXZlIGV4ZWN1dGVkIGFuZCBhY2tub3dsZWRnZWQgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4IEFtZW5kZWQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IE1lbW9yYW5kdW0gYW5kIGFyZSByZWNvcmRpbmcgdGhlIHNhbWUgZm9yIHRoZSBwdXJwb3NlIG9mIHByb3ZpZGluZyBjb25zdHJ1Y3RpdmUgbm90aWNlIG9mIHRoZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4ICwgYXMgYW1lbmRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTA4MzggIGFuZCB0aGUgUGFydGllc1xycXVvdGUgIHJpZ2h0cyB0aGVyZXVuZGVyLiAgQ2FwaXRhbGl6ZWQgdGVybXMgdXNlZCBhbmQgbm90IGRlZmluZWQgaGVyZWluIGhhdmUgdGhlIG1lYW5pbmcgZ2l2ZW4gdGhlIHNhbWUgaW4gdGhlIEFncmVlbWVudC4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczRccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjhcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTk9XLCBUSEVSRUZPUkUsIHRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNFxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNTYyMjUzIEdyYW50IG9mIFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDU2MjI1MyAuICBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2Ugc2V0IGZvcnRoIGluIHRoZSBBZ3JlZW1lbnQgYW5kIHRoZQ0KIHRlcm1zIGFuZCBjb25kaXRpb25zIGluIGVhY2ggb2YgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTA1NjIyNTMgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9fVxwYXJkIFxsdHJwYXJcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCmVhY2ggQ28tT3duZXIgb2YgU2hhcmVkIEZhY2lsaXRpZXMgYW5kL29yIFNoYXJlZCBSZWFsIFByb3BlcnR5IGluIGEgU2hhcmVkIEFzc2V0cyBHcm91cCAoYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1NTI0MzMxIEdyYW50aW5nIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopIGhlcmVieSBzZWxscywgZ3JhbnRzLCBhc3NpZ25zLCB0cmFuc2ZlcnMgYW5kIGNvbnZleXMgdG8gdGhlIG90aGVyIENvLU93bmVyDQpzIG9mIFNoYXJlZCBGYWNpbGl0aWVzIGFuZC9vciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYW4gdW5kaXZpZGVkIGludGVyZXN0LCBhcyB0ZW5hbnRzLWluLWNvbW1vbiwgaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwLCBpbmNsdWRpbmcgc3VjaCByaWdodHMsIGJlbmVmaXRzIGFuZCBpbnRlcmVzdHMgYXMgdGhlIEdyYW50aW5nIENvLU93bmVyIG1heSBoYXZlIGluLCB0byBvciB1bmRlciBhbnkgZGUNCmUNCmRzLCBjb252ZXlhbmNlcywgZ3JhbnRzLCBlYXNlbWVudHMsIGFncmVlbWVudHMsIGxlYXNlcyBvciBvdGhlciBpbnN0cnVtZW50cyBvciBkb2N1bWVudHMgY3JlYXRpbmcsIGdyYW50aW5nLCBhc3NpZ25pbmcgb3IgY29udmV5aW5nIHRoZSBHcmFudGluZyBDby1Pd25lciBpdHMgcmlnaHQsIHRpdGxlIGFuZCBpbnRlcmVzdCBpbiBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCwgc3VjaCB0aGF0IGVhY2ggc3VjaCBDby1Pd25lciBzaGFsbCBvd24gYW4gdQ0KbmRpdmlkZWQgaW50ZXJlc3QsIGFzIGEgdGVuYW50LWluLWNvbW1vbiwgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYXMgZGVzY3JpYmVkIGluIEV4aGliaXQgQiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1MDczMTIgDQphdHRhY2hlZCB0byB0aGUgQWdyZWVtZW50O317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzUwNzMxMiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGVhY2ggQ28tT3duZXIgd2hvIGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QgaW4gYSBTaGFyZWQgQXNzZXRzDQogR3JvdXAgc2hhbGwgaGF2ZSBhbiB1bmRpdmlkZWQgcmlnaHQgdG8gdGhlIHVzZSBvciBjYXBhY2l0eSBvZiB0aGUgU2hhcmVkIEFzc2V0cyBpbiBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSB0aGVyZWluLCB3aGljaCByaWdodCBpcyBleGVyY2lzYWJsZSB1cG9uIHRoZSBDb21taXNzaW9uaW5nIERhdGUgb2YgaXRzIEZhY2lsaXR5LCBhbGwgYXMgbW9yZSBwYXJ0aWN1bGFybHkgc2V0IGZvcnQNCmggaW4gdGhlIEFncmVlbWVudC4gIEluIGFkZGl0aW9uLCBlYWNoIENvLU93bmVyIHNoYWxsIGhhdmUgYSBub24tZXhjbHVzaXZlIHJpZ2h0IG9mIGFjY2VzcyAoYSlcfnRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBpdCBoYXMgYW4gVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBhcyBwcm92aWRlZCBpbiB0aGUgQWdyZWVtZW50LCBhbmQgKGIpXH4NCm92ZXIgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5IHVuZGVybHlpbmcgb3IgcmVxdWlyZWQgZm9yIHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIHdoaWNoIHN1Y2ggQ28tT3duZXIgaGFzIGFuIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QsIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGNvbnRhaW5lZCBpbiB0aGUgQWdyZWVtZW50LiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MDgzOCAyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDQ4MTgyNSBUZXJtfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSBUaGlzIEFncmVlbWVudCBpcyBlZmZlY3RpdmUgYXMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCBEZWNlbWJlciAzLCAyMDE0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1ICBhbmQgc2hhbGwgcmVtYWluIGluIGZvcmNlIGFuZCBlZmZlY3QgdW50aWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSB0aGUgZWFybGllc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0NjY5MiBvZiAodilcfn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggRGVjZW1iZXIgMywgMjA0OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQ2NjkyICwgKHcpIHRoZSBleHBpcmF0aW9uIGRhdGUgb2YgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1ICAoeCkgdGhlIGRhdGUgdGhhdCBhbGwgaW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFyZSBvd25lZCBieSBhIHNpbmdsZSBQZXJzb24sICh5KVx+dGhlIHJldGlyZW1lbnQgYW5kIGZpbmFsIGRpc3Bvc2l0aW9uDQogb2YgYWxsIGNvbXBvbmVudHMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBhbGwgU2hhcmVkIFJlYWwgUHJvcGVydHksIGFuZCAoeikgdGhlIGRhdGUgdGhhdCBhbGwgQ28tT3duZXJzIGFuZCB0aGVpciBMZW5kZXJzIHVuYW5pbW91c2x5IGFncmVlIHRvIHRlcm1pbmF0ZSB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggLCBvciB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIChpaSkgc3VjaCBvdGhlciBkYXRlIChidXQgbm8gbGF0ZXIgdGhhbiBuaW5ldHktbmluZSAoOTkpIHllYXJzIGFmdGVyIHRoZSBFZmZlY3RpdmUgRGF0ZSkgYXMgbWF5IGJlIHVuYW5pbW91c2x5IGFncmVlZCBieSBhbGwgb2YgdGhlIENvLU93bmVycyBhbmQgdGhlaXIgTGVuZGVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCAzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ0ODE4MjUgT3RoZXIgUHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IA0KVGhlIHJpZ2h0cyBncmFudGVkIGhlcmV1bmRlciBhcmUgb2YgdGhlIG5hdHVyZSwgYW5kIGFyZSBzdWJqZWN0IHRvIHRoZSByZXF1aXJlbWVudHMgYW5kIGxpbWl0YXRpb25zLCBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudC4gVGhlIEFncmVlbWVudCBhbHNvIGNvbnRhaW5zIHZhcmlvdXMgY292ZW5hbnRzLCBvYmxpZ2F0aW9ucyBhbmQgcmlnaHRzIG9mIHRoZSBQYXJ0aWVzLCBpbmNsdWRpbmcsIHdpdGhvdXQgbGltaXRhdGlvbiwgcHJvdmlzaW9uDQpzIHJlbGF0aW5nIHRvIHVzZSwgY29uZHVjdCBvZiBvcGVyYXRpb25zLCBhc3NpZ25tZW50LCBvd25lcnNoaXAgb2YgaW1wcm92ZW1lbnRzLCBmZWVzLCBkZWZhdWx0LCBjdXJlIHJpZ2h0cyBhbmQgbGVuZGVyIHByb3RlY3Rpb25zLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggNC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NDgxODI1IFB1cnBvc2Ugb2YgdGhpcyBNZW1vcmFuZHVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MDgzOCBUaGUgdGVybXMsIGNvbmRpdGlvbnMgYW5kIGNvdmVuYW50cyBvZiB0aGUgQWdyZWVtZW50IGFyZSBpbmNvcnBvcmF0ZWQgaGVyZWluIGJ5IHJlZmVyZW5jZSBhcyB0DQpob3VnaCBmdWxseSBzZXQgZm9ydGggaGVyZWluLiBUaGlzIE1lbW9yYW5kdW0gZG9lcyBub3Qgc3VwZXJzZWRlLCBtb2RpZnksIGFtZW5kIG9yIG90aGVyd2lzZSBjaGFuZ2UgdGhlIHRlcm1zLCBjb25kaXRpb25zIG9yIGNvdmVuYW50cyBvZiB0aGUgQWdyZWVtZW50LCBhbmQgdGhpcyBNZW1vcmFuZHVtIHNoYWxsIG5vdCBiZSB1c2VkIGluIGludGVycHJldGluZyB0aGUgdGVybXMsIGNvbmRpdGlvbnMgb3IgY292ZW5hbnRzIG9mIHRoZSBBZ3JlZW0NCmVudC4gSW4gdGhlIGV2ZW50IG9mIGFueSBjb25mbGljdCBiZXR3ZWVuIHRoaXMgTWVtb3JhbmR1bSBhbmQgdGhlIEFncmVlbWVudCwgdGhlIEFncmVlbWVudCBzaGFsbCBjb250cm9sLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggNS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NDgxODI1IEJpbmRpbmcgb24gU3VjY2Vzc29ycyBhbmQgQXNzaWduc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IFRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSB0aGF0IGFsbCBvZiB0aGUgY292ZW5hbnRzLCBjb25zZW50cyBhbmQgYWdyZWVtZW50cyBjb250YWluZWQgaW4gdGhlIEFncmVlbWVudCB0b3VjaCBhbmQNCiBjb25jZXJuIHRoZSBQcm9wZXJ0eSBhbmQgYXJlIGV4cHJlc3NseSBpbnRlbmRlZCB0bywgYW5kIHNoYWxsLCBiZSBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kIGFuZCBzaGFsbCBiZSBiaW5kaW5nIGFuZCBhIGJ1cmRlbiB1cG9uIHNhaWQgcmVhbCBlc3RhdGUgYW5kIGVhY2ggUGFydHlccnF1b3RlIA0KcyBwcmVzZW50IG9yIGZ1dHVyZSBlc3RhdGUgb3IgaW50ZXJlc3QgdGhlcmVpbiBhbmQgdXBvbiBlYWNoIG9mIHRoZSBQYXJ0aWVzLCB0aGVpciByZXMNCnBlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhcyBob2xkZXJzIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCBpbiBzYWlkIHJlYWwgZXN0YXRlIChpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgbGVuZGVyIG9yIG90aGVyIHBlcnNvbiBhY3F1aXJpbmcgdGl0bGUgZnJvbSBhbnkgc3VjaCBwZXJzb24gdXBvbiBmb3JlY2xvc3VyZSBvciBieSBkZWVkIGluIGxpZXUgb2YgZm9yZWNsb3N1cmUpLCBhbmQgc2hhbGwgYmVuZWZpdCB0aA0KZQ0KIFBhcnRpZXMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhbmQgdGhlIHJlYWwgZXN0YXRlIGFuZCBhbnkgcHJlc2VudCBvciBmdXR1cmUgaG9sZGVyIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluLiAgVG8gdGhlIGV4dGVudCBhbnkgb2YgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBBZ3JlZW1lbnQgYXJlIG5vdCBlbmZvcmNlYWJsZSBhcyBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kLCB0aGV5DQogc2hhbGwgYmUgZW5mb3JjZWFibGUgYXMgZXF1aXRhYmxlIHNlcnZpdHVkZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCA2Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ0ODE4MjUgQ291bnRlcnBhcnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTA4MzggDQpUaGlzIE1lbW9yYW5kdW0gbWF5IGJlIGV4ZWN1dGVkIGluIGNvdW50ZXJwYXJ0cywgZWFjaCBvZiB3aGljaCBzaGFsbCBiZSBkZWVtZWQgYW4gb3JpZ2luYWwgYW5kIGFsbCBvZiB3aGljaCB3aGVuIHRha2VuIHRvZ2V0aGVyIHNoYWxsIGNvbnN0aXR1dGUgb25lIGFuZCB0aGUgc2FtZSBkb2N1bWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NDgxODI1IFtTSUdOQVRVUkVTIE9OIE5FWFQgUEFHRV19e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCAgXHBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBJTiBXSVRORVNTIFdIRVJFT0YsIHRoZSBQYXJ0aWVzIGhhdmUgY2F1c2VkIHRoaXMgTWVtb3JhbmR1bSB0byBiZSBleGVjdXRlZCBhcyBvZiB0aGUgZGF0ZSBmaXJzdCB3cml0dGVuIGFib3ZlLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IA0KXHBhciBSaXNpbmcgVHJlZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1MDU4NzU0IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTA1ODc1NCAgTExDDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeToNClxwYXIgVGl0bGU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCANClx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBbQWRkIG5vdGFyaWFsIGFja25vd2xlZGdtZW50c10NClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1Njg0NTk3IEVYSElCSVQgQQ0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1Njg0NTk3IERFU0NSSVBUSU9OIE9GIFRIRSBQUk9QRVJUWQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzMDQ2NzUwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDU2ODU0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE1Njg0NTk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDg0ODU3MzEgDQpccGFyIH17XCpcdGhlbWVkYXRhIDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA4MjhhYmMxM2ZhMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjYWM5MWNiNmFjMzMwMTA0NWY3ODVmZTgzZDBiNmQ4DQo3MmJhMjhhNWQ4Y2VhMjQ5Nzc3ZDJjZDIwZjE4ZTRiMTJkNmE4Zjg0MzQwOWM5ZGY3N2VjYjg1MGJhMDgyZDc0MjMxMDYyY2U5OTdiNTVhZThmZTNhMDBlMTg5M2YzNTRlOTU1NWU2ODg1NjQ3ZGUzYThhYmY0ZmJlZTI5YmJkNw0KMmEzMTUwMDM4MzI3YWNmNDA5OTM1ZWQ3ZDc1N2U1ZWUxNDMwMjk5OWE2NTRlOTllMzkzYzE4OTM2YzhmMjNhNGRjMDcyNDc5Njk3ZDFjODFlNTFhM2IxM2MwN2U0MDg3ZTZiNjI4ZWU4Y2Y1YzQ0ODljZjFjNGQwNzVmOTJhMGINCjQ0ZDdhMDdhODNjODJmMzA4YWM3YjBhMGYwZmJmOTBjMjQ4MDk4MGI1OGFiYzczMzYxNWFhMmQyMTBjMmUwMmNiMDQ0MzAwNzZhN2VlODMzZGZiNmNlNjJlM2VkN2UxNDY5M2U4MzE3ZDhjZDA0MzNiZjVjNjBmNTNmZWEyZmU3DQowNjViZDgwZmFjYjY0N2U5ZTI1YzdmYzQyMWZkMmRkYjUyNmIyZTkzNzNmZWQ0YmI5MDJlMTgyZTk3YjdiNDYxZTZiZmFkM2YwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2YTdlN2MwMDAwMA0KMDAzNjAxMDAwMDBiMDAwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3Mzg0OGZjZjZhYzMzMDBjODdlZjg1YmQ4M2QxN2Q1MWQyYzMxODI1NzYyZmE1OTA0MzJmYTM3ZDAwZTEyODdmNjgyMjFiZGIxYmViZGI0ZmM3MDYwYWJiMDgNCjg0YTRlZmY3YTkzZGZlYWU4YmY5ZTE5NGU3MjAxNjlhYWEwNmMzZTI0MzNmY2I2OGUxNzYzZGJmN2Y4MmM5ODVhNGE3MjUwODViNzg3MDg2YTM3YmRiYjU1ZmJjNTBkMWEzM2NjZDMxMWJhNTQ4YjYzMDk1MTIwZjg4ZDk0ZmJjDQo1MmFlNDI2NGQxYzkxMGQyNGE0NWRiMzQ2MjI0N2ZhNzkxNzE1ZmQ3MWY5ODllMTllMDM2NGNkM2Y1MTY1MmQ3Mzc2MGFlOGZhOGM5ZmZiM2MzMzBjYzllNGZjMTdmYWYyY2U1NDUwNDZlMzc5NDRjNjllNDYyYTFhODJmZTM1Mw0KYmQ5MGE4NjVhYWQ0MWVkMGI1YjhmOWQ2ZmQwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA2Yjc5OTYxNjgzMDAwMDAwOGEwMDAwMDAxYzAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjc0NjgNCjY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMwY2NjNGQwYWMzMjAxMDQwZTE3ZGExNzc5MGQ5Mzc2M2JiMjg0NTYyYjJjYmFlYmJmNjAwNDM5YzFhNDFjN2EwZDI5ZmRiZDdlNWUzODMzN2NlZGYxNGQ1OWI0YjBkNTkyYzljDQowNzBkOGE2NWNkMmU4OGI3ZjA3YzJjYTcxYmE4ZGE0ODFjYzUyYzZjZTFjNzE1ZTZlOTc4MThjOWI0OGQxM2RmNDljODczNTE3ZDIzZDU5MDg1YWRiNWRkMjBkNmI1MmJkNTIxZWYyY2RkNWViOTI0NmEzZDhiNDc1N2U4ZDNmNw0KMjllMjQ1ZWIyYjI2MGEwMjM4ZmQwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA5NmI1YWRlMjk2MDYwMDAwNTAxYjAwMDAxNjAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjc0Njg2NTZkNjUNCjMxMmU3ODZkNmNlYzU5NGY2ZmRiMzYxNGJmMGZkODc3MjA3NDZmNjMyNzc2MWEwNzc1OGFkOGIxOWIyZDRkMWJjNDZlODcxZTY5ODk5NmQ4NTBhMjQwZDI0OTdkMWJkYWUzODAwMWMzYmE2MTg3MTVkODZkODc2MTViODExNmQ4DQphNWZiMzRkOTNhNmMxZGQwYWZiMDQ3NTI5MmM1NTg1ZTkyMzZkODhhYWQzZTI0MTJmOWUzZmJmZjFlMWZhOWFiZDdlZWM3MGMxZDEyMjEyOTRmZGE1ZWZkNzJjZDQzMjRmMTc5NDA5M2IwZWRkZDFlZjYyZmFkNzk0ODJhOWMwNA0KOThmMTg0YjRiZDI5OTFkZWI1OGRmN2RmYmI4YWQ3NTU0NDYyODI2MDdkMjJkNzcxZGI4Yjk0NGFkNzk3OTZhNDBmYzM1ODVlZTYyOTQ5NjA2ZWNjNDU4YzE1YmM4YTcwMjkxMGY4MDhlOGM2NmM2OWI5NTY1YjVkOGEzMTRkM2MNCjk0ZTAxOGM4ZGUxYThmYTk0ZmQwNTA5M2Y0MzY3MmUyM2QwNmFmODk5MjdhYzA2NzYyYTA0OTEzNjc4NWMxMDYwNzc1OGQ5MDUzZDk2NTAyMWQ2MmQ2ZjY4MDRmYzA4Zjg2ZTRiZWYyMTBjMzUyYzE0NGRiYWI5OTlmYjdiNDcxDQo3NTA5YWY2NzhiOTg1YWIwYjZiNGFlNmY3ZWQ5YmE2YzQxNzBiMDZjNzg4YTcwNTQzMGFkZjcxYmFkMmI1YjA1N2QwMzYwNmExZWQ3ZWJmNWJhYmQ3YTQxY2YwMGIwZWY4M2E2NTY5NjMyY2Q0NjdmYWRkZWM5Njk5NjQwZjY3MQ0KOWU3NmI3ZDZhYzM1NWM3Yzg5ZmVjYTljY2NhZDRlYTdkMzZjNjViMjU4YTIwNjY0MWYxYjczZjhiNWRhNmE2MzczZDljMTFiOTBjNTM3ZTdmMDhkY2U2NmI3YmJlYWUwMGRjOGUyNTdlN2YwZmQyYmFkZDU4NjhiMzdhMDg4ZDENCmU0NjAwZWFkMWRkYWVmNjdkNDBiYzg5OGIzZWQ0YWY4MWFjMGQ3NmExOTdjODY4MjY4MjhhMjRiYjMxOGYzNDQyZDhhYjUxOGRmZTNhMjBmMDAwZDY0NThkMTA0YTk2OTRhYzZkODg3MjhlZWUyNzgyNDI4ZDYwY2YwM2FjMWE1DQoxOTNiZTRjYmI5MjFjZDBiNDk1ZmQwNTRiNWJkMGY1MzBjMTkzMWEzZjdlYWY5ZjdhZjllM2Y0NWM3MGY5ZTFkM2ZmOGU5ZjhlMWMzZTMwNzNmNWE0MmNlYWE2ZDljODRlNTU1MmZiZmZkZWNjZmM3MWZhMzNmOWU3ZWYzZjJkMQ0KMTdkNTc4NTljNmZmZmFjMzI3YmZmY2ZjNzkzNTEwZDI2NzI2Y2U4YjJmOWZmY2Y2ZWNjOThiYWYzZWZkZmRiYjQ3MTVmMDRkODE0NzY1Zjg5MGM2NDRhMjliZTQwOGVkZjMxODE0MzM1NjcxMjUyNzIzNzFiZTE1YzMwOGQzZjINCjhhY2QyNDk0MzhjMTlhNGIwNWZkOWU4YTFjZjRjZDI5NjY5OTc3MWMzOTNhYzRiNWUwMWQwMWU1YTMwYTc4N2Q3MmNmMTE3ODEwODk4OWEyMTU5Yzc3YTJkODAxZWU3MmNlM2E1YzU0NWE2MTQ3ZjMyYTk5NzkzODQ5YzI2YWU2DQo2MjUyYzZlZDYzN2M1OGM1YmI4YjEzYzdiZmJkNDkwYTc1MzMwZjRiNDdmMTZlNDQxYzMxZjcxODRlMTQwZTQ5NDIxNGQyNzNmYzgwOTAwYWVkZWU1MmVhZDg3NTk3ZmE4MjRiM2U1NmU4MmU0NTFkNGMyYjRkMzJhNDIzMjc5YQ0KNjY4YmI2NjkwYzdlOTk1NmU5MGNmZTc2NmNiMzdiMDc3NTM4YWJkMjdhOGIxY2JhNDhjODBhY2MyYTg0MWYxMmU2OThmMTNhOWUyODFjNTc5MTFjZTI5ODk1MGQ3ZTAzYWJhODRhYzhjMTU0Zjg2NTVjNGYyYWYwNzQ0ODE4NDcNCmJkODA0ODU5YjVlNjk2MDA3ZDRiNGVkZmMxNTBiMTJhZGRiZWNiYTZiMThiMTQ4YTFlNTRkMWJjODEzOTJmMjNiN2Y4NDEzN2MyNzE1YTg1MWRkMDI0MmE2MzNmOTAwNzEwYTIxOGVkNzE1NTA1ZGZlNTZlODZlODc3ZjAwMzRlDQoxNmJhZmIwZTI1OGViYjRmYWYwNmI3NjllODg4MzQwYjEwM2QzMzExZGE5NzUwYWE5ZDBhMWNkM2U0ZWZjYTMxYTM1MDhmNmQwYzVjNWMzOTg2MDJmOGUyZWJjNzE1OTFmNWI2MTZlMjRkZDg5M2FhMzI2MWZiNDRmOTVkODQzYg0KNTk3NGJiNWMwNGY0ZWRhZmI5NWI3ODkyZWMxMTA4ZjNmOThkZTc1ZGM5N2Q1NzcyYmRmZjdjYzk1ZDk0Y2Y2NzJkYjRiM2RhMGE2NTU3ZjcwZGI2MjkzNjJkNzJiY2IwNDMxZTUzYzYwNjZhY2FjODBkNjk5YTY0MDlmYjQ0ZDANCjg3NDFiZGNlOWMwZTQ5NzE2MjRhMjM3OGNjZWFiYTgzMGIwNTM2NmI5MGUwZWEyM2FhYTI0MTg0NTM2OGIwZWI5ZTI2MTJjYThjNzQyODUxY2EyNTFjZWNjYzcwMjU2ZDhkODcyNjVkZDk2MzYxNTMxZjE4NmMzZDkwNThlZGYyDQpjMDBlYWZlOGUxZmM1YzUwOTAzMWJiNGQ2ODBlOWYzOWEzMTU0ZGUwYWNjYzU2YWU2NDQ0NDFlZGQ3NjE1NmQ3NDI5ZDk5NWJkZDg4NjY0YTlkYzNhZDUwMTk3YzM4YWYxYTBjMTZkNjg0MDYwNDQxZGIwMjU2NWU4NWYzYjk2Ng0KMGQwNzEzY2M0OGEwZWQ2ZWY3ZGVkYzJkYzYwYjE3ZTkyMjE5ZTE4MDY0M2VkMjdhY2ZmYmE4NmU5Yzk0Yzc4YWI5MDk4MGQ4YTlmMDkxM2VlNDlkNjJiNTEyYjc5NjI2ZmIwNmRjY2VlMmE0MzJiYmM2MDI3NmI5ZjdkZWM0NGINCjc5MDRjZmJjYTRmM2Y2NDQzYWIyYTQ5YzljMmM0MTQ3NmRhZmQ1NWM2ZTdhYzhjNzY5ZGIxYmMzOTkxNjFlZTMxNGJjMmU3NWNmODc1OTA4MTc0M2JlMTIzNmVjNGY0ZDY2OTNlNTMzNmZiNjcyYzVkYzI0YThjMzM1ODViNWZiDQo5Y2MyNGUxZDQ4ODU1NDViNTg0NjM2MzRjYzU0MTYwMjJjZDE5Y2FjZmNjYjRkMzBlYjQ1Mjk2MDIzZmQzNWE0NTg1OTgzNjBmOGQ3YTQwMDNiYmFhZTI1ZTMzMWYxNTVkOWQ5YTUxMTZkM2JmYjlhOTU1MjNlNTE0NDBjYTJlMA0KMDg4ZGQ4NDRlYzYzNzBiZjBlNTVkMDI3YTAxMmFlMjY0YzQ1ZDAyZjcwOGZhNmFkNmRhNmRjZTI5YzI1NWRmOWY2Y2FlMGVjMzg2NjY5ODRiMzcyYWI1MzM0Y2Y2NDBiMzc3OTVjYzg2MGRlNGFlMjgxNmU5NWIyMWJlNWNlYWYNCjhhNDlmOTBiNTJhNTFjYzZmZjMzNTVmNDdlMDIzNzA1MmI4MWY2ODAwZmQ3YjgwMjIzOWRhZjZkOGYwYjE1NzFhODQyNjk0NGZkYmU4MGM2YzFkNDBlODgxNmI4OGI4NTY5MDgyYWI4NGMzNmZmMDUzOWQ0ZmY2ZGNlNTkxYTI2DQphZGUxYzBhN2Y2Njk4ODA0ODVmZDQ4NDU4MjkwM2QyODRiMjZmYTRlMjE1NmNmZjYyZTRiOTI2NTg0NGM0NDk1YzQ5NWE5MTU3YjQ0MGUwOTFiZWExYWI4YWFmNzc2MGY0NTEwZWFhNjlhNjQ2NWMwZTA0ZWM2OWZmYjllNjVkMA0KMjhkNDRkNGUzOWRmOWMxYTUyZWNiZDM2MDdmZWU5Y2VjNzI2MzMyOGU1ZDY2MWQzZDBlNGY2MmY0NGFjZDg1NWVkN2FiMzNjZGY3YmNiOGFlODg5NTk5YmQ1YzhiMzAyOTg5NWI2ODI1Njk2ZjZhZjI5YzIzOWI3NWE1YmIxZTYNCjM0NWU2ZWU2YzI4MTE3ZTczNTg2YzFhMjIxNGFlMWJlMDdlOTNmYjBmZjUxZTEzM2ZiNjU0MjZmYTg0M2JlMGZiNTE1YzE4NzA2NGQwY2MyMDZhMmZhOTI2ZDNjOTAyZTkwNzY3MDA0OGQ5MzFkYjRjMWE0NDk1OWQzNjZhZDkzDQpiNjVhYmU1OTVmNzBhNzViZjAzZDYxNmMyZGQ5NTlmYzdkNGU2MzE3Y2Q5OWNiY2VjOWM1OGIzNDc2NjY2MWM3ZDY3NjZjYTFhOWMxYjMyNzUzMTQ4NmM2Zjk0MWM2MzhjNjdjZDIyYTdmNzVlMmEzN2JlMGU4MmRiOGRmOWYzMA0KMjU0ZDMwYzEzNzI1ODFhMWY1MWM5ODNjODBlNGI3MWNjZGQyOGRiZjAwMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwNzQ2ODY1NmQ2NTJmNzQNCjY4NjU2ZDY1MmY1ZjcyNjU2YzczMmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzJlNzI2NTZjNzM4NDhmNGQwYWMyMzAxNDg0Zjc4Mjc3MDg2ZjZmZDNiYTEwOTEyNmRkODhkMGFkZDQwMzg0ZTQzNTBkMzYzZjI0DQo1MWVjZWQwZGFlMmMwODJlODc2MWJlOTk2OWJiOTc5ZGM5MTM2MzMyZGUzMTY4YWExYTA4M2FlOTk1NzE5YWMxNmRiOGVjOGU0MDUyMTY0ZTg5ZDkzYjY0YjA2MDgyOGU2ZjM3ZWQxNTY3OTE0YjI4NGQyNjI0NTIyODJlMzE5OA0KNzIwZTI3NGE5MzljZDA4YTU0Zjk4MGFlMzhhMzhmNTZlNDIyYTNhNjQxYzhiYmQwNDhmNzc1N2RhMGYxOWIwMTdjYzUyNGJkNjIxMDdiZDUwMDE5OTY1MDlhZmZiM2ZkMzgxYTg5NjcyZjFmMTY1ZGZlNTE0MTczZDk4NTA1MjgNCmEyYzZjY2UwMjM5YmFhNGMwNGNhNWJiYWJhYzRkZjAwMDAwMGZmZmYwMzAwNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDA4MjhhYmMxM2ZhMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2YTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAyYjAxMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDZiNzk5NjE2ODMwMDAwMDA4YTAwMDAwMDFjMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxNDAyMDAwMDc0NjgNCjY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDk2YjVhZGUyOTYwNjAwMDA1MDFiMDAwMDE2MDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMGQxMDIwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTMxMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDliMDkwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNWY3MjY1NmM3MzJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMyZTcyNjU2YzczNTA0YjA1MDYwMDAwMDAwMDA1MDAwNTAwNWQwMTAwMDA5NjBhMDAwMDAwMDB9DQp7XCpcY29sb3JzY2hlbWVtYXBwaW5nIDNjM2Y3ODZkNmMyMDc2NjU3MjczNjk2ZjZlM2QyMjMxMmUzMDIyMjA2NTZlNjM2ZjY0Njk2ZTY3M2QyMjU1NTQ0NjJkMzgyMjIwNzM3NDYxNmU2NDYxNmM2ZjZlNjUzZDIyNzk2NTczMjIzZjNlMGQwYTNjNjEzYTYzNmM3MjRkDQo2MTcwMjA3ODZkNmM2ZTczM2E2MTNkMjI2ODc0NzQ3MDNhMmYyZjczNjM2ODY1NmQ2MTczMmU2ZjcwNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjY0NzI2MTc3Njk2ZTY3NmQ2YzJmMzIzMDMwMzYyZjZkNjE2OQ0KNmUyMjIwNjI2NzMxM2QyMjZjNzQzMTIyMjA3NDc4MzEzZDIyNjQ2YjMxMjIyMDYyNjczMjNkMjI2Yzc0MzIyMjIwNzQ3ODMyM2QyMjY0NmIzMjIyMjA2MTYzNjM2NTZlNzQzMTNkMjI2MTYzNjM2NTZlNzQzMTIyMjA2MTYzNjMNCjY1NmU3NDMyM2QyMjYxNjM2MzY1NmU3NDMyMjIyMDYxNjM2MzY1NmU3NDMzM2QyMjYxNjM2MzY1NmU3NDMzMjIyMDYxNjM2MzY1NmU3NDM0M2QyMjYxNjM2MzY1NmU3NDM0MjIyMDYxNjM2MzY1NmU3NDM1M2QyMjYxNjM2MzY1NmU3NDM1MjIyMDYxNjM2MzY1NmU3NDM2M2QyMjYxNjM2MzY1NmU3NDM2MjIyMDY4NmM2OTZlNmIzZDIyNjg2YzY5NmU2YjIyMjA2NjZmNmM0ODZjNjk2ZTZiM2QyMjY2NmY2YzQ4NmM2OTZlNmIyMjJmM2V9DQp7XCpcbGF0ZW50c3R5bGVzXGxzZHN0aW1heDI2N1xsc2Rsb2NrZWRkZWYwXGxzZHNlbWloaWRkZW5kZWYwXGxzZHVuaGlkZXVzZWRkZWYwXGxzZHFmb3JtYXRkZWYwXGxzZHByaW9yaXR5ZGVmMHtcbHNkbG9ja2VkZXhjZXB0IFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBOb3JtYWw7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgMTtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyAyOw0KXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgMztcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA0O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDU7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgNjtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA3O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDg7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgOTsNClxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAxO1xsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAyO1xsc2Rwcmlvcml0eTk0IFxsc2Rsb2NrZWQwIGZvb3Rub3RlIHRleHQ7XGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiB0ZXh0O1xsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIGhlYWRlcjtcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBmb290ZXI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBjYXB0aW9uO1xsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIGZvb3Rub3RlIHJlZmVyZW5jZTtcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBhbm5vdGF0aW9uIHJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgVGl0bGU7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN1YnRpdGxlOw0KXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN0cm9uZztcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgRW1waGFzaXM7XGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiBzdWJqZWN0O1xsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIE5vIExpc3Q7XGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgQmFsbG9vbiBUZXh0O1xsc2RzZW1paGlkZGVuMSBcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBQbGFjZWhvbGRlciBUZXh0Ow0KXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTggXGxzZGxvY2tlZDAgTm8gU3BhY2luZztcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3Q7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZDtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDI7DQpcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDI7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMTtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDM7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0Ow0KXGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZztcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQ7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgUmV2aXNpb247DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzQgXGxzZGxvY2tlZDAgTGlzdCBQYXJhZ3JhcGg7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTI5IFxsc2Rsb2NrZWQwIFF1b3RlO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMCBcbHNkbG9ja2VkMCBJbnRlbnNlIFF1b3RlO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDE7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAyO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDM7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAzO1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDM7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDU7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDU7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA1O1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDU7DQpcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA1O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDU7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDY7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDY7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDY7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTE5IFxsc2Rsb2NrZWQwIFN1YnRsZSBFbXBoYXNpcztcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MjEgXGxzZGxvY2tlZDAgSW50ZW5zZSBFbXBoYXNpczsNClxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMSBcbHNkbG9ja2VkMCBTdWJ0bGUgUmVmZXJlbmNlO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMiBcbHNkbG9ja2VkMCBJbnRlbnNlIFJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzMgXGxzZGxvY2tlZDAgQm9vayBUaXRsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM3IFxsc2Rsb2NrZWQwIEJpYmxpb2dyYXBoeTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIFRPQyBIZWFkaW5nO319e1wqXGRhdGFzdG9yZSAwMTA1MDAwMDAyMDAwMDAwMTgwMDAwMDA0ZDczNzg2ZDZjMzIyZTUzNDE1ODU4NGQ0YzUyNjU2MTY0NjU3MjJlMzUyZTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNjAwMDANCmQwY2YxMWUwYTFiMTFhZTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDNlMDAwMzAwZmVmZjA5MDAwNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAxMDAwMDAwMDAwMDAwMDAwMDEwMDAwMGZlZmZmZmZmMDAwMDAwMDBmZWZmZmZmZjAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZkZmZmZmZmZmVmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjUyMDA2ZjAwNmYwMDc0MDAyMDAwNDUwMDZlMDA3NDAwNzIwMDc5MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTYwMDA1MDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlYzY5ZDk4ODhiOGIzZDRjODU5ZWFmNmNkMTU4YmUwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIwZjcNCjg0MjNhY2IyZDAwMWZlZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDUwMDAwMDAwMDAwMDB9fQ==</record_binary_data>
      <record_plain_text>RISING TREE
SHARED FACILITIES AGREEMENT



BY AND AMONG



RISING TREE WIND FARM LLC

RISING TREE WIND FARM II LLC

AND

RISING TREE WIND FARM III LLC


EXECUTED AS OF DECEMBER 3, 2014


Table of Contents
ARTICLE I DEFINITIONS, INTERPRETATIONS AND EXHIBITS	5
1.1	Definitions	6
1.2	Interpretation	6
1.3	Incorporation of Recitals and Exhibits	6
ARTICLE II TERM OF AGREEMENT	6
2.1	Term	6
2.2	Payments on Termination	6
2.3	Survival	7
ARTICLE III SHARED FACILITIES AND REAL PROPERTY	7
3.1	Declaration of Intention.  .	7
3.2	Shared Facilities	7
3.3	Shared Real Property	7
3.4	Shared Assets Groups	7
3.5	Access	8
3.6	Shared Permits.  .	8
ARTICLE IV CONSTRUCTION AND OWNERSHIP OF AND RIGHT TO USE SHARED ASSETS	9
4.1	Undivided Ownership Interests	9
4.2	Undivided Use Interests	9
4.3	Construction; Reimbursement of Costs	10
4.4	Additional Phases	12
4.5	Additional Shared Facilities	12
4.6	No Additional Co-Owners	13
ARTICLE V METERING, MEASUREMENT OF ENERGY DELIVERIES AND LOSSES	13
5.1	Measurement	13
5.2	Losses on Transmission Line	13
5.3	Meter Testing and Repair	14
ARTICLE VI OPERATION AND MAINTENANCE OF SHARED FACILITIES.	14
6.1	Engagement of Operator	14
6.2	Standards for Operator's Performance	14
6.3	O&amp;M Services	15
6.4	Scheduled Maintenance	16
6.5	Unplanned Outages	16
6.6	Emergency Conditions	16
6.7	O&amp;M Costs	16
6.8	Budgeting Process	16
6.9	Extraordinary Maintenance	17
6.10	Responsibility for O&amp;M Costs	17
6.11	Books and Records	18
6.12	Disputes	18
6.13	No Waiver of Right to Audit	18
6.14	Obligations	18
6.15	Risk of Loss; Indemnity	18
6.16	Limitations on Operator's Authority	19
6.17	Replacement of Operator.	19
ARTICLE VII DAMAGE TO, DESTRUCTION OR FAILURE OF SHARED FACILITIES	19
7.1	Damage or Destruction	19
ARTICLE VIII CESSATION OF OPERATIONS BY A CO-OWNER	20
8.1	Co-Owner Ceasing Operations	20
8.2	Co-Owner Last Using Shared Facilities	20
8.3	Procedure for Transfer by a Co-Owner of its Ownership Interest.  .	21
8.4	Change in Ownership Interest	21
ARTICLE IX RELATIONSHIP OF OPERATOR AND CO-OWNERS	21
9.1	Actions Taken by Operator	21
9.2	Limitations on Operator's Authority	22
9.3	Costs and Expenses	22
9.4	Obligations under Shared Real Property Agreements; Exercise of Options	22
9.5	Consent or Approval	23
9.6	Condemnation Awards	23
9.7	Transfer or Encumbrance of Interest in Shared Assets	23
9.8	Additional Co-Owner Rights	23
ARTICLE X COVENANTS	24
10.1	No Interference.	24
10.2	Interconnection Rights.  .	24
10.3	Interconnection Agreement.	24
10.4	Shared Real Property Agreements..	24
10.5	No Waste.	25
10.6	No Liens.	25
10.7	Standard of Performance.	25
ARTICLE XI INSURANCE; WAIVER	25
11.1	Insurance Responsibilities	25
11.2	Waiver	25
ARTICLE XII TAXES	25
12.1	Operator Payment of Property Taxes and Assessments	25
12.2	Reimbursement Obligations	25
12.3	Transfer Taxes, Sales and Use Taxes	25
12.4	Construction of Shared Assets.	25
ARTICLE XIII EVENTS OF DEFAULT; REMEDIES	25
13.1	Defaults	25
13.2	Remedies Upon Default	25
ARTICLE XIV LENDER PROTECTION	25
14.1	Right to Encumber and Assign	25
14.2	Co-Owners' Obligations	25
14.3	Lender Obligations	25
14.4	Lender's Right to Possession, Right to Acquire and Right to Assign	25
14.5	Opportunity to Cure	25
14.6	New Agreement	25
14.7	Lender Consent	25
14.8	Estoppel Certificates	25
ARTICLE XV INDEMNIFICATION	25
15.1	Co-Owner Indemnification	25
15.2	Cross-Indemnity	25
ARTICLE XVI WAIVER OF RIGHTS TO PARTITION	25
ARTICLE XVII MISCELLANEOUS PROVISIONS	25
17.1	Covenants Run with the Land	25
17.2	Force Majeure	25
17.3	FERC Filing and Acceptance..	25
17.4	Assignment	25
17.5	Actions By Co-Owners	25
17.6	Entire Agreement	25
17.7	Amendment	25
17.8	Further Assurances	25
17.9	Severability	25
17.10	Joint Preparation	25
17.11	No Waiver	25
17.12	Governing Law	25
17.13	Dispute Resolution Procedures	25
17.14	Relationship of the Co-Owners	25
17.15	No Third Party Rights	25
17.16	No Dedication of Facilities	25
17.17	Notices	25
17.18	Counterparts	25
17.19	Timing for Performance	25
17.20	Waiver of Consequential Damages	25
17.21	Survival	25
17.22	Memorandum	25
17.23	Other Agreements.	25

EXHIBITS
Exhibit A - Schedule of Definitions
Exhibit B - Shared Facilities, Shared Real Property and Shared Permits
Exhibit C - Interests and Proportionate Shares
Exhibit D - Material Project Agreements
Exhibit E - Dispute Resolution Provisions
Exhibit F - Form of Joinder
Exhibit G - Form of Memorandum

RISING TREE
SHARED FACILITIES AGREEMENT

      THIS RISING TREE SHARED FACILITIES AGREEMENT ("Agreement") is made and entered into this 3rd day of December, 2014 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners".
RECITALS
A.	The Co-Owners are developing a multi-phase wind powered electric generating facility generally known as the Rising Tree Wind Farm located on real property in Kern County, California (the "Rising Tree Wind Farm").  The Rising Tree Wind Farm is intended to be developed in multiple phases, each of which is considered a separate project and will be owned by a separate project company.
B.	The installed nameplate generating capacity of each phase of the Rising Tree Wind Farm (each of which is referred to herein as a "Facility" and collectively as the "Facilities"), will be approximately:
RST I Facility:	79.2 MW
RST II Facility:	19.8 MW
RST III Facility:	99 MW

C.	The Co-Owners own or will own undivided interests in certain real and personal property acquired or to be acquired for their respective Facilities and wish to share the use and cost of certain electrical transmission, communications structures and other facilities and associated real property rights, and to engage Operator to operate, maintain, repair and manage the foregoing, all in accordance with and subject to the terms and conditions of this Agreement.
D.	The Co-Owners are also parties to that certain Amended and Restated Large Generator Interconnection Agreement Co-Tenancy Agreement dated October 24, 2014 (the "LGIA Co-Tenancy Agreement") with respect to the Interconnection Agreement.
      NOW THEREFORE, in consideration of the recitals, the premises, covenants and conditions contained herein, and other good and valuable consideration, the receipt and sufficiency of which the Co-Owners acknowledge, the Co-Owners agree as follows:
ARTICLE I 
DEFINITIONS, INTERPRETATIONS AND EXHIBITS
      1.1 Definitions
.  As used in this Agreement, including the Recitals, and except as required by grammatical usage and apart from proper nouns, each capitalized term has the meaning given to it in this Agreement and in the Schedule of Definitions attached as Exhibit A.
      1.2 Interpretation
.  In this Agreement, unless a clear, contrary intention appears:  (a) the singular includes the plural and vice versa; (b) reference to any Person includes such Person's successors and assigns but, in the case of a Co-Owner, only if such assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity; (c) reference to any gender includes each other gender; (d) reference to any agreement (including this Agreement), document or instrument means such agreement, document or instrument as amended or modified and in effect from time to time in accordance with the terms thereof and, if applicable, the terms of this Agreement; (e) reference to any Law means such Law as amended, modified, codified, or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (f) reference to any Section means such Section of this Agreement, and references in any Section or definition to any clause means such clause of such Section or definition; (g) "hereunder," "hereof," "hereto" and words of similar import shall be deemed references to this Agreement as a whole and not to any particular Section or other provision of this Agreement; (h) "including" means including without limiting the generality of any description such term; and (i) relative to the determination of any period of time, "from" means "from and including", "to" means "to but excluding" and "through" means "through and including".
      1.3 Incorporation of Recitals and Exhibits
.  The Recitals set forth in this Agreement and the Exhibits and Attachments attached hereto are incorporated into this Agreement by reference for all purposes.
ARTICLE II 
TERM OF AGREEMENT
      2.1 Term
.  This Agreement is effective as of the earlier of the Execution Date and any later date this Agreement is accepted by FERC (the "Effective Date" and shall remain in force and effect until, subject to obtaining any necessary FERC approvals, (i) the earliest of (v) the date that is thirty-five (35) years after the Effective Date, (w) the expiration date of the Interconnection Agreement, (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
      2.2 Payments on Termination
.  Upon termination of this Agreement, the Co-Owners shall pay Operator any remaining balance owed for Operator's costs incurred or irrevocably committed to be incurred pursuant to this Agreement as of the date of termination, within sixty (60) days following receipt of an invoice from Operator requiring such payment; provided that Operator shall use commercially reasonable efforts to minimize such costs.
      2.3 Survival
.  Any obligations of one Co-Owner to another, including payment obligations and indemnity obligations, as a result of this Agreement which accrued prior to or as a result of termination of this Agreement shall survive termination of this Agreement.
ARTICLE III 
SHARED FACILITIES AND REAL PROPERTY
      3.1 Declaration of Intention.  The Co-Owners hereby declare that, subject to the last sentence of Section 4.1, they own and hold title to the Shared Facilities and the Shared Real Property as tenants in common and that each Co-Owner has an undivided interest in the Shared Facilities and the Shared Real Property, expressly on and subject to the terms, conditions, limitations and requirements set forth in this Agreement.  Nothing contained in this Agreement will be deemed to constitute the Co-Owners as partners or joint venturers.
      3.2 Shared Facilities
.  The Co-Owners plan to procure, install and construct, or have procured, installed and constructed, certain facilities for electrical transmission, interconnection, communications structures and other facilities, as more particularly described in Exhibit B, which may be altered or reconstructed in accordance with this Agreement, for shared use by the Co-Owners (collectively, the "Shared Facilities") for the purposes set forth in Exhibit B; provided, that certain of the Shared Facilities will used and shared by all of the Co-Owners and certain of the Shared Facilities will only be used and shared by a limited group of the Co-Owners as described in Exhibit B (each a "Shared Facilities Group").  The initial Shared Facilities Groups shall be the RST Shared Facilities Group, which will be used and shared by all Co-Owners, and the RST I/II Shared Facilities Group, which will be used and shared by Rising Tree I and Rising Tree II; provided that additional Shared Facilities Groups may be created in connection with the construction of the Additional Phase, as described in Section 4.4.
      3.3 Shared Real Property
.  The Shared Facilities in each Shared Facilities Group are or will be located on, or have or will have the benefit of, certain real property and real property rights that are described on Exhibit B (collectively, the "Shared Real Property") and that were granted pursuant to certain deeds, easements, leases, options or other instruments and agreements also described on Exhibit B (collectively, the "Shared Real Property Agreements").  The Shared Real Property shall be used for the purposes and uses described on Exhibit B.  In addition to the use of the Shared Real Property for Shared Facilities and other Shared Assets, to the extent permitted under the Shared Real property Agreements, the Shared Real Property may be occupied and used by any of the Co-Owners in the applicable Shared Assets Group for facilities other than Shared Facilities, such as collection and transmission lines separately owned by such Co-Owner, so long as such occupancy and use does not adversely affect the use of such Shared Real Property for the Shared Facilities.  
      3.4 Shared Assets Groups
.  Each Shared Facilities Group, combined with the Shared Real Property corresponding to the Shared Facilities in such Shared Facilities Group described under the same section in Exhibit B shall be referred to herein as a "Shared Assets Group".  The initial Shared Assets Groups shall be the RST Shared Assets Group, which will be used and shared by all Co-Owners, and the RST I/II Shared Assets Group, which will be used and shared by Rising Tree I and Rising Tree II; provided that additional Shared Assets Groups may be created in connection with the construction of the Additional Phase, as described in Section 4.4.
      3.5 Access
.  Each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Ownership Interest as necessary (i) to inspect such Shared Facilities, (ii) to ensure that Operator is meeting its obligations with respect to operation, maintenance and repair of such Shared Facilities, (iii) to make any necessary repairs to such Shared Facilities not timely made by Operator or in the event of an Emergency Condition, in each case as necessary to ensure that Co-Owner's Facility remains operational, and (iv) to exercise any other rights of a Co-Owner under this Agreement; and (b) over any Shared Real Property in which such Co-Owner has an Ownership Interest or as necessary or appropriate to exercise any of its rights hereunder with respect to the Shared Facilities; provided that, subject to the provisions of Section 13.1.4, if such Co-Owner is not the Operator, it shall (i) provide reasonable notice to Operator, and (ii) not unreasonably interfere with Operator's operation, maintenance or repair of the Shared Facilities or of another Co-Owner's Facility.
      3.6 Shared Permits.  The construction, operation and use of certain of the Shared Facilities in each Shared Facilities Group, as well as the construction, operation and use of certain portions of each Co-Owner's Facilities, will be subject to certain shared Governmental Authorizations as set forth in parts A.3 and B.3 of Exhibit B (the "Shared Permits"), not all of which apply to the Shared Facilities.  The Shared Permits may be issued in the name of one or more of the Co-Owners, but shall, to the extent they apply to the Shared Facilities, and to the fullest extent allowed by Applicable Law, be held, used and exercised for the mutual benefit of the Co-Owners in the applicable Shared Assets Group and to facilitate the construction, use, operation, maintenance and repair of the Shared Facilities as provided herein.  The Shared Permits shall be administered in the same manner as the Shared Facilities as provided in Section 4.3.3, and, to the extent they do apply to the Shared Facilities, the Co-Owners in each Shared Asset Group shall indemnify and hold Rising Tree I and/or Operator, as applicable, from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits relating to such Shared Asset Group, except to the extent resulting from the gross negligence or willful misconduct of Rising Tree I and/or Operator, as applicable.  To the extent the Shared Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, they shall be administered by Operator, and the Co-Owners to whose Facilities or other property such Shared Permits apply shall indemnify and hold Operator harmless from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits, except to the extent resulting from the gross negligence or willful misconduct of Operator, but the costs of such administration shall be borne by such Co-Owners and shall not be included in the O&amp;M Services provided hereunder.  Notwithstanding the foregoing, each Co-Owner in the applicable Shared Asset Group to which a Shared Permit relates shall have the right, in the case of Emergency Condition or if necessary to prevent the termination or revocation of a Shared Permit, to step in and exercise rights, perform duties and obligations and take actions under such Shared Permit as may be necessary to avoid or mitigate such Emergency Condition or termination or revocation of a Shared Permit, and shall be entitled to the same indemnification as Rising Tree I or Operator would have been under the circumstances; provided, however, that any Co-Owner exercising such step-in rights shall also indemnify and hold the other Co-Owners in the applicable Shared Assets Group from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of its gross negligence or willful misconduct in the exercise of such step-in rights.
      3.7	Third Party Rights.  The Co-Owners and the Operator acknowledge that, in addition to any requirements or restrictions in the Shared Real Property Agreements, their rights to construct, use and operate the Shared Facilities is subject to certain rights in favor of third parties and/or Affiliates as described on Exhibit B.  No Co-Owner or Operator will interfere with such third party rights in exercising its rights and performing its obligations hereunder.
ARTICLE IV 
CONSTRUCTION AND OWNERSHIP OF AND RIGHT TO USE SHARED ASSETS
      4.1 Undivided Ownership Interests
.  Each Co-Owner of Shared Facilities and/or Shared Real Property in each Shared Assets Group (a "Granting Co-Owner") hereby grants, assigns, transfers and conveys to itself and to each of the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Facilities and/or Shared Real Property (collectively, the "Underlying Granting Documents"), to the extent that such grant, assignment, transfer and conveyance does not violate, invalidate or require any consent which has not been obtained under any of the Underlying Granting Documents, such that each such Co-Owner in a Shared Assets Group shall own an undivided interest, as a tenant-in-common, in all of the Shared Facilities and Shared Real Property in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B and shall be entitled to the full benefits of all rights associated with such Shared Assets Group granted, created or conveyed pursuant to the Underlying Granting Documents to the fullest extent permitted thereunder and under Applicable Laws (such undivided interest of each Co-Owner in such Shared Assets Group and related rights and benefits being referred to in this Agreement as its "Ownership Interest").  Upon termination of this Agreement, all of the various rights and interests under the Underlying Granting Documents will, without the need for further action by any party, revert to the Co-Owner or Co-Owners to whom they were originally granted prior to the Effective Date.
      4.2 Undivided Use Interests
.  Each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group (an "Undivided Use Interest"), which right shall be shared with the other Co-Owners in the Shared Assets Groups in accordance with their respective Proportionate Shares.  A Co-Owner's Undivided Use Interest is exercisable upon the Commissioning Date of its Facility by such Co-Owner by providing written notice to Operator and to the other Co-Owners in the same Shared Assets Group that the Commissioning Date has occurred, provided that such Co-Owner has made the payment or payments set forth in Section 4.3, and that no Event of Default has occurred and is continuing with respect to such Co-Owner.  For the avoidance of doubt, each Co-Owner whose Facility has not reached its Commissioning Date as of the Effective Date (and thus whose Proportionate Share in all Shared Assets Groups is 0%) shall be deemed not to have exercised its Undivided Use Interest in any Shared Assets Group (and as a result shall not be required to bear costs or expenses related to any Shared Assets Group nor have the right to vote on matters unless otherwise set forth herein), but shall have the right to exercise its Undivided Use Interest as set forth in this Agreement.
      4.2.1 Transmission Line.  Each Co-Owner of a Transmission Line shall be entitled to use its Proportionate Share of the Delivery Capability of the Transmission Line.  In the event of (i) a partial curtailment of Delivery Capability by the CAISO or the Transmission Owner, (ii) a de-rating of the Transmission Line, (iii) a curtailment as determined by the Operator to be necessary to maintain, repair, replace, remove, investigate, inspect or test the Transmission Line, any Shared Facility or any Facility, or (iv) Emergency Conditions, each Co-Owner's right to use the Delivery Capability of the Transmission Line will be reduced pro rata in accordance with its Ownership Interest for the duration of the curtailment or de-rating; provided, however, that Operator shall be authorized to curtail on a non-pro rata, but equitable and reasonable basis (a) if such non-pro rata allocation is necessary to comply with directions from the CAISO or the Transmission Owner and does not violate the terms of the Interconnection Agreement, or (b) to the extent that the need for curtailment (including Emergency Conditions) can be attributed to a particular Facility.  In the event that the Delivery Capability of the Transmission Line exceeds the capacity provided in the applicable Interconnection Agreement, with Transmission Owner's and the CAISO's written consent and approval, each Co-Owner's right to use the Delivery Capability of the Transmission Line will be increased pro rata in accordance with its Ownership Interest for so long as the Delivery Capability is in excess of the capacity provided in the Interconnection Agreement with Transmission Owner's and CAISO's written consent and approval.
      4.2.2 Excess Capability.  No Co-Owner shall have the right to use more than its Proportionate Share of the Delivery Capability of the Transmission Line.  However, during periods in which a Co-Owner is not utilizing its full Proportionate Share of the Delivery Capability of the Transmission Line, the other Co-Owners may use more than their full Undivided Use Interests therein without additional costs beyond its Proportionate Share of O&amp;M Costs, subject to the operating limits of the Shared Facilities, so long as such use does not interfere with or adversely affect any other Co-Owner's energy schedules and deliveries; provided that (i) prior to any Co-Owner using more than its Proportionate Share of the Delivery Capability of the Transmission Line, the Co-Owners shall have obtained all necessary Governmental Authorizations, including FERC acceptance for filing of an effective transmission services agreement for such usage to the extent required, and (ii) any Co-Owner using more than its Proportionate Share of the Delivery Capability of the Transmission Line shall surrender such excess Delivery Capability promptly when it is needed by the Co-Owner entitled thereto and shall indemnify and hold harmless the other Co-Owners for Losses resulting from a failure or delay in surrendering such excess Delivery Capability..
      4.3 Construction; Reimbursement of Costs
.  
      4.3.1 Subject to its right to reimbursement as set forth herein, Rising Tree I will design, permit and construct all of the Shared Facilities in accordance with Applicable Laws, Good Utility Practice and the description of the Shared Facilities on Exhibit B attached hereto.  Upon completion, testing and commissioning of each applicable group of Shared Facilities, Rising Tree I will assign, transfer and convey such Shared Facilities to the Co-Owners in the applicable Shared Asset Group in accordance with their respective Proportionate Shares, including rights under construction and supply contracts and contractor, supplier and/or manufacturer warranties related to such Shared Facilities, which warranties may be enforced as provided below.  HOWEVER, NOTWITHSTANDING ANYTHING HEREIN TO THE CONTRARY, RISING TREE I SHALL HAVE NO LIABILITY TO THE OTHER CO-OWNERS FOR ANY DEFECT IN THE DESIGN, CONSTRUCTION OR UTILITY OF ANY OF THE SHARED FACILITIES.  RISING TREE I MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE CONDITION, USE OR FITNESS OF ANY OF THE SHARED REAL PROPERTY OR WITH RESPECT TO THE DESIGN, CONSTRUCTION, OPERATION OR UTILITY OF ANY OF THE SHARED FACILITIES, AND HEREBY DISCLAIMS ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY OF ANY KIND WITH RESPECT TO THE SHARED REAL PROPERTY OR THE SHARED FACILITIES.  Each of the Co-Owners agrees that they will look solely to the designers, contractors, suppliers, manufacturers and other Persons who participated in the design and/or construction of the Shared Facilities with respect to any defects or breaches of contract or warranty.  
      4.3.2 Rising Tree II and Rising Tree III shall each reimburse Rising Tree I for all costs and expenses incurred by Rising Tree I in designing, permitting and constructing the Shared Facilities in accordance with their respective Proportionate Shares of the costs of the Shared Facilities in each Shared Facilities Group of which they are members, in accordance with their Proportionate Shares in each such Shared Assets Group; provided, however, that for purposes of this Section 4.3.2, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date.  Such reimbursement shall be made within fifteen (15) days after receipt of (i) a notice from Rising Tree I that "Final Completion" or its equivalent for the Shared Facilities in such Shared Assets Group has occurred under the construction contract therefor, and (ii) a statement of the amount to be reimbursed (including appropriate supporting documentation)
      4.3.3 Each Co-Owner intends that all rights under construction and supply contracts and contractor, supplier and/or manufacturer warranties related to any Shared Facilities shall be held by the applicable Co-Owners in such Shared Assets Group, and each Co-Owner shall cooperate with each other to ensure enforceability by any of such Co-Owners or by Operator as agent for the Co-Owners; provided that enforcement of any such contract or warranty shall only be done by Rising Tree I until the completion of all of the Shared Facilities and by Operator thereafter, unless Rising Tree I or Operator, as applicable, has failed to do so within ninety (90) days after written notice from any other Co-Owner setting forth the reasons that such contract or warranty has been breached and must be enforced, unless there is a dispute regarding such enforcement, in which event the other Co-Owner's shall not exercise such rights until such dispute is resolved.
      4.3.4 To the extent that it does not otherwise have the necessary real property interests and rights, Rising Tree I shall have, and each of the other Co-Owners shall and hereby do grant to Rising Tree I, the benefit of and the right to use all of the Shared Real Property, subject to any restrictions or limitations in the Underlying Granting Documents, for the purpose of constructing, installing, testing and commissioning the Shared Facilities.
      4.3.5 Notwithstanding the fact that the design, construction, testing and commissioning of the Shared Facilities is being done by Rising Tree I, the Co-Owners agree that they will share the risks thereof among themselves in accordance with their respective Proportionate Shares.  Accordingly, each of the Co-Owners will indemnify and hold Rising Tree I harmless from and against its Proportionate Share of any claims, demands, costs, obligations and liabilities by or to third parties as a result of the design, construction, testing and commissioning of the Shared Facilities, except to the extent resulting from the gross negligence or willful misconduct of Rising Tree I; provided, however, that for purposes of this Section 4.3.5, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date. 
      4.4 Additional Phases
.  Additional generating facilities, whether owned by a Co-Owner or its Affiliate or by another Person (each an "Additional Phase") may be connected to the Shared Facilities and may use the Shared Assets, to the extent compatible with the existing Shared Facilities and Transmission Owner's interconnection facilities, subject to the terms and conditions of this Agreement and any required FERC approvals, but only upon the unanimous written approval of all of the Co-Owners and their respective Lenders and subject to the receipt of all necessary consents and approvals from Governmental Authorities, owners of any Shared Real Property, the Transmission Owner, CAISO and other necessary Persons.  The owner of such Additional Phase shall execute a joinder, the form of which is attached as Exhibit F hereto, and the Co-Owners shall execute an appropriate amendment to this Agreement to reflect the Undivided Use Interest of the Additional Phase in the applicable Shared Assets Groups and such other matters as the Co-Owners and the owner of the Additional Phase may agree.  Any such amendment to this Agreement shall be filed with FERC under Section 205 of the FPA, consistent with Section 17.3 hereof, and shall not become effective until accepted by FERC.  Notwithstanding anything contained herein to the contrary, the owner of the Additional Phase shall bear any incremental costs and expenses of modifying and upgrading the applicable existing Shared Facilities or acquiring additional Shared Real Property to accommodate the connection of its generating facility.
      4.5 Additional Shared Facilities
.  Once the Shared Facilities described on Exhibit B have been constructed, no Co-Owner may modify, add to or remove any of the Shared Facilities, except (i) as may be required by Applicable Laws and after not less than thirty (30) days written notice to the other Co-Owners, or (ii) with the prior written consent of all Co-Owners, and their respective Lenders (such consent of the Co-Owners not to be unreasonably withheld). In either case, the Co-Owner proposing to modify, add to or remove any of the Shared Facilities shall obtain a report by a qualified independent engineer reasonably acceptable to all Co-Owners finding that such modifications, additions or removals will not adversely affect the operation, performance, reliability or maintenance costs of any Facility (except as may be agreed by the owner of such Project).  In connection with the approval of any such modifications, additions or removals of Shared Facilities, the Co-Owners shall negotiate in good faith and agree on (a) the design and construction of such modifications and/or additional Shared Facilities and/or the plan of removal of such Shared Facilities, as applicable, (b) the allocation of design and construction costs of the modifications and/or additional Shared Facilities and/or the costs of removal of such Shared Facilities, as applicable, among the Co-Owners, and (c) the allocation of costs associated with the operation and maintenance of the modified Shared Facilities and/or the additional Shared Facilities among the Co-Owners; provided that no Co-Owner shall be required to reimburse any other Co-Owner for any costs incurred in the construction, removal, operation or maintenance of any modified, additional and/or removed Shared Facilities unless it has expressly agreed to do so in writing.
      4.6 No Additional Co-Owners
.  Except as provided herein, no Person may become a Co-Owner under this Agreement or an additional co-owner of any of the Shared Facilities, the Shared Real Property or the Shared Real Property Agreements without the prior written consent of all of the Co-Owners.  Any Person becoming a Co-Owner under this Agreement shall execute a joinder, the form of which is attached as Exhibit F hereto and such other amendments as the Co-Owners have determined may be necessary.
ARTICLE V 
METERING, MEASUREMENT OF ENERGY DELIVERIES AND LOSSES
      5.1 Measurement
.  Energy transmitted on the Transmission Line shall be measured for each Facility in each Settlement Interval by the revenue meter for such Facility.  However, if and for the period that there is an equipment failure or other event that prevents or interferes with the operation of the separate metering, energy transmitted on the Transmission Line shall be measured and allocated between the Facilities in each Settlement Interval in proportion to their respective Metered Energy during such Settlement Interval as follows:
Facility Energy = (Facility Metered Energy/Total Metered Energy) x POI Metered Energy
where, for purposes of the above formula:
Facility Energy = the Energy allocated to the Facility in the Settlement Interval
Facility Metered Energy = Metered Energy for such Facility in the Settlement Interval
Total Metered Energy = total Metered Energy for all Facilities in the Settlement Interval
POI Metered Energy = the amount of Energy measured by the CAISO at the Point of Interconnection in the Settlement Interval
      5.2 Losses on Transmission Line
.  Line Losses will be automatically allocated among the Co-Owners through the measurement of energy deliveries as described in Section 5.1, which is net of losses or in accordance with the formula set forth in Section 5.1, which includes Line Losses in the measurement of POI Metered Energy.  
      5.3 Meter Testing and Repair
. 
      5.3.1 Inspection and Testing.  Each Co-Owner will cause its revenue meter to be inspected and tested upon its installation and at least once every twenty-four (24) months thereafter, or more frequently if required by CAISO rules or the CAISO Tariff, by the Interconnection Agreement, or by any power purchase agreement to which a Co-Owner is a party, and at any other reasonable time upon Operator's request, which may not be made more than twice each year.  Operator will pay the costs of such inspection and testing (which shall be considered an O&amp;M Cost), unless the results of the test show the Co-Owner's meter to be inaccurate by more than [two-tenths of one percent (0.2%)]1, in which case the Co-Owner who owns the meter will pay the costs of the inspection and test.  Each Co-Owner will give the other Co-Owners reasonable advance notice of tests of its meter and the other Co-Owners have the right to witness such tests.
      5.3.2 Calibration or Repair.  If a test shows a Co-Owner's meter to be inaccurate, the owner of the meter will use commercially reasonable efforts to cause its meter to be calibrated, repaired or replaced as soon as reasonably practical.  If a test shows a Co-Owner's meter to be inaccurate by more than [two-tenths of one percent (0.2%)], an adjustment will be made correcting all measurements made by the meter found to be inaccurate for the actual period during which inaccurate measurements were made, if such period can be determined, or, if not, the period immediately preceding the meter test equal to the lesser of one-half the time from the date of the last test of the inaccurate meter or one hundred eighty (180) days.  Such adjustments will be reflected as charges or credits, as applicable, on the invoices for O&amp;M Services rendered monthly by Operator to the Co-Owners.
ARTICLE VI 
OPERATION AND MAINTENANCE OF SHARED FACILITIES.
      6.1 Engagement of Operator
.  The Co-Owners hereby engage Operator to manage, operate, maintain and repair the Shared Facilities, to administer and take all necessary actions under the Shared Real Property Agreements, to administer and take all necessary actions under the Shared Permits, and to perform other duties pertaining to the Shared Assets (the "O&amp;M Services"), all as set forth in this Agreement; provided, however, that to the extent do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, the administration of such Shared Permits shall not be included in O&amp;M Services, but shall be paid for separately by the Co-Owners benefiting from such Shared Permits in proportion to their respective benefits.  Operator accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  Operator's authority shall be limited to performing the O&amp;M Services and such other services as may be approved by all of the Co-Owners and shall be further limited as provided in Section 6.16.
      6.2 Standards for Operator's Performance
.  Operator shall perform the O&amp;M Services in accordance with Good Utility Practice, the Material Project Agreements, the Shared Real Property Agreements, this Agreement and all other agreements relating to ownership, construction, operation and maintenance of the Shared Facilities, Applicable Laws and requirements of Governmental Authorities, including without limitation all Hazardous Materials Laws and all Environmental Laws, and all safety policies and procedures (collectively, the "Performance Standard").
      6.3 O&amp;M Services
.  Operator shall provide or cause to be provided the following services (and such other services as may be agreed from time to time by the Co-Owners and Operator) on behalf of each of the Co-Owners who have an Undivided Use Interest from and after the date each such Co-Owner has notified Operator of its exercised right to an Undivided Use Interest in the Shared Assets pursuant to Section 4.2 (the "O&amp;M Services Commencement Date"):
      (a) manage, supervise, operate, inspect, repair and maintain the Shared Assets in accordance with the Performance Standard and the Approved Budget, including the day to day management of the Shared Assets;
      (b) pay and collect amounts due in connection with the Shared Assets including but not limited to taxes and assessments pursuant to Section 12.2, and maintain one or more bank accounts wherein funds received by the Operator in connection with its duties herein shall be maintained;
      (c) expend monies necessary for the management, operation, maintenance and repair of the Shared Facilities;
      (d) notify each Co-Owner of any material notice (or any other material information that would reasonably be expected to affect the Co-Owners) received by Operator, whether from any Co-Owner, another Person or a Governmental Authority;
      (e) manage compliance with the Co-Owners' rights in the Shared Real Property in accordance with the Shared Real Property Agreements, including timely exercising options under the Shared Real Property Agreements to acquire property, enter into a lease or extend a lease term [in accordance with instructions from the Co-Owners, and making payments required under the Shared Real Property Agreements; provided that the Operator shall have no right to amend the Shared Real Property Agreements; 
      (f) manage performance by the Co-Owners under  the Material Project Agreements and to coordinate with the "Manager" under the LGIA Co-Tenancy Agreement in the performance of its and the Co-Owners' obligations thereunder; 
      (g) give and receive notices and communicate with the CAISO and the Transmission Owner with respect to the Shared Facilities and the commissioning, operation, maintenance and repair of the Shared Facilities; 
      (h) manage compliance of the Shared Facilities and Shared Real Property with all applicable Environmental Laws and Permits; and
      (i) with respect to the Shared Real Property and the Shared Facilities located on the Shared Real Property, oversee all investigations, studies, clean up, corrective action or response or remedial action required by any Governmental Authority now or hereafter authorized to regulate environmental or other matters or by any consent decree or court or administrative order now or hereafter applicable to the use, operation or ownership of the Shared Real Property by a Co-Owner or the Shared Facilities located on the Shared Real Property.
      6.4 Scheduled Maintenance
.   Operator shall schedule maintenance and any planned outages of the Shared Facilities so as to minimize interference with the Co-Owners' scheduled energy deliveries.  Maintenance and any planned outages of the Shared Facilities shall be scheduled, to the maximum extent possible, during scheduled maintenance outages of the Co-Owners' Facilities.  Each Co-Owner will provide to the Operator and the other Co-Owners by [January 1] of each year a schedule of planned maintenance outages on such Co-Owner's Facility for the subsequent twelve- month period.  Scheduled outages of the Shared Facilities will be subject to the approval of all affected Co-Owners, such approval not to be unreasonably withheld.  Operator will seek to limit the duration of any outage, planned or unplanned, to the maximum extent reasonably possible consistent with Applicable Laws and Good Utility Practice.
      6.5 Unplanned Outages
.  Operator will notify the Co-Owners of all emergency or unplanned outages of any of the Shared Facilities as soon as practicable, in accordance with Good Utility Practice, and will provide an estimated time of return of the Shared Facilities to service, or if not known, will keep the Co-Owners advised regarding the status of same.
      6.6 Emergency Conditions
.  In the event of an emergency condition involving the Shared Assets that could be reasonably expected by Operator to result in possible personal injury, loss of life, damage to or destruction of property, or danger to the public (an "Emergency Condition"), the Operator shall, without the need for prior notification of the Co-Owners, take such action as may be reasonable and necessary, as determined in the sole discretion of the Operator, including curtailing energy deliveries on the Transmission Line as provided in Section 4.2.1, to prevent, avoid or mitigate such loss, and shall, as soon as reasonably practicable, report any such emergency, including the Operator's response thereto, to the Co-Owners, and  Operator shall be compensated by the Co-Owners for the costs of taking such actions in proportion to their Ownership Interest in the Shared Assets so affected. 
      6.7 O&amp;M Costs
.  Costs of performing O&amp;M Services (the "O&amp;M Costs") shall include all payments made and expenses incurred by Operator in performing O&amp;M Services (at cost and without markup), including but not limited to related overhead and applicable taxes, and costs (except insurance costs) related to ownership of the Shared Assets and shall be allocated among the Co-Owners as provided in Section 6.10.  O&amp;M Costs shall not include any costs related to use of any of the Shared Facilities by Persons other than Co-Owners, including without limitation any costs or expenses related to portions of the Shared Facilities leased or subleased to such Persons (including the sublease of a portion of the operations and maintenance building to Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC).
      6.8 Budgeting Process
.  Each year during the term of this Agreement, Operator will prepare a forecast budget of O&amp;M Costs for the following calendar year and will provide a copy to the Co-Owners by October 31.  The forecast budget shall separately allocate costs and expenses to each Shared Assets Group to the extent reasonably practical.  The forecast budget must be approved by two-thirds of the Co-Owners (based on their respective Proportionate Shares), such consent not to be unreasonably withheld.  The Co-Owners will have thirty (30) days after receipt to review and approve the forecast budget and discuss any concerns with the forecast budget with Operator.  If two-thirds or more of the Co-Owners (based on their respective Proportionate Shares) approve the forecast budget, it shall be deemed approved for all purposes hereunder and shall be binding on all Co-Owners.  In the event less than two-thirds of the Co-Owners (based on their respective Proportionate Shares) approve the forecast budget, the matter will be submitted to dispute resolution pursuant to Exhibit E; provided, however, that pending resolution of any such dispute, the forecast budget shall be the operative budget for the Shared Facilities except that the aggregate O&amp;M Costs in each category of expenses shall be limited to one hundred twenty-five percent (125%) of the amount for such category in the previous Annual O&amp;M Budget.  After approval of and, if applicable, resolution of any disputes, the forecast budget (such approved forecast budget, the "Annual O&amp;M Budget"), each Co-Owner shall pay Operator 1/12 of its Proportionate Share of the Annual O&amp;M Budget plus any applicable costs or charges payable for Extraordinary Maintenance by the fifth (5th) day of each calendar month during the ensuing calendar year.  Operator shall reconcile the actual amounts paid for O&amp;M Costs to the forecast budget after the end of the calendar year as provided in Section 6.10.  
      6.9 Extraordinary Maintenance
.  Each Co-Owner agrees to reimburse Operator for its Proportionate Share of the costs of any maintenance or other services required in the event of unusual or catastrophic circumstances, to the extent such costs were not included in the forecast budget for O&amp;M Services ("Extraordinary Maintenance").  In such event, Operator will prepare a forecast budget for such Extraordinary Maintenance for the Co-Owners' review and performance of the Extraordinary Maintenance will be subject to the Co-Owners' prior approval, not to be unreasonably withheld, unless immediate action is required due to an Emergency Condition pursuant to Section 6.6.  On or before the tenth (10th) day of the month after the month in which any Extraordinary Maintenance costs are incurred, Operator shall invoice the Co-Owners for their respective Undivided Use Interest of such costs.  Any amounts so invoiced will be at the same time as the next monthly payment on account of the Annual O&amp;M Budget as provided in Section 6.8.
      6.10 Responsibility for O&amp;M Costs
.  Each Co-Owner shall be responsible for its Proportionate Share of O&amp;M Costs, including the costs of any Extraordinary Maintenance incurred by Operator, with respect to each Shared Assets Group as to which it is a Co-Owner; provided that, except in the case of Emergency Conditions, Operator will not incur O&amp;M Costs in any major category of O&amp;M Costs or in the aggregate that exceed the budgeted amount for such category or the total amount of O&amp;M Costs, as applicable, by more than ten percent (10%) of the amounts shown on the Annual O&amp;M Budget without the written consent of at least two-thirds of the applicable Co-Owners (based on their respective Proportionate Shares).  Within sixty (60) days after the end of each calendar year, Operator shall invoice the Co-Owners for, or shall refund to the Co-Owners, as applicable, their Proportionate Shares of the difference between the Annual O&amp;M Budget and the actual amount of O&amp;M Costs paid or incurred in such calendar year.  Any invoice for such amounts shall be paid within thirty (30) days after receipt.  The invoices shall be delivered to Co-Owners as set forth in Section 17.15.  Any amounts not paid when due shall be deemed delinquent and shall accrue interest at the then-effective prime rate of interest published under "Money Rates" by The Wall Street Journal, plus two percent per annum from the due date to the date of payment (the "Late Payment Rate").  In the event that any due date falls upon a weekend day or bank holiday, such payment shall be due and payable on the first Business Day immediately thereafter.
      6.11 Books and Records
.   Operator shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Owner or its authorized representative at the cost and expense of such Co-Owner and at reasonable times during regular business hours, upon reasonable notice to Operator.
      6.12 Disputes
.  If a Co-Owner disputes the accuracy of all or any portion of an invoice, such Co-Owner shall, nevertheless, pay the full amount of the invoice (including the disputed portion) and submit to Operator a written statement detailing the items disputed.  If the Co-Owner and Operator are unable to resolve the disputed items, the matter will be resolved in accordance with the dispute resolution provisions in Exhibit E.  If the Co-Owner prevails with respect to the disputed amounts, Operator shall refund the Co-Owner the disputed amounts, including interest on the disputed amounts at the Late Payment Rate.
      6.13 No Waiver of Right to Audit
.  Any payment made by a Co-Owner pursuant to this Agreement shall not constitute a waiver of any right of such Co-Owner to question or contest the accuracy of any charge, or to request and receive from Operator sufficient data to audit any charge concerning which a Co-Owner has a question or which is or may be contested, provided, however, that a Co-Owner must initiate any audit or data request no later than twelve (12) months after the Due Date of any such bill or charge and bear reasonable costs associated with such audit, and provided further that if as a result of the audit a determination is made that errors were made by Operator, Operator shall, in addition to correcting the error,  reimburse the costs of the audit to the Co-Owners. 
      6.14 Obligations
.  The Operator shall have no liability for any obligations except those expressly stated in this Agreement, and nothing in this Agreement shall obligate the Operator to perform any duties or assume any liabilities under any agreement to which the Operator is not directly a party unless such duties are also expressly stated in this Agreement or otherwise expressly agreed to by Operator, and then only to such extent.  The Co-Owners acknowledge that the Operator's performance under this Agreement is dependent upon the Co-Owners having complied with their obligations under this Agreement (including with respect to payment) and the Operator having timely and appropriate access to all parts of the Shared Assets and access to all documents as reasonably required by the Operator.
      6.15 Risk of Loss; Indemnity
.  
      6.15.1 As between the Co-Owners and the Operator, the Co-Owners shall be responsible for the risk of loss to the Shared Facilities or any portion thereof during the repair, management, operation and maintenance of the Shared Facilities, regardless of cause, except to the extent such loss is caused in whole or in part by the fraud or willful misconduct of the Operator.
      6.15.2 Operator shall not be liable to any Co-Owner for any act performed in good faith by Operator in the discharge of its duties hereunder as Operator or in the exercise of its powers and authority hereunder as Operator, including damages arising out of any curtailment of use of the Shared Facilities or the disconnection of, or the election not to disconnect, a Facility from the Shared Facilities, unless Operator's acts or omissions constitute fraud or willful misconduct.
      6.15.3 Each Co-Owner shall, pro rata in accordance with its Proportionate Interest, indemnify and hold harmless Operator and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in its reasonable judgment, in good faith, or in reasonable reliance on advice of Operator's attorneys or accountants, in connection with the Shared Facilities, the Shared Real Property or this Agreement (other than as a result of the fraud or willful misconduct of Operator), including reasonable attorneys' fees incurred by Operator in connection with the defense of any action based on any such alleged act or omission.
      6.16 Limitations on Operator's Authority
.   Notwithstanding anything herein to the contrary, Operator shall have no authority to and shall not (i) amend or terminate any Material Project Agreement or enter into, amend or terminate any other contract or agreement on behalf of the Co-Owners, (ii) create any lien or security interest on or in any Shared Facilities, Shared Real Property or any other asset of any or all of the Co-Owners, except as expressly permitted under Section 10.1.6, (iii) buy, sell, convey or otherwise dispose of any Shared Facilities or Shared Real Property, (iv) incur any debt or other obligations on behalf of any or all of the Co-Owners, except in connection with the O&amp;M Services or as provided in this Agreement or another written agreement among Operator and the Co-Owners, or (v) enter into leases or subleases of or grant licenses or other rights with respect to any Shared Facilities or Shared Real Estate except with the written approval of all of the Co-Owners.
      6.17 Replacement of Operator.
.   Operator may only be removed upon the vote of two-thirds of the Co-Owners (based on their respective Proportionate Shares).  Any new Operator must be approved by the unanimous vote of the Co-Owners.
ARTICLE VII 
DAMAGE TO, DESTRUCTION OR FAILURE OF SHARED FACILITIES
      7.1 Damage or Destruction
.  In the event of any damage or destruction to, or other failure of all or any part of the Shared Facilities that affects the business operations of one or more Co-Owners in a Shared Assets Group (each an "Affected Party"), such Affected Party shall, subject to any contrary requirements in Material Project Agreements or Applicable Law, take all commercially reasonable actions as may be necessary or appropriate to repair or replace the affected Shared Facilities or other facilities in order to restore the affected Shared Facilities or other facilities to substantially the same condition (or better) as before such damage or destruction (and any costs associated with such actions, after accounting for recoveries under any applicable insurance policies, will be shared by the Co-Owners in such Shared Assets Group pro rata based on their Ownership Interests, as applicable).  Following any such damage, destruction or failure, if (i) the Affected Party fails to diligently proceed with the repair or replacement of the affected Shared Facilities or other facilities in accordance with the preceding sentence, or (ii) the Affected Party notifies the other Co-Owners that it does not intend to repair or replace the affected Shared Facilities or other facilities, then in either such case, the other Co-Owners in the relevant Shared Assets Group shall have the right to repair or replace the affected Shared Facilities or other facilities (or a portion thereof sufficient to serve such other Co-Owners' requirements) and continue the operation and maintenance thereof for the remainder of the Term; provided that, in such event the Affected Party shall be obligated to the Co-Owners funding the repair or replacement of the Shared Facilities or other facilities to the extent of its Proportionate Share of the costs of repair or replacement; and provided further, that such other Co-Owners shall not unreasonably interfere with the business operations of the Affected Party.  In all events, the Co-Owners shall cooperate with each other in good faith to minimize the cost of repair or replacement of the Shared Facilities and minimize the impact thereof on the Co-Owners and their respective business operations.
ARTICLE VIII 
CESSATION OF OPERATIONS BY A CO-OWNER
      8.1 Co-Owner Ceasing Operations
.  In the event a Co-Owner decides to shut down, decommission, abandon or cease operation of its Facility (such Co-Owner, a "Co-Owner Ceasing Business Operations"), it shall provide the other Co-Owners with at least six (6) months' prior written notice of such shut-down, abandonment, decommissioning, or cessation of operations.  The Co-Owner Ceasing Business Operations shall reasonably cooperate with the other Co-Owners in order to minimize any interference with such other Co-Owners' business operations, and the Co-Owner Ceasing Business Operations shall, at the request of the other Co-Owners, take such actions as may be necessary or appropriate, consistent with Good Utility Practice, to safely disconnect its Facility from the Shared Facilities and to cease using the Shared Facilities and the Shared Real Property, including granting such rights and executing and delivering such agreements, assignments, and instruments as may be necessary to transfer and convey its Ownership Interest in the Shared Assets in the applicable Shared Asset Group(s) to the other Co-Owners in accordance with Section 8.3, subject to obtaining any necessary FERC approvals, and compliance with requirements of any other Governmental Authority and Applicable Law.  The remaining Co-Owners in the Shared Asset Group will assume decommissioning obligations for the Shared Facilities in accordance with their Proportionate Share of the Shared Assets acquired from the Co-Owner Ceasing Business Operations.  The Co-Owner Ceasing Business Operations shall also grant to the other Co-Owners such rights and interests as may reasonably be necessary to enable to enable the remaining Co-Owners to continue using, operating, and maintaining the Shared Facilities as they have been used, including if necessary the construction of such additional facilities as may be necessary to replace Shared Facilities which are no longer usable.  After such abandonment, decommissioning, shut down or cessation of business operations by the Co-Owner Ceasing Business Operations, the other Co-Owners shall assume and be responsible for all costs, liabilities and expenses associated with the use, operation, maintenance (and ownership and decommissioning, if applicable) of the Shared Facilities (and any other facilities that may become Shared Facilities).  
      8.2 Co-Owner Last Using Shared Facilities
.  The Co-Owner(s) last using the Shared Facilities (as confirmed in writing by the Co-Owners pursuant to the last two sentences of this Section 8.2) shall have the obligation to decommission such Shared Facilities to the extent contractually required or pursuant to Applicable Law (the "Decommissioning Obligation"); provided, however, that if two or more Co-Owners discontinue using the Shared Facilities contemporaneously, such Co-Owners shall share in any Decommissioning Obligation on a basis reflecting their Ownership Interests in such Shared Facilities, where applicable.  If a Co-Owner determines that it no longer desires to utilize the Shared Facilities, it shall provide such notice to the other Co-Owners (the "Last Use Notice") at least six (6) months prior to the date on which it will cease to utilize the Shared Facilities, in which case such Co-Owner shall, as of such specified date and subject to any required FERC notifications or obtaining any necessary FERC approvals, have no further right to utilize the Shared Facilities.  The Co-Owner(s) that receive(s) such Last Use Notice shall, within forty-five (45) days of such receipt, either (i) agree that it or they also no longer desire to utilize the Shared Facilities, in which case the Co-Owners shall be deemed to have discontinued use of the Shared Facilities contemporaneously and shall share in any Decommissioning Obligation as set forth above, or (ii) state that it or they intend(s) to continue to utilize the Shared Facilities, in which case such Co-Owner(s) shall assume the Decommissioning Obligation.  
      8.3 Procedure for Transfer by a Co-Owner of its Ownership Interest.  The consideration for transfer of a Co-Owner's Ownership Interest in its Shared Assets to other Co-Owner(s) pursuant to the foregoing shall be an amount equal to the fair market value of the Shared Assets.  The fair market value of the Shared Assets shall be determined by agreement of the Co-Owners of the Shared Assets being transferred, or if they are unable to agree, by appraisal conducted by an appraisal conducted by an appraiser selected jointly by such Co-Owners.  If the Co-Owners are unable to agree on a single appraiser, then each Co-Owner shall select an appraiser, and such appraisers shall select an independent appraiser to determine fair market value of the Shared Assets.  Such determination of the fair market value shall be final and binding on the Co-Owners.    
      8.4 Change in Ownership Interest
. In the event of a change in the Ownership Interests of the Co-Owners in a Shared Asset Group, each Co-Owner's Ownership Interest and/or Undivided Use Interest, and the Co-Owners' reimbursement percentages for O&amp;M Costs (including taxes) will be adjusted, and this Agreement shall be amended to reflect such adjustment.  Any change in Ownership Interest of a Co-Owner shall be subject to required FERC approvals and any other filings with or approvals by Governmental Authorities and compliance with Applicable Laws.  
ARTICLE IX 
RELATIONSHIP OF OPERATOR AND CO-OWNERS
      9.1 Actions Taken by Operator
.  Except as provided in Section 9.8, Operator is authorized to take all actions or activities on behalf of the Co-Owners that the Co-Owners have the right or obligation to take or perform with respect to the construction, installation, operation, maintenance, repair, restoration, removal and/or replacement of the Shared Assets, and Operator shall take and perform such actions and activities in lieu of the Co-Owners.  A Co-Owner and its invitees shall have the right to inspect the Shared Facilities and the Shared Real Property to the full extent permitted by the Shared Real Property Agreements, provided however, that such inspection shall not unreasonably interfere with the construction, installation, operation, maintenance, repair, restoration, removal and/or replacement of the Shared Facilities, and any Persons inspecting the Shared Facilities shall abide by any and all safety rules and procedures established by Operator that are not inconsistent with this Agreement or otherwise applicable to the Project, as communicated by the Operator prior to their access to the Shared Facilities; and provided further Operator may require that such Co-Owner and its invitees must be accompanied by Operator.
      9.2 Limitations on Operator's Authority
.  Operator shall not, without the prior approval of all of the Co-Owners, take any of the following actions;
      9.2.1	Create or cause to be created any lien, security interest or charge on the Shared Facilities or the Shared Real Property;
      9.2.2	Amend or modify the terms of this Agreement;
      9.2.3	Sell, assign, mortgage, encumber, convey or otherwise transfer all or any portion of any estate, right, title or interest of the Co-Owners in the Shared Facilities and/or the Shared Real Property, except for disposal of used, obsolete or worn out equipment that is being replaced or in connection with the decommissioning the Shared Facilities and the winding up of this Agreement;
      9.2.4	Borrow any funds or incur any indebtedness on behalf of the Co-Owners;
      9.2.5	Incur expenses on behalf of the Co-Owners except in accordance with this Agreement;
      9.2.6	Enter into any contracts or commitments in excess of Five Hundred Thousand Dollars ($500,000) or with a duration of greater than one (1) year, except as provided in the Annual O&amp;M Budget and/or the approved budget for Extraordinary Maintenance; or
      9.2.7	Compromise any claim, demand or legal proceeding where the liability is not fully covered by insurance.
      9.3 Costs and Expenses
.  Except with respect to the design and construction of the Shared Facilities, which is covered in Section 4.3, Operator's costs and expenses incurred in the exercise of rights and performance of obligations on behalf of the Co-Owners under the Shared Real Property Agreements and this Agreement shall be considered reimbursable O&amp;M Costs for purposes of this Agreement.
      9.4 Obligations under Shared Real Property Agreements; Exercise of Options
.  
      9.4.1	Operator's obligation to perform obligations under the Shared Real Property Agreements shall include the obligation to fulfill indemnity obligations; provided that, Operator's costs in performance of such obligations shall be subject to indemnification pursuant to Section 6.15 and Article XV.  If, pursuant to Article XV, the cost of performance would ultimately be required to be paid entirely by a Co-Owner (i.e., the indemnified claims are solely due to negligence of such Co-Owner), the Co-Owner shall instead assume the direct obligation to perform such indemnity obligations and Operator shall have no obligation to do so. 
      9.4.2	Operator shall monitor the dates for the exercise of all options and other elections under the Shared Real Property Agreements, shall notify the Co-Owners of the deadlines for exercising such options or elections not less than [sixty (60)] days before such deadlines, and shall seek the decision of the Co-Owners with respect to the exercise of such options or other elections in a timely manner.  No option or other election shall be exercised except with the consent of at least two-thirds  of the Co-Owners (based on their respective Proportionate Shares).
      9.5 Consent or Approval
.  Operator shall not grant any consent or approval of the Co-Owners required under of any of the Shared Real Property Agreements or Material Project Agreements without the prior written consent of all of the affected Co-Owners, which shall not be unreasonably withheld or delayed.
      9.6 Condemnation Awards
.  Any condemnation or similar awards to which the Co-Owners shall become entitled under the Shared Real Property Agreements or with respect to the Shared Facilities shall be used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities unless such repair, restoration or replacement is not feasible, the condemnation or other award is insufficient to complete such repair, restoration or replacement, or all of the Co-Owners agree otherwise in writing.  If such condemnation or other awards are not used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities, they shall be divided among the Co-Owners in proportion to their respective Ownership Interests in the affected Shared Real Property and/or Shared Facilities, provided that if such sums are in reimbursement of or compensation for specific costs or damages incurred by the Co-Owners in ratios different from that of their Ownership Interests, then such different ratios shall be used in apportionment of such sums among the Co-Owners.
      9.7 Transfer or Encumbrance of Interest in Shared Assets
.  Notwithstanding anything to the contrary contained in this Agreement or the Shared Real Property Agreements, and without limiting the other requirements and limitations in this Agreement with respect thereto, including Section 10.6 and Article XIV, in no event shall a Co-Owner assign, transfer or convey, or mortgage, pledge or otherwise encumber its Ownership Interest in any Shared Asset except in connection with a simultaneous assignment, transfer or conveyance, or mortgage, pledge or other encumbrance, of the Facility owned by such Co-Owner and such Co-Owner's interests in this Agreement.  Any such assignment, transfer, conveyance, mortgage, pledge or encumbrance and the rights acquired in connection therewith shall be subject in all respects to the terms and conditions of this Agreement.
      9.8 Additional Co-Owner Rights
.  
      9.8.1 Each Co-Owner shall have the right, in the case of an Emergency Condition that affects such Co-Owner's Facility or the Shared Facilities necessary to serve such Co-Owner's Facility, to make such repairs and to take such other actions with respect to the Shared Facilities as may be reasonably necessary to avoid or mitigate loss as a result of such Emergency Condition; provided, however, that, to the extent that circumstances permit, a Co-Owner shall make reasonable efforts to contact the Operator and to have the Operator repair or otherwise take action with respect to the Shared Facilities before making such repairs or taking such other actions.
      9.8.2 Each Co-Owner shall have the right to participate with the other Co-Owners in connection with any dispute with a landowner or other Co-Owner arising under the Shared Real Property Agreements, and the Co-Owners shall fully cooperate and communicate with one another in that regard.
      9.8.3 If the Operator fails to take any action or perform any of the services it is obligated to do or perform under this Agreement after reasonable notice, and if such failure to act or perform has a material adverse effect on the use or operation of such Co-Owner's Facility or the Shared Facilities necessary to serve such Co-Owner's Facility, such Co-Owner may take such actions as may reasonably be necessary to correct the Operator's failure to act or perform and shall be entitled to recover all reasonable costs of doing so from the Operator; provided that such Co-Owner shall give the other Co-Owners and the Operator not less than ten (10) days prior written notice (in addition to any notice to the Operator seeking to have the Operator take the required action or perform the required services) before taking such actions.
ARTICLE X 
COVENANTS
Each Co-Owner hereby covenants as follows:
      10.1 No Interference.  Except as otherwise set forth in this Agreement, each Co-Owner's use of the Shared Assets shall not interfere in any material respect with the use and enjoyment by the other Co-Owners of the Shared Assets or other rights arising under this Agreement to the extent provided in this Agreement, including curtailing or diminishing another Co-Owners ability to use its Proportionate Share of the Delivery Capacity of the Transmission Line. 
      10.2  Interconnection Rights.  Each Co-Owner shall be responsible for securing and maintaining such rights as are necessary to interconnect such Co-Owner's Facility with the Transmission Owner's transmission system at the Point of Interconnection.
      10.3 Interconnection Agreement.  The rights and responsibilities of the Co-Owners with respect to the Interconnection Agreement shall be governed by the LGIA Co-Tenancy Agreement.  Nonetheless, a Co-Owner, upon receiving notice of default from the CAISO or Transmission Owner under the Interconnection Agreement, shall provide a copy of such notice of default to the other Co-Owners within 24 hours of receiving such notice.
      10.4 Shared Real Property Agreements.  Each Co-Owner shall provide all other Co-Owners and to each Lender, within 24 hours, a copy of a notice of any default by or disagreement with a landowner, or notice of default by a Co-Owner, under any Shared Real Property Agreement, as well as any communication with such landowner or any other relevant Co-Owner related to the Shared Real Property Agreement or rights or obligations thereunder.
      10.5 No Waste.  No Co-Owner shall use or permit the use of the Shared Assets in any manner that would create waste or nuisance, or that would materially increase the premium, or materially jeopardize the issuance or maintenance of any insurance policy of any Co-Owner relating to the Shared Assets.
      10.6 No Liens.  Subject to Article XIV, no Co-Owner shall create, permit or suffer to exist by, through or under such Co-Owner any liens on the Shared Assets, except for (a) liens for taxes that are not yet delinquent or are being contested in good faith by appropriate proceedings, and (b) mechanic's, materialmen's or other like liens that arise from the construction, reconstruction, ownership or operation of such Shared Assets; provided that if any mechanics' liens or similar liens attached to the Shared Assets, the Co-Owner performing or contracting or causing the engagement of the holder of such attached lien shall, within thirty (30) days after it receives notice of the filing, either bond around such lien or establish appropriate reserves therefor, or otherwise remove such lien from such Shared Assets pursuant to applicable Law (each of (a) and (b), a "Permitted Lien"). 
      10.7 Standard of Performance.  Each Co-Owner shall construct, operate and maintain its Facility and shall perform its obligations under this Agreement in accordance with (a) all Applicable Laws, including the CAISO Tariff, and Permits, (b) Good Utility Practice, (c) the terms and conditions of the Interconnection Agreement and all applicable requirements thereunder, (d) the terms and conditions of the Material Project Agreements to which it is a party, and (e) the terms and conditions of all Shared Real Property Agreements.
ARTICLE XI 
INSURANCE; WAIVER
      11.1 Insurance Responsibilities
.  Operator shall procure and maintain, on behalf of the Co-Owners, all-risk property insurance for the full replacement cost of the Shared Assets, and comprehensive general liability insurance insuring Co-Owners and Operator against claims or losses caused by or arising out of the ownership, operation and maintenance of the Shared Assets, in such amounts and with such coverages as are customary, commercially reasonable and consistent with Good Utility Practice, as well as any additional insurance as may be required under any of the Shared Real Property Agreements or Material Project Agreements.  Procurement of such insurance shall be part of the O&amp;M Services, and the cost thereof shall be O&amp;M Costs.  All Co-Owners shall be named as loss payees or named insureds, as applicable, under such policies.  Operator shall provide certificates of insurance coverage to the Co-Owners upon request. 
      11.2 Waiver
.  Notwithstanding any provision to the contrary in this Agreement, each of the Co-Owners hereby waives any and all rights of recovery, claim, action or cause of action against the other Co-Owners and their Affiliates, for any loss or damage that may occur to the Shared Facilities, or any personal property of such Co-Owner in or non the Shared Real Property, by reason of fire, the elements or any other cause which is required to be insured by property insurance policies obtained pursuant to this Agreement, regardless of cause or origin, including negligence of the other Co-Owner hereto, or its Affiliates, and each Co-Owner shall cause its insurer to waive subrogation  rights against the other Co-Owners.
ARTICLE XII 
TAXES
      12.1 Operator Payment of Property Taxes and Assessments
.  Operator will pay, when due, all real and personal property taxes and assessments, general or special, levied against the Shared Facilities or their operation, or payment obligations in lieu of such taxes, or that are payable pursuant to the Shared Real Property Agreements, subject to Operator's right to contest the validity of such taxes or assessments and a Co-Owner's right to require Operator contest the validity of such taxes or assessments at the Co-Owner's expense.  
      12.2 Reimbursement Obligations
.  Each Co-Owner shall be responsible for, and the Co-Owners will reimburse Operator for such Co-Owner's respective Proportionate Share in one or more Shared Asset Groups in which it has an Ownership Interest, of the taxes and assessments described in Section 12.1 as O&amp;M Costs as provided in Article VI.
      12.3 Transfer Taxes, Sales and Use Taxes
.  In the event of a transfer or sale of all or part of a Co-Owner's Ownership Interest in a Shared Asset, applicable transfer taxes and sales and use taxes will be borne by the purchaser(s) or transferee(s) of such Shared Asset; provided that the non-transferring Co-Owners shall have no obligation with respect to any such transfer taxes or sales and use taxes, and shall be held harmless against same by the transferring Co-Owner (unless they are the purchaser or transferee of such Shared Asset).  
      12.4 Construction of Shared Assets.  In the event of construction of an Additional Phase or other Shared Assets where construction costs are shared by Co-Owners of the Shared Assets, all applicable sales and use taxes and transfer taxes shall be borne by the Co-Owners of such Shared Assets in accordance with their respective Ownership Interests in the Shared Assets.    
ARTICLE XIII 
EVENTS OF DEFAULT; REMEDIES
      13.1 Defaults
.  The occurrence and continuation of any of the following events shall constitute an event of default by a Co-Owner or Operator, as applicable, under this Agreement (an "Event of Default"):
      13.1.1 Payment.  A Co-Owner fails to pay when due any amounts required to by paid by such Co-Owner under this Agreement, and such failure to pay is not cured within ten (10) days following written notice from any other Co-Owner or the Operator specifying the amount to be paid, provided that such period shall be extended with respect to a disputed portion of such amount for so long as the allegedly defaulting Co-Owner is disputing in good faith such amount pursuant to the procedures set forth in Section 6.12.
      13.1.2 Bankruptcy.  If a Co-Owner or the Operator files a petition or otherwise commences, or authorizes or acquiesces in the commencement of, a proceeding or cause under any bankruptcy, insolvency, receivership or similar law for the protection of creditors or suffers the filing of an involuntary bankruptcy petition or proceeding commenced against it, which in the case of an involuntary petition or proceeding remains undismissed and unstayed for sixty (60) days;
      13.1.3 Other Defaults.  A Co-Owner fails to cure any breach or default in the performance of any material covenant or obligation hereunder in any material respect, within thirty (30) days following written notice from any other Co-Owner or Operator specifying the nature of the failure to perform, provided that if the default is not reasonably capable of being cured within thirty (30) days, then the defaulting Co-Owner may be allowed such longer period as the Co-Owners mutually agree (not to exceed ninety (90) days) as may be reasonably necessary under the circumstances to cure such failure so long as the defaulting Co-Owner is pursuing a cure with reasonable diligence; provided, further, that if any covenant or obligation relates to the performance of any covenant or obligation under a Shared Real Property Agreement or Material Project Agreement, such default must be cured no later than [ten (10)] days before the expiration of any cure period in such Shared Real Property Agreement or Material Project Agreement.
      13.1.4 Default by Operator.  Operator fails to perform any of its material operation, maintenance, repair or other obligations in this Agreement, with respect to all or a portion of the Shared Assets, and such failure is not cured within ten (10) days following written notice by a Co-Owner; provided that, that if such failure by Operator creates an Emergency Condition or materially interferes with a Co-Owner's Undivided Use Interest in Shared Facilities in which it has an Ownership Interest, or operation of its Facility, only such advance written notice, if any, as may be reasonably practicable under the circumstances shall be required, but if such advance notice is not provided, written notice thereof shall be provided promptly thereafter by the Co-Owner to Operator; provided further that if the default is not reasonably capable of being cured within ten (10) days, then the defaulting Co-Owner may be allowed such longer period as the Co-Owners mutually agree (not to exceed [ninety (90)] days) as may be reasonably necessary under the circumstances to cure such failure so long as the defaulting Co-Owner is pursuing a cure with reasonable diligence; or
      13.1.5 Assignment; Merger, Consolidation without Assumption of Obligations.  A Co-Owner assigns or otherwise transfers its rights under this Agreement except as expressly permitted hereunder, or consolidates or amalgamates with, or merges with or into, or transfers all or substantially all of its assets to, another entity and, at the time of such consolidation, amalgamation, merger or transfer, the resulting, surviving or transferee entity fails to assume all the obligations of such Co-Owner under this Agreement to which it or its predecessor was a party by operation of law or pursuant to an agreement reasonably satisfactory to the other Co-Owners.
      13.2 Remedies Upon Default
.
      13.2.1 If any default is not cured within the applicable cure period (if any) provided in Section 13.1 by making or tendering the required payment or performance, each non-defaulting Co-Owner shall have the right (i) to cure the default at the expense of the defaulting Co-Owner, in which event the defaulting Co-Owner shall reimburse the curing Co-Owner all of the curing Co-Owner's costs of cure within thirty (30) days of invoice, or curing Co-Owner may offset such costs against any sums then or thereafter owed by the curing Co-Owner to the defaulting Co-Owner; (ii) to enforce specific performance; or (iii) to enforce any other remedy available to the non-defaulting Co-Owner at law or in equity, subject to Section 13.2.5 and Article XVI.
      13.2.2 If Operator defaults pursuant to Section 13.1.4, any Co-Owner may at its option access the Shared Assets and perform (or cause to be performed) operation, maintenance, repair or other duties on behalf of Operator, and Operator shall reimburse such Co-Owner's reasonable costs and expenses incurred by (or on behalf of) such Co-Owner promptly upon Operator's receipt of an invoice accompanied by documentation evidencing such costs and expenses and their reasonableness; 
      13.2.3 In addition to the remedies provided in Section 13.2.1 and 13.2.2, if the defaulting Co-Owner is the Operator, the other Co-Owners (the "Non-Defaulting Co-Owners") shall have the right, by unanimous consent of the Non-Defaulting Co-Owners, to remove the defaulting Co-Owner from its position as Operator and to appoint one of themselves as the Operator for purposes of this Agreement.  The Co-Owners shall cooperate with each other in effecting such transition and provide all notices to third parties and take all other actions deemed necessary or advisable by any of them with respect to such change in status.  Effective as of the date the non-defaulting Co-Owner becomes Operator, it shall assume responsibility for all obligations of Operator thereafter accruing under this Agreement and the defaulting Co-Owner shall have all obligations of a Co-Owner thereafter accruing under this Agreement. 
      13.2.4 Notwithstanding anything contained in this Agreement to the contrary, if a Co-Owner's default under this Agreement creates a material interference with a Non-Defaulting Co-Owner's operations or maintenance of such Non-Defaulting Co-Owner's Facilities, the Non-Defaulting Co-Owner(s) shall have the right to any expedited remedies that may be available hereunder at law or in equity, including the right to cure such default as provided in Section 13.2.1, the right to seek specific performance of this Agreement, and the right to reimbursement of all reasonable costs actually incurred by such Non-Defaulting Co-Owner in effecting such cure.
      13.2.5 In no event shall any Co-Owner be entitled to terminate this Agreement on account of default by another Co-Owner or the Operator hereunder.  None of the bankruptcy or insolvency of a Co-Owner or the Operator, or an Event of Default by a Co-Owner or the Operator under this Agreement shall be grounds for terminating this Agreement.
      13.2.6 The Co-Owners and the Operator agree that damages may be an inadequate remedy for certain Events of Default, and that each Co-Owner and the Operator shall be entitled to seek injunctive and other equitable relief, including specific performance, against any other Co-Owner or the Operator to prevent or remedy such Event of Default.
ARTICLE XIV 
LENDER PROTECTION
      14.1 Right to Encumber and Assign
.  As provided in Section 17.3, each Co-Owner may, upon notice to the other Co-Owners but without the other Co-Owners' consent or approval, mortgage, collaterally assign, or otherwise encumber and grant a security interest in its rights to any party providing debt or equity financing or refinancing (collectively, "Lenders") under this Agreement in and to the Shared Real Property, the Shared Facilities or the electrical and/or transmission capacity of the Shared Facilities in a Shared Assets Group in which it has an Ownership Interest (collectively, the "Security Assets"), which said security interests in all or a part of the Security Assets are collectively referred to herein as "Lenders's Liens".
      14.2 Co-Owners' Obligations
.  Each Co-Owner agrees to consent in writing to financing documents as may reasonably be required by Lenders.  As a precondition to exercising any remedies related to any Event of Default by a Co-Owner under this Agreement, the other Co-Owners shall give written notice of default to each Lender that has given written notice of its Lender's Lien and notice address to the Co-Owners and the Operator at the same time it delivers notice of default to the Co-Owner, specifying in detail the alleged event of default and the required cure.  Each Lender shall have the right, but not the obligation, to cure any Event of Default by the Co-Owner to which it is a Lender and shall have the same amount of time to cure the Event of Default as such Co-Owner plus thirty (30) days in the case of a monetary Event of Default and plus sixty (60) days in the case of all other Events of Default by such Co-Owner; provided that if possession of the property is necessary in order to cure an Event of Default, the cure period shall be extend by up to an additional one hundred eighty (180) days in order to enable the Lender to conduct foreclosure proceedings.  The Lender shall have the right, but not the obligation, to substitute itself for the Co-Owner to which it is the Lender and perform the duties of such Co-Owner hereunder for purposes of curing such event of default.  Each Co-Owner expressly consents to such substitution, agrees to accept such performance and authorizes the Lender (or its employees, agents, representatives or contractors) to enter upon the Shared Real Property and the Shared Facilities to complete such performance with all of the rights and privileges of such Co-Owner hereunder.
      14.3 Lender Obligations
.  Any Lender that does not directly hold an interest under this Agreement, or whose interest is held solely for security purposes, shall have no obligation or liability to any other Co-Owner for performance of a Co-Owner's obligations under this Agreement prior to the time the Lender directly holds an interest in this Agreement, or succeeds to title to a Co-Owner's interest.  A Lender shall be liable to perform obligations of a Co-Owner to another Co-Owner under this Agreement only for and during the period it directly holds such interest.  In the event that a Lender elects to (i) perform a Co-Owner's obligations under this Agreement, (ii) continue operation of the Shared Facilities, (iii) acquire any portion of a Co-Owner's right, title or interest in all or any of the Security Assets or (iv) enter into a new joint ownership agreement as provided in Section 14.6, then such Lender shall not have any personal liability to a Co-Owner in connection therewith, and the sole recourse in the event of default by such Lender shall be to execute against such Lender's interest in the Security  Assets.  Moreover, any Lender who acquires the Security Assets pursuant to foreclosure or an assignment in lieu of foreclosure shall not be liable to perform any obligations under the Agreement to the extent the same are incurred or accrue after such Lender no longer has ownership of the Security Assets.
      14.4 Lender's Right to Possession, Right to Acquire and Right to Assign
.  A Lender shall have the absolute right: (i) to assign its Lender's Lien; (ii) to enforce its Lender's Lien and acquire title to all or any portion of the Security Assets by any lawful means; (iii) to take possession of and operate all or any portion of the Security Assets and to perform all obligations to be performed by the Co-Owner to which it is the Lender, or to cause a receiver to be appointed to do so; and (iv) to acquire all or any portion of the Security Assets by foreclosure or by an assignment in lieu of foreclosure and thereafter without Co-Owners' consent to assign or transfer all or any portion of the Security Assets to a third party.  No Co-Owners' consent shall be required for any of the foregoing, and upon acquisition of the interests of all or any portion of the Security Assets by a Lender or any other third party who acquires the same from or on behalf of the Lender, the Co-Owners shall recognize the Lender or such other party (as the case may be) as the other Co-Owner's proper successor, and this Agreement shall remain in full force and effect.
      14.5 Opportunity to Cure
.  Following acquisition of all or a portion of the Security Assets by the Lender as a result of either foreclosure or acceptance of an assignment in lieu of foreclosure, or by a purchaser at a foreclosure sale, this Agreement shall continue in full force and effect and the Lender or party acquiring title to the Security Assets shall, as promptly as reasonably possible, commence the cure of all defaults under this Agreement and thereafter diligently pursue such cure to completion; provided, however, that the Lender or party acquiring title to the Security Assets shall not be required to cure those defaults which are not susceptible of being cured or performed by such Co-Owner ("Non-Curable Defaults").  Non-Curable Defaults shall be deemed waived by Co-Owners upon completion of foreclosure proceedings or acquisition of a Co-Owner's interest in the Shared Assets by such Co-Owner.  If a Lender is prohibited by any process or injunction issued by any court or by reason of any action of any court having jurisdiction over any bankruptcy or insolvency proceeding involving another Co-Owner from commencing or prosecuting the appropriate judicial or non-judicial proceedings, then any cure period for commencing such proceedings shall be extended for the period of such prohibition.
      14.6 New Agreement
.  In the event that this Agreement is rejected or disaffirmed pursuant to bankruptcy law or any other law affecting creditors' rights, then, so long as a Lender has cured any such monetary event of default and is making commercially reasonable efforts to cure any such non-monetary event of default as provided herein, the non-defaulting Co-Owners shall, immediately upon written request from such Lender received within sixty (60) days after any such event, without demanding additional consideration therefor, enter into a new shared facilities agreement with such Lender, which new shared facilities agreement shall (i) contain the same covenants, agreements, terms, provisions and limitations as this Agreement (except for any requirements that have been fulfilled by the Co-Owners prior to such termination, foreclosure, rejection or disaffirmance), and (ii) be for a term commencing on the date of such termination, foreclosure, rejection or disaffirmance and continuing for the remaining term of this Agreement before giving effect to such termination, foreclosure, rejection or disaffirmance.  At the option of the Lender, the new shared facilities agreement may be executed by a designee of such Lender, with the Lender assuming the burdens and obligations of the defaulting Co-Owner hereunder.  If more than one Lender makes a written request for a new shared facilities agreement pursuant hereto, then the same shall be delivered to the Lender whose lien is senior in priority.
      14.7 Lender Consent
.  Notwithstanding any provision of this Agreement to the contrary, the Co-Owners shall not accept a termination of this Agreement without the prior written consent of each Lender.
      14.8 Estoppel Certificates
.  Each Co-Owner shall execute estoppel certificates certifying as to truthful matters, including without limitation that no default then exists under this Agreement, if such be the case; consents to assignment; and non-disturbance agreements as another Co-Owner or any Lender may reasonably request from time to time.  The Co-Owners shall cooperate in amending this Agreement from time to time to include any provision that may be reasonably requested by a Lender to preserve a Lender's Lien.
ARTICLE XV 
INDEMNIFICATION
      15.1 Co-Owner Indemnification
.  Operator and each Co-Owner ("Indemnitor") agrees to indemnify, defend and hold harmless the other Co-Owners and such other Co-Owners' Affiliates, equity owners, Affiliates of its equity owners and each of their respective officers, directors, stockholders, employees, agents, successors and assigns (collectively, "Indemnitees") from and against any and all losses, damages, expenses, injuries, liabilities, judgments, claims, demands, taxes or penalties, including but not limited to attorneys' fees and court costs ("Losses") sustained or incurred by Indemnitees to the extent caused by the negligence or willful misconduct of Indemnitor, its agents or contractors, or caused by Indemnitor's breach of any of its obligations under this Agreement, including but not limited to Losses incurred by reason of physical damage to the property of third parties or bodily injury, including death, of third persons.  In the event a Loss is caused by the joint or concurrent negligence of one or more of the Co-Owners, the Loss shall be borne by each such Co-Owner in proportion to its degree of negligence.
      15.2 Cross-Indemnity
.  The Co-Owners intend that the obligations set forth in Section 15.1 include the duty of a Co-Owner ("Cross-Indemnitor"), in the event another Co-Owner or Co-Owners ("Cross-Indemnitee") sustains or incurs any Loss as the result of the joint and several liability of Cross-Indemnitor and Cross-Indemnitee to a third party, such that the Cross-Indemnitee shall be entitled to recover from the Cross-Indemnitor the Cross-Indemnitor's share of any and all Losses sustained or incurred by Cross-Indemnitee. 
ARTICLE XVI 
WAIVER OF RIGHTS TO PARTITION
      Each Co-Owner hereby waives any rights it may have to partition the Shared Facilities, the Shared Real Property or any component thereof or any component thereof during the term of this Agreement, whether by partition in kind or by sale and division of the proceeds, and each Co-Owner further agrees that it will not resort to any action at law or in equity to partition the Shared Facilities, the Shared Real Property or any component thereof, and it waives the benefits of laws that may now or hereafter authorize such partition for the term of this Agreement.
ARTICLE XVII 
MISCELLANEOUS PROVISIONS
      17.1 Covenants Run with the Land
.  The Co-Owners hereby agree that all of the covenants, consents and agreements contained in this Agreement touch and concern the real estate described in this Agreement and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Co-Owner's present or future estate or interest therein and upon each of the Co-Owners, their respective successors and assigns as holders of an estate or interest in said real estate (including any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Co-Owners and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein and any other fee and leasehold estates acquired by any Co-Owner, its successors and assigns for its respective Facility.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
      17.2 Force Majeure
.  If a Co-Owner is delayed or rendered wholly or partially unable to perform its obligations hereunder due to an event of Force Majeure, that Co-Owner (the "Claiming Party") will be excused from whatever performance is affected by the event of Force Majeure to the extent so affected, provided, however, that: (i) the Claiming Party shall give the other Co-Owners notice describing the particulars of the occurrence promptly after the occurrence of the Force Majeure, and, in no event more than three (3) days after the Claiming Party becomes aware of such occurrence; (ii) within five (5) days after giving the notice described in clause (i) above, the Claiming Party shall give the other Co-Owners its best estimate of the expected duration of the event and probable impact on the performance of the Claiming Party's obligations hereunder, and shall continue to furnish timely regular reports with respect thereto during the continuation of the Force Majeure; (iii) the suspension of performance shall be of no greater scope and of no longer duration than is reasonably required by the Force Majeure; (iv) no default of a Co-Owner which arose before the occurrence of the Force Majeure event causing the suspension of performance shall be excused as a result of the occurrence, but so long as the Claiming Party shall have commenced and is diligently continuing to attempt to cure such default prior to the occurrence of the Force Majeure, the cure period (if any) with respect to such default shall be extended on a day-for-day basis to the extent a cure is prevented as a direct result of the Force Majeure; (v) the Claiming Party shall exercise all reasonable efforts to mitigate or limit damages to the other Co-Owners; and (vi) the Claiming Party shall use all reasonable efforts to continue to perform its obligations hereunder and to correct or cure the event or condition excusing performance.  In resolving any dispute between the Co-Owners, the burden of proof as to whether a Force Majeure has occurred and whether the Force Majeure excuses the Claiming Party from performance under this Agreement shall be upon the Claiming Party.
      17.3 FERC Filing and Acceptance.	  The Co-Owners acknowledge and agree that: (i) this Agreement will be publicly available through its filing with FERC for acceptance under Section 205 of the FPA; (ii) subsequent amendments to this Agreement that involve FERC-jurisdictional transmission facilities or service must be filed with and accepted by FERC, and the effectiveness of such amendments will be contingent on such FERC acceptance; (iii) changes in ownership contemplated by this Agreement may be subject to prior FERC approval; and (iv) disconnections or terminations contemplated by this Agreement may require prior FERC approval.  Promptly after the Execution Date or after any amendment to the Agreement, the Co-Owners will prepare a draft filing to seek acceptance by FERC of the Agreement or such amendment and the Co-Owners will cooperate to make any changes to the filing requested by the other Co-Owners and will file the Agreement or such amendment for acceptance by FERC.  Contemporaneously with the filing of this Agreement with FERC, the Co-Owners will apply to FERC for regulatory waivers exempting the Co-Owners from compliance with FERC Order Nos. 888, 889 and 890, and FERC's regulations at 18 C.F.R.  35.28, and 18 C.F.R. Parts 37 and 358.  Each Co-Owner agrees that it will not oppose acceptance of the Agreement or an amendment by FERC, or the granting by FERC of the waivers described in the preceding sentence, and that it will reasonably cooperate with the other Co-Owners to address any issues raised by FERC in connection with the filings described in this Section 17.3.  Subject to the terms and conditions set forth herein, the Co-Owners agree to execute and deliver all documents reasonably necessary for this Agreement to comply with FERC requirements.
      17.4 Assignment
.  This Agreement will be binding on and inure to the benefit of the Co-Owners and their respective successors and permitted assigns.  All transfers, conveyances, assignments of Shared Facilities or Shared Real property will be subject to the terms and conditions of this Agreement, whether or not explicitly stated.  Each Co-Owner may, at any time and from time to time, upon notice but without the other Co-Owners' consent or approval, (i) subject to compliance with Section 9.7, transfer or assign this Agreement and the rights and obligations under this Agreement to a Person that acquires all or substantially all of such Co-Owner's assets, including such Co-Owner's Shared Assets, and agrees to assume all obligations of that Co-Owner under this Agreement (a "Permitted Assignee"); and/or (ii) create Lender's Liens pursuant to Article XIV.  Otherwise, no Co-Owner shall transfer or assign all or any part of its right, title and interest in or to this Agreement or any of its rights hereunder without the prior consent of all of the other Co-Owners; provided, further, that if FERC approval is required for any such assignment or transfer, it shall not be effective unless and until FERC approval has been obtained.  For purposes of this Agreement, a Change of Control of a Co-Owner shall be considered an assignment by such Co-Owner of its rights and interests under this Agreement and shall be subject to the requirements hereunder with respect to assignments.  Any Permitted Assignee shall assume all of the obligations of the assigning Co-Owner hereunder and shall execute any documents which may reasonably be required by the other Co-Owners, or by Lenders, including but not limited to any document in connection with a governmental permit, approval, authorization, entitlement or other consent.  Under no circumstances shall any Lender or Permitted Assignee have any greater rights of ownership or use of the Shared Assets than the rights granted to the Co-Owners in this Agreement.  Any assignment permitted under this Agreement shall release the assigning Co-Owner from obligations accruing after the date that liability is assumed by a transferee, but the assigning Co-Owner shall continue to be liable to the other Co-Owners for all performance due by the assigning Co-Owner for matters that have accrued and are unsatisfied as of the date of the assignment.  Any purported assignment in contravention of this Section 17.3 will be void.
      17.5 Actions By Co-Owners.  Unless expressly provided otherwise, voting by the Co-Owners shall be in proportion to their respective Proportionate Shares, so that the weight of each Co-Owner's vote is proportional to the nameplate capacities of their respective Facilities.
      17.6 Entire Agreement
.  This Agreement is the Co-Owners' complete and final expression of agreement regarding the matters addressed in this Agreement and supersedes all prior agreements, representations, understandings, offers and communications, whether oral or written, regarding such matters.
      17.7 Amendment
.  This Agreement can be amended only by a mutually agreeable written amendment executed by an authorized representative of each Co-Owner.
      17.8 Further Assurances
.  Each Co-Owner agree to execute and deliver any additional instruments, agreements or amendments, and to take such other actions as may be necessary or reasonably requested by the other Co-Owners to effectuate or evidence this Agreement and which are not inconsistent with the provisions hereof, do not adversely affect the rights of other Co-Owners, violate the terms and spirit of this Agreement, and which do not involve assumptions of obligations or materially affect the cost of performance, other than those provided for in this Agreement, in order to give full effect to and carry out the intent of this Agreement, including cooperating in confirming the grant or assignment of property rights or the reservation or retention of property rights. 
      17.9 Severability
.  If any provision of this Agreement is held invalid or unenforceable, all other provisions will not be affected.  With respect to the provision held invalid or unenforceable, the Co-Owners agree to cooperate to amend this Agreement as necessary to effect the Co-Owners' original intent as closely as possible.
      17.10 Joint Preparation
.  This Agreement or any uncertainty or ambiguity therein shall not be construed against any one Co-Owner, but rather shall be construed as though all Co-Owners jointly prepared this Agreement.
      17.11 No Waiver
.  If on any occasion a Co-Owner does not insist upon the performance of any term, condition or provision of this Agreement, such forbearance will not operate or be construed as an acceptance of any variation in any term, condition or provision of this Agreement or relinquishment of any right under this Agreement.  No waiver by a Co-Owner of any right or of any default by the other Co-Owners under this Agreement will be effective unless it is in writing and signed by the waiving Co-Owner, and no waiver will operate or be construed as a waiver of any other or further right or as a waiver of any future default, whether of like or different character or nature.
      17.12 Governing Law
.  This Agreement shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      17.13 Dispute Resolution Procedures
.  Disputes among the Co-Owners shall be resolved in accordance with the procedures set forth in Exhibit E.
      17.14 Relationship of the Co-Owners
.  This Agreement will not be interpreted or construed to (i) create an association, joint venture or partnership among the Co-Owners or impose any partnership obligation or liability on any Co-Owner, or (ii) create any agency relationship among the Co-Owners or impose any fiduciary duty of any kind on any Co-Owner, or (iii) create a lease of any property of any kind.  Subject to Operator's provision of O&amp;M Services, no Co-Owner will have any right, power or authority to enter into any agreement or undertaking for, or act on behalf of, or to act as or be an agent or representative of, or otherwise to bind, the other Co-Owners.  Each Co-Owner waives any and all rights that it may otherwise have under Applicable Laws or legal precedents to make any claims or take any action against the other Co-Owners or any of its Affiliates in respect of this Agreement based on any theory of agency, fiduciary duty or other special standard of care.
      17.15 No Third Party Rights
.  Except with respect to the rights of Lenders as set forth in Article XIV, the covenants contained herein are made solely for the benefit of the Co-Owners and the Operator, and shall not be construed as benefiting any Person that is not a Co-Owner or the Operator.
      17.16 No Dedication of Facilities
.  Any undertaking by one Co-Owner to the other Co-Owners under this Agreement shall not constitute the dedication of the electric facilities or any portion thereof or any other property of the undertaking Co-Owner to the public or to the other Co-Owners, and it is understood and agreed that any such undertaking by a Co-Owner will cease upon the termination of its obligations hereunder.  Nothing herein shall constitute a dedication or an offer to dedicate any Shared Facilities or Shared Real Property to the public or for public service.
      17.17 Notices
.  Except as otherwise provided in this Agreement, all notices and other communications to be given or made under this Agreement will be in writing, will be addressed as specified below, and will either be personally delivered or sent by courier service, by registered or certified mail, or by facsimile.
If to Rising Tree I:
Rising Tree Wind Farm LLC
808 Travis, Suite 700
Houston, TX 77002
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail: leslie.freiman@edpr.com
If to Rising Tree II:
Rising Tree Wind Farm II LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail:  leslie.freiman@edpr.com
If to Rising Tree III:
Rising Tree Wind Farm III LLC
808 Travis, Suite 700
Houston, TX 77002
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail:  leslie.freiman@edpr.com

All notices will be deemed delivered (i) when presented personally, (ii) if given by facsimile or by e-mail, on dispatch to the receiving Co-Owner's facsimile number or e-mail address specified above (with confirmation) unless dispatched after the recipient's normal business hours on a Business Day or dispatched on any day other than a Business Day, in which case such notice shall be deemed to have been delivered on the next Business Day, so long as a copy of such facsimile or email is also delivered by United States mail, postage prepaid, registered or certified, return receipt requested, or by a nationally recognized overnight private courier service; (iii) upon receipt if delivered by a nationally recognized overnight private courier service to each receiving Co-Owner at the applicable address specified above (or such other address as the receiving Co-Owner may have specified by notice delivered to the delivering Co-Owner), or (iv) five (5) days after being deposited in a United States Postal Service receptacle, postage prepaid, registered or certified, return receipt requested, addressed to the receiving Co-Owner(s) at the address specified above (or such other address as such receiving Co-Owner may have specified by notice delivered to the delivering Co-Owner at its address or facsimile number specified above).  A Co-Owner may change any or all of its address, facsimile number or e-mail address, to which notices and communications are to be sent by giving notice as required by this Section 17.15.
      17.18 Counterparts
.  This Agreement may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument.  It will not be necessary in making proof of this Agreement to produce or account for more than one counterpart.
      17.19 Timing for Performance
.  Notwithstanding anything herein to the contrary, if the time for performing an obligation under this Agreement expires on a day that is not a Business Day, the time for performing shall be extended until that time on the next Business Day.
      17.20 Waiver of Consequential Damages
.  EACH OF THE CO-OWNERS AND OPERATOR EXPRESSLY WAIVES AND IN NO EVENT SHALL ANY OF THE CO-OWNERS, OPERATOR OR ANY OF THEIR RESPECTIVE OFFICERS, DIRECTORS, MEMBERS, PARTNERS, SHAREHOLDERS, EMPLOYEES, AGENTS OR AFFILIATES BECOME LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES OF ANY NATURE WHATSOEVER CONNECTED WITH OR RESULTING FROM PERFORMANCE OR NON-PERFORMANCE OF THIS AGREEMENT, OR OTHERWISE.  THIS WAIVER INCLUDES, WITHOUT LIMITATION, DAMAGES OR CLAIMS IN THE NATURE OF LOST REVENUES, INCOME, [TAX PREFERENCES] [please explain] OR PROFITS, LOSS OF USE, OR COST OF CAPITAL, IRRESPECTIVE OF WHETHER SUCH DAMAGES ARE REASONABLY FORESEEABLE AND IRRESPECTIVE OF WHETHER SUCH CLAIMS ARE BASED UPON NEGLIGENCE, STRICT LIABILITY, CONTRACT, OPERATION OF LAW OR OTHERWISE.
      17.21 Survival
.  Notwithstanding any other provision of this Agreement, the provisions of Article I, Sections 2.2 and 2.3, Article XII (Taxes), Article XV (Indemnification), and Article XVII shall survive the termination of this Agreement.
      17.22 Memorandum.  Each Co-Owner agrees to sign and acknowledge the Memorandum of Rising Tree Shared Facilities Agreement ("Memorandum") in the form attached hereto as Exhibit G.  Operator shall record the Memorandum promptly in the Office of the County Recorder of Kern County, California at the expense of the Co-Owners.
      17.23 Other Agreements.  The rights and obligations of the Co-Owners and Operator hereunder are independent of and in addition to any rights and obligations of such parties under the LGIA Co-Tenancy Agreement.  
Signatures follow on next page
      
To evidence its acceptance of this Agreement, and intending to be legally bound, each Co-Owner has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:


EXHIBIT A
SCHEDULE OF DEFINITIONS
Additional Phase means the additional generation facilities owned by a Co-Owner, its Affiliate or another Person that have been approved by the Co-Owners to be connected to and to use the Shared Facilities.
Affected Party has the meaning given in Section 7.1.
Affiliate means, with respect to any Co-Owner, any Person directly or indirectly controlling, controlled by or under common control with such Co-Owner.  The term "control" and correlative terms includes the possession, directly or indirectly and whether acting alone or in conjunction with others, of the authority to direct or cause the direction of the management or policies of a Person. 
Agreement has the meaning set forth in the Preamble.  
Annual O&amp;M Budget has the meaning given in Section 6.8.
Applicable Laws means all applicable constitutional provisions, statutes, acts, codes, laws, rules, regulations, ordinances, orders, interpretations, permits, treaties, judgments, decrees, rulings, decisions, injunctions, writs and orders of a Governmental Authority.
Business Day means any day except a Saturday, Sunday or other days on which state or federal banks in [Los Angeles, California] are closed or authorized to be closed.  A Business Day shall begin at 8:00 a.m. and end at 5:00 p.m. PPT.
CAISO means the California Independent System Operation Corporation or its successor agency.
CAISO Tariff means the California Independent System Operator Corporation, Fifth Replacement FERC Electric Tariff (Open Access Transmission Tariff), as it may be amended, supplemented or replaced (in whole or in part) from time to time.
Capital Improvements means any additions, modifications or substitutions to the Shared Facilities or Shared Real Property which, in accordance with generally accepted accounting principles, should be capitalized.
Change of Control means, with respect to any Person, the change, in one transaction or a series of transactions, of the direct or indirect ownership of fifty percent (50%) or more of the equity ownership interests of such Person other than solely for financing purposes. 
Claiming Party has the meaning given in Section 17.2.
Commissioning Date means, as applicable, the date of commissioning of the first wind turbine of the Facility or Additional Phase in question.
Co-Owner or Co-Owners has the meaning given in the Preamble.
Co-Owner Ceasing Business Operations has the meaning given in Section 8.1.
Cross Indemnitee has the meaning given in Section 15.2.
Cross Indemnitor has the meaning given in Section 15.2.
Decommissioning Obligation has the meaning given in Section 8.1.
Delivery Capability means the amount of electrical energy that can be delivered to the Point of Interconnection at any instant of time. 
Effective Date has the meaning given in Section 3.1.
Emergency Condition has the meaning given in Section 6.6.
Environmental Laws means all Applicable Laws relating to (i) facility siting, land use and environmental matters; (ii) the control of any pollutant, or protection of the air, water, or land; (iii) solid, gaseous or liquid waste generation, handling, treatment, storage, disposal or transportation; (iv) exposure to hazardous, toxic or other harmful substances; and (v) the protection and enhancement of the environment.  Environmental Laws includes laws which relates to environmental quality, health, safety, pollution, contamination, cleanup, or the protection of human health, ambient air, waters (including ground waters) or land, and: the Clean Air Act, 42 U.S.C. 7401 et seq. (CAA), the Clean Water Act, 33 U.S.C.  1251 et seq. (CWA), the National Environmental Policy Act, 42 U.S.C.  4321 et seq., the Endangered Species Act, 16 U.S.C.  1531 et seq., the Resource Conservation Recovery Act, 42 U.S.C. 6901 et seq. (RCRA), the Safe Drinking Water Act. 42 U.S.C. 300f et seq., the Comprehensive Environmental Response, Compensation, and Liability Act as amended by the Superfund Amendments and Reauthorization Act, 32 U.S.C. 9601 et seq. (CERCLA), the Federal Insecticide, Fungicide and Rodenticide Act, 7 U.S.C.  136 et seq., the Hazardous Substances Transportation Act, 49 U.S.C. 1801 et seq., the Toxic Substances Control Act, 15 U.S.C. 2601 et seq. (TSCA), and the Emergency Planning and Community Right-to-Know Act, 42 U.S.C. 11001 et seq., any state or local laws relating to permits, local land use control ordinances or similar laws, and any state or local laws implementing or substantially equivalent to the foregoing federal requirements, and other similar laws.
Event of Default has the meaning as given in Section 13.1.
Extraordinary Maintenance has the meaning given in Section 6.9.
Facility and Facilities have the meanings given in Recital B.
FERC means the Federal Energy Regulatory Commission and any successor.  
Fiber Optic Facilities has the meaning given in Exhibit B.
Force Majeure means an event or circumstance which prevents a Co-Owner from performing its obligations under this Agreement, which event or circumstance is not within the reasonable control of, or a result of the negligence of, the Claiming Party, and which, by the exercise of commercially reasonable efforts, the Claiming Party is unable to overcome or avoid or cause to be avoided.  Force Majeure includes the following: fires; storms; earthquakes; floods; lightning; landslides; volcanic eruptions; hurricanes; tidal waves; epidemics; explosions; cyclones; tornadoes; acts of God; tempests; other natural disasters; strikes, work stoppages, walkouts, lockouts and other labor difficulties; civil disturbances; sabotage; vandalism; labor, material and equipment shortages (including spare parts shortages); equipment failure or breakdown; interruptions to transportation; acts of military authorities; court actions; war (declared or not); riot; public disorder; condemnation of property; quarantine; actions, failures to act or delays in acting by any Governmental Authority; and late delivery or non-delivery of machinery, equipment, fuel, materials, components, parts or consumables and delay in the performance or the non-performance by a Co-Owner's contractors or subcontractors, in each case as a result of an event or occurrence that is otherwise an event of Force Majeure.  A Co-Owner will not claim Force Majeure based on (i) the loss of market for a Facility's electrical output, (ii) the economic infeasibility of generating electricity from a Co-Owner's Facility, or (iii) its inability to make a payment obligation.
FPA means the Federal Power Act, as amended, and the regulations of FERC thereunder.
Good Utility Practice means any of the practices, methods and acts engaged in or approved by a significant portion of the electric utility industry during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method or act to the exclusion of all others, but rather to be acceptable practices, methods or acts generally accepted in the region in which the Facilities are located.  Good Utility Practice shall include, but not be limited to, NERC criteria, rules, guidelines and standards, criteria, rules, guidelines and standards, and the CAISO's criteria, rules, guidelines and standards, where applicable, as they may be amended from time to time, including the rules, guidelines and criteria of any successor organization to the foregoing entities.  When applied to the Co-Owners in their operation of their Facilities, the term Good Utility Practice shall also include standards applicable to an independent power producer connecting to the distribution or transmission facilities or system of a utility.
Governmental Authority means any federal, state, local, tribal or foreign governmental authority (including any regulatory authority); a state, province, commonwealth, territory or district thereof; a county or parish; a city, town, township, village or other municipality; a district, ward or other subdivision of any of the foregoing; an executive, legislative or other governing body of any of the foregoing; any agency, authority, board, department, system, service, office, commission, committee, council or other administrative body of any of the foregoing; any court or other judicial body; and any officer, official or other representative of any of the foregoing, or quasi-governmental entity acting under delegated authority, having or asserting jurisdiction over a Co-Owner, the subject matter of this Agreement, or this Agreement.
Granting Co-Owner has the meaning given in Section 4.1.
Hazardous Materials Laws means any applicable law or regulation relating to any substance, material or waste classified as hazardous or toxic, or which is regulated as waste.
Indemnitees has the meaning given in Section 15.1.
Indemnitor has the meaning given in Section 15.1. 
Interconnection Agreement means that certain Large Generator Interconnection Agreement dated as of March 27, 2013, by and among the CAISO, the Transmission Owner, the Co-Owners (in the case of Rising Tree III, as successor to Addison Wind Resources, LLC), and Rising Tree I, as manager.
Last Use Notice has the meaning given in Section 8.1.
Late Payment Rate has the meaning set forth in Section 6.10.
Lenders has the meaning given in Section 14.1.
Lender's Liens has the meaning given in Section 14.1. 
LGIA Co-Tenancy Agreement has the meaning given in Recital D.
Line Losses means loss of electric energy transmitted on Transmission Line.
Losses has the meaning given in Section 15.1.
Material Project Agreements means the Interconnection Agreement, this Agreement, the LGIA Co-Tenancy Agreement, purchase or warranty agreements relating to Shared Facilities, and certain other agreements related to the construction, operation and use of the Shared Facilities, as set forth on Exhibit D, and such other agreements to be included upon the mutual agreement of the Co-Owners.
Memorandum has the meaning given in Section 17.20.  
Metered Energy means the amount of electric energy measured at a given point, such as at the o
MW means megawatts.
NERC means the North American Electric Reliability Corporation and its successors.
Non-Curable Defaults has the meaning given in Section 14.5.
Non-Defaulting Co-Owner has the meaning given in Section 13.2.3.
O&amp;M Costs has the meaning given in Section 6.7.  
O&amp;M Facility means an operation and maintenance building and related facilities for a Facility, including equipment and systems housed therein.
O&amp;M Services has the meaning given in Section 6.1. 
O&amp;M Services Commencement Date has the meaning given in Section 6.3.
Operator means the Co-Owner or other Person engaged by the Co-Owners to manage, operate, maintain and repair the Shared Facilities and to perform other duties pertaining to the Shared Assets as set forth in the Agreement.   The Operator shall initially be Rising Tree I or an Affiliate designated by it, subject to replacement pursuant to Sections 6.17 and 13.2.2.
Ownership Interest means the undivided interest of a Co-Owner in a Shared Asset Group, as set forth in Exhibit B. 
Performance Standard has the meaning given in Section 6.2.
Permit means any permit, license, approval, consent, right to use, franchise or similar authorization from any Governmental Authority.
Permitted Assignee has the meaning given in Section 17.3.
Person means any natural person, corporation, general partnership, limited partnership, limited liability company, proprietorship, other business organization, trust, union, association or Governmental Authority.
Point of Interconnection means the point at which the Transmission Line interconnects to the Southern California Edison 220 kV Wind Hub Substation, as more particularly described in the Interconnection Agreement.
PPT or Prevailing Pacific Time means the then applicable time in the Pacific time zone.
Project Substation means the "Project Substation" as described on Exhibit B.
Proportionate Share means, as applied with respect to the sharing and allocation of costs, rights, interest, obligations and/or liabilities related to a Shared Assets Group among its Co-Owners, the proportion of a Facility's installed nameplate capacity connected to such Shared Assets Group bears to the aggregate installed nameplate capacity of all such Facilities using such Shared Assets at the time; provided that, for the purpose of such calculation, the installed nameplate capacity of:  (1) any Facility that has not yet achieved its Commissioning Date shall be deemed to be 0 MW; and (2) any Facility that has achieved its Commissioning Date shall be deemed to be the portion of the expected nameplate capacity set forth in Recital B that is expected to be connected to such Shared Assets Group.  In this Agreement, except as otherwise expressly provided, a reference to a Proportionate Share with respect to a given Co-Owner shall mean the Proportionate Share of such Co-Owner in each of the Shared Assets Groups in which such Co-Owner has an Undivided Use Interest.
RST I Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree I.  
RST II Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree II.  
RST III Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree III.  
RST Shared Facilities has the meaning given in Exhibit B.
RST I/II Shared Facilities has the meaning given in Exhibit B.
Security Assets has the meaning given in Section 14.1.
Settlement Interval has the meaning given in the CAISO Tariff.
Shared Assets means any or all of the Shared Facilities and the Shared Real Property in a Shared Assets Group.
Shared Assets Group has the meaning given in Section 3.4.
Shared Facilities has the meaning given in Section 3.2.
Shared Facilities Group has the meaning given in Section 3.2.
Shared Permits has the meaning given in Section 3.6.
Shared Real Property has the meaning given in Section 3.3.
Shared Real Property Agreements means the easement agreements or conveyance documents described in Exhibit B.
Transmission Line has the meaning given in Exhibit B.  
Transmission Owner means Southern California Edison Company, its successors and assignees.
Underlying Granting Documents has the meaning given in Section 4.1.
Undivided Use Interest has the meaning given in Section 4.2.

EXHIBIT B

SHARED FACILITIES, SHARED REAL PROPERTY AND SHARED PERMITS

A. Assets Jointly Owned and Shared by All Co-Owners (RST Shared Facilities Group)
1. Shared Facilities
a.	Project Substation:  See Exhibit B-1 attached hereto.
b.	Transmission Line:  See Exhibit B-2 attached hereto.
c.	Roads
d.	O&amp;M Building
e.	Condor Detection Tower
2. Shared Real Property
a.	Project Substation:  
The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22
b.	Transmission Line:  
   Tract 1
The East half of the East half of Section 9, Township 11 North, Range 13 West, San Bernardino Base and Meridian in the unincorporated area of the County of Kern, State of California, as per the official plat thereof on file in the Office of the Surveyor General, approved September 19, 1856.

Excepting therefrom one half of all oil, gas and other hydrocarbon substances and minerals in and under said land, as excepted in deed dated December 1, 1955 from M&amp;R Sheep Company, recorded March 22, 1956 in Book 2581, Page 233 of Official Records.

APN:  237-022-13

	Tract 2

A strip of land one hundred seventy-five (175) feet in width, situated in the Southeast 1/4 of Section 17, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to Residual Ranch Corporation, in Book 6070, Pages 1209-1210, recorded on November 25, 1987, Kern County Deed Records, and being more particularly described as follows:

That strip of land, within the East 1,900 feet of said property, being one hundred seventy-five (175) feet in width, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648), said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.  

APN:  237-031-04
	
Tract 3

The East Half of the Northeast Quarter of Section 16, Township 11 North, Range 13 West, San Bernardino Meridian in the County of Kern, State of California, according to the official plat of said land by the Surveyor General dated September 19, 1856.

Excepting therefrom said land an undivided 1/16th of all coal, oil, oil shale, gas, phosphate, sodium and other mineral deposits in said land as reserved to the State of California, by the provision of an act of the legislation, statutes of 1921 page 404 and amendments thereto.

Also excepting therefrom half of all oil, hydrocarbons and similar minerals but without the right of entry to depth of 500 feet from the surface thereon in and to the property. As granted to J. J. Kessler, a married man, in deed recorded August 23, 1956 in Book 2654, page 300 of official records.

APN:  237-031-08

Tract 4

A strip of land, one hundred seventy-five (175) feet in width, situated in the South 1/2 of Section 16, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to The Muriel Pollia Foundation, by Document No. 0207220631, recorded on November 2, 2007, Kern County Deed Records, and being more particularly described as follows:

The East one hundred seventy-five (175) feet of said South 1/2, Section 16, together with that one hundred seventy-five (175) foot strip, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648) said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.

APN:  237-031-38

Tract 5

The West half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded August 14, 1963 in Book 3634, Page 835 of Official Records. 

APN:  237-141-01

Tract 6

The East half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded September 20, 1967 in Book 4090, Page 851 of Official Records. 

APN:  237-141-02

Tract 7

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

Tract 8

The East half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America recorded in Book 3259, Page 641 of Official Records.

APN:  237-141-04

Tract 9

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

Tract 10

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 864, Official Records.

APN:  237-141-20

Tract 11

The West half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom all oil, gas and other mineral deposits, in and under said land, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 863, Official Records.

APN:  237-141-21

Tract 12

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

   APN:  237-141-22
   
c.	Collection and Distribution Lines:  
   Tract 1

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22

   Tract 2

The East half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so Patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in patent recorded December 7, 1962 in Book 3552, Page(s) 966 of Official Records.

APN:  237-141-25

   Tract 3

The West half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 23, 1990 on Book 6422, Page 2386 of Official Records.

APN:  237-141-26

   Tract 4

The East half of the Southwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded January 4, 1962 on Book 3449, Page 44 of Official Records.

APN:  237-141-27
   
   Tract 5

The East half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Except therefrom all oil, gas and other hydrocarbon substances, as reserved in Book 3326, Page 982, of Official Records.

APN:  237-142-25

   Tract 6

The West half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-26

   Tract 7

The West half of the Southwest quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom to the United States all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved in patent recorded June 29, 1990 in Book 6400, Page 2360 of Official Records.

APN:  237-142-32

   Tract 8

The West half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting and reserving to the United States all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, in patent recorded August 29, 1961 in Book 3410, Page 214, of Official Records.

APN:  237-152-01

   Tract 9

The East half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent recorded April 21, 1960 in Book 3260, Page 842, of Official Records.

APN:  237-152-02

   Tract 10

The West half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent dated January 14, 1960 Patent No. 1203755 and recorded August 17, 1960 in Book 3293, Page 949, of Official Records.

APN:  237-152-03

   Tract 11

The East half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Except all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, as reserved by the United States of America in the patent recorded October 26, 1960 in Book 3314, Page 880, of Official Records.

APN:  237-152-04

   Tract 12

The West half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-05

   Tract 13

The East half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Except all oil, gas and other mineral deposits, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved by the United States of America in patent recorded April 5, 1960 in Book 3256, Page 18 of Official Records.

APN:  237-152-06

   Tract 14

The North half of the West half of the Northeast quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded June 16, 1960 in Book 3276, Page 51, of Official Records.

APN:  237-152-33

   Tract 15

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01

   Tract 16

The West half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, as per Certificate of Compliance No. 446 recorded May 28, 1982 in Book 5462, Page 1483 of Official Records.

Except 50% of all oil and mineral rights as reserved in records of said County.

APN:  237-284-02
   
   Tract 17

The East half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official map of said land on file in the Bureau of Land Management and approved by the Surveyor General on September 19, 1856.

Except therefrom one-half of all oil, gas and minerals and hydrocarbon substances in and under said land, as excepted in Deed dated August 4, 1955 from M&amp;R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 289, of Official Records.  Said deed provides in part:

The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the Second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the Grantor its successors and assigns from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent of neighboring lands and/or from conducting sub-surface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the Grantors in said Deed.

Excepting therefrom the Northeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section and the Southeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section as reconveyed by Document recorded in Book 5101, Page 2245 of Official Records.

APN:  237-284-05

   Tract 18

The West half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289 of Official Records.

APN:  237-284-06

   Tract 19

The East half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land together with the rights incidental thereto, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289, of Official Records.

APN:  237-284-07

   Tract 20

The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05
d.	Roads:
   Tract 1

The East half of the East half of Section 9, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area of the County of Kern, State of California, as per the official plat thereof on file in the Office of the Surveyor General, approved September 19, 1856.

Excepting therefrom one half of all oil, gas and other hydrocarbon substances and minerals in and under said land, as excepted in deed dated December 1, 1955 from M&amp;R Sheep Company, recorded March 22, 1956 in Book 2581, Page 233 of Official Records.

APN:  237-022-13

   Tract 2
   
The East Half of the Northeast Quarter of Section 16, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat of said land by the Surveyor General dated September 19, 1856.

Excepting therefrom said land an undivided 1/16th of all coal, oil, oil shale, gas, phosphate, sodium and other mineral deposits in said land as reserved to the State of California, by the provision of an act of the legislation, statutes of 1921 page 404 and amendments thereto.

Also excepting therefrom half of all oil, hydrocarbons and similar minerals but without the right of entry to depth of 500 feet from the surface thereon in and to the property. As granted to J. J. Kessler, a married man, in deed recorded August 23, 1956 in Book 2654, Page 300 of Official records.

APN:  237-031-08

   Tract 3

A strip of land, one hundred seventy-five (175) feet in width, situated in the South 1/2 of Section 16, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to The Muriel Pollia Foundation, by Document No. 0207220631, recorded on November 2, 2007, Kern County Deed Records, and being more particularly described as follows:

The East one hundred seventy-five (175) feet of said South 1/2, Section 16, together with that one hundred seventy-five (175) foot strip, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648) said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.

APN:  237-031-38

   Tract 4

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01

Tract 5

The West half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded August 14, 1963 in Book 3634, Page 835 of Official Records. 

APN:  237-141-01

   Tract 6

The East half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded September 20, 1967 in Book 4090, Page 851 of Official Records. 

APN:  237-141-02

   Tract 7

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

   Tract 8

The East half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America recorded in Book 3259, Page 641 of Official Records.

APN:  237-141-04

   Tract 9

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

   Tract 10

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, page 864, Official Records.

APN:  237-141-20

   Tract 11

The West half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom all oil, gas and other mineral deposits, in and under said land, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 863, Official Records.

APN:  237-141-21

   Tract 12

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22
   
   Tract 13

The East half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom all oil, gas and other mineral deposits in the land so Patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in patent recorded December 7, 1962 in Book 3552, Page(s) 966 of Official Records.

APN:  237-141-25

   Tract 14

The West half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 23, 1990 on Book 6422, Page 2386 of Official Records.

APN:  237-141-26

   Tract 15

The East half of the Southwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded January 4, 1962 on Book 3449, Page 44 of Official Records.

APN:  237-141-27

   Tract 16

The East half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Except therefrom all oil, gas and other hydrocarbon substances, as reserved in Book 3326, Page 982, of Official Records.

APN:  237-142-25

   Tract 17

The West half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-26

   Tract 18

The West half of the Southwest quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom to the United States all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved in patent recorded June 29, 1990 in Book 6400, Page 2360 of Official Records.

APN:  237-142-32

   Tract 19

The West half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting and reserving to the United States all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, in patent recorded August 29, 1961 in Book 3410, Page 214, of Official Records.

APN:  237-152-01

   Tract 20

The East half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent recorded April 21, 1960 in Book 3260, Page 842, of Official Records.

APN:  237-152-02

   Tract 21

The West half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent dated January 14, 1960 Patent No. 1203755 and recorded August 17, 1960 in Book 3293, Page 949, of Official Records.

APN:  237-152-03

   Tract 22

The East half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Except all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, as reserved by the United States of America in the patent recorded October 26, 1960 in Book 3314, Page 880, of Official Records.

APN:  237-152-04

   Tract 23

The West half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-05

   Tract 24

The East half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Except all oil, gas and other mineral deposits, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved by the United States of America in patent recorded April 5, 1960 in Book 3256, Page 18 of Official Records.

APN:  237-152-06

   Tract 25

The North half of the West half of the Northeast quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded June 16, 1960 in Book 3276, Page 51, of Official Records.

APN:  237-152-33

   Tract 26

The Southwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat of the survey of said land, approved by the Surveyor General October 7, 1936.

Except one half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by the M &amp; R Sheep Co. in deed dated August 4, 1955, recorded in Book 2519, Page 298 of Official Records.

APN:  237-185-07

   Tract 27

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01
   
   Tract 28

The West half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, as per Certificate of Compliance No. 446 recorded May 28, 1982 in Book 5462, Page 1483 of Official Records.

Except 50% of all oil and mineral rights as reserved in records of said County.

APN:  237-284-02

   Tract 29

The East half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official map of said land on file in the Bureau of Land Management and approved by the Surveyor General on September 19, 1856.

Except therefrom one-half of all oil, gas and minerals and hydrocarbon substances in and under said land, as excepted in Deed dated August 4, 1955 from M&amp;R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 289, of Official Records.  Said deed provides in part:

The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the Second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the Grantor its successors and assigns from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent of neighboring lands and/or from conducting sub-surface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the Grantors in said Deed.

Excepting therefrom the Northeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section and the Southeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section as reconveyed by Document recorded in Book 5101, Page 2245 of Official Records.

APN:  237-284-05

   Tract 30

The West half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289 of Official Records.

APN:  237-284-06

   Tract 31

The East half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land together with the rights incidental thereto, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289, of Official Records.

APN:  237-284-07			
Tract 32
The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05		
e.	Crossing Agreements:
(i) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(ii) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm II LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(iii) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm III LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines..
(iv) Letter of Crossing Consent dated February 26, 2014 from AT&amp;T to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for crossing of AT&amp;T's infrastructure.
(v) Letter of Crossing Consent dated May 14, 2014 from PG&amp;E to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for road and transmission line crossing of PG&amp;E's pipelines.
(vi) Letter of Crossing Consent dated September 10, 2014 from PG&amp;E to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for fiber optic line crossing of PG&amp;E's pipelines.
(vii) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(viii) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm II LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(ix) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm III LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(x) Letter of Crossing Consent dated May 28, 2014 from SCE to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for crossing of SCE's overhead distribution lines.
f.	Neighbor Agreements
   Tract 1

Lot 28 of Section 2, Township 11 North, Range 13 West, San Bernardino Base and Meridian in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-121-22

   Tract 2

Lot 49 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-01

   Tract 3

Lot 63 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-19

   Tract 4

Lot 59 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-23
   
   Tract 5

The east half of the northeast quarter of the southeast quarter of the southwest quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-131-24

   Tract 6

The West half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.

APN:  237-132-19
   
   Tract 7

The East half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.

APN:  237-142-20

   Tract 8

The East half of the Northwest quarter of the Southeast quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-132-22

   Tract 9

That portion of the West half of the Southeast quarter of the Southeast quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the un-incorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:

Beginning at the Northeast corner of the West half of the Southeast quarter of the Southeast quarter of the Southeast quarter of said Section 2; Thence Southerly 132 feet; Thence Westerly 165 feet; Thence Northerly 132 feet; Thence Easterly 165 feet to the point of beginning.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America, in Patent recorded February 24, 1960 in Book 3242, Page 151 of Official Records.

APN:  237-132-26

   Tract 10

That portion of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:

Beginning at a point 165 feet west of the northeast corner of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2; thence west 165 feet; thence southerly 132 feet; thence easterly 165 feet; thence northerly 132 feet, to the beginning point.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as reserved by the United States of America, in Patent recorded February 24, 1960 in book 3242 page 151 of Official Records.

APN:  237-132-27
   
   Tract 11

The east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the Official Plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom that portion within the following described land:

That portion of the east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.BM., in the County of Kern, State of California, according to the Official Plat thereof, lying southeasterly of a line that lies 100 feet northwesterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 2, distant thereon South 8923'25" west, 1.75 feet from the southeast corner of said section; Thence north 4747'57" east 2.40 to a point in the easterly line of said section, distant thereon north 100'54" east 1.59 feet from said southeast section corner.

Basis of bearings is Lambert Projection, North American 1927 DATUM, California Zone 5.

Together with all of the grantors right, title and interest in and to all water and water rights, whether surface or subsurface or of any other kind, including all appurtenant water rights, and all water and water rights in any wise incident to the real property herein described or used thereon or in connection therewith by deed recorded February 14, 1967 in book 4024, page 678 of Official Records.

Also except therefrom all oil, gas and other mineral deposits in and under said land together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in Patent recorded February 9, 1960, in Book 3237, Page 339 of Official Records.

APN:  237-132-41

Tract 12

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

   Tract 13

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

   Tract 14

The West half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

APN:  237-141-14

   Tract 15

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, page 864, Official Records.

APN:  237-141-20
   
   Tract 16

The East half of the Northeast quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-20

   Tract 17

The West half of the Northeast quarter of the Northeast quarter of the Southwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-151-07

   Tract 18

The East half of the Northwest quarter of the Southeast quarter of the Southwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-151-22

   Tract 19

The East half of the Southwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-15

   Tract 25

The West half of the Southwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

APN:  237-152-16
g.	O&amp;M Building
The Southwest quarter of the Southeast quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California.

Except an undivided 1/2 interest in 50% of the oil, gas, minerals and other hydrocarbon substances, affecting said land as reserved by deeds of record.

By a document entitled "Order Settling First Account and Report of Executors, for Preliminary Distribution in the matter of the estate of Oscar Rudnick, deceased, filed in the Superior Court of the State of California for the County of Kern, Case No. 15776, the decedents interest in the above mineral exception was distributed to Sophie Rudnick, Marcus Rudnick and Frances A. Moore, Trustees of the Testamentary Trust created by the decedents Will by document recorded January 12, 1979 in book 5168, page 797 of Official Records.

APN:  237-185-05
h.	Laydown Area
The Northwest quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances under and in said land reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 and recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded on Book 5954, Page 2192 of Official Records.

AND

The Northwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded in Book 5954, Page 2192 of Official Records.

AND

The Southwest quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded in Book 5954, Page 2192 of Official Records.

APN 237-185-01
i.	Condor Detection Tower
The East half of the Southwest quarter of the Northeast quarter of fractional Section 18, Township 11 North, Range 14 West, S.B.M., according to the Official Plat of the survey of said land on file in the Office of the Bureau of Land Management and approved on November 21, 1894.
APN 237-083-09
3. Shared Permits
a. Kern County Substation Building permit No. K201403609 issued August 29, 2014.
b. Kern County Transmission Line Building Permit No. K201404234 issued August 14, 2014.
c. Kern County Encroachment Permit for filming of roads. Permit No. 0353-14 issued April 9, 2014.
d. Kern County Encroachment Permit for boring under Oak Creek Road. Permit No. 0626-14 issued June 12, 2014.
e. Kern County Encroachment Permit for private access. Permit No. 0363-14 issued April 9, 2014.
f. Kern County Encroachment Permit for transmission line private access. Permit No. 0809-14 issued August 6, 2014.
g. Kern County Encroachment Permit for transmission line construction. Permit No. 0477-14 issued May 8, 2014.
h. Kern County Encroachment Permit for trenching in Kern County franchise. Permit No. 1201-14 dated November 5, 2014.
i. Eagle Take Permit; yet to be issued by the US Fish and Wildlife Service.  [does not relate to Shared Facilities]
j. Authority to construct 125-kw emergence generator issued by Kern County Air Pollution Control District on October 8, 2014.
k. Kern County Ordinance No. F589 granting Rising Tree Wind Farm LLC a franchise to construct, install, maintain, operate, repair, renew and remove underground fiber optic cable dated November 4, 2014. [Partial assignment to Rising Tree II and Rising Tree III pending.]
4. Third Party Rights
a.	O&amp;M Building:  Rights of Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC (collectively, the "Sublessees") under that certain Sublease Agreement dated [_____], 2014 by and between the Co-Owners, as sublessors, and the Sublessees, as sublessees.
B. Assets Jointly Owned and Shared by Rising Tree I and Rising Tree II (RST I/II Shared Facilities Group)
1. Shared Facilities
a.	Roads
b.	Meteorological Tower
2. Shared Real Property
a.	Collection and Distribution Lines:  
   Tract 1

The South half of the South half of the West half of the Southeast quarter of fractional Section 36, Township 12 North, Range 13 West, San Bernardino Meridian,  in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  224-440-31

   Tract 2

The Southeast quarter of the Northwest quarter of that portion of the North half of the Northeast quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat  thereof,  lying  northerly  of  the northwesterly line of that certain strip of land 200 feet in width conveyed to the City of Los Angeles, a municipal corporation by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds.

Except therefrom that portion of said land deeded to the City of Los Angeles, a municipal corporation by deed recorded April 18, 1968 in Book 4151, Page 400 of Official Records.

APN:  237-261-03

   Tract 3

The South half of the Northwest quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, excepting from the South half of the Northwest quarter of the Southwest quarter of said Section 1, that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by Deed recorded March 13, 1920 in Book 346, Page 421 of Deeds; also excepting therefrom that portion thereof conveyed to the City of Los Angeles in deed recorded June 19, 1968 on Book 4171, Page 256 of Official Records.

APN:  237-261-06

   Tract 4

The North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Excepting therefrom any portion of said land as deeded to the City of Los Angeles, a municipal corporation for Los Angeles Aqueduct by deed recorded April 18, 1969 in Book 4151, Page 393, Official Records.

APN:  237-261-13

   Tract 5

Parcel 4 of Parcel Map No. 4120, in the unincorporated area, County of Kern, State of California, as per map recorded January 4, 1978 in Book 20, Page 6 of Maps of Parcel Maps, in the Office of the County Recorder of said County.

APN:  237-261-22

   Tract 6

The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23

   Tract 7

All that portion of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area of the County of Kern, State of California, being more particularly described as follows:

Commencing at the Southwest corner of said Section, thence North 01 degrees 01 minutes 12 seconds East on and along the West line of said Section a distance of 138.81 feet to a point in the Northerly boundary of the Los Angeles Aqueduct, as conveyed to the City of Los Angeles in the Deed recorded May 31, 1968 in Book 4165, Page 434 of Official Records, said point also being the True Point of Beginning; thence continuing North 01 degree 01 minutes 12 seconds East on an along said West line a distance of 1203.21 feet to a point on the North line of the Southwest quarter of the Southwest quarter of said Section; thence North 89 degrees 24 minutes 52 seconds East on and along said North line a distance of 1,187.00 feet to a point on the Northerly boundary of said Los Angeles Aqueduct, said point also being the beginning on a non-tangent 3450.51 foot radius curve, from which point the radius point bears South 59 degrees 13 minutes 37 seconds East; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 03 degrees 20 minutes 01 seconds an arc distance of 200.76 feet to the beginning of a 386.96 foot radius reverse curve; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 20 degrees 21 minutes 40 seconds an arc distance of 137.51 feet; thence South 47 degrees 48 feet 02 seconds West on and along said Northerly boundary a distance of 1386.61 feet to the True Point of Beginning.

APN:  237-261-30 (formerly 237-261-10)

   Tract 8

A tract of land situated in the North half of the North half of the East half of the East half of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property described in Book 4769, Page 798, recorded on February 8, 1973, Kern County Deed Records, and being more particularly described as follows:

That portion of said property lying northwest of that property described in Book 4198, Page 429, Kern County Deed Records.

APN:  237-285-03

   Tract 9

The Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

EXCEPT:
Parcel No. 80 comprising of that portion of the Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat thereof, lying southeasterly of a line that lies 100 feet northeasterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 11, distant thereon North 89 degrees 30 minutes 21 seconds East 769.74 feet from the Southwest corner of said Section; thence North 29 degrees 11 minutes 48 seconds East 1740.84 feet to the beginning of a curve concave southeasterly and having a radius of 455.19 feet; thence northeasterly along said curve through an angle of 47 degrees 47 minutes 43 seconds, an arc length of 379.71 feet to the beginning of a reverse curve concave northwesterly and having a radius of 250.04 feet; a radial line at said point of reverse curvature bears North 13 degrees 00 minutes 29 seconds West; thence northeasterly along said reverse curve, through an angle of 52 degrees 16 minutes 18 seconds, an arc length of 228.11 feet; thence North 24 degrees 43 minutes 13 seconds East 560.81 feet to the beginning of a curve concave southeasterly and having a radius of 365.06 feet; thence northeasterly along said curve, through an angle of 37 degrees 05 minutes 38 seconds, an arc length of 236.34 feet; thence North 61 degrees 48 minutes 51 seconds East 723.23 feet to the beginning of a curve concave northwesterly and having a radius of 310.16 feet; thence northeasterly along said curve through an angle of 56 degrees 26 minutes 27 seconds, an arc length of 305.54 feet to the beginning of a reverse curve, concave southeasterly and having a radius of 765.12 feet, a radial line at said point of reverse curvature bears South 84 degrees 37 minutes 36 seconds East; thence Northeasterly along said reverse curve through an angle of 34 degrees 44 minutes 57 seconds, an arc length of 464.03 feet; thence North 40 degrees 07 minutes 21 seconds East feet to the beginning of a curve concave Southeasterly and having a radius of 2000.30 feet; thence Northeasterly along said curve, through an angle of 7 degrees 40 minutes 36 seconds, an arc length of 268.01 feet; thence North 47 degrees 47 minutes 57 seconds East 1564.62 feet to a point in the Northerly line of said Section 11, distant thereon South 89 degrees 23 minutes 25 seconds West 1.75 feet from the Northeast corner of said Section.

APN:  237-285-04

   Tract 10

The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05

b.	Roads
   Tract 1

The South half of the South half of the West half of the Southeast quarter of fractional Section 36, Township 12 North, Range 13 West, San Bernardino Meridian,  in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  224-440-31

   Tract 2

The east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the Official Plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom that portion within the following described land:

That portion of the east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.BM., in the County of Kern, State of California, according to the Official Plat thereof, lying southeasterly of a line that lies 100 feet northwesterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 2, distant thereon South 8923'25" west, 1.75 feet from the southeast corner of said section; Thence north 4747'57" east 2.40 to a point in the easterly line of said section, distant thereon north 100'54" east 1.59 feet from said southeast section corner.

Basis of bearings is Lambert Projection, North American 1927 DATUM, California Zone 5.

Together with all of the grantors right, title and interest in and to all water and water rights, whether surface or subsurface or of any other kind, including all appurtenant water rights, and all water and water rights in any wise incident to the real property herein described or used thereon or in connection therewith by deed recorded February 14, 1967 in book 4024, page 678 of Official Records.

Also except therefrom all oil, gas and other mineral deposits in and under said land together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in Patent recorded February 9, 1960, in Book 3237, Page 339 of Official Records.

APN:  237-132-41

   Tract 3

The Southeast quarter of the Northwest quarter of that portion of the North half of the Northeast quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat  thereof,  lying  northerly  of  the northwesterly line of that certain strip of land 200 feet in width conveyed to the City of Los Angeles, a municipal corporation by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds.

Except therefrom that portion of said land deeded to the City of Los Angeles, a municipal corporation by deed recorded April 18, 1968 in Book 4151, Page 400 of Official Records.

APN:  237-261-03

   Tract 4

The South half of the Northwest quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, excepting from the South half of the Northwest quarter of the Southwest quarter of said Section 1, that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by Deed recorded March 13, 1920 in Book 346, Page 421 of Deeds; also excepting therefrom that portion thereof conveyed to the City of Los Angeles in deed recorded June 19, 1968 on Book 4171, Page 256 of Official Records.

APN:  237-261-06

   Tract 5

The North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Excepting therefrom any portion of said land as deeded to the City of Los Angeles, a municipal corporation for Los Angeles Aqueduct by deed recorded April 18, 1969 in Book 4151, Page 393, Official Records.

APN:  237-261-13
   
   Tract 6

Parcel 4 of Parcel Map No. 4120, in the unincorporated area, County of Kern, State of California, as per map recorded January 4, 1978 in Book 20, Page 6 of Maps of Parcel Maps, in the Office of the County Recorder of said County.

APN:  237-261-22

   Tract 7

The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23
   
   Tract 8

All that portion of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area of the County of Kern, State of California, being more particularly described as follows:

Commencing at the Southwest corner of said Section, thence North 01 degrees 01 minutes 12 seconds East on and along the West line of said Section a distance of 138.81 feet to a point in the Northerly boundary of the Los Angeles Aqueduct, as conveyed to the City of Los Angeles in the Deed recorded May 31, 1968 in Book 4165, Page 434 of Official Records, said point also being the True Point of Beginning; thence continuing North 01 degree 01 minutes 12 seconds East on an along said West line a distance of 1203.21 feet to a point on the North line of the Southwest quarter of the Southwest quarter of said Section; thence North 89 degrees 24 minutes 52 seconds East on and along said North line a distance of 1,187.00 feet to a point on the Northerly boundary of said Los Angeles Aqueduct, said point also being the beginning on a non-tangent 3450.51 foot radius curve, from which point the radius point bears South 59 degrees 13 minutes 37 seconds East; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 03 degrees 20 minutes 01 seconds an arc distance of 200.76 feet to the beginning of a 386.96 foot radius reverse curve; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 20 degrees 21 minutes 40 seconds an arc distance of 137.51 feet; thence South 47 degrees 48 feet 02 seconds West on and along said Northerly boundary a distance of 1386.61 feet to the True Point of Beginning.

APN:  237-261-30 (formerly 237-261-10)

   Tract 9

A tract of land situated in the North half of the North half of the East half of the East half of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property described in Book 4769, Page 798, recorded on February 8, 1973, Kern County Deed Records, and being more particularly described as follows:

That portion of said property lying northwest of that property described in Book 4198, Page 429, Kern County Deed Records.

APN:  237-285-03
   
   Tract 10

The Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

EXCEPT:
Parcel No. 80 comprising of that portion of the Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat thereof, lying southeasterly of a line that lies 100 feet northeasterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 11, distant thereon North 89 degrees 30 minutes 21 seconds East 769.74 feet from the Southwest corner of said Section; thence North 29 degrees 11 minutes 48 seconds East 1740.84 feet to the beginning of a curve concave southeasterly and having a radius of 455.19 feet; thence northeasterly along said curve through an angle of 47 degrees 47 minutes 43 seconds, an arc length of 379.71 feet to the beginning of a reverse curve concave northwesterly and having a radius of 250.04 feet; a radial line at said point of reverse curvature bears North 13 degrees 00 minutes 29 seconds West; thence northeasterly along said reverse curve, through an angle of 52 degrees 16 minutes 18 seconds, an arc length of 228.11 feet; thence North 24 degrees 43 minutes 13 seconds East 560.81 feet to the beginning of a curve concave southeasterly and having a radius of 365.06 feet; thence northeasterly along said curve, through an angle of 37 degrees 05 minutes 38 seconds, an arc length of 236.34 feet; thence North 61 degrees 48 minutes 51 seconds East 723.23 feet to the beginning of a curve concave northwesterly and having a radius of 310.16 feet; thence northeasterly along said curve through an angle of 56 degrees 26 minutes 27 seconds, an arc length of 305.54 feet to the beginning of a reverse curve, concave southeasterly and having a radius of 765.12 feet, a radial line at said point of reverse curvature bears South 84 degrees 37 minutes 36 seconds East; thence Northeasterly along said reverse curve through an angle of 34 degrees 44 minutes 57 seconds, an arc length of 464.03 feet; thence North 40 degrees 07 minutes 21 seconds East feet to the beginning of a curve concave Southeasterly and having a radius of 2000.30 feet; thence Northeasterly along said curve, through an angle of 7 degrees 40 minutes 36 seconds, an arc length of 268.01 feet; thence North 47 degrees 47 minutes 57 seconds East 1564.62 feet to a point in the Northerly line of said Section 11, distant thereon South 89 degrees 23 minutes 25 seconds West 1.75 feet from the Northeast corner of said Section.

APN:  237-285-04

c.	Meteorological Tower
The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23
3. Shared Permits
a. Kern County Grading Permit No. K201402123: Issued July 25, 2014
b. Incidental Take Permit 2081-2014-023-04: Issued to Rising Tree Wind Farm LLC and Rising Tree Wind Farm II LLC by California Department of Fish and Wildlife
c. Notice of Applicability under Waste Discharge Requirements WDID No. 6B151403004: Issued to Rising Tree Wind Farm LLC and Rising Tree Wind Farm II LLC by Lahontan Regional Water Quality Control Board

4. Third Party Rights
None



EXHIBIT B-1

PROJECT SUBSTATION SHARED FACILITIES

* One (1) 230kV Dead End Structure including the following equipment and material:
o Tapered Tubular Structural Steel and associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Lightning Surge Arrestors, 180kV, 144kV MCOV
o Three (3) Compression Tees, 795 ACSR to NEMA 4-Hole Pad
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Six (6) Welded Terminal Adaptors, 1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle
o Five Hundred (500) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* Three (3) 230kV Single Phase Bus Supports, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle

* One (1) 230kV, 1200A, Ganged 3-Phase, Motor Operated Disconnect Switch including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor, associated hardware, and switch grounding platform
o Six (6) Station Post Insulators, 230kV, TR-308
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Sixty (60) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* One (1) 230kV, Metering Station, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Equipment control wiring and interconnecting conduit including Junction Boxes
o Three (3) 230kV, 600:5 Single Ratio Dual Winding, Instrument Current Transformers
o Three (3) 230kV, 1200/2000:1:1 Dual Winding, Instrument Potential Transformers
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Cable Spacer Tees, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Aluminum Cable Support Brackets
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor

* 230kV Substation Summation Bus including the following equipment and material:
o One (1) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Three (3) Station Post Insulators, 230kV, TR-308
* Three (3) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Three (3) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Thirteen (13) 230kV, Single Phase Low Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Thirteen (13) Station Post Insulators, 230kV, TR-308
* Thirteen (13) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Six (6) 230kV, Single Phase High Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Six (6) Station Post Insulators, 230kV, TR-308
* Six (6) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Four (4) 230kV, Three Phase High Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Twelve (12) Station Post Insulators, 230kV, TR-308
* Twelve (12) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Three (3) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Nine (9) Station Post Insulators, 230kV, TR-308
* Nine (9) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Nine (9) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Ninety (90) Feet of 1272 kcmil AAC (Narcissus) conductor
o Nine (9) 230kV, Aluminum A-Frames, which includes:
* Eighteen (18) Tee Connector, 4" IPS Main to 3" IPS Tap, 15
* Nine (9) Tee Connector, 4" IPS Main to 2-3" IPS Taps, 15
* Two Hundred Ten (210) Feet of 3" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 4" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 795 kcmil ACSR (Drake) Conductor

* Above and Below Ground Raceways including the following materials
o Conduits, fittings, and connectors connecting shared facility equipment or apparatus to other Substation components located within the Substation
o Cable Trench, Trench Covers, Trench Hangers, and Trench Grounding Materials

* Substation Ground Grid including the following materials
o Twenty Three Thousand (23,000) Feet of #4/0 kcmil 19 Strand, Bare Copper 
o Exothermic Cross connections ~ including molds, shots, and accessories
o Exothermic Tee connections ~ including molds, shots, and accessories
o Exothermic Lug connections ~ including molds, shots, and accessories

* Substation Lighting and Lightning Protection including the following materials
o Eight (8) Static Masts, 90' Tall with provision for yard lighting
o Fifteen (15) 400W, HPS Flood Lights

* Substation Fencing including the following materials
o Fifteen Hundred (1500) Feet of fence, 8' tall, 7' mesh with three strands of barbed wire
o Fence posts, gates, hangers, and grounding materials



EXHIBIT B-2

TRANSMISSION LINE SHARED FACILITIES

3.99-mile 220kV generation tie-line, optical ground wire on the generation tie-line for the primary telecommunications path, single-mode fiber optic cable for the diverse telecommunications path, appurtenant structures, and facilities, including the following:

* Forty Two (42) transmission structures including the following materials:
o Forty Two (42) tubular steel poles
o One Hundred Twenty (120) 230kV 30K Insulators
o One Hundred Twenty (120) Suspension Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty (40) 230kV 50K Insulators
o Forty (40) Dead End Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty Five (45) OPGW Hardware Assemblies
o Four (4) Dead End Hardware Assemblies for 3/8" Shield Wire
o Structure grounding rods and associated hardware
o Structure signage
* Seventy Thousand Two Hundred (70,200) Feet of 795 KCMIL ACSR "Drake" Conductor
* Twenty Three Thousand (23,000) Feet of 48 Fiber, Single Mode OPGW, DNO 6211
* Three (3) OPGW "Coyote" Splices including splice case, splices and mounting hardware. 
* One Thousand Four Hundred and Fifty (1,450) Bird Flight Diverters
* Two Hundred (200) Feet of 3/8" HS 7-Strand Shield Wire
* Twenty Five Thousand Five Hundred (25,500) Feet of ADSS Fiber Optic Cable
* Twenty Two Thousand (22,000) Feet of 1 1/4" inner duct


      
      
EXHIBIT C
INTERESTS AND PROPORTIONATE SHARES
A.	Undivided Ownership Interests
      The Ownership Interest of each Co-Owner in each Shared Assets Group shall be as set forth in Table C below.  
B.	Proportionate Shares
      The Proportionate Share of each Co-Owner shall be as set forth in Table C below. 
C.	Shared Asset Groups
RST Shared Facilities Group (All Co-Owners)
Equipment Name
RST I
RST II
RST III
Project Substation
40%
10%
50%
Transmission Line
40%
10%
50%
Fiber Optic Facilities
40%
10%
50%
Roads [in Sections 9, 10, 11, 15 and 16]
40%
10%
50%
O&amp;M Facility
40%
10%
50%
[other]
40%
10%
50%

RST I/II Shared Facilities Group (Rising Tree I and Rising Tree II only)
Equipment Name
RST I
RST II



Roads [in Sections 1, 2, 35 and 36]
80%
20%
Met Tower RST 1-B/RST 2
80%
20%


      

EXHIBIT D

MATERIAL PROJECT AGREEMENTS
(Certain Other Agreements Relating to the Construction, 
Operation and Use of the Shared Facilities)

1.  A High Voltage Operations and Maintenance Agreement to be entered into by and between the Co-Owners and EDP Renewables North America LLC (or one of its Affiliates).  [expected to be signed before December 31, 2014]

2.  A Services Agreement for a Remote Operations Control Center to be entered into by and between the Co-Owners and EDP Renewables North America LLC (or one of its Affiliates).  [expected to be signed before December 31, 2014]



EXHIBIT E

DISPUTE RESOLUTION PROCEDURES
1.	Consideration by the Authorized Representatives.
      All questions concerning interpretation of this Agreement, the acceptable fulfillment of the Co-Owners' respective obligations hereunder, as well as all other questions regarding this Agreement in each case that cannot readily be resolved by the Co-Owners shall be resolved in accordance with this Exhibit E.  In the event that the authorized representatives of the Co-Owners cannot reach agreement on any question arising under this Agreement, such dispute shall be referred to senior officers of the Co-Owners pursuant to Paragraph 2 below.
2.	Negotiations by Senior Officers.
      Any disputes arising pursuant to this Agreement that cannot be resolved by the authorized representatives of the Co-Owners within fourteen (14) days after receipt of notice of such dispute (specifically referencing this Exhibit E) shall be referred to the vice president or other senior officer of each of the Co-Owners having executive responsibility for such Co-Owner's Facility.  If such senior officers, negotiating in good faith, fail to reach an agreement within a reasonable period of time, not exceeding twenty (20) days after such referral, then any Co-Owner to such dispute may institute proceedings as set forth in Paragraph 3 below.
3.	Formal Dispute Resolution.
      (a)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners, the Co-Owners shall engage in non-binding mediation of such dispute.  Such mediation shall be conducted (i) in Houston, Texas, (ii) within thirty (30) days of a Co-Owner instituting dispute resolution under this Paragraph 3, (iii) by a single, impartial mediator who is selected by the mutual agreement of the Co-Owners, and (iv) in accordance with such procedures as may be adopted by such mediator.  Such mediation shall not, without the express agreement of the Co-Owners at the time, extend for a period of more than two (2) days.  Each Co-Owner may be represented by persons of such Co-Owner's choice during such mediation.  Nothing herein shall be deemed to grant any mediator the authority to impose a resolution of any dispute being mediated.  Any information introduced, proposals made or positions taken in the mediation shall be deemed to be confidential and for settlement purposes only and may not be introduced by the other Co-Owner in any subsequent litigation of the matters subject to mediation.  The Co-Owners shall share the costs of the mediator, including any fees and meeting room rentals.
      (b)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners and the Co-Owners have not otherwise resolved such dispute through mediation pursuant to Paragraph 3(a), a Co-Owner may submit the matter at issue for resolution in an action brought before the courts of the State of California in Kern County or in the United States District Court for the Eastern District of California, which courts shall have non-exclusive jurisdiction with respect to such matters.  FOR PURPOSES OF THE FOREGOING, BY EXECUTION OF THIS AGREEMENT, EACH CO-OWNER HEREBY IRREVOCABLY ACCEPTS FOR ITSELF AND IN RESPECT OF ITS PROPERTY, GENERALLY AND UNCONDITIONALLY, THE NON-EXCLUSIVE JURISDICTION OF SUCH COURTS AND EACH CO-OWNER HEREBY CONSENTS TO THE SERVICE OF PROCESS OUT OF ANY SUCH ACTION OR PROCEEDING BY THE MAILING OF COPIES THEREOF BY REGISTERED OR CERTIFIED MAIL, POSTAGE PREPAID, TO SUCH PERSON IN ACCORDANCE WITH THE NOTICE PROVISIONS OF THIS AGREEMENT.
      4.	Specific Performance.  Notwithstanding anything to the contrary contained in this Agreement, if, due to a material breach or threatened material breach or default or threatened default, a Co-Owner is suffering or will suffer irreparable harm for which monetary damages are inadequate, such Co-Owner may petition a court of competent jurisdiction for injunctive relief, specific performance or other equitable relief.
      5.	Continuing Obligations.  Notwithstanding the foregoing, all terms, conditions, and obligations of the Co-Owners contained in this Agreement shall continue and remain in effect during the course of any dispute resolution, or other proceeding pursuant hereto, and each of the Co-Owners shall proceed with performance of its obligations pending the resolution of the question, dispute or claim.
      6.	Matters Not Subject to Dispute Resolution.  Notwithstanding anything to the contrary in this Agreement, no dispute that concerns a matter, decision or other issue that is to be decided by a Co-Owner acting in its sole discretion shall be subject to the dispute resolution provisions of this Exhibit E.


EXHIBIT F
FORM OF JOINDER
TO
RISING TREE SHARED FACILITIES AGREEMENT
      Reference is hereby made to the Rising Tree  Shared Facilities Agreement dated June [__], 2010 by and among Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC and Rising Tree Wind Farm III LLC ("SFA"). Unless otherwise indicated, capitalized terms used but not defined herein shall have the meaning ascribed to them in the SFA, as the context dictates.
      By its execution below, the undersigned, [insert name and form/jurisdiction of New Co-Owner] (the "New Co-Owner"), agrees to become, and does hereby become, a Co-Owner with respect to the [describe Project (or portion thereof) being added (the "New Project") under the SFA, and agrees to be bound by the SFA from and after the date hereof. Without limiting the foregoing, from and after the date hereof, all references in the SFA to the owner of the New Project shall be deemed to refer to New Co-Owner.
      By its execution below, New Co-Owner covenants, represents and warrants as follows:
      1.	New Co-Owner will expressly assume in writing all obligations as a Co-Owner under the SFA with respect to the New Project and its Ownership Interest and Undivided Use Interest (if applicable) to the extent of the New Project, in each case arising on or after the date hereof;
      2.	The aforementioned New Project is in accordance with Section 4.4 of the SFA; and
      3.	New Co-Owner will comply with all covenants and obligations contained in the SFA.
[signature page follows.]

SIGNATURE PAGE TO
JOINDER
TO
RISING TREE SHARED FACILITIES AGREEMENT

      IN WITNESS WHEREOF, the undersigned has executed and delivered this joinder to the SFA as of this _____ day of _________________, 20__.

[INSERT NAME OF NEW CO-OWNER]


	
By:
Name:
Title:

EXHIBIT G
FORM OF MEMORANDUM

RECORDING REQUESTED BY
AND WHEN RECORDED MAIL TO:

RISING TREE WIND FARM LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
													
MEMORANDUM OF
SHARED FACILITIES AGREEMENT AND
GRANT OF RIGHTS
      THIS MEMORANDUM OF SHARED FACILITIES AGREEMENT AND GRANT OF RIGHTS (this "Memorandum"), is made and entered into as of December 3, 2014 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.   Rising Tree I, Rising Tree II and Rising Tree III are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners". The Co-Owners are collectively referred to herein as "Parties" and individually as a "Party".
A.	The Parties have entered into that certain unrecorded Rising Tree Shared Facilities Agreement of even date herewith (the "Agreement"), which affects (i) certain real property more particularly described in Exhibit A attached hereto and made a part hereof (such real property collectively, the "Property").
B.	The Parties have executed and acknowledged this Memorandum and are recording the same for the purpose of providing constructive notice of the Agreement and the Parties' rights thereunder.  Capitalized terms used and not defined herein have the meaning given the same in the Agreement.
NOW, THEREFORE, the Parties hereby agree as follows:
1.	Grant of Rights.  Subject to the terms and conditions of use set forth in the Agreement and the terms and conditions in each of the Shared Real Property Agreements:
      (a) each Co-Owner of Shared Facilities and/or Shared Real Property in a Shared Assets Group (a "Granting Co-Owner") hereby sells, grants, assigns, transfers and conveys to the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such Shared Assets Group, including such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Asset Group, such that each such Co-Owner shall own an undivided interest, as a tenant-in-common, in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B attached to the Agreement; 
      (b) each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group equal to its Proportionate Share therein, which right is exercisable upon the Commissioning Date of its Facility, all as more particularly set forth in the Agreement.  In addition, each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Undivided Use Interest as provided in the Agreement, and (b) over any Shared Real Property underlying or required for the use of the Shared Facilities in which such Co-Owner has an Undivided Use Interest, subject to the terms and conditions contained in the Agreement. 
2.	Term. This Agreement is effective as of the Effective Date and shall remain in force and effect until (i) the earliest of (v) the date that is thirty-five (35) years after the Effective Date, (w) the expiration date of the Interconnection Agreement,  (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
3.	Other Provisions. The rights granted hereunder are of the nature, and are subject to the requirements and limitations, set forth in the Agreement. The Agreement also contains various covenants, obligations and rights of the Parties, including, without limitation, provisions relating to use, conduct of operations, assignment, ownership of improvements, fees, default, cure rights and lender protections.
4.	Purpose of this Memorandum. The terms, conditions and covenants of the Agreement are incorporated herein by reference as though fully set forth herein. This Memorandum does not supersede, modify, amend or otherwise change the terms, conditions or covenants of the Agreement, and this Memorandum shall not be used in interpreting the terms, conditions or covenants of the Agreement. In the event of any conflict between this Memorandum and the Agreement, the Agreement shall control.
5.	Binding on Successors and Assigns.  The Parties hereby agree that all of the covenants, consents and agreements contained in the Agreement touch and concern the Property and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Party's present or future estate or interest therein and upon each of the Parties, their respective successors and assigns as holders of an estate or interest in said real estate (including without limitation, any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Parties and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
6.	Counterparts. This Memorandum may be executed in counterparts, each of which shall be deemed an original and all of which when taken together shall constitute one and the same document.
[SIGNATURES ON NEXT PAGE]
       
IN WITNESS WHEREOF, the Parties have caused this Memorandum to be executed as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC
 __________________________________________
By:
Title:


	
By:
Title:
[Add notarial acknowledgments]

EXHIBIT A
DESCRIPTION OF THE PROPERTY


FIRST AMENDMENT TO
RISING TREE SHARED FACILITIES AGREEMENT
      THIS FIRST AMENDMENT TO RISING TREE SHARED FACILITIES AGREEMENT ("Amendment") is made and entered into this 29th day of June, 2015, by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners".
RECITALS
      A.	The Co-Owners have previously entered into that certain Rising Tree Shared Facilities Agreement dated December 3, 2014 (the "Agreement") with respect to the shared facilities and shared real property used in connection with each phase of a three phase wind powered electric generating facility generally known as the Rising Tree Wind Farm located on real property in Kern County, California (the "Rising Tree Wind Farm").  
      B.	A memorandum of the Agreement was recorded in the Official Records of Kern County, California on December 10, 2014, as Instrument No. 0214152759.
      C.	The Co-Owners now wish to amend the Agreement in certain respects to clarify the ownership and use of certain Shared Facilities and Shared Permits and to make other changes in and corrections to the Agreement.
      NOW, THEREFORE, for good and valuable consideration, the receipt of which is hereby acknowledged, the Co-Owners agree as follows:
      1.	Definitions.  Except as otherwise defined herein, capitalized terms used in this Amendment will have the meanings defined in the Agreement, and the rules of interpretation in the Agreement shall apply to this Amendment.
      2.	Shared Real Property.  Section 3.3 of the Agreement is amended by putting a comma after "collection and transmission lines" in the third to last line of that section and inserting the words "fiber optic cable and other communications facilities" immediately thereafter.
      3.	Shared Permits.  Section 3.6 of the Agreement is amended and restated in its entirety as follows:
      3.6	Shared Permits.  The construction, operation and use of certain of the Shared Facilities in each Shared Facilities Group, as well as the construction, operation and use of certain portions of each Co-Owner's Facilities, will be subject to certain shared Governmental Authorizations as set forth in parts A.3 and B.3 of Exhibit B (the "Shared Permits"), not all of which apply to the Shared Facilities.  The Shared Permits may be issued in the name of one or more of the Co-Owners, but shall, to the extent they apply to the Shared Facilities, and to the fullest extent allowed by Applicable Law, be held, used and exercised for the mutual benefit of the Co-Owners in the applicable Shared Assets Group and to facilitate the construction, use, operation, maintenance and repair of the Shared Facilities as provided herein.  The Shared Permits shall be administered in the same manner as the Shared Facilities as provided in Section 4.3.3, and, to the extent they do apply to the Shared Facilities, the Co-Owners in each Shared Asset Group shall indemnify and hold Rising Tree I and/or Operator, as applicable, harmless from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits relating to such Shared Asset Group, except to the extent resulting from the breach by Rising Tree I and/or Operator of its obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement, as applicable, or gross negligence or willful misconduct of Rising Tree I and/or Operator, as applicable.  To the extent the Shared Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, the Shared Permits shall be administered by Operator, but the Co-Owners shall take such actions as are required by the Operator or otherwise to ensure that each such Facility is operated in compliance with the requirements of such Shared Permit.  Regardless of whether or not the Shared Permits apply to Shared Facilities, Operator shall have access to all real property and real property rights, including Shared Real property and real property or real property rights owned, leased, held or otherwise controlled by any of the Co-Owners in order to administer and perform the requirements of the Shared Permits.  To the extent that events occurring at or with respect to a particular Facility constitute violations of a Shared Permit or require modifications to the Facilities owned by other Co-Owners or to the operations of such Facilities, each Co-Owner whose Facility is responsible for such violations or the requirement for such modifications shall indemnify and hold Operator and each other Co-Owner harmless from and against any claims, demands, costs, losses, obligations and liabilities, including costs imposed by or liabilities or obligations to Governmental Authorities or other third parties and lost revenues due to curtailment or other remedies ordered by a Governmental Authority, as a result of such events, including actions or omissions under, failure to comply with or violations of the Shared Permits by such Co-Owner, except to the extent resulting from the breach of obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement by or gross negligence or willful misconduct of Operator or the Co-Owner seeking to be indemnified.  If the violations of the Shared Permits or the events requiring modification of Facilities are the responsibility of more than one Co-Owner, the foregoing indemnity obligations will be equitably apportioned among the responsible Co-Owners, considering all of the facts and circumstances relating to the violations or modifications in question.  The costs of administration of the Shared Permits in connection with any violations, claimed violations or required modifications shall be borne by the responsible Co-Owners and shall not be included in the O&amp;M Services provided hereunder.  For purposes of the foregoing indemnity obligation, and notwithstanding anything in Section 17.20 or elsewhere in this Agreement to the contrary, lost revenues (including lost production tax credits and other lost tax benefits and credits) shall be considered direct, not consequential, damages and shall be recoverable by the affected Co-Owner.  Notwithstanding the foregoing, each Co-Owner in the applicable Shared Asset Group to which a Shared Permit relates shall have the right, in the case of Emergency Condition or if necessary to prevent the termination or revocation of a Shared Permit, to step in and exercise rights, perform duties and obligations and take actions under such Shared Permit as may be necessary to avoid or mitigate such Emergency Condition or termination or revocation of a Shared Permit, and shall be entitled to the same indemnification as Rising Tree I or Operator would have been under the circumstances; provided, however, that any Co-Owner exercising such step-in rights shall also indemnify and hold the other Co-Owners in the applicable Shared Assets Group from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of its gross negligence or willful misconduct in the exercise of such step-in rights.
      4.	Undivided Use Interests.  Section 4.2 of the Agreement is amended and restated in its entirety as follows:
      4.2	Undivided Use Interests.  Each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group (an "Undivided Use Interest"), which right shall be shared with the other Co-Owners in the Shared Assets Groups in accordance with their respective Proportionate Shares.  A Co-Owner's Undivided Use Interest is exercisable (a) with respect to Shared Assets constituting roads or, if applicable, the meteorological tower, as of the Execution Date, and (b) with respect to other Shared Assets, upon the Mechanical Completion Date of its Facility by such Co-Owner by providing written notice to Operator and to the other Co-Owners in the same Shared Assets Group that the Mechanical Completion Date has occurred, provided that such Co-Owner has made the payment or payments set forth in Section 4.3, and that no Event of Default has occurred and is continuing with respect to such Co-Owner.  For the avoidance of doubt, each Co-Owner whose Facility has not reached its Mechanical Completion Date as of the Effective Date (and thus whose Proportionate Share in all Shared Assets Groups is 0%) shall be deemed not to have exercised its Undivided Use Interest in any Shared Assets Group except with respect to roads or, if applicable, the meteorological tower (and as a result shall not be required to bear costs or expenses related to any Shared Assets Group except for road maintenance nor have the right to vote on matters unless otherwise set forth herein), but shall have the right to exercise its Undivided Use Interest as set forth in this Agreement.
      5.	Construction of Shared Facilities.  Section 4.3.1 of the Agreement is amended and restated in its entirety as follows:
      4.3.1	Subject to its right to reimbursement as set forth herein, Rising Tree I will design, permit and construct all of the Shared Facilities in accordance with Applicable Laws, Good Utility Practice and the description of the Shared Facilities on Exhibit B attached hereto.  Notwithstanding anything contained to the contrary in this Agreement, as of June 30, 2015, the date on which the initial portion of the payment by the other Co-Owners of reimbursement amounts due to Rising Tree I as provided in Section 4.3.2 shall occur, Rising Tree I will be deemed to have assigned, transferred and conveyed such Shared Facilities to the Co-Owners (including Rising Tree I) in the applicable Shared Asset Group in accordance with their respective Proportionate Shares, including rights under construction and supply contracts  (including the agreements set forth on Exhibit D) and contractor, supplier and/or manufacturer warranties related to such Shared Facilities, which warranties may be enforced as provided below.  HOWEVER, NOTWITHSTANDING ANYTHING HEREIN TO THE CONTRARY, RISING TREE I SHALL HAVE NO LIABILITY TO THE OTHER CO-OWNERS FOR ANY DEFECT IN THE DESIGN, CONSTRUCTION OR UTILITY OF ANY OF THE SHARED FACILITIES.  RISING TREE I MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE CONDITION, USE OR FITNESS OF ANY OF THE SHARED REAL PROPERTY OR WITH RESPECT TO THE DESIGN, CONSTRUCTION, OPERATION OR UTILITY OF ANY OF THE SHARED FACILITIES, AND HEREBY DISCLAIMS ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY OF ANY KIND WITH RESPECT TO THE SHARED REAL PROPERTY OR THE SHARED FACILITIES.  Each of the Co-Owners agrees that they will look solely to the designers, contractors, suppliers, manufacturers and other Persons who participated in the design and/or construction of the Shared Facilities with respect to any defects or breaches of contract or warranty.
      6.	Reimbursable Costs. Section 4.3.2 is amended and restated in its entirety as follows:
      	4.3.2  Rising Tree II and Rising Tree III shall each reimburse Rising Tree I for all costs and expenses incurred by Rising Tree I in designing, permitting and constructing the Shared Facilities in accordance with their respective Proportionate Shares of the costs of the Shared Facilities in each Shared Facilities Group of which they are members, in accordance with their Proportionate Shares in each such Shared Assets Group; provided, however, that for purposes of this Section 4.3.2, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date. Such reimbursements shall be made within fifteen (15) days after receipt of one or more notices from Rising Tree I, which notices shall be accompanied by  a statement of the amount to be reimbursed (including appropriate supporting documentation). 7.	Additional Co-Owners.  Section 4.6 is amended and restated in its entirety as follows:
      4.6	No Additional Co-Owners.  Except as provided herein, including Section 17.4, no Person may become a Co-Owner under this Agreement or an additional co-owner of any of the Shared Facilities, the Shared Real Property or the Shared Real Property Agreements without the prior written consent of all of the Co-Owners.  Any Person becoming a Co-Owner under this Agreement (including an assignee under Section 17.4) shall execute a joinder, the form of which is attached as Exhibit F hereto and, except for an assignee pursuant to Section 17.4, such other amendments as the Co-Owners have determined may be necessary.
      8.	Measurement.  The first paragraph of Section 5.1 is amended and restated in its entirety as follows:
      5.1	Measurement.  Energy transmitted on the Transmission Line shall be measured for each Facility in each Settlement Interval by the revenue meter for such Facility.  However, if and for the period that there is an equipment failure or other event that prevents or interferes with the operation of the separate metering, energy transmitted on the Transmission Line shall be measured and allocated between the Facilities in each Settlement Interval in proportion to their respective Metered Energy as measured by the Facility's check meter or other available meter(s) during such Settlement Interval as set forth below.  In the event that no meter data is available, such allocation shall be made in a reasonable manner on the basis of whatever data and information is available.
      9.	Engagement of Operator.  Section 6.1 is amended and restated in its entirety as follows:
      6.1	Engagement of Operator.  The Co-Owners hereby engage Operator to manage, operate, maintain and repair the Shared Facilities, to administer and take all necessary actions under the Shared Real Property Agreements, to administer and take all necessary actions under the Shared Permits, and to perform other duties pertaining to the Shared Assets (the "O&amp;M Services"), all as set forth in this Agreement; provided, however, that to the extent one or more Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by more than one of the Co-Owners, Operator will still administer and take all necessary actions under such separate Permits, but the administration of and actions taken under such separate Permits shall not be included in O&amp;M Services, but shall be paid for separately by the Co-Owners benefiting from such Shared Permits in proportion to their respective benefits.  Operator accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  Operator's authority shall be limited to performing the O&amp;M Services and such other services as may be approved by all of the Co-Owners and shall be further limited as provided in Section 6.16.
      10.	Scheduled Maintenance.  Section 6.4 is amended and restated in its entirety as follows:
      6.4	Scheduled Maintenance.  Operator shall schedule maintenance and any planned outages of the Shared Facilities so as to minimize interference with the Co-Owners' scheduled energy deliveries.  Maintenance and any planned outages of the Shared Facilities shall be scheduled, to the maximum extent possible, during scheduled maintenance outages of the Co-Owners' Facilities.  Each Co-Owner will provide to the Operator and the other Co-Owners no later than fifteen (15) Business Days after January 1 of each year a schedule of planned maintenance outages on such Co-Owner's Facility for the subsequent twelve- month period.  Scheduled outages of the Shared Facilities will be subject to the approval of all affected Co-Owners, such approval not to be unreasonably withheld.  Operator will seek to limit the duration of any outage, planned or unplanned, to the maximum extent reasonably possible consistent with Applicable Laws and Good Utility Practice.
      11.	Disputes.  Section 6.12 is amended and restated in its entirety as follows:
      6.12	Disputes.  If a Co-Owner disputes the accuracy of all or any portion of an invoice, such Co-Owner shall, nevertheless, pay the full amount of the invoice (including the disputed portion) and submit to Operator a written statement detailing the items disputed; provided, however, that if the third party contract under which the costs and expenses invoiced were incurred permits the withholding of disputed payments, and if Operator has not already paid such third party for such costs and expenses, a Co-Owner may dispute the accuracy of all or a part of an invoice by submitting a written notice of dispute and a written statement detailing the items disputed and may withhold payment to the extent allowed under the third party contract until the earlier of the resolution of the dispute or the time when payment may no longer be withheld under the third party contract, at which point the Co-Owner disputing the accuracy of an invoice shall promptly pay the disputed amount to Operator as provided above.  If the Co-Owner and Operator are unable to resolve the disputed items, the matter will be resolved in accordance with the dispute resolution provisions in Exhibit E.  If the Co-Owner prevails with respect to the disputed amounts, Operator shall refund the Co-Owner the disputed amounts, including interest on the disputed amounts at the Late Payment Rate.
      12.	Risk of Loss; Indemnity. Section 6.15 is amended and restated in its entirety as follows:
	6.15.1  As between the Co-Owners and the Operator, the Co-Owners shall be responsible for the risk of loss to the Shared Facilities or any portion thereof during the repair, management, operation and maintenance of the Shared Facilities, regardless of cause, except to the extent such loss is caused in whole or in part by the gross negligence, fraud or willful misconduct of the Operator.
	6.15.2   Operator shall not be liable to any Co-Owner for any act performed in good faith by Operator in the discharge of its duties hereunder as Operator or in the exercise of its powers and authority hereunder as Operator, including damages arising out of any curtailment of use of the Shared Facilities or the disconnection of, or the election not to disconnect, a Facility from the Shared Facilities, unless Operator has materially breached its obligations hereunder or Operator's acts or omissions constitute, gross negligence fraud or willful misconduct.
	6.15.3  Each Co-Owner shall, pro rata in accordance with its Proportionate Interest, indemnify and hold harmless Operator and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in its reasonable judgment, in good faith, or in reasonable reliance on advice of Operator's attorneys or accountants, in connection with the Shared Facilities, the Shared Real Property or this Agreement (other than as a result of the gross negligence, fraud or willful misconduct of Operator or a breach by Operator of its obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement), including reasonable attorneys' fees incurred by Operator in connection with the defense of any action based on any such alleged act or.
      13.	Limitations on Operator's Authority.  Section 6.16 is amended and restated in its entirety as follows:
      6.16	Limitations on Operator's Authority.  Notwithstanding anything herein to the contrary and in addition to the limitations set forth in Section 9.2, Operator shall have no authority to and shall not (i) amend, assign or terminate any Material Project Agreement or enter into, amend, assign or terminate any other contract or agreement on behalf of the Co-Owners, (ii) create any lien or security interest on or in any Shared Facilities, Shared Real Property or any other asset of any or all of the Co-Owners, except as expressly permitted under Section 10.6, (iii) buy, sell, convey or otherwise dispose of any Shared Facilities or Shared Real Property, (iv) incur any debt or other obligations on behalf of any or all of the Co-Owners, except short term accounts payable in connection with the O&amp;M Services or as provided in a separate written agreement among Operator and all of the Co-Owners, (v) enter into leases or subleases of or grant licenses or other rights with respect to any Shared Facilities or Shared Real Estate, or (vi) terminate or reduce any insurance coverage below that which is required under the Material Project Agreements, except in each case with the written approval of all of the Co-Owners.
      14.	Replacement of Operator.	Section 6.17 is amended and restated in its entirety as follows:
      6.17	Replacement of Operator. Operator may be removed upon the vote, without the participation of the Co-Owner that is Operator at such time, of (i) two-thirds of the Co-Owners (based on their respective Proportionate Shares) or (ii) a majority of the Co-Owners (based on their respective Proportionate Shares), upon their reasonable determination that there is Cause for removal. Notwithstanding anything contained in this Agreement to the contrary, the appointment of any new Operator under this Agreement, whether as a result of any removal of the existing Operator under this Section 6.17 or otherwise (including as a result of a transfer or assignment under Section 17.4) must be approved by a majority vote of the Co-Owners (without the participation, for the avoidance of doubt, of any Co-Owner which is being removed as the Operator under this Section 6.17).
      15.	Condemnation Awards.  Section 9.6 is amended and restated in its entirety as follows:
      9.6	Condemnation Awards.  Any condemnation or similar awards to which the Co-Owners shall become entitled under the Shared Real Property Agreements or with respect to the Shared Facilities shall be used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities unless such repair, restoration or replacement is not feasible, the condemnation or other award is insufficient to complete such repair, restoration or replacement, or all of the Co-Owners agree otherwise in writing.  If such condemnation or other awards are not used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities, they shall be divided among the Co-Owners in proportion to their respective Ownership Interests in the affected Shared Real Property and/or Shared Facilities, provided that if such sums are in reimbursement of or compensation for specific costs or damages incurred by the Co-Owners in ratios different from that of their Ownership Interests, then such different ratios shall be used in apportionment of such sums among the Co-Owners.  If the Co-Owners are unable to agree on whether or not a repair, restoration or replacement is feasible, the condemnation or other award shall be divided among and distributed to the Co-Owners as provided in the preceding sentence, and a Co-Owner wishing to do so may repair, restore or replace the affected Shared Real Property and/or Shared Facilities for its own account and use, but at its own expense, and no other Co-Owner shall have the right to use such repaired, restored or replaced property or facilities unless and until it has reimbursed the Co-Owner that effected the repair, restoration or replacement for the other Co-Owner's Proportionate Share of the costs of such repair, restoration or replacement.  Any property or facilities whose repair, restoration or replacement is paid for by less than all of the Co-Owners shall not become Shared Real Property and/or Shared Facilities, as applicable, under this Agreement unless and until such costs have been paid (including reimbursements) by all Co-Owners in accordance with their respective Proportionate Shares.
      16.	Default by Operator. Section 13.1.4 is amended and restated in its entirety as follows:
      13.1.4 Default by Operator. Operator fails to perform any of its material operation, maintenance, repair or other obligations in this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement, and such failure is not cured within ten (10) days following written notice by a Co-Owner; provided that, that if such failure by Operator creates an Emergency Condition or materially interferes with a Co-Owner's Undivided Use Interest in Shared Facilities in which it has an Ownership Interest, or operation of its Facility, only such advance written notice, if any, as may be reasonably practicable under the circumstances shall be required, but if such advance notice is not provided, written notice thereof shall be provided promptly thereafter by the Co-Owner to Operator; provided further that if the default is not reasonably capable of being cured within ten (10) days, then the Operator may be allowed such longer period as the Co-Owners mutually agree (not to exceed sixty (60) days) as may be reasonably necessary under the circumstances to cure such failure so long as the Operator is pursuing a cure with reasonable diligence.
      17.	The first sentence of Section 13.2.3 is amended and restated in its entirety as follows:
      	In addition to the remedies provided in Section 13.2.1 and 13.2.2, if the defaulting Co-Owner is the Operator, the other Co-Owners (the "Non-Defaulting Co-Owners") shall have the right, by a majority vote of the Non-Defaulting Co-Owners (based on their respective Proportionate Shares), to remove the defaulting Co-Owner from its position as Operator and to appoint one of themselves as the Operator for purposes of this Agreement. 
      18.	Assignment. Section 17.4 is amended and restated in its entirety as follows:
      	17.4 Assignment. This Agreement will be binding on and inure to the benefit of the Co-Owners and their respective successors and permitted assigns. All transfers, conveyances, assignments of Shared Facilities or Shared Real property will be subject to the terms and conditions of this Agreement, whether or not explicitly stated. Each Co-Owner may, at any time and from time to time, upon notice but without the other Co-Owners' consent or approval, (i) subject to compliance with Section 9.7, transfer or assign this Agreement and the rights and obligations under this Agreement to a Person that acquires all or substantially all of such Co-Owner's assets, including such Co-Owner's Shared Assets, and agrees to assume all obligations of that Co-Owner under this Agreement (a "Permitted Assignee"); and/or (ii) create Lender's Liens pursuant to Article XIV, provided, that, for the avoidance of doubt, any such assignment shall in all events be subject to compliance with Section 6.17 and no assignee that assumes any Co-Owner's (including any Co-Owner that is currently Operator) interest in this Agreement shall become Operator, except in compliance with Section 6.17. Otherwise, no Co-Owner shall transfer or assign all or any part of its right, title and interest in or to this Agreement or any of its rights hereunder without the prior consent of all of the other Co-Owners; provided, further, that if FERC approval is required for any such assignment or transfer, it shall not be effective unless and until FERC approval has been obtained. For purposes of this Agreement, a Change of Control of a Co-Owner shall be considered an assignment by such Co-Owner of its rights and interests under this Agreement and shall be subject to the requirements hereunder with respect to assignments. Any Permitted Assignee shall assume all of the obligations of the assigning Co-Owner hereunder and shall execute any documents which may reasonably be required by the other Co-Owners, or by Lenders, including but not limited to any document in connection with a governmental permit, approval, authorization, entitlement or other consent. Under no circumstances shall any Lender or Permitted Assignee have any greater rights of ownership or use of the Shared Assets than the rights granted to the Co-Owners in this Agreement. Any assignment permitted under this Agreement shall release the assigning Co-Owner from obligations accruing after the date that liability is assumed by a transferee, but the assigning Co-Owner shall continue to be liable to the other Co-Owners for all performance due by the assigning Co-Owner for matters that have accrued and are unsatisfied as of the date of the assignment. Any purported assignment in contravention of this Section 17.3 will be void.
      19.	Notices. Section 17.17 is amended by adding the following notice information to the existing addresses set forth for Rising Tree III:
      	with further copies to:
      
JPM Capital Corporation
10 South Dearborn, 12th Floor
Mail Code ILI 0502
Chicago, Illinois 60603-2003
Attention:  President
Telephone:  (312) 732-3416
            Email:  jpmcc.energy@jpmorgan.com and joel.spenadel@jpmorgan.com
            
Bankers Commercial Corporation 
445 South Figueroa Street, G14-200
Los Angeles, CA 90071
Attention:  2015 Vento XIII Account Officer

      20.	Amended Memorandum.  Each Co-Owner agrees to sign and acknowledge an Amended Memorandum of Rising Tree Shared Facilities Agreement ("Amended Memorandum") in the form attached to this Amendment as Exhibit E.  After it has been sighned and acknowledged by all of the Co-owners, Operator shall record the Amended Memorandum promptly in the Office of the County Recorder of Kern County, California at the expense of the Co-Owners.
      21.	Minor Additional Amendments.  The following sections are hereby amended as follows:
      (a)	Section 5.3 is hereby amended by deleting the brackets in Sections 5.3.1 and 5.3.2 and by deleting footnote 1 in Section 5.3.1.
      (b)	Section 6.10 is amended by changing "Section 17.15" to "Section 17.17" in the thirteenth (13th) line of that section.
      (c)	Section 6.13 is amended by changing "Due Date" to "due date" in the sixth (6th) line of that section.
      (d)	Section 9.1 is amended by replacing "Section 9.8" in the first line of the section with "Sections 6.16, 9.2 and 9.8".
      (e)	Section 9.2 is amended by adding the phrase "In addition to the limitations set forth in Section 6.16," at the beginning of that section.
      (f)	Section 14.1 is amended by replacing the phrase "any party providing debt or equity financing or refinancing" in the fourth (4th) line of that section with the phrase "any party providing debt, tax equity or other equity financing or refinancing".
      (g)	Section 17.3 is amended by replacing the reference to "Section 17.3" in the first line of the section with "Section 17.4".
      22.	Amendments to Definitions.
      (a)	The following definitions in Exhibit A to the Agreement are amended and restated in their entireties as follows:
      Material Project Agreements means the Interconnection Agreement, this Agreement, the LGIA Co-Tenancy Agreement, the Shared Real Property Agreements, purchase or warranty agreements relating to Shared Facilities, and such other agreements to be included upon the mutual agreement of the Co-Owners, including those on Exhibit D.
      Metered Energy means the amount of electric energy measured at a given point.
      Operator means the Co-Owner or other Person engaged by the Co-Owners to manage, operate, maintain and repair the Shared Facilities and to perform other duties pertaining to the Shared Assets as set forth in the Agreement.  If the Operator is a Co-Owner, references to "Operator" shall mean the Co-Owner acting only in its capacity as Operator and not in any other capacity.  The Operator shall initially be Rising Tree I or an Affiliate designated by it, subject to replacement pursuant to Sections 6.17 and 13.2.2. 
      (b)	The following definitions are added to Exhibit A to the Agreement in the appropriate alphabetical order:
      Cause means with respect the Operator, acting in the capacity as such, fraud, willful misappropriation of funds, gross negligence, or willful misconduct or a willful violation of a material provision of this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement applicable to the Operator, solely in that capacity.
      Mechanical Completion Date means the date that the first wind turbine of the Facility or Additional Phase in question is mechanically complete and ready to energized, commissioned and tested.
      23.	Amendments to Exhibits.
      a.	Exhibit A to the Agreement is amended by deleting the definition of "Fiber Optic Facilities".
      b.	Exhibit B to the Agreement is amended in the following respects:
      (i)	Section A.1 of Exhibit B is amended and restated in its entirety as set forth in Section 1 of Exhibit B attached hereto.
      (ii)	The heading to Section A.2.c of Exhibit B is amended and restated in its entirety to be "Collection and Distribution Lines (including fiber optic cable and other communications facilities)".
      (iii)	Tract 21 as set forth in Section 2.a of Exhibit B attached hereto shall be added to the end of Section A.2.c of Exhibit B.
      (iv) 	The legal description of Tract 7 in Section A.2.f of Exhibit B is amended and restated in its entirety as set forth in Section 3.a of Exhibit B attached hereto, and certain parcels of real property are added to Section A.2.f of Exhibit as provided in Section 3.c of Exhibit B attached hereto. The name of Tract Number 25 in Section A.2.f of Exhibit B is amended to be Tract Number 20.
      (v)	Sections A.2.j and A.2.k as set forth in Section 2 of Exhibit B attached hereto are added to Exhibit B to the Agreement after Section A.2.i and before Section A.3.
      (vi)	Section A.3.k of Exhibit B is amended and restated in its entirety as follows: "k.  Kern County Ordinance No. F589 granting Rising Tree Wind Farm LLC a franchise to construct, install, maintain, operate, repair, renew and remove underground fiber optic cable dated November 4, 2014, as partially assigned to Rising Tree Wind Farm II LLC and Rising Tree Wind Farm III LLC on March 17, 2015."
      (vii)	Section A.4.a of Exhibit B is amended and restated in its entirety as set forth in Section 4 of Exhibit B attached hereto
      (viii)	Section B.1.b of Exhibit B is amended and restated in its entirety as follows: "b.  Meteorological Tower, including instrumentation, power loop and fiber optic cable and associated splice boxes, junction boxes and terminations from the Control Building (described on Exhibit B-1) to the tower."
      (ix)	The heading to Section B.2.a of Exhibit B is amended and restated in its entirety to be "Collection and Distribution Lines (including fiber optic cable and other communications facilities)".
      c.	Exhibit B-1 to the Agreement is amended and restated in its entirety as set forth on Exhibit B-1 attached hereto.
      d.	Exhibit B-2 to the Agreement is amended and restated in its entirety as set forth on Exhibit B-2 attached hereto.
      e.	Exhibit C to the Agreement is amended and restated in its entirety as set forth on Exhibit C attached hereto.
      f.	Exhibit D to the Agreement is amended and restated in its entirety as set forth on Exhibit D attached hereto.
      24.	No Other Amendment.  Except as expressly set forth in this Amendment, the Agreement is unmodified and continues in full force and effect.  From and after the date hereof, references to the Agreement will be understood to refer to the Agreement as amended by this Amendment.
      25.	Governing Law. This Amendment shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      26.	Counterparts. This Amendment may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument. It will not be necessary in making proof of this Amendment to produce or account for more than one counterpart.
      
[The next page is the signature page.]
      To evidence its acceptance of this Amendment, and intending to be legally bound, each Co-Owner has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:


EXHIBIT B
AMENDMENTS TO EXHIBIT B TO THE AGREEMENT
1.	Amended and restated Section A.1:
1.	Shared Facilities
a.	Project Substation:  See Exhibit B-1 attached hereto.
b.	Transmission Line:  See Exhibit B-2 attached hereto.
c.	Supervisory Control and Data Acquisition (SCADA) System, as further described on Exhibit B-2 attached hereto, excluding feeder relays, breakers and collection system fiber optic cables for the individual wind turbine generators
d.	Roads
e.	O&amp;M Building
f.	Condor Detection Tower
g.	Meteorological Tower, including instrumentation, power loop and fiber optic cable and associated splice boxes, junction boxes and terminations from the Control Building (described on Exhibit B-1) to the tower
h.	Environmental Mitigation Parcels
2.	Addition to Section A.2.c;
a.	The following parcels are added to Section A.2.c:
Tract 21
The Southwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat of the survey of said land, approved by the Surveyor General October 7, 1936.
Except one half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by the M &amp; R Sheep Co. in deed dated August 4, 1955, recorded in Book 2519, Page 298 of Official Records.
APN:  237-185-07
3.	Amended and restated description in Section A.2.f;
a.	The description of Tract 7 is amended and restated in its entirety as follows:
   Tract 7
The East half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.
APN:  237-132-20
b.	The name of Tract Number 25 is amended to be Tract Number 20.
c.	The following parcels are added to Section A.2.f:
Tract 21
That portion of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:
Starting at the northwest corner of the west half of the southeast quarter of the southeast quarter of the southeast quarter of said Section 2; thence in a southerly direction, 132 feet to the point of beginning; thence easterly 330 feet; thence Southerly 132 feet; thence westerly 330 feet; thence northerly 132 feet to the point of beginning.
Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938 as reserved by the United States of America, in Patent recorded February 24, 1960 in Book 3242, Page 151 of Official Records.
APN 237-132-28
3.	New Sections A.2.j and A.2.k:
j.	Meteorological Tower (RST-3A)
Tract 1
The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.
Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.
APN:  237-284-01
k.	Environmental Mitigation Parcels
 Tract 1
The northwest quarter of the southwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.
Except therefrom 1/2 of all oil, gas and minerals and hydrocarbon substances, in and under said land, as excepted in deed dated August 4, 1955 from M &amp; R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 283 of Official Records; which further provides as follows:
The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the grantor, its successors and assigns, from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent or neighboring lands and/or from conducting subsurface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the grantors in said deed.
APN:  237-286-01
Tract 2
The west 1/2 of the southwest 1/4 of the northeast 1/4 of the southeast 1/4 of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.
Excepting therefrom all oil, gas and other mineral deposits, in said land, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 13, 1960 in Book 3302, Page 499 of Official Records.
APN:  237-152-12



4.	Amended and restated Section A.4.a:
a.	O&amp;M Building:  Rights of Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC (collectively, the "Sublessees") under that certain Sublease Agreement dated February 6, 2015 by and between the Co-Owners, as sublessors, and the Sublessees, as sublessees.  


EXHIBIT B-1
PROJECT SUBSTATION SHARED FACILITIES
* One (1) 230kV Dead End Structure including the following equipment and material:
o Tapered Tubular Structural Steel and associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Lightning Surge Arrestors, 180kV, 144kV MCOV
o Three (3) Compression Tees, 795 ACSR to NEMA 4-Hole Pad
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Six (6) Welded Terminal Adaptors, 1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle
o Five Hundred (500) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* Three (3) 230kV Single Phase Bus Supports, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle

* One (1) 230kV, 1200A, Ganged 3-Phase, Motor Operated Disconnect Switch including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor, associated hardware, and switch grounding platform
o Six (6) Station Post Insulators, 230kV, TR-308
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Sixty (60) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* One (1) 230kV, Metering Station, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Equipment control wiring and interconnecting conduit including Junction Boxes
o Three (3) 230kV, 600:5 Single Ratio Dual Winding, Instrument Current Transformers
o Three (3) 230kV, 1200/2000:1:1 Dual Winding, Instrument Potential Transformers
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Cable Spacer Tees, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Aluminum Cable Support Brackets
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor

* 230kV Substation Summation Bus including the following equipment and material:
o One (1) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Three (3) Station Post Insulators, 230kV, TR-308
* Three (3) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Three (3) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Thirteen (13) 230kV, Single Phase Low Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Thirteen (13) Station Post Insulators, 230kV, TR-308
* Thirteen (13) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Six (6) 230kV, Single Phase High Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Six (6) Station Post Insulators, 230kV, TR-308
* Six (6) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Four (4) 230kV, Three Phase High Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Twelve (12) Station Post Insulators, 230kV, TR-308
* Twelve (12) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Three (3) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Nine (9) Station Post Insulators, 230kV, TR-308
* Nine (9) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Nine (9) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Ninety (90) Feet of 1272 kcmil AAC (Narcissus) conductor
o Nine (9) 230kV, Aluminum A-Frames, which includes:
* Eighteen (18) Tee Connector, 4" IPS Main to 3" IPS Tap, 15
* Nine (9) Tee Connector, 4" IPS Main to 2-3" IPS Taps, 15
* Two Hundred Ten (210) Feet of 3" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 4" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 795 kcmil ACSR (Drake) Conductor

* Above and Below Ground Raceways including the following materials
o Conduits, fittings, and connectors connecting shared facility equipment or apparatus to other Substation components located within the Substation
o Cable Trench, Trench Covers, Trench Hangers, and Trench Grounding Materials

* Substation Ground Grid including the following materials
o Twenty Three Thousand (23,000) Feet of #4/0 kcmil 19 Strand, Bare Copper 
o Exothermic Cross connections ~ including molds, shots, and accessories
o Exothermic Tee connections ~ including molds, shots, and accessories
o Exothermic Lug connections ~ including molds, shots, and accessories
* Substation Lighting and Lightning Protection including the following materials
o Eight (8) Static Masts, 90' Tall with provision for yard lighting
o Fifteen (15) 400W, HPS Flood Lights

* Substation Fencing including the following materials
o Fifteen Hundred (1500) Feet of fence, 8' tall, 7' mesh with three strands of barbed wire
o Fence posts, gates, hangers, and grounding materials

* Control Building and all equipment and fixtures located therein except feeder relays, breakers and collection system fiber optic cables for the individual wind turbine generators


EXHIBIT B-2
TRANSMISSION LINE SHARED FACILITIES
3.99-mile 220kV generation tie-line, optical ground wire on the generation tie-line for the primary telecommunications path, including one or more single-mode fiber optic cables for the diverse telecommunications path and SCADA System, appurtenant structures, and facilities, including the following:
* Forty Two (42) transmission structures including the following materials:
o Forty Two (42) tubular steel poles
o One Hundred Twenty (120) 230kV 30K Insulators
o One Hundred Twenty (120) Suspension Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty (40) 230kV 50K Insulators
o Forty (40) Dead End Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty Five (45) OPGW Hardware Assemblies
o Four (4) Dead End Hardware Assemblies for 3/8" Shield Wire
o Structure grounding rods and associated hardware
o Structure signage
* Seventy Thousand Two Hundred (70,200) Feet of 795 KCMIL ACSR "Drake" Conductor
* Twenty Three Thousand (23,000) Feet of 48 Fiber, Single Mode OPGW, DNO 6211
* Three (3) OPGW "Coyote" Splices including splice case, splices and mounting hardware. 
* One Thousand Four Hundred and Fifty (1,450) Bird Flight Diverters
* Two Hundred (200) Feet of 3/8" HS 7-Strand Shield Wire
* Twenty Five Thousand Five Hundred (25,500) Feet of ADSS Fiber Optic Cable
* Twenty Two Thousand (22,000) Feet of 1 1/4" inner duct
* Splice box/pull box, including splices, for cable to AT&amp;T
* Carbon fiber junction (CFJ) pedestal
* Fifty (50) feet of 2" Schedule 40 PVC conduit to/from CFJ pedestal to house both fiber optic cable and copper conductors


EXHIBIT C
INTERESTS AND PROPORTIONATE SHARES
A.	Undivided Ownership Interests
      The Ownership Interest of each Co-Owner in each Shared Assets Group shall be as set forth in Table C below.  
B.	Proportionate Shares
      The Proportionate Share of each Co-Owner shall be as set forth in Table C below. 
C.	Shared Asset Groups
RST Shared Facilities Group (All Co-Owners)
Equipment Name
RST I
RST II
RST III
Project Substation
40%
10%
50%
Transmission Line
40%
10%
50%
Roads in Sections 9, 10, 11, 15 and 16
40%
10%
50%
O&amp;M Facility
40%
10%
50%
Environmental Mitigation Parcels
70%
15%
15%
All other Shared Facilities
40%
10%
50%

RST I/II Shared Facilities Group (Rising Tree I and Rising Tree II only)
Equipment Name
RST I
RST II



Roads in Sections 1, 2, 35 and 36
80%
20%
Met Tower RST 1-B/RST 2
80%
20%

EXHIBIT D
MATERIAL PROJECT AGREEMENTS
High Voltage Engineering, Procurement and Construction Contract by and between Blattner Energy Inc., a Minnesota corporation and Rising Tree I, dated as of February 3, 2015.
Operations and Maintenance Facility Engineering, Procurement and Construction Contract, dated as of January 22, 2015, between Rising Tree I, and Wattenbarger Wells Construction, Inc. DBA WWCI, a California corporation

EXHIBIT E
FORM OF AMENDED MEMORANDUM

RECORDING REQUESTED BY
AND WHEN RECORDED MAIL TO:

RISING TREE WIND FARM LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
													

AMENDED MEMORANDUM OF
SHARED FACILITIES AGREEMENT AND
GRANT OF RIGHTS
      THIS AMENDED MEMORANDUM OF SHARED FACILITIES AGREEMENT AND GRANT OF RIGHTS (this "Memorandum"), is made and entered into as of June 29, 2015 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.   Rising Tree I, Rising Tree II and Rising Tree III are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners". The Co-Owners are collectively referred to herein as "Parties" and individually as a "Party".
      A.	The Parties have entered into that certain unrecorded Rising Tree Shared Facilities Agreement dated December 3, 2014 (the "Agreement"), which affects (i) certain real property more particularly described in Exhibit A attached hereto and made a part hereof (such real property collectively, the "Property").  A memorandum of the Agreement was recorded in the Official Records of Kern County, California on December 10, 2014, as Instrument No. 0214152759.
      B.	The Parties have entered into a First Amendment to Rising Tree Shared Facilities Agreement of even date herewith (the "Amendment").  References herein to the Agreement mean the Agreement as amended by the First Amendment, unless the context requires otherwise.
      C.	The Parties have executed and acknowledged this Amended Memorandum and are recording the same for the purpose of providing constructive notice of the Agreement, as amended, and the Parties' rights thereunder.  Capitalized terms used and not defined herein have the meaning given the same in the Agreement.
NOW, THEREFORE, the Parties hereby agree as follows:
      1.	Grant of Rights.  Subject to the terms and conditions of use set forth in the Agreement and the terms and conditions in each of the Shared Real Property Agreements:
      (c) each Co-Owner of Shared Facilities and/or Shared Real Property in a Shared Assets Group (a "Granting Co-Owner") hereby sells, grants, assigns, transfers and conveys to the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such Shared Assets Group, including such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Asset Group, such that each such Co-Owner shall own an undivided interest, as a tenant-in-common, in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B attached to the Agreement; 
      (d) each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group equal to its Proportionate Share therein, which right is exercisable upon the Commissioning Date of its Facility, all as more particularly set forth in the Agreement.  In addition, each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Undivided Use Interest as provided in the Agreement, and (b) over any Shared Real Property underlying or required for the use of the Shared Facilities in which such Co-Owner has an Undivided Use Interest, subject to the terms and conditions contained in the Agreement. 
      2.	Term. This Agreement is effective as of December 3, 2014 and shall remain in force and effect until (i) the earliest of (v) December 3, 2049, (w) the expiration date of the Interconnection Agreement,  (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
      3.	Other Provisions. The rights granted hereunder are of the nature, and are subject to the requirements and limitations, set forth in the Agreement. The Agreement also contains various covenants, obligations and rights of the Parties, including, without limitation, provisions relating to use, conduct of operations, assignment, ownership of improvements, fees, default, cure rights and lender protections.
      4.	Purpose of this Memorandum. The terms, conditions and covenants of the Agreement are incorporated herein by reference as though fully set forth herein. This Memorandum does not supersede, modify, amend or otherwise change the terms, conditions or covenants of the Agreement, and this Memorandum shall not be used in interpreting the terms, conditions or covenants of the Agreement. In the event of any conflict between this Memorandum and the Agreement, the Agreement shall control.
      5.	Binding on Successors and Assigns.  The Parties hereby agree that all of the covenants, consents and agreements contained in the Agreement touch and concern the Property and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Party's present or future estate or interest therein and upon each of the Parties, their respective successors and assigns as holders of an estate or interest in said real estate (including without limitation, any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Parties and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
      6.	Counterparts. This Memorandum may be executed in counterparts, each of which shall be deemed an original and all of which when taken together shall constitute one and the same document.
[SIGNATURES ON NEXT PAGE]
       
IN WITNESS WHEREOF, the Parties have caused this Memorandum to be executed as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC
 __________________________________________
By:
Title:


	
By:
Title:
[Add notarial acknowledgments]

EXHIBIT A
DESCRIPTION OF THE PROPERTY





1 Conform to percentage in section 5.3.2.
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------

Execution Copy








	-2-






	A-6



	B-43


	C-1




	D-1


	E-2


F-2


G-5

18


EXECUTION VERSION






	B-3







B-2-1


C-1


D-1



E-5</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>555</filing_id>
      <filing_title>Amended SFA</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-08-29</current_effective_date>
      <ferc_order_date>2015-08-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Co-Tenancy Agreement</record_title>
      <record_content_desc>Rising Tree II</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-08-29</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AMENDED AND RESTATED
LARGE GENERATOR INTERCONNECTION AGREEMENT

CO-TENANCY AGREEMENT

by and among

Rising Tree Wind Farm LLC, 

Rising Tree Wind Farm II LLC,

Rising Tree Wind Farm III LLC,



and 
Rising Tree Wind Farm LLC, as the Manager

October 24, 2014 

ARTICLE I	DEFINITIONS	2
1.1	Certain Definitions	2
ARTICLE II	CO-TENANCY RIGHTS AND OBLIGATIONS	5
2.1	Assignment of Interconnection Rights	5
2.2	Use of LGIA	5
2.3	Maximum Capacity	5
2.4	Curtailment	5
2.5	LGIA Expenses	6
2.6	Liquidated Damages; Credits; Refunds	6
2.7	Joint and Several Liability	7
2.8	Projected Capacity	7
2.9	Indemnity	7
2.10	Taxes	7
2.11	Operation and Management	7
2.12	Events of Default; Default	8
2.13	Remedies	8
2.14	Disconnection	9
2.15	Equitable Relief	9
2.16	Dispute Resolution	9
2.17	Effect of Force Majeure	11
2.18	Notice of Default	11
2.19	Tax Classification; No Partnership	11
ARTICLE III	MANAGER	11
3.1	Appointment of Manager; Manager Services	11
3.2	Communications	12
3.3	Indemnification of Manager	12
3.4	Books and Records; Reporting Requirements	12
3.5	Replacement of Manager	13
3.6	Management Fee	13
3.7	Discrimination	13
3.8	Performance	13
3.9	Limitation of Liability	13
ARTICLE IV	TRANSFERABILITY	13
4.1	General Restriction	13
4.2	Co-Tenant's Right to Encumber	14
4.3	Certain Rights of Financing Party	14
4.4	FERC Approval	15
4.5	Number of Co-Tenants	15
ARTICLE V	MISCELLANEOUS PROVISIONS	15
5.1	Notices	15
5.2	Choice of Law	15
5.3	Entire Agreement	15
5.4	Interpretation	15
5.5	Waiver	16
5.6	Third Party Beneficiaries	16
5.7	Counterparts; Facsimile Signatures	16
5.8	Amendments; Term	16
5.9	Further Assurances	16
5.10	Replacement	16
5.11	WAIVER OF RIGHT TO PARTITION	16

AMENDED AND RESTATED
LARGE GENERATOR INTERCONNECTION AGREEMENT
CO-TENANCY AGREEMENT
         This AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT (this "Agreement") is made and entered into as of October 24, 2014, (the "Effective Date") by and among Rising Tree Wind Farm LLC, a Delaware limited liability company ("RST"), Rising Tree Wind Farm II, LLC, a Delaware limited liability company ("RST II"),  Rising Tree Wind Farm III LLC, a Delaware limited liability company, successor in interest to Addison Energy Resources LLC, a Delaware limited liability company ("RST III") (each a "Co-Tenant" and collectively the "Co-Tenants"); and Rising Tree Wind Farm, LLC (the "Manager"); each also a "Party" and collectively, the "Parties".  
RECITALS
         A.	The Parties executed that certain Large Generator Interconnection Agreement Co-Tenancy Agreement dated as of August 19, 2013 ("Original Agreement").  The Parties desire to amend and restate the Original Agreement as stated herein.
         B.  The Co-Tenants are developing and will construct, own and operate energy projects with an aggregate Nameplate Capacity  of up to 198 MW (collectively, the "Project") in the Mojave and Tehachapi areas of Kern County, California.
         C.	Each Co-Tenant will construct, own, and operate a separate phase (each, a "Phase") of the Project.  
         D.	The Phases to be constructed, owned and operated by each of RST, RST II and RST III are projected to have Nameplate Capacities of 79.2 MW, 19.8 MW and 99 MW, respectively.
         E.	The Co-Tenants, as tenant-in-common, and Manager, as agent for the Co-Tenants, have entered into that certain First Amended Large Generator Interconnection Agreement with Southern California Edison Company ("SCE") and the California Independent System Operator Corporation (the "CAISO"), dated as of September 5, 2014, together with all amendments, agreements, schedules, appendices, exhibits and other documents ancillary thereto (including the Meter Service Agreement and the Participating Generator Agreement) (all as may be amended or supplemented, the "LGIA") for the purpose of securing interconnection rights for the Project and each of the Phases.
         F.	The Parties desire to enter into this Agreement to set forth the rights and obligations of each of the Parties under the LGIA.
         NOW, THEREFORE, in consideration of the foregoing and the agreements and covenants contained herein, and other good and valuable consideration, the receipt and sufficiency of which are hereby acknowledged, the Parties hereto agree as follows:
AGREEMENT
ARTICLE I
DEFINITIONS
1.1	Certain Definitions.  Capitalized words and phrases used herein shall have the following meanings, or the meanings given in the Sections of this Agreement in which they are defined, unless the text expressly or by necessary implication requires otherwise.
      "Active Co-Tenant" means each Co-Tenant which has notified the Manager in writing that its Phase, as of any date of determination, is (or will be, at any time in the subject month) interconnected to and supplying electricity to the Windhub Substation.
      "Agreement" has the meaning given in the preamble to this Agreement.
      "CAISO" has the meaning given in the recitals to this Agreement.
      "Claims" has the meaning given in Section 2.9(a).
      "Co-Tenancy Percentage Interest" means, with respect to each Co-Tenant, the percentage of the Interconnection Capacity, as specifically set forth on Exhibit A hereto, as such exhibit may be amended from time to time.
      "Co-Tenant" has the meaning given in the preamble to this Agreement.
      "Construction Commencement Date" means, with respect to each Co-Tenant, the earlier of: (i) the date that such Co-Tenant commences construction of its Phase and (ii) the date of closing of construction financing for such Co-Tenant's Phase.
      "Distribution Upgrades" has the meaning given in the LGIA.
      "Effective Date" has the meaning given in the preamble to this Agreement.
      "Event of Default" has the meaning given in Section 2.12.
      "FERC" means the Federal Energy Regulatory Commission or any successor agency.
      "Financing Party" means (i) any and all lenders providing senior or subordinated construction, interim or long-term debt financing or refinancing (including hedging counterparties) for the development, construction, purchase or operation of a Phase, and (ii) any and all equity or tax investors providing financing or refinancing for a Phase or purchasing equity ownership interests in a company owning a Co-Tenant or a Phase, including through a lease financing structure, and any trustee or agent acting on behalf of any such lenders, equity or tax investors, or lease equity providers.
      "Force Majeure" means unforeseeable causes, such as acts of God, the enforcement or adoption of legislation or lawful rules, regulations or orders of any governmental body, acts of the public enemy, riots, strikes, or other industrial disturbances, labor or material shortages, fires, explosions or other causes of a similar nature which are beyond the reasonable control of the Parties and which wholly or partly prevents a Party from performing its obligations under this Agreement.
      "FPA" has the meaning given in Section 2.11.
      "Indemnified Co-Tenant" has the meaning given in Section 2.9(a).
      "Indemnifying Co-Tenant" has the meaning given in Section 2.9(a).
      "Interconnection Capacity" means the interconnection capacity expressed in MW provided for pursuant to the LGIA.
      "Interconnection Customer" has the meaning given in the LGIA.
      "Interconnection Customer Interconnection Facilities" has the meaning given in the LGIA.
      "Interconnection Facilities" has the meaning given in the LGIA.
      "Interconnection Rights" means the rights and interests under the LGIA.
      "Interest Rate" means the highest prime rate published in the Wall Street Journal Money Rates Table as of the date of calculation plus 200 basis points.  
      "Laws" means all applicable laws, statutes, ordinances, rules, regulations, decrees, orders, permits, requirements, judgments, decisions and injunctions issued by any governmental authority, including laws relating to health, safety and the environment.
      "LGIA" has the meaning given in the recitals to this Agreement.
      "LGIA Operating Expenses" means all expenses due and payable under the LGIA, including expenses incurred in connection with complying with the LGIA (including affirmative covenants with respect to maintenance of the Project and the Interconnection Customer Interconnection Facilities, communications with CAISO, insurance, and reporting), plus the Management Fee, but excluding the TO Construction Costs.
      "Management Fee" has the meaning given in Section 3.6.
      "Manager" has the meaning given in the preamble to this Agreement.
      "Maximum Nameplate Capacity" means, for each Phase, the corresponding nameplate capacity amount listed in Exhibit A. 
      "Mortgage" has the meaning given in Section 4.2.
      "MW" means a megawatt or megawatts, as the context may require.
      "Nameplate Capacity" means, for each Phase, as of any date of determination, the aggregate sum of the nameplate capacity ratings of each wind turbine generator included in such Phase that has been interconnected to the Windhub Substation pursuant to the LGIA.
      "NERC" means the North American Electric Reliability Council or its successor organization.
      "Network Upgrades" has the meaning given in the LGIA.
      "Participating TO Interconnection Facilities" has the meaning given in the LGIA.
      "Party" and "Parties" have the meanings given in the preamble to this Agreement.
      "Person" means any individual or entity, and the heirs, personal representatives, successors and assigns of such individual or entity where the context so permits.
      "Phase" has the meaning given in the recitals to this Agreement.
      "Phase Controlled Assets" means, for each Co-Tenant, any of the assets comprising its respective Phase or Phases, the corresponding Phase Real Property and related Phase agreements and contractual arrangements.  For the avoidance of doubt, the Phase Controlled Assets shall exclude the LGIA.
      "Phase Real Property" means, for any Phase, the real property on which such Phase is located.
      "Point of Interconnection" has the meaning given in the LGIA.
      "PPA" means a an power purchase Agreement or other form of bundled agreement for the sale of power and renewable energy credits entered into by any Co-Tenant with respect to a Phase (or any replacement thereof).
      "Project" has the meaning given in the recitals to this Agreement.
      "Requesting Co-Tenant" has the meaning given in Section 4.3(d).
      "RST" has the meaning given in the Preamble.
      "RST II" has the meaning given in the Preamble.
      "RST III" has the meaning given in the Preamble.
      "Rules" has the meaning given in Section 2.16(a).
      "SCE" has the meaning given in the recitals to this Agreement.  
      "Sharing Ratio" means, with respect to each Active Co-Tenant, as of any date of determination, the ratio equal to the  Nameplate Capacity of the Active Co-Tenant's Phase divided by the sum of the  Nameplate Capacities of all Active Co-Tenant's Phases. 
      "SFA" has the meaning given in Section 3.5.
      "Third Party Controversy" has the meaning given in Section 2.16(c).
      "TO Construction Costs" has the meaning given in Section 2.5(a).
      "Transfer" means, with respect to any asset, the sale, assignment, transfer, pledge, encumbrance, transfer, or other disposition of, either voluntarily, by operation of law or otherwise, or such asset.
      "Windhub Substation" means the substation owned by SCE (including the revenue meter), located in Mojave, Kern County, California.
ARTICLE II
CO-TENANCY RIGHTS AND OBLIGATIONS
2.1	Assignment of Interconnection Rights.  RST hereby assigns, transfers, conveys and delivers to the Co-Tenants, as tenants in common according to each Co-Tenant's Co-Tenancy Percentage Interest, and the Co-Tenants hereby accept, as tenants in common, all of its right title and interest in and to the Interconnection Rights and the LGIA.  Upon the conveyances described in this Section 2.1, the Co-Tenants shall hold title and interest in and to the Interconnection Rights and the LGIA as tenants-in-common and not as partners or joint venturers.  
2.2	Use of LGIA.  The LGIA shall be held and used solely to permit the interconnection of electricity generated by or on behalf of a Phase owned by a Co-Tenant (or by such Co-Tenant's successors, assigns or affiliates) at the Windhub Substation.  Each Co-Tenant shall have an undivided ownership interest as tenant-in-common in the Interconnection Customer and the LGIA equal to its Co-Tenancy Percentage Interest, and each Active Co-Tenant shall possess an undivided right to enjoy all of the rights of the Interconnection Customer under the LGIA, including use of the Interconnection Customer Interconnection Facilities.  Subject to Section 4.5 and to obtaining all necessary approvals, including, without limitation, from CAISO and SCE, the Parties shall amend this Agreement and the LGIA to add one (1) Co-Tenant proposed by RST III and one (1) Co-Tenant proposed by RST.
2.3	Maximum Capacity.  Only Active Co-Tenants shall have the right to interconnect their Phases at the Windhub Substation.  No Active Co-Tenant shall interconnect its respective Phase to the Windhub Substation to the extent such interconnection will result in such Active Co-Tenant having a Phase with Nameplate Capacity in excess of its Maximum Nameplate Capacity.  To the extent that conditions exist which result in an Active Co-Tenant generating energy from its respective Phase in excess of its Maximum Nameplate Capacity, then such Active Co-Tenant shall curtail the operation of its Phase so as not to exceed its Maximum Nameplate Capacity.  
2.4	Curtailment.  In the event of any curtailment of interconnection or transmission services at the direction of CAISO, such curtailment shall be allocated pro rata among the Active Co-Tenants according to each Active Co-Tenant's Sharing Ratio; provided, however, that the Manager may curtail (to the extent permitted under its operating agreement) on a non-pro rata basis if (a) it reasonably determines that a pro rata allocation among Active Co-Tenants is not practical under the circumstances with respect to the operation of the  Project or that non-pro rata allocation of such curtailment is necessary with respect to the prudent operation of the Project or (b) such allocation is necessary to comply with the LGIA or any PPA, and, in each case, that such non-pro rata allocation will not result in a default under the LGIA or any PPA to which a Co-Tenant is a party.  In the event of any curtailment of interconnection or transmission services other than at the direction of CAISO (including at the direction of SCE as the purchaser under any PPA when the basis of such curtailment is congestion arising from the ordinary course of operations of SCE's transmission system, and as a result of actions or omissions caused by any Active Co-Tenant (including any default under the LGIA or an applicable PPA)), all such curtailment shall be allocated to the applicable Active Co-Tenant and such Active Co-Tenant will be responsible for all costs, liabilities and damages relating to such curtailment.  
2.5	LGIA Expenses.  Each Co-Tenant hereby confirms its obligation to share in the periodic payment of all expenses incurred under the LGIA, and agrees to pay its respective share of such expenses as and when due and payable as follows:
(a)	TO Construction Costs. RST shall  provide initial funding for all payments (including the provision of any payment security required under the LGIA) required to design, procure, and construct the Participating TO Interconnection Facilities pursuant to the LGIA (including Appendix A thereof) ("TO Construction Costs") 
(c)	LGIA Operating Expenses.  RST shall be responsible for payment of all LGIA Operating Expenses until such time as other Co-Tenants become Active Co-Tenants.   
(d)	Payment of LGIA Operating Expenses.  The Manager shall, as authorized agent for each Co-Tenant, administer the collection and payment of the LGIA Operating Expenses.  Each Active Co-Tenant obligated to pay LGIA Operating Expenses shall pay each invoice for LGIA Operating Expenses promptly upon receipt of written notice thereof from the Manager, but in any event within thirty (30) days of such receipt or such earlier time as required by the LGIA. If any Co-Tenant fails to make payment of its required share of the LGIA Operating Expenses when due, the Manager or any other Co-Tenant may make such payments to avoid a breach or default under the LGIA and such paying party shall be entitled to reimbursement by the non-paying Co-Tenant (together with interest on such amounts accrued at the Interest Rate beginning on the date that such payment was due) following delivery of written evidence of such payment having been made.
2.6	Liquidated Damages; Credits; Refunds.  To the extent that the Manager receives any damages, credits or refunds pursuant to the LGIA, the Manager shall promptly remit such damages, credits or refunds to the Active Co-Tenants according to each Active Co-Tenant's Sharing Ratio (unless such damages, credits or refunds accrue to a specific Active Co-Tenant, in which event the Manager shall promptly remit them to such Active Co-Tenant); provided, however, that damages, credits, or refunds allocated to a Co-Tenant shall first be offset against any amounts owing to any other Co-Tenants.
2.7	Joint and Several Liability.  Each Co-Tenant shall be jointly and severally liable for (i) any payments due under the LGIA and (ii) the performance of the obligations and duties imposed on the Interconnection Customer by the LGIA.  
2.8	Projected Capacity.  Each Co-Tenant shall notify the Manager in writing, no later than thirty (30) days before such Co-Tenant's Construction Commencement Date, of the projected Maximum Nameplate Capacity of its Phase.  The Parties hereby agree to amend Exhibit A, if necessary, to reflect each Co-Tenant's projected nameplate capacity as set forth in its notice to the Manager pursuant to this Section 2.8, but subject to Section 2.3.  
2.9	Indemnity. 
(a)	Each Co-Tenant (an "Indemnifying Co-Tenant") shall indemnify, defend and hold harmless the other Co-Tenants (each, an "Indemnified Co-Tenant") from and against any and all losses (including all lost revenues under applicable PPAs and the after tax value of lost production tax credits, if applicable), damages, liabilities, claims, judgments, liens, penalties, costs and expenses, including, without limitation, reasonable attorneys' and consultants' fees (collectively, "Claims"), which may be imposed upon or incurred by such Indemnified Co-Tenant or asserted against such Indemnified Co-Tenant in connection with any breach of this Agreement or the LGIA or resulting from any other negligent action or omission by the Indemnifying Co-Tenant under or in connection with the LGIA and affecting the rights of the Indemnified Co-Tenants thereunder or the Interconnection Facilities.  In addition, each Co-Tenant and the Manager shall be entitled to contribution from any Co-Tenant for costs incurred on behalf of such Co-Tenant or such Co-Tenant's Phase.  
(b)	The Manager shall indemnify, defend, and hold harmless the Co-Tenants from any Claims which may be imposed upon or incurred by such Co-Tenants as a result of fraud, willful misconduct, or gross negligence of the Manager.
2.10	Taxes.  Each Co-Tenant shall pay all real and personal property taxes and assessments, general or special, levied against its Phase or the facilities and fixtures located thereon, except for any taxes or assessments that are LGIA Operating Expenses.  All such taxes and assessments shall be paid before delinquency and before any fine, interest or penalty shall become due or be imposed for their non-payment; provided if a Co-Tenant in good faith contests or disputes such taxes or assessments and furnishes to the other Co-Tenants a bond or other acceptable security in an amount sufficient to discharge all such contested taxes or assessments, such Co-Tenant will not be in default under this Section 2.10 for failing to timely pay such contested taxes or assessments.
2.11	Operation and Management.  
(a)	Each Co-Tenant shall operate and maintain its Phase Controlled Assets acting as a prudent operator and manager and otherwise (a) in accordance with the terms of the LGIA, (b) in accordance with good operating and utility industry practices, (c) in compliance with all applicable Laws, including but not limited to the Federal Power Act, as amended ("FPA"), and all rules, regulations, and orders issued by the FERC pursuant to the FPA, (d) in compliance with the CAISO Tariff, including the rules, protocols, procedures and standards attached thereto, as the same may be amended from time to time and approved by FERC, (e) in compliance with the rules, protocols, procedures and standards of NERC, and (f) without causing a material adverse effect on the LGIA, any Party or any of the other Co-Tenants' respective Phases. 
(b)	Each Co-Tenant shall comply with its obligations under the LGIA, including with respect to its obligations to fund LGIA Operating Expenses.  Each Co-Tenant shall obtain and maintain status as an "exempt wholesale generator" or a "qualifying facility" under applicable Law.
(c)	Each Co-Tenant shall cooperate with and timely respond to Manager as agent for the Co-Tenants under the LGIA, and shall provide Manager such information required by Manager to comply with its obligations under the LGIA.
2.12	Events of Default; Default.  The following shall constitute "Events of Default": 
(a)	a Co-Tenant, after receiving written notice pursuant to Section 2.18 of its default or potential default (including any "Default" under the LGIA), fails to commence and diligently pursue the cure of such default within ten (10) days of receiving such notice, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12(a) if it commences to cure such default within (20) days after receiving notice of the default; and   
(b)	a Party fails to perform its obligations under this Agreement or the LGIA  in any material respect, and such Party fails to cure such default within (i) ten (10) days after receipt of written notice of a payment default, or (ii) twenty (20) days after receipt of written notice of any non-payment default, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12(b) if it commences to cure such default within twenty (20) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed sixty (60) days, including the initial cure period.
2.13	Remedies.  In addition to all other remedies permitted by Law or under this Agreement (all of which shall be cumulative), following an Event of Default, each non-defaulting Party and its Financing Parties or other equity interest holders shall have the right, but not the obligation, to perform the obligations of the defaulting Party, and the defaulting Party shall reimburse the performing Parties for their direct and indirect expenses which they incurred in rendering the performance, plus interest at the Interest Rate. 
2.14	Disconnection.  
(a)	If a Co-Tenant fails to cure any default under this Agreement or the LGIA within twenty five (25) days after receiving notice of such default, the Manager may disconnect the breaching Co-Tenant's Phase from the Windhub Substation (i) after obtaining written approval to do so from those Active Co-Tenants then not in default and having a combined Sharing Ratio in excess of fifty percent (50%) of the combined Sharing Ratio of all Active Co-Tenants then not in default, or (ii) without approval from Active Co-Tenants but only to the extent necessary to prevent or cure a "Default" under the LGIA; provided if the nature of the defaulted obligation or obligations is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then the Manager may not disconnect the defaulting Co-Tenant's Phase if such Co-Tenant commences to cure such default within twenty five (25) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed eighty five (85) days, including the initial cure period; provided further, that in no event shall any cure period hereunder extend beyond any applicable cure period under the LGIA.
(b)	The Manager may also disconnect any Phase, in its sole discretion, in order to prevent damage to the Co-Tenants' Phases, the Interconnection Facilities or the property of SCE or as otherwise needed to prevent or mitigate technical issues affecting the Phases; the Manager shall immediately notify the Co-Tenants of any such disconnection.
2.15	Equitable Relief.  The Parties agree that damages may be an inadequate remedy for a breach by the Manager or any other Party of its respective obligations under this Agreement, and that each Party shall be entitled to seek injunctive and other equitable relief, including specific performance, against any other Party or the Manager to prevent or eliminate such default.
2.16	Dispute Resolution. 
(a)	Arbitration.  If the Parties are unable to resolve a dispute, then any Party may submit such dispute to binding arbitration and the dispute shall be resolved using expedited JAMS arbitration rules (the "Rules") by an arbitrator mutually acceptable to the Parties.  The determination of the arbitrator shall be final and binding upon the Parties.  Each Party involved in the dispute shall pay its ratable share of all costs of such arbitration; provided, however, that the losing Party(ies), if the arbiter clearly designates one in connection with the obligation to pay such costs, shall pay all of the costs of the prevailing Party(ies), including reasonable attorneys' fees and costs.  Notwithstanding any provisions of the Rules, the Parties shall have the right to take depositions and obtain discovery regarding the subject matter of the arbitration, as provided in Title III of Part 4 (commencing with Section 1985) of the California Code of Civil Procedure.  The determination of the arbitrator shall be final and shall not be subject to judicial review; provided, however, that any award or determination rendered by the arbitrators may be entered and enforced in any court of competent jurisdiction.  The arbitration proceedings provided for hereunder are hereby declared to be self-executing, and it shall not be necessary to petition a court to compel arbitration.
(b)	Notice and Selection of Arbitrator.  The Party giving notice of arbitration shall include the name of its proposed arbitrator as part of the notice.  The other Party(ies) involved in the dispute shall, within fifteen (15) days after the receipt of such notice, provide notice either agreeing to such arbitrator or in the alternative, including the name of its proposed arbitrator.  If the Party(ies) upon whom notice of arbitration is served fails to select an arbitrator and advise the other Party(ies) of its selection within fifteen (15) days after receipt of such notice, the arbitrator selected by the Party delivering such initial notice shall serve as the arbitrator.  If any other Party has selected a different arbitrator and if they cannot agree on an arbitrator within fifteen (15) days thereafter, then the arbitrator shall be selected in accordance with the Rules.  Unless otherwise agreed to by the Parties, the arbitration shall not be scheduled for a date that is greater than ninety (90) days from the date the arbitration panel is selected.  
(c)	Third Parties.  If a dispute arises between the Parties hereto which is subject to the arbitration provisions hereunder and there exists or later arises a dispute between the Parties hereto and any other party arising out of or related to the same transaction or series of transactions ("Third-Party Controversy"), any Party hereto involved in the dispute shall be entitled to require that such Third-Party Controversy be consolidated with such arbitration proceedings hereunder; provided, however, that such third party must either (i) be a party to an agreement with one or more of the Parties hereto which provides for arbitration of disputes thereunder in accordance with rules and procedures substantially the same in all material respects as provided for herein; or (ii) consent to arbitration as provided for hereunder.
(d)	Limitations.  Notice of the demand for arbitration shall be filed in writing with the other Parties to this Agreement.  The demand for arbitration shall be made within a reasonable time after the claim, dispute or other matter in question has arisen, and in no event shall it be made after the date when institution of legal or equitable proceedings based on such claim, dispute or other matter in question would be barred by the applicable statutes of limitations.
(e)	Venue.  All arbitration proceedings shall be held in Los Angeles, California.
(f)	Attorneys' Fees.  In the event of any litigation or arbitration for the interpretation or enforcement of this Agreement, or for damages for a default, or that in any other manner relates to this Agreement, the prevailing Party(ies) shall be entitled to reasonable attorneys' fees, arbitration, court and other costs from the non-prevailing Party(ies), including costs and fees on appeal and in any bankruptcy or insolvency proceeding.
(g)	Equitable Relief.  Notwithstanding anything in this Agreement to the contrary, the Parties each may seek injunctive and/or other equitable relief without first resorting to any of the dispute resolution procedures set forth in this Section 2.16, and each Party acknowledges and agrees that money damages may not be entirely suitable to protect the respective interests of the Parties under this Agreement and that each Party may seek such injunctive and/or other equitable relief if the circumstances so require (in such Party's reasonable judgment).
2.17	Effect of Force Majeure.  If, because of an event of Force Majeure, any Party is unable to carry out its obligations under this Agreement, and if such Party promptly gives the other Parties written notice of such Force Majeure in detail, specifying the nature, extent and expected duration of such Force Majeure, the obligations and liabilities of the Party giving such notice and the corresponding obligations and liabilities of any other Party shall be temporarily suspended to the extent made necessary by and during the continuance of such Force Majeure; provided, that (a) a Party may not claim Force Majeure with respect to any payment obligations under this Agreement or the LGIA, and (b) in no event will the suspension of a Party's obligations and liabilities hereunder be permitted to cause a "Default" under the LGIA.  Any disabling effects of such event of Force Majeure shall be eliminated as soon as and to the extent reasonably practicable by the Party claiming Force Majeure. 
2.18	Notice of Default.  Each Co-Tenant and the Manager shall promptly provide written notice to the other Parties upon receiving notice of, or otherwise discovering, any default or potential default under this Agreement or the LGIA.  
2.19	Tax Classification; No Partnership.  The Co-Tenants hereby declare that their relationship is and will be that of tenants-in-common, and that each Co-Tenant will have an undivided interest in and to the Interconnection Rights and the LGIA.  The Co-Tenants hold the interests for investment purposes only, and not for the active conduct of a business.  It is intended and agreed by the Co-Tenants that tenancy-in-common relationship governed by this Agreement is not a partnership within the meaning of Section 761 of the Internal Revenue Code,  and the Treasury Regulations promulgated thereunder.  The Co-Tenants shall take any and all necessary actions to file their respective U.S. federal, state and local income tax returns consistent with the foregoing.  
ARTICLE III
MANAGER
3.1	Appointment of Manager; Manager Services.  Each Co-Tenant hereby appoints the Manager, who shall have no interest in the Interconnection Customer by virtue of its designation as Manager, to act as its agent and representative for all purposes under the LGIA, and the Manager shall have the power to exercise and shall exercise any and all of the rights of the Interconnection Customer under the LGIA and shall coordinate compliance with the LGIA by the Co-Tenants; provided that the Manager may not terminate, amend (except as provided in Section 5.8) or Transfer the LGIA or waive any material rights of the Co-Tenants under the LGIA, without the prior, unanimous written consent of the Co-Tenants.  In addition, each Co-Tenant specifically authorizes the Manager to negotiate and execute on its behalf and on behalf of the Interconnection Customer, and agrees to be bound by the terms of, (i) a CAISO meter service agreement, (ii) a CAISO participating generator agreement and (iii) a SCE retail electricity service agreement.  
3.2	Communications.  The Manager shall be the single point of contact between the Co-Tenants and the CAISO and SCE, and shall be responsible for all administrative obligations of the Interconnection Customer under the LGIA, including billing, issuing payments, providing notices and communicating with, and receiving instructions from, the CAISO and SCE with respect to the Phases and the LGIA.  The Manager shall, promptly upon receipt, provide to each Co-Tenant a copy of any notices or other material communications received by it related to  the LGIA or this Co-Tenancy Agreement. The Manager shall also provide to each Co-Tenant a copy of any notices or other material communications it delivers to the CAISO or SCE related to the LGIA or this Co-Tenancy Agreement.
3.3	Indemnification of Manager.  Each Co-Tenant shall, pro rata in accordance with its Sharing Ratio, defend, indemnify and hold harmless the Manager and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in good faith in connection with its management of the LGIA (other than acts or omissions constituting a material breach by the Manager of this Agreement or the fraud, willful misconduct, or gross negligence of the Manager), including reasonable attorneys' fees incurred by it in connection with the defense of any action based on any such alleged act or omission.  The Manager shall specifically be indemnified by the Co-Tenants and held harmless from any and all actions taken by the Manager in its reasonable judgment, in good faith, or in reasonable reliance on advice of the Manager's attorneys or accountants, and shall be reimbursed by the Co-Tenants for costs related to claims or litigation which arise in connection with the LGIA or this Agreement (other than claims or litigation resulting from a material breach by the Manager of this Agreement or the fraud, willful misconduct, or gross negligence of the Manager).
3.4	Books and Records; Reporting Requirements.  
(a)	Maintenance or Records.  The Manager shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Tenant or its authorized representative at the cost and expense of such Co-Tenant and at reasonable times during regular business hours, upon reasonable notice to the Manager.
(b)	Provision of Records.  The Manager shall, from time to time or at the reasonable request of the Co-Tenants or their Financing Parties, provide reports to the Co-Tenants and their Financing Parties sufficient to keep the Co-Tenants and their Financing Parties reasonably apprised as to significant matters concerning the LGIA and the LGIA Operating Expenses.
3.5	Replacement of Manager.  The Co-Tenants agree that the Manager shall be the same entity as the Manager under the Shared Facilities Agreement to be entered into subsequent to the Effective Date between the Co-Tenants and their permitted assigns, as may be amended from time to time (the "SFA"), and the Manager hereunder shall therefore be replaced as necessary to this end.
3.6	Management Fee.  In consideration of the services provided by Manager hereunder, the Manager shall be paid an annual fee of Five Thousand Dollars ($5000) (the "Management Fee"), payable monthly, in advance, in equal monthly installments, beginning on the date hereof and ending on the termination of this Agreement or the replacement of the Manager.  The Management Fee shall be allocated to the Co-Tenants as an LGIA Operating Expense.  
3.7	Discrimination.  Notwithstanding any other provision herein to the contrary (other than Section 2.4), the Manager shall not Discriminate in providing services or otherwise performing its obligations hereunder among the Co-Tenants.  As used herein, "Discriminate" means a failure by the Manager to provide services hereunder in a manner that treats alike each of the Co-Tenants under substantially similar conditions, and for which dissimilar treatment is not otherwise justified as necessary in accordance with prudent operating and utility industry practices.
3.8	Performance.  The Manager shall perform its obligations under this Agreement (a) in accordance with the terms of the LGIA, (b) in accordance with good operating and utility industry practices, (c) in compliance with all applicable Laws, including but not limited to the FPA, and all rules, regulations, and orders issued by the FERC pursuant to the FPA, (d) in compliance with the CAISO Tariff, including the rules, protocols, procedures and standards attached thereto, as the same may be amended from time to time and approved by FERC, (e) in compliance with the rules, protocols, procedures and standards of NERC, and (f) without causing a material adverse effect on the LGIA, any Party or any of the other Co-Tenants' respective Phases.
3.9	Limitation of Liability.  Except in the case of willful misconduct or gross negligence or indemnification obligations under Section 2.9, in no circumstances shall the aggregate liability of the Manager under this Agreement in any calendar year (whether based on negligence, breach of contract or otherwise) arising out of or in connection with the performance of the obligations of the Manager under this Agreement exceed an amount equal to the Management Fee for that calendar year.
ARTICLE IV
TRANSFERABILITY
4.1	General Restriction.  No Co-Tenant may Transfer its interest in this Agreement to any transferee, unless (i) such Transfer is made together with a Transfer of its applicable Phase Controlled Assets to such transferee, (ii) such transferee is assigned and assumes the Transferring Co-Tenant's entire interest in both this Agreement and the LGIA, subject to the terms thereof, pursuant to an agreement reasonably satisfactory to the other Co-Tenants, (iii) such Transfer is in compliance with the terms of the LGIA, and (iv) such Transfer does not have a material adverse effect on the performance of obligations under the LGIA. 
4.2	Co-Tenant's Right to Encumber.  Notwithstanding anything in Section 4.1 to the contrary, each Co-Tenant may, at any time and from time to time during the term of this Agreement, encumber, mortgage or hypothecate to any Financing Party by deed of trust or mortgage or other security instrument, (the "Mortgage") all or part of such Co-Tenant's interest under this Agreement and the other documents entered into in connection with this Agreement, including, without limitation, the LGIA, without the consent of the other Co-Tenants.  
4.3	Certain Rights of Financing Party.  Should any Co-Tenant incur any encumbrance in accordance with Section 4.2 of this Agreement, and should the Parties receive notice thereof pursuant to Section 5.1 hereof, the Parties hereby expressly stipulate and agree between themselves and on behalf of, and for the benefit of, the Financing Party as follows:
(a)	Modification of Agreement.  They will not modify this Agreement or allow this Agreement to be modified in any way nor cancel this Agreement without the written consent of the Financing Party, which consent may not be unreasonably withheld or delayed.
(b)	Performance by Financing Party.  The Financing Party shall have the right to do any act or thing required of the encumbering Co-Tenant under this Agreement, and any such act or thing performed by the Financing Party shall be as effective to prevent a default under this Agreement and/or a forfeiture of any of such Co-Tenant's rights under this Agreement as if done by the Co-Tenant itself, provided that the Financing Party shall have first given the Co-Tenant such notice and allowed the Co-Tenant to perform or attempt to perform such act or thing for such period of time as may be specified in any documents or instruments executed by the Co-Tenant for the benefit of the Financing Party.  The Financing Party shall have such foreclosure and sale rights and rights to perform or cause to be performed the covenants and agreements of the encumbering Co-Tenant under this Agreement as may be specified in any documents or instruments executed by the Co-Tenant for the benefit of the Financing Party.  Notwithstanding anything contained herein to the contrary, in no event shall a Financing Party be liable for any obligations or liabilities hereunder by virtue of any action or inaction, or otherwise except and to the extent such Financing Party expressly agrees in writing to assume such obligations and liabilities.
(c)	Notice to Financing Party.  If Manager issues or receives any notices regarding potential or actual defaults as described in Section 2.18 herein, the Manager, on behalf of the Co-Tenants, shall promptly deliver a copy of such notice to all Financing Parties of which it has received notice.
(d)	Consents to Assignment.  Each Co-Tenant and the Manager hereby agrees that it shall, no later than five (5) business days after a request by any other Co-Tenant (the "Requesting Co-Tenant") (or its Financing Party), execute such consents or estoppel certificates as are reasonably requested by the Requesting Co-Tenant or its Financing Party.
4.4	FERC Approval.  Notwithstanding anything in Section 4.1 or 4.2 to the contrary, no Transfer of any Co-Tenant's interests in this Agreement shall be effective unless and until the Co-Tenant or the Manager has obtained any necessary prior approvals from the FERC to effectuate any changes to this Agreement to reflect such Transfer and the change in the parties to this Agreement.
4.5	Number of Co-Tenants.  Except as otherwise expressly provided in the LGIA, there shall be no more than five (5) Co-Tenants comprising the Interconnection Customer and neither Interconnection Customer nor any Co-Tenant may further subdivide in any manner or form its interest in this LGIA.  The Parties acknowledge that the administrative burden to the CAISO to administer the LGIA would be excessive if the a Co-Tenant were to further subdivide its interests in the LGIA in violation of this Article and any such action would be considered a Breach and, if not cured pursuant to Article 17 of the LGIA, a Default under Article 17 of the LGIA, entitling the CAISO to terminate this LGIA in accordance with such Article 17.
ARTICLE V
MISCELLANEOUS PROVISIONS
5.1	Notices.  Any notice, demand, or communication required or permitted to be given by any provision of this Agreement shall be deemed to have been sufficiently given or served for all purposes if delivered personally or by telecopy to the Party or to an executive officer of the Party to whom the same is directed or, if sent by registered or certified mail, postage and charges prepaid, addressed to the Party's address, as appropriate, which is set forth in this Agreement or to such other address as a Party shall advise the other Parties from time to time in writing.
5.2	Choice of Law.  This Agreement shall in all respects be governed by and construed and enforced in accordance with the internal laws of the State of California, without regard to its choice of law provisions.
5.3	Entire Agreement.  This Agreement sets forth the complete understanding of the Parties hereto with respect to the subject matter hereof and supersedes all prior discussions, agreements, and undertakings relating to the subject matter hereof.
5.4	Interpretation.  All personal pronouns used in this Agreement, whether used in the masculine, feminine or neuter gender, shall include all other genders; the singular shall include the plural; and the plural shall include the singular.  Titles of articles and sections in this Agreement are for convenience only and neither limit nor amplify the provisions of this Agreement.  All references in this Agreement to articles, sections, subsections or paragraphs shall refer to articles, sections, subsections and paragraphs of this Agreement, unless specific reference is made to the articles, sections or other subdivisions of another document or instrument.  The word "including" shall mean "including without limitation".  This Agreement shall not be interpreted in favor of any Party by virtue of said Party not having prepared this Agreement.  The unenforceability, invalidity, or illegality of any provision of this Agreement shall not affect or impair the continuing enforceability or validity of any other part, all of which shall survive and be valid and enforceable.
5.5	Waiver.  No consent or waiver, express or implied by any Party hereto, to or of any breach or default by the other in the performance by the other of its obligations hereunder shall be deemed or construed to be a consent or waiver to or of any other breach or default in the performance by such other Party of the same or any other obligations of such Party hereunder.  Failure on the part of any Party hereto to complain of any act or failure to act of any other Party, or to declare such other Party in default, irrespective of how long such failure continues, shall not constitute a waiver of such Party of its rights hereunder.
5.6	Third Party Beneficiaries.  This Agreement and the terms and provisions hereof are solely and exclusively for the benefit of the Parties hereto.  No third party may rely on any of the provisions herein contained or lay claim to any of the rights of the Parties hereto (other than any Financing Party).
5.7	Counterparts; Facsimile Signatures.  This Agreement may be executed in counterparts each of which when so executed and delivered shall be deemed to be an original and all of which together shall constitute one instrument.  Signatures delivered by facsimile, email or other electronic means shall be binding upon the Parties hereto with the same force and effect as original signatures.
5.8	Amendments; Term.  Except as specifically provided in this Agreement, this Agreement shall not be amended except by the written agreement of the Manager and all the Parties.  In addition, no Party may amend the LGIA except by the written consent of all the Co-Tenants; provided that the Manager may amend the LGIA with respect to non-material, administrative matters, without the consent of the Co-Tenants but with prior written notice, together with a copy of the proposed amendment.  The Manager shall provide to each of the Co-Tenants a copy of the final amendment to the LGIA permitted pursuant to this Section 5.8.  This Agreement shall be in effect for so long as the LGIA is in effect.
5.9	Further Assurances.  Upon the reasonable request of any Party at any time after the Effective Date, the other Parties shall forthwith execute and deliver such further instruments of assignment, transfer, conveyance, endorsement, direction or authorization and other documents as the requesting Party or its or their counsel may reasonably request in order to effectuate the purposes of this Agreement.  Each Party agrees to cooperate fully with the other Parties in assisting it to comply with the terms of this Agreement, including, but not limited to, assistance in obtaining consents, waivers, authorizations, waivers, authorizations, orders and/or approvals of third parties.  
5.10	Replacement.  This Agreement replaces and supersedes the Original Agreement.
      Nothing contained in this Agreement will be deemed to constitute the Co-Tenants as partners or joint venturers.  
5.11	WAIVER OF RIGHT TO PARTITION.  THE CO-TENANTS EACH ACKNOWLEDGE AND AGREE THAT IT WOULD BE PREJUDICIAL TO THE INTERESTS OF THE CO-TENANTS UNDER THIS AGREEMENT IF ANY CO-TENANT WERE TO SEEK PARTITION OR ANY OTHER TYPE OF DIVISION OF THE LGIA, OR FILE AN ACTION FOR SUCH PARTITION OR DIVISION, EXCEPT AS OTHERWISE PROVIDED IN THIS AGREEMENT AND THE LGIA.
         THEREFORE, IN CONSIDERATION OF SUCH FACT AND FOR OTHER GOOD AND VALUABLE CONSIDERATION, EACH OF THE CO-TENANTS HEREBY WAIVES AND RELINQUISHES ANY AND ALL RIGHTS THAT IT MAY HAVE TO SEEK A PARTITION OR ANY OTHER TYPE OF DIVISION OF THE LGIA, EXCEPT AS OTHERWISE PROVIDED IN THIS AGREEMENT AND THE LGIA.
[Signature Page Follows]

         IN WITNESS WHEREOF, the Parties hereto have executed this Agreement as of the date first written above.
Rising Tree Wind Farm LLC
Rising Tree Wind Farm II LLC




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 








Rising Tree Wind Farm III LLC
Rising Tree Wind Farm LLC, as Manager




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 









EXHIBIT A

Maximum Nameplate Capacity and Initial Co-Tenancy Percentage Interest
Phase
Maximum Nameplate
Capacity
Initial Co-Tenancy Percentage Interest (rounded)
Rising Tree Wind Farm LLC Phase
79.2 MW
40%
Rising Tree Wind Farm II Phase
19.8 MW
10%
Rising Tree Wind Farm III LLC Phase
99 MW
50%
         
         
         
FIRST AMENDMENT TO
AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT
      THIS FIRST AMENDMENT TO AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT ("Amendment") is made and entered into this 29th day of June, 2015, by and among Rising Tree Wind Farm LLC ("RST"), Rising Tree Wind Farm II LLC ("RST II"), and Rising Tree Wind Farm III LLC ("RST III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Tenant" and collectively as "Co-Tenants"; and RST (the "Manager"); each also a "Party" and collectively, the "Parties").
RECITALS
      A.	The Co-Tenants, as tenant-in-common, and Manager, as agent for the Co-Tenants, have entered into that certain First Amended Large Generator Interconnection Agreement with Southern California Edison Company ("SCE") and the California Independent System Operator Corporation (the "CAISO"), dated as of September 5, 2014, together with all amendments, agreements, schedules, appendices, exhibits and other documents ancillary thereto (including the Meter Service Agreement and the Participating Generator Agreement) (all as may be amended or supplemented, the "LGIA").
      B.	The Co-Tenants also have previously entered into that certain Amended and Restated Large Generator Interconnection Agreement Co-Tenancy Agreement, dated October 24, 2014 (the "Agreement") in order to set forth the rights and obligations of each of the Parties under the LGIA.  
      C.	The Co-Tenants now wish to amend the Agreement in certain respects to make certain changes in and corrections to the Agreement.
      NOW, THEREFORE, for good and valuable consideration, the receipt of which is hereby acknowledged, the Co-Tenants agree as follows:
      1.	Definitions.  Except as otherwise defined herein, capitalized terms used in this Amendment will have the meanings defined in the Agreement, and the rules of interpretation in the Agreement shall apply to this Amendment.
      1.	Events of Default; Default. Section 2.12 is amend and restated in its entirety as follows:
	2.12 Events of Default; Default. 	The following shall constitute "Events of Default": a Party fails to perform its obligations under this Agreement or the LGIA in any material respect, and such Party fails to cure such default (including any "Default under the LGIA) within (i) ten (10) days after receipt of written notice pursuant to Section 2.18 of a payment default under this Agreement or the LGIA, or (ii) twenty (20) days after receipt of written notice pursuant to Section 2.18 of any non-payment default under this Agreement or the LGIA, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12 if it commences to cure such default within twenty (20) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed eighty-five (85) days, including the initial cure period.
      
      2.	Disconnection. Section 2.14 is amended and restated in its entirety as follows:
      2.14 Disconnection.
      (a)	Upon and during the continuation of any Co-Tenant's Event of Default, the Manager may disconnect the defaulting Co-Tenant's Phase from the Windhub Substation (i) after obtaining written approval to do so from those Active Co-Tenants then not in default and having a combined Sharing Ratio in excess of fifty percent (50%) of the combined Sharing Ratio of all Active Co-Tenants then not in default, or (ii) without approval from Active Co-Tenants but only to the extent necessary to prevent or cure a "Default" under the LGIA; provided that for the purposes of this Section 2.14, in no event shall any cure period under Section 2.12 extend beyond any applicable cure period under the LGIA.
	(b)	The Manager may also disconnect any Phase, in its reasonable discretion and in accordance with the standard of care set forth in Section 3.8, in order to prevent damage to the Co-Tenants' Phases, the Interconnection Facilities or the property of SCE or as otherwise needed to prevent or mitigate technical issues affecting the Phases; the Manager shall immediately notify the Co-Tenants of any such disconnection.
3.	Dispute Resolution. Section 2.16 is amended and restated in its entirety as follows:
      2.16 Dispute Resolution.	Disputes among the Co-Tenants shall be resolved in accordance with the procedures set forth in Exhibit B. 
4.	Replacement of Manager. Section 3.5 is amended and restated in its entirety as follows:
	3.5 Replacement of Manager. The Co-Tenants agree that the Manager shall be the same entity as the Operator (as defined under the SFA) under the Rising Tree Shared Facilities Agreement, dated as of December 3, 2014, by and among the Co-Tenants, as amended by the First Amendment to Rising Tree Shared Facilities Agreement, dated as of June 29, 2015, as may be further amended, restated or otherwise modified  from time to time (the "SFA"), and the Manager hereunder shall therefore be replaced as necessary to this end.
      
      5.	Discrimination. Section 3.7 is hereby amended and restated in its entirety as follows:
	3.7 Discrimination.  Notwithstanding any other provision herein to the contrary, but subject to the Manager's rights under Section 2.4, the Manager shall not Discriminate in providing services or otherwise performing its obligations hereunder among the Co-Tenants. As used herein, "Discriminate" means a failure by the Manager to provide services hereunder in a manner that treats alike each of the Co-Tenants under substantially similar conditions, and for which dissimilar treatment is not otherwise justified as necessary in accordance with prudent operating and utility industry practices.
      6.	General Restriction.	Section 4.1 is hereby amended by adding the following proviso to the end thereof immediately before the period:
      , provided, that, notwithstanding anything contained to the contrary in this  Section 4.1, Section 4.3 or otherwise in this Agreement, the Manager shall not be replaced except as set forth in Section 3.5.
      7.	A new Section 4.6 is hereby added as follows:
      4.6  Co-Tenancy.  The Parties agree that, for the purposes of the LGIA, (i) the entire 198 MW comprising the Project shall be considered to be a single Large Generating Facility (as defined in the LGIA), (ii) no Co-Tenant may have any expectation that the CAISO will treat any portion of the Project as a stand-alone Large Generating Facility or differently from any other portion of the Large Generating Facility, (iii) Co-Tenants shall act as a single entity in undertaking the obligations of Interconnection Customer under the LGIA, (iv) CAISO and SCE shall treat all Co-Tenants comprising the Interconnection Customer as a single entity under the LGIA and bear no obligation or responsibility to any individual Co-Tenant and (v) performance of the Interconnection Customer's obligations under the LGIA shall not be excused by reason of any other Co-Tenant's failure to agree with respect to any obligation of the Interconnection Customer hereunder or thereunder.
      8. 	Notices. Section 5.1 is amended by adding the following sentence to the end of thereof:
      	Any notice, demand or communication delivered to RST III under this Agreement shall be delivered with a copy to:
JPM Capital Corporation
10 South Dearborn, 12th Floor
Mail Code ILI 0502
Chicago, Illinois 60603-2003
Attention:  President
Telephone:  (312) 732-3416
            Email:  jpmcc.energy@jpmorgan.com 
Bankers Commercial Corporation
445 South Figueroa Street, G14-200
Los Angeles, CA 90071
Attn:  2015 Vento XIII Account Officer
      9.	Amendments to Exhibits. The Agreement is hereby amended by attaching Exhibit 1 to this Amendment as Exhibit B (Dispute Resolution provisions) to the Agreement 
      10.	No Other Amendment.  Except as expressly set forth in this Amendment, the Agreement is unmodified and continues in full force and effect.  From and after the date hereof, references to the Agreement will be understood to refer to the Agreement as amended by this Amendment.
      11.	Governing Law. This Amendment shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      12.	Counterparts. This Amendment may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument. It will not be necessary in making proof of this Amendment to produce or account for more than one counterpart.
[The next page is the signature page.]
  To evidence its acceptance of this Amendment, and intending to be legally bound, each Co-Tenant has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:
         
         
EXHIBIT 1
EHIBIT B

DISPUTE RESOLUTION PROCEDURES


         1.	Consideration by the Authorized Representatives.
  All questions concerning interpretation of this Agreement, the acceptable fulfillment of the Co-Owners' respective obligations hereunder, as well as all other questions regarding this Agreement in each case that cannot readily be resolved by the Co-Owners shall be resolved in accordance with this Exhibit E.  In the event that the authorized representatives of the Co-Owners cannot reach agreement on any question arising under this Agreement, such dispute shall be referred to senior officers of the Co-Owners pursuant to Paragraph 2 below.
         2.	Negotiations by Senior Officers.
  Any disputes arising pursuant to this Agreement that cannot be resolved by the authorized representatives of the Co-Owners within fourteen (14) days after receipt of notice of such dispute (specifically referencing this Exhibit B) shall be referred to the vice president or other senior officer of each of the Co-Owners having executive responsibility for such Co-Owner's Facility.  If such senior officers, negotiating in good faith, fail to reach an agreement within a reasonable period of time, not exceeding twenty (20) days after such referral, then any Co-Owner to such dispute may institute proceedings as set forth in Paragraph 3 below.
         3.	Formal Dispute Resolution.
  (a)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners, the Co-Owners shall engage in non-binding mediation of such dispute.  Such mediation shall be conducted (i) in Houston, Texas, (ii) within thirty (30) days of a Co-Owner instituting dispute resolution under this Paragraph 3, (iii) by a single, impartial mediator who is selected by the mutual agreement of the Co-Owners, and (iv) in accordance with such procedures as may be adopted by such mediator.  Such mediation shall not, without the express agreement of the Co-Owners at the time, extend for a period of more than two (2) days.  Each Co-Owner may be represented by persons of such Co-Owner's choice during such mediation.  Nothing herein shall be deemed to grant any mediator the authority to impose a resolution of any dispute being mediated.  Any information introduced, proposals made or positions taken in the mediation shall be deemed to be confidential and for settlement purposes only and may not be introduced by the other Co-Owner in any subsequent litigation of the matters subject to mediation.  The Co-Owners shall share the costs of the mediator, including any fees and meeting room rentals.
  (b)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners and the Co-Owners have not otherwise resolved such dispute through mediation pursuant to Paragraph 3(a), a Co-Owner may submit the matter at issue for resolution in an action brought before the courts of the State of California in Kern County or in the United States District Court for the Eastern District of California, which courts shall have non-exclusive jurisdiction with respect to such matters.  FOR PURPOSES OF THE FOREGOING, BY EXECUTION OF THIS AGREEMENT, EACH CO-OWNER HEREBY IRREVOCABLY ACCEPTS FOR ITSELF AND IN RESPECT OF ITS PROPERTY, GENERALLY AND UNCONDITIONALLY, THE NON-EXCLUSIVE JURISDICTION OF SUCH COURTS AND EACH CO-OWNER HEREBY CONSENTS TO THE SERVICE OF PROCESS OUT OF ANY SUCH ACTION OR PROCEEDING BY THE MAILING OF COPIES THEREOF BY REGISTERED OR CERTIFIED MAIL, POSTAGE PREPAID, TO SUCH PERSON IN ACCORDANCE WITH THE NOTICE PROVISIONS OF THIS AGREEMENT.
  4.	Specific Performance.  Notwithstanding anything to the contrary contained in this Agreement, if, due to a material breach or threatened material breach or default or threatened default, a Co-Owner is suffering or will suffer irreparable harm for which monetary damages are inadequate, such Co-Owner may petition a court of competent jurisdiction for injunctive relief, specific performance or other equitable relief.
  5.	Continuing Obligations.  Notwithstanding the foregoing, all terms, conditions, and obligations of the Co-Owners contained in this Agreement shall continue and remain in effect during the course of any dispute resolution, or other proceeding pursuant hereto, and each of the Co-Owners shall proceed with performance of its obligations pending the resolution of the question, dispute or claim.
  6.	Matters Not Subject to Dispute Resolution.  Notwithstanding anything to the contrary in this Agreement, no dispute that concerns a matter, decision or other issue that is to be decided by a Co-Owner acting in its sole discretion shall be subject to the dispute resolution provisions of this Exhibit B.



 

1


EXECUTION VERSION 




TABLE OF CONTENTS
(continued)
Page


-ii-



TABLE OF CONTENTS

Page


-i-





	17

 




3


















EXECUTION VERSION</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>558</filing_id>
      <filing_title>Amended Co-Tenancy Agmnt</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-08-29</current_effective_date>
      <ferc_order_date>2015-08-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>