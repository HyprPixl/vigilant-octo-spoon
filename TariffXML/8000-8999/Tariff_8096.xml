<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C012258</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>3489</tariff_id>
    <tariff_title>Market Based Rate</tariff_title>
    <tariff_export_date>2025-09-16T21:03Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Market Based Rate</record_title>
      <record_content_desc>Rate Schedule</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-07-15</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Ross County Solar, LLC
Market-Based Rate Tariff

1. Availability. Ross County Solar, LLC (Seller) makes electric energy and capacity available under this Tariff to any purchaser for resale except as prohibited below.  Seller may also make available to any purchaser the ancillary services listed below: 

a. California ISO:  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation (CAISO) and to others that are self-supplying ancillary services to the CAISO. 

b. New York ISO: Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.

c. Midcontinent ISO: Seller offers regulation service and operating reserve service (which includes 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midcontinent Independent System Operator, Inc. (Midcontinent ISO) and to others that are self-supplying ancillary services to Midcontinent ISO.

d. New England ISO: Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England, Inc.

e. PJM Interconnection: Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. (PJM) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.

f. Southwest Power Pool: Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Southwest Power Pool, Inc. (SPP) and to others that are self-supplying ancillary services to SPP.

g. Third Party Provider.  Seller offers Regulation Service, Reactive Supply and Voltage Control Service, Energy and Generator Imbalance Service, Operating Reserve-Spinning, Operating Reserve-Supplemental, and Primary Frequency Response Service.  Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; and (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier. Sales of Operating Reserve-Spinning and Operating Reserve-Supplemental will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except where the Commission has granted authorization.  Sales of Regulation and Service and Reactive Supply and Voltage Control Service will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except at rates not to exceed the buying public utility transmission providers OATT rate for the same service or where the Commission has granted authorization.

2. Applicability. This Tariff is applicable to all wholesale sales of electric energy, capacity, and ancillary services by Seller, which are (a) subject to the jurisdiction of the Commission, and (b) not made pursuant to another tariff on file with the Commission.

3. Rates. All sales shall be made at rates established by agreement between the purchaser and Seller. 

4. Other Terms and Conditions. All other terms and conditions shall be established by agreement between the purchaser and Seller. 

5. Compliance with Commission Regulations. Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller's market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this Tariff or otherwise restricts or limits Sellers market-based rate authority. Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H, and with any orders of the Commission concerning Sellers market-based rate authority, will constitute a violation of this Tariff. 

6. Limitations and Exemptions Regarding Market-Based Rate Authority. The Commission granted Seller in Docket No. ER24-____-000 the following waivers and blanket authorization: (i) waivers of Parts 41 and 141 (except for Section 141.15) of the Commissions accounting and periodic reporting requirements; and (ii) waiver of the accounting and related reporting requirements under Part 101, with the exception that waiver of the provisions that apply to hydropower licensees has not been granted with respect to licensed hydropower projects; and (iii) waivers of Subparts B and C of Part 35 of the Commissions regulations, except for Sections 35.12(a), 35.13(b), 35.15 and 35.16; and (iv) blanket authorization under Section 204 of the FPA and Part 34 of the Commissions regulations for all future issuances of securities and debt and assumptions of liabilities.

7. Seller Category. Seller is a Category 2 Seller, as defined in 18 C.F.R. § 35.36(a), in the Northeast region.  Seller is a Category 1 Seller, as defined in 18 C.F.R. § 35.36(a), in the Central, Northwest, Southeast, Southwest, and SPP regions.

8. Effective Date. This Tariff is effective on such date as set by the Commission.  This Tariff shall continue in effect until terminated or changed in accordance with any applicable regulatory requirements</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2885</filing_id>
      <filing_title>Response to Deficiency Filing</filing_title>
      <filing_type>170</filing_type>
      <associated_filing_id>2699</associated_filing_id>
      <associated_record_id>1</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-07-15</current_effective_date>
      <ferc_order_date>2024-12-17</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>