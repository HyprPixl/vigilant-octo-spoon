<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C000089</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>7</tariff_id>
    <tariff_title>Moss Bluff Database 1</tariff_title>
    <tariff_export_date>2025-09-16T18:22Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of General Terms and Standard Operating Conditions</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>13.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>8388608</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2023-04-18</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>GENERAL TERMS AND CONDITIONS
AND
STATEMENT OF OPERATING CONDITIONS

OF

MOSS BLUFF HUB, LLC









Any communication should be addressed to: 
Moss Bluff Hub, LLC
Attention: Arthur Diestel 
915 N. Eldridge Parkway, Suite 1100
Houston, Texas 77079








Effective: April 18, 2023

Filed: April 18, 2023

 

GENERAL TERMS AND CONDITIONS
AND
STATEMENT OF OPERATING CONDITIONS



1. INTRODUCTORY STATEMENT

 These General Terms and Conditions and Statement of Operating Conditions (hereinafter "Statement") shall apply to all storage and related Hub Services rendered by Moss Bluff Hub, LLC ("Moss Bluff") under any Firm Storage Service Contract, No-Notice Storage Service Contract, or Hub Services Contract, pursuant to Sections 284.123 and 284.224 of the regulations of the Federal Energy Regulatory Commission, 18 C.F.R. ?? 284.123 and 284.224.

2. DEFINITIONS

The following terms as used in this Statement shall have the meanings or definitions set forth below:

2.1 "Business Day" means Monday through Friday, excluding Federal Banking Holidays in the United States.

2.2 "Btu" means British Thermal Unit(s).

2.3 "Contract" means a contract and all related exhibits between Moss Bluff and Customer for firm storage or interruptible Hub Services.

2.4 "Customer" means the party that has executed a Contract with Moss Bluff.

2.5 "Customer End Use Type" means the type of end use of the gas delivered by Moss Bluff on a Firm Basis for sale or transportation on behalf of Customer that determines the priority of such gas during a Curtailment Event, as such priorities are described in the RRC Curtailment Rule.

2.6 "Customer's Transporter" means the interconnected pipeline delivering Customer's Gas to the Point of Receipt or the interconnected pipeline receiving Customer's Gas at the Point of Delivery.

2.7 "Gas Day" means the twenty-four (24) hour period beginning at 9:00 a.m. central time on a calendar day and ending at 9:00 a.m. central time on the following calendar day.

2.8 "Excess Injection" means a quantity that is in excess of the MDIQ set forth in Customer's Contract.

2.9 "Excess Withdrawal" means a quantity that is in excess of the MDWQ set forth in Customer's Contract.

2.10 "FERC" means the Federal Energy Regulatory Commission or any successor agency.

2.11 "Firm Basis" means the storage service that has the highest priority of storage service offered by Moss Bluff pursuant to a Firm Storage Service Contract or a No-Notice Storage Service Contract.

2.12 "Fuel Gas" means (i) the incremental amount of Gas (for compressor fuel and lost and unaccounted for Gas) that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity, or (ii) the amount in dollars per MMBtu that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Firm Storage Service Contract, No-Notice Storage Service Contract, or Hub Services Contract, as applicable.

2.13 "Gas" means a combustible gas consisting of methane and such other hydrocarbon constituents or a mixture of two or more of such constituents which meets the quality specifications set forth in Section 10 hereof.

2.14 "Gas Storage Inventory Account" means the quantity of Gas stored in the Storage Facilities by Moss Bluff for Customer's account.

2.15 "Hub Services" means those services offered by Moss Bluff on an Interruptible Basis only and comprising any one or a combination of the following services:

2.15.1 "Parking" means the injection of a Customer's Gas into the Storage Facilities and the subsequent withdrawal of Customer's Gas from the Storage Facilities during the term of the parking transaction as specified in Exhibit A to Customer's Hub Services Contract.

2.15.2 "Loaning" means the advance of Gas by Moss Bluff to a Customer and the subsequent return of such Gas to Moss Bluff during the term of the loaning transaction as specified in Customer's Hub Services Contract.

2.15.3 "Wheeling" means the movement of Gas from one pipeline to another over Moss Bluff's header facilities.

2.15.4 "Title Transfer" means the transfer of title to Gas between Contracts within the Moss Bluff Storage Facilities.

2.15.5 "Enhanced Parking" means the injection of Customer's Gas into the Storage Facilities during a time period specified in Exhibit A to Customer's Hub Services Contract and the subsequent withdrawal of such Gas from the Storage Facilities during a later time period specified in Exhibit A to Customer's Hub Services Contract.

2.15.6 "Enhanced Loaning" means the advance of Gas by Moss Bluff to a Customer during a time period specified in Exhibit A to Customer's Hub Services Contract and the subsequent return of such Gas to Moss Bluff
during a later time period specified in Exhibit A to Customer's Hub Services Contract.

2.16 "Injection and Withdrawal Capacity" means the maximum quantity of Gas that Moss Bluff may physically receive from all Customers and inject into, or withdraw from, the Storage Facilities each Gas Day.

2.17 "Internet Web site" means Moss Bluff's HTML site accessible via the Internet's World Wide Web and located at https://link.enbridge.com.

2.18 "Interruptible Basis" means that the Customer is subject to interruption at any time by Moss Bluff in order to provide service to (i) any Firm Basis Customer or (ii) any Interruptible Basis Customer with a higher priority service.

2.19 "Interstate Service" means service provided by Moss Bluff pursuant to Section 311(a)(2) of the Natural Gas Policy Act (15 U.S.C. ? 3371(a)(2)) that meets the requirements set forth in Section 19.2.3 below.

2.20 "Interstate Firm Basis Service" means any Interstate Service provided by Moss Bluff on a Firm Basis 

2.21 "Intrastate Firm Basis Service" means any Intrastate Service provided by Moss Bluff on a Firm Basis
 
2.22 "Intrastate Service" means service provided by Moss Bluff that meets the requirements set forth in Section 19.2.2 below, unless otherwise expressly designated by Customer in accordance with Section 19.2.3. 

2.23 "LINK(r) System" means Moss Bluff's electronic communications system accessible via the Internet's World Wide Web and located at https://link.enbridge.com.

2.24 "Maximum Daily Delivery Quantity" or "MDDQ" means the maximum quantity of Gas, expressed in MMBtu, specified in Customer's Contract that Customer may nominate and that Moss Bluff shall deliver at a Point of Delivery located on its header system each Gas Day at constant hourly rates of flow over the course of such Gas Day (excluding Fuel Gas).

2.25 "Maximum Daily Injection Quantity" or "MDIQ" means the aggregate quantity of Gas that Customer may nominate and deliver and that Moss Bluff shall receive at the Point(s) of Receipt for injection into the Storage Facilities each Gas Day at constant hourly rates of flow over the course of such Gas Day.

2.26 "Maximum Daily Receipt Quantity" or "MDRQ" means the quantity of Gas, expressed in MMBtu, specified in Customer's Contract that Customer may nominate and that Moss Bluff shall receive at a Point of Receipt located on its header system each Gas Day at constant hourly rates of flow over the course of such Gas Day (excluding Fuel Gas).

2.27 "Maximum Daily Withdrawal Quantity" or "MDWQ" means the aggregate maximum quantity of Gas that Customer may nominate and that Moss Bluff shall withdraw from the Storage Facilities and tender to Customer at the Point(s) of Delivery each Gas Day at constant hourly rates of flow over the course of such Gas Day.

2.28 "Maximum Storage Quantity" or "MSQ" means the maximum quantity of Gas which Customer may have in its Gas Storage Inventory Account at any time pursuant to the terms of Customer's Contract.

2.29 "MCF" means one thousand (1,000) cubic feet of Gas.

2.30 "MMBtu" means 1,000,000 Btu.

2.31 "Month" means that period of time beginning at 9:00 a.m. central time on the first calendar day of a calendar month and ending at 9:00 a.m. central time on the first calendar day of the following calendar month.

2.32 "Nomination Service Type" or "Nom Service Type" means the field within the nomination screen of the LINK(r) System which enables a Customer to designate whether a nomination is for Interstate Service or Intrastate Service.

2.33 "Nomination Use Type" or "Nom Use Type" means the field within the nomination screen of the LINK(r) System which enables a Customer to designate a Customer End Use Type when submitting a nomination for Intrastate Firm Basis Service.

2.34 "Pad Gas" means the quantity of Gas required to remain in the storage cavern to protect the cavern's integrity. Depending upon the particular Contract, either the Customer or Moss Bluff Hub shall make the arrangements necessary to provide the quantity of Pad Gas necessary to support Customer's Contract MSQ with Moss Bluff.

2.35 "Point(s) of Delivery" means the points specified in Customer's Contract, at which Moss Bluff shall deliver Gas to Customer from the Storage Facilities.

2.36 "Point(s) of Receipt" means the points specified in Customer's Contract at which Moss Bluff shall receive Gas from Customer for injection into the Storage Facilities.

2.37 "Psig" means pounds per square inch gauge.

2.38 "RRC" means the Railroad Commission of Texas or any successor agency.

2.39 "RRC Curtailment Event" means a "curtailment event" as defined in the RRC Curtailment Rule, that impacts any Intrastate Firm Basis Service. 

2.40 "RRC Curtailment Day" means any Gas Day on which an RRC Curtailment Event is in effect on the Moss Bluff system.

2.41 "RRC Curtailment Rule" means that certain rule promulgated by the RRC that governs the curtailment and scheduling of Gas by Moss Bluff on any RRC Curtailment Day, as set forth in 16 Texas Administrative Code ?7.455, and as may be modified, superseded and/or revised from time to time.

2.42 "Storage Facilities" means the underground storage caverns and associated facilities located in Liberty and Chambers Counties, Texas that are owned or controlled by Moss Bluff.

2.43 "Total Storage Reservation Fee" means the fee paid by Customer to Moss Bluff for the purpose of reserving capacity in the Storage Facilities.


2.44 "Year" means a period of twelve (12) consecutive months, commencing at 9:00 a.m. central time on a given date and ending at 9:00 a.m. central time on the same date the following year.

3. REQUEST FOR STORAGE SERVICE

3.1 Expansion Capacity. Upon the availability of new storage capacity resulting from an expansion of Moss Bluff's facilities, Moss Bluff shall offer service utilizing such capacity to prospective customers, either via the "first-come, first- served" Request for Service procedures described in Section 3.2 below or via the Open Season Procedures described in Section 3.3 below, with the selection of the procedures being at Moss Bluff's sole option.

3.2 Request for Service. Any Customer or potential Customer wishing to obtain Firm Basis or Interruptible Basis services or to request an amendment to existing service outside of an open season shall submit to Moss Bluff a Request for Service electronically via the LINK(r) System. Requests to amend existing service that will affect a Customer's financial obligations to Moss Bluff are referred to as Billing Amendments. Requests to amend existing service that will not affect a Customer's financial obligations to Moss Bluff are referred to as Non-Billing Amendments. Moss Bluff shall evaluate and respond to such request within five Business Days of its receipt. If Moss Bluff and such Customer mutually agree to the rates that such Customer will pay for storage service, Moss Bluff shall, subject to credit approval and execution of a Contract, endeavor to provide service within the time specified in the Request for Service. The Request for Service shall be considered complete only if the information specified in Sections 3.4 and 3.5 below is provided to Moss Bluff. Moss Bluff shall have the right to reject any Request for Service that does not contain the required information set forth herein and shall have no liability to Customer or any other entity in connection with such rejection. If Moss Bluff rejects any request for service, Moss Bluff shall notify Customer via e-mail of its reason(s) for such rejection.

3.3 Open Season Procedures.

3.3.1 If Moss Bluff elects to conduct an open season for firm capacity pursuant to this Section 3.3, Moss Bluff shall post notice of the open season on its Internet Web site. Such notice shall set forth when the open season begins and ends, how and where interested potential Customers may obtain the necessary forms and submit requests for Firm Basis service, the minimum rates, if any, Moss Bluff will accept for the available capacity, the criteria that will be used to evaluate bids, and additional details about the open season.

3.3.2 At the conclusion of the open season, the value of each submitted bid will be determined according to the evaluation method specified in the notice of the open season.

3.3.3 Capacity will be allocated to the Customer that submitted the bid yielding the highest value as determined pursuant to Section 3.3.2 above. If two or more bidders submit acceptable bids of equal value and there is insufficient capacity available to serve such potential Customers, then capacity will be allocated among such Customers on a pro rata basis. If the capacity allocated to any bidder is not sufficient to meet such bidder's capacity requirements, such bidder shall have the option of declining the allocated capacity; Moss Bluff will then offer the remaining capacity to the tied or next highest bidder(s), as the case may be, until either all remaining capacity has been allocated or there are no remaining acceptable bids for service subject to the open season.

3.3.4 A Customer allocated capacity in an open season must comply with all requirements of this Statement, including submitting a Request for Service electronically via the LINK(r) System and being determined to be  creditworthy pursuant to Section 3.5 below, and shall be required to execute Contract(s) for the applicable service pursuant to the requirements of Section 3.7 below.

3.3.5 Moss Bluff will accept requests for service for any available capacity remaining after the conclusion of an open season. The remaining capacity shall be allocated on a first-come, first-served basis, i.e., the capacity shall be allocated to the first Customer offering to pay a rate for service that Moss Bluff finds acceptable. Moss Bluff may, at its sole option, conduct an open season pursuant to the procedures set forth in this Section 3.3 in lieu of allocating the requested capacity on a first- come, first-served basis.

3.4 Information Requirements (excluding Credit Information).

3.4.1 Each Request for Service or a request for an amendment to existing service shall contain the information identified on the Request for Service Information List posted on Moss Bluff's Internet Web site, as such list may be amended from time to time.

3.4.2 The Customer or potential Customer shall provide, either at the time the Request for Service or the request for an amendment to existing service is submitted to Moss Bluff or at the time of execution of the Contract, such other information (if any), in writing, as may be required to comply with regulatory reporting or filing requirements.

3.4.3 The Customer or potential Customer shall provide, within five (5) Business Days of the submittal of the Request for Service, any credit information required to be provided pursuant to Section 3.5 below.

3.4.4 If Customer or potential Customer does not submit the information required in Sections 3.4.2 and 3.4.3 above within the required timeframes, the Request for Service shall be rejected by Moss Bluff. In addition, any draft Request for Service created in the LINK(r) System by Customer but not submitted to Moss Bluff within ninety (90) days after Customer's initial creation of such request shall be rejected by Moss Bluff at the conclusion of such ninety (90) day period.

3.5 Credit Information Requirements.

3.5.1 Moss Bluff's acceptance of a Request for Service or a request resulting in a Billing Amendment is contingent upon a satisfactory credit appraisal by Moss Bluff. Moss Bluff shall apply, on a non-discriminatory basis, consistent financial evaluation standards to determine the acceptability of Customer's overall financial condition. Moss Bluff shall not use any criteria, formula, ranking system or other methodology that would give
any preference or advantage to a marketing affiliate of Moss Bluff. To enable Moss Bluff to conduct such credit appraisal, Customer shall submit the information specified in this Section 3.5.1. The submission of such information shall not be deemed acceptance of a Request for Service by Moss Bluff; such acceptance shall be made by Moss Bluff only after submission of the required information and a determination by Moss Bluff that Customer is sufficiently creditworthy. In the event Customer cannot provide the information required by this Section 3.5.1, Customer shall, if applicable, provide such information for its parent company.

3.5.1.1 A potential Customer shall provide (a) current financial statements, annual reports, 10-K reports or other filings with regulatory agencies which discuss Customer's financial status,
(b) a list of all corporate affiliates, parent companies and subsidiaries, and (c) any reports from credit reporting and bond rating agencies which are available.

3.5.1.2 A potential Customer shall provide a bank reference and at least two trade references. The results of reference checks and any credit reports submitted pursuant to this Section 3.5.1 must show that potential Customer's obligations are being paid on a reasonably prompt basis.

3.5.1.3 A potential Customer shall confirm in writing that it is not operating under any chapter of the bankruptcy laws and is not subject to liquidation or debt reduction procedures under the state laws, such as an assignment for the benefit of creditors, or any informal creditors' committee agreement. An exception can be made for a potential Customer who is a debtor in possession operating under Chapter XI of the Federal Bankruptcy Act but only with adequate assurances that the service billing will be paid promptly as cost of administration under the Federal Court's jurisdiction.

3.5.1.4 A potential Customer shall confirm in writing that it is not subject to the uncertainty of pending liquidation or regulatory proceedings in state or federal courts which could cause a substantial deterioration in its financial condition, which could cause a condition of insolvency, or which could impair the ability of the potential Customer to continue to exist as an ongoing business entity.

3.5.1.5 If Customer has an on-going business relationship with Moss Bluff, no delinquent balances shall be consistently outstanding for storage services provided previously by Moss Bluff. A potential Customer shall have paid its account for past periods according to established contract terms, and shall not have made deductions or withheld payment for claims not authorized by contract.

3.5.1.6 A potential Customer shall confirm in writing that no significant collection lawsuits or judgments shall be outstanding which would seriously reflect upon the potential Customer's ability to remain solvent.

3.5.2 Moss Bluff shall not be required to perform or to continue service on behalf of any Customer who is or has become insolvent or who, at Moss Bluff's request, fails within a reasonable period to demonstrate creditworthiness. Upon notification by Moss Bluff that a Customer has failed to satisfy the credit criteria or subsequently during the term of the Contract no longer satisfies the credit criteria, such Customer may still obtain storage service from Moss Bluff if it pays any outstanding balances due Moss Bluff for service rendered or has complied with Section 15.3 of this Statement with regard to such balances and elects to provide one of the following forms of security: (i) an advance deposit, (ii) a standby irrevocable letter of credit, acceptable to Moss Bluff, issued by a financial institution that satisfies Moss Bluff's credit appraisal, (iii) a security interest in collateral provided by the potential Customer found to be satisfactory to Moss Bluff, or (iv) a guarantee of performance of all obligations owed to Moss Bluff by a person or entity which does satisfy the credit appraisal. Moss Bluff shall provide such Customer with a written statement supporting Moss Bluff's request for the security amount requested at the time such security is requested.

3.5.3 If Moss Bluff rejects the security provided by Customer in accordance with Section 3.5.2 above, Moss Bluff shall re-issue its request for the security and include a written explanation for the rejection of the security previously provided by Customer.

3.5.3.1 For a new Customer, or a Customer requesting a Billing Amendment, such security shall be calculated as follows:

(i) For Firm Basis service, an amount equal to the three (3) highest months during a contract year or the duration of Customer's Contract, whichever is shorter, worth of Reservation Charges at the rate specified in Customer's Contract;
(ii) For enhanced parking and loaning service, interruptible parking and loaning service and interruptible wheeling service, the agreed upon lump-sum park and loan fee, or if billed on a daily basis, an amount equal to fifteen (15)
days of usage per month for three (3) months or the duration of the applicable Exhibit(s) A to Customer's Hub Services Contract, whichever is shorter, of the enhanced or interruptible charge(s), as applicable, calculated using the applicable rate(s) agreed upon by Moss Bluff and Customer, as reflected on Exhibit A to Customer's Hub Services Contract, plus the market value of any quantities of Gas loaned to Customer pursuant to Exhibit A to Customer's Hub Services Contract.

3.5.3.2 For an existing Customer, such security shall be equal to the highest three (3) months of activity (based on usage of in-kind and loan agreements and the billed amounts for all other agreements) for all of Customer's active service agreements during the previous twelve (12) months. For the purposes of this section, the term "in-kind agreement" does not include Fuel Gas.

3.5.4 With respect to a request for new service or a request resulting in a Billing Amendment, the security required by Moss Bluff pursuant to Section 3.5.3 must be received by Moss Bluff within ten (10) Business Days of Moss Bluff's written notification to Customer, otherwise, such request will be rejected by Moss Bluff. With respect to an existing Contract, Customer must tender (i) an advance payment equal to the highest month of activity (based on usage of in-kind and loan agreements and the billed amounts for all other Contracts) for all of Customer's active Contracts during the previous twelve (12) months within five (5) Business Days of Moss Bluff's notification, and (ii) the security required by Sections 3.5.2 and 3.5.3 within thirty (30) days of Moss Bluff's notification. If such advance payment or security is not received within the specified time period, then Moss Bluff may immediately suspend service, and may terminate Customer's Contract(s) upon thirty (30) days' notice to Customer and the Commission.

3.5.5 Security in the form of an advance deposit paid to Moss Bluff shall not accrue interest. Alternatively, a Customer providing security in the form of an advance deposit may deposit such security into an interest-bearing escrow account, established by Customer at Customer's expense, to which account Moss Bluff shall have unrestricted access in the amount of an invoice upon presentment of an invoice for the payment of services provided to Customer.

3.5.6 Once every twelve (12) months, Customer shall provide Moss Bluff with updated financial information in the form required in Section 3.5.1 above. In addition, if Moss Bluff becomes aware that there may be a potentially material change in the financial condition of an existing Customer, Moss Bluff shall require Customer to promptly resubmit all of the financial information required in Section 3.5.1 above. Moss Bluff shall re-evaluate Customer's creditworthiness based upon the updated information provided by Customer pursuant to Section 3.5.1 above. If Customer's credit standing ceases to meet Moss Bluff's credit requirements at any time during the period of service, then Moss Bluff has the right to require security as specified in Sections 3.5.2 and 3.5.3 above. If the credit standing of any entity issuing a letter of credit and/or guaranty in support of Customer's obligations ceases to meet Moss Bluff's credit appraisal at any time during the period of service, then Moss Bluff has the right to require Customer to provide replacement security that satisfies the requirements of Sections 3.5.2 and 3.5.3 above.

3.5.7 In the event any information provided by Customer pursuant to Section 3.5 with respect to a request for new service or a request that would result in a Billing Amendment materially changes prior to execution of the new service agreement or Billing Amendment, as applicable, or Customer learns that such information may materially change prior to execution of the service agreement or Billing Amendment, as applicable, Customer shall be obligated to provide written notice of such material changes to Moss Bluff. Moss Bluff shall require Customer to resubmit all of the financial information required in this Section 3.5 within ten (10) Business Days of the identification of the material change. If such updated financial information is not received within ten (10) Business Days, the request for service will be rejected by Moss Bluff. Moss Bluff shall re-evaluate Customer's creditworthiness based upon the updated information provided by Customer pursuant to this Section 3.5.

3.5.8 For purposes herein, the insolvency of a Customer shall be conclusively demonstrated by the filing by Customer or any parent entity thereof (hereinafter collectively referred to as "the Customer") of a voluntary petition in bankruptcy or the entry of a decree or order by a court having jurisdiction in the premises adjudging the Customer bankrupt or insolvent, or approving, as properly filed, a petition seeking reorganization, arrangement, adjustment or composition of or in respect of the Customer under the Federal Bankruptcy Act or any other applicable federal or state law, or appointing a receiver, liquidator, assignee, trustee, sequestrator (or other similar official) of the Customer or of any substantial part of its property, or the ordering of the winding- up or liquidation of its affairs, with said order or decree continuing unstayed and in effect for a period of sixty (60) consecutive days.

3.6 Subsequent Information

3.6.1 If any of the events or actions described in Sections 3.5.1.3, 3.5.1.4 and
3.5.1.6 above, shall be initiated or imposed during the term of service under a Contract, Customer shall provide notification to Moss Bluff within two (2) Business Days of any such initiated or imposed event or action. Customer shall also promptly provide such additional Customer credit information as may be reasonably required by Moss Bluff, at any time during the term of service under a Contract.

3.6.2 After receipt of a Request for Service or a request for an amendment to an existing service, Moss Bluff may require that a potential Customer furnish additional information as a prerequisite to Moss Bluff offering to execute a Contract with the potential Customer. Such information may include proof of the potential Customer's lawful right and title to cause the Gas to be delivered to Moss Bluff for storage and of the potential Customer's contractual or physical ability to cause such Gas to be delivered to and received from Moss Bluff.

3.7 Execution of Contracts. A Contract shall be executed by Customer and Moss Bluff following the completion of the open season process and/or the completion of the approval process. All Hub Services Contracts, all amendments to Hub Services Contracts, all Exhibit(s) A to Customer's Hub Services Contract with a transaction term of two (2) years or less, all Firm Basis Contracts with a term of two (2) years or less and all amendments to Firm Basis Contracts with a term of two (2) years or less shall be executed electronically via the LINK(r) System by Customer and Moss Bluff. All Exhibit(s) A to Customer's Hub Services Contract with a transaction term of more than two (2) years, all Firm Basis Contracts with a term of more than two (2) years and all amendments for Firm Basis Contracts with a term of more than two (2) years shall be executed in writing by Customer and Moss Bluff. If Moss Bluff has notified Customer that a Contract is ready for electronic execution or has tendered a Contract for execution to a potential Customer, as applicable, such Contract shall be executed within fifteen (15) days from the date Customer was notified or the Contract was tendered by Moss Bluff but in no event later than the date service commences under the Contract. For Firm Basis service, Moss Bluff will not be required to tender a Contract to a potential Customer for execution that relates to Requests for Service for which Moss Bluff does not have sufficient available Firm Basis capacity, or injection and withdrawal capabilities.

3.8 Extension of Service Agreements. Prior to the expiration of the term of a Contract, Moss Bluff and Customer may mutually agree to an extension of the term of the Contract (the exact length of which is to be agreed upon on a case- by-case basis, in a not unduly discriminatory manner).

3.9 Customer's Performance. Customer is required to provide to Moss Bluff (1) the State of the consumption of Gas that is to be withdrawn from storage, and
(2) such other information required in order for Moss Bluff to comply with any FERC reporting or other requirements.

3.10 Complaints. In the event that a Customer or potential Customer has a complaint relative to service, the Customer or potential Customer shall provide a description of the complaint, including the identification of the service request (if applicable), and communicate it to Moss Bluff. Information regarding the appropriate contact personnel shall be posted on Moss Bluff's Internet Web site.

Moss Bluff will respond orally within three (3) Business Days from the date of receipt of a complaint. Moss Bluff shall respond in writing within thirty (30) days of receipt of the complaint advising Customer or a potential Customer of the disposition of the complaint. In the event that the required date of Moss Bluff's response falls on a Saturday, Sunday or a holiday that affects Moss Bluff, Moss Bluff shall respond by the next Business Day.

3.11 Information.

3.11.1 Any person may request information by contacting Moss Bluff at the following:

Moss Bluff Hub, LLC
Attn: Marketing Department 
915 N. Eldridge Parkway, Suite 1100
Houston, Texas 77079
Telephone: 1-800-827-LINK or in Houston, 713-989-LINK

3.11.2 A list of phone numbers for Moss Bluff's dispatch and control personnel, who are on-call 24-hours a day, will be posted on Moss Bluff's Internet Web site.

3.11.3 Each Customer will provide to Moss Bluff a list of phone numbers of Customer's personnel who will be available, including those on a 24- hour a day basis.

4. PRIORITY, SCHEDULING AND CURTAILMENT OF SERVICE

4.1 Priority of Service. Any Customer executing a Contract with Moss Bluff shall be entitled to the injection, storage, Parking, Wheeling, Loaning, or withdrawal of Gas, in the following order of declining priority, as applicable based on the operational constraint:

4.1.1 Firm Basis services at primary Point(s) of Receipt, not in excess of MDRQ, and at primary Point(s) of Delivery, not in excess of MDDQ, provided that, on an RRC Curtailment Day, Intrastate Firm Basis Services shall be scheduled in the following order of declining priority, based on the Customer End Use Type, pursuant to the RRC Curtailment Rule (hereinafter defined as "RRC Curtailment Priorities"):

i. Human Needs: firm deliveries to human needs customers and firm deliveries of natural gas to local distribution systems which serve human needs customers;
ii. Electric Generation: firm deliveries to electric generation facilities;
iii. Industrial Safety: firm deliveries to industrial and commercial users of the minimum natural gas required to prevent physical harm and/or ensure critical safety to the plant facilities, to plant personnel, or the public when such protection cannot be achieved through the use of an alternate fuel;
iv. Small Industrial: firm deliveries to small industrials and regular commercial loads that use less than 3,000 Mcf per day;
v. Industrial Gas Only Operation: firm deliveries to large industrial and commercial users for fuel or as a raw material where an alternate fuel or raw material cannot be used in operation and plant production would be impacted or shut down completely;
vi. Industrial Alternate Operation: firm deliveries to large industrial and commercial users for fuel or as a raw material where an alternate fuel or raw material can be used, and operation and plant production would be impacted or shut down completely; and
vii. Other: firm deliveries to customers that are not covered by the priorities listed above.
4.1.2 Firm Basis services at secondary Point(s) of Receipt or Delivery, Firm Basis services at primary Point(s) of Receipt in excess of MDRQ but less than or equal to MDIQ, or Firm Basis services at primary Point(s) of Delivery in excess of MDDQ but less than or equal to MDWQ, provided that, on an RRC Curtailment Day, Intrastate Firm Basis Services shall be scheduled in accordance with the RRC Curtailment Priorities.

4.1.3 Interruptible Basis services including Excess Injection and Excess Withdrawal of Firm Basis Contracts, Parking, Wheeling, or Loaning service pursuant to Section 4.2 below.

4.2 Interruptible Basis Services: As applicable based on the operational constraint, contracts relating to Excess Injection and Excess Withdrawal on Firm Basis Contracts and all Hub Services are listed in the following order of declining priority:

4.2.1 The order of priority relating to requests for enhanced park or loan quantities on Hub Services Contracts shall be based on the economic value to Moss Bluff using the applicable rates agreed to by Moss Bluff and Customer, with the transaction generating the highest economic value to Moss Bluff given highest priority.

4.2.2 The order of priority relating to requests for interruptible park or loan quantities on Hub Services Contracts shall be based on the economic value to Moss Bluff using the applicable rates agreed to by Moss Bluff and Customer, with the transaction generating the highest economic value to Moss Bluff given highest priority.

4.2.3 The order of priority relating to requests for wheeling quantities on Hub Services Contracts and Excess Injection and Excess Withdrawal on Firm Basis Contracts shall be based on the economic value to Moss Bluff using the applicable rates agreed to by Moss Bluff and Customer, with the transaction generating the highest economic value to Moss Bluff given highest priority.

4.2.4 Should two or more Interruptible Basis Customers have the same priority, as determined pursuant to this Section 4.2, capacity will be allocated to each Customer on a pro rata basis, according to the quantities nominated by each Customer.

4.3 Curtailment of Service.

4.3.1 If on any Gas Day, due to any cause whatsoever, Moss Bluff's capability to receive or deliver Gas is impaired so that Moss Bluff, in its discretion, determines that it is unable to receive or deliver all the quantities which are scheduled, then Moss Bluff shall reduce scheduled service beginning with Interruptible Basis services in Section 4.2 and continuing with the Firm Basis services in Section 4.1. Subject to Section 4.3.1.1 below regarding curtailment of Intrastate Firm Basis Service on an RRC Curtailment Day, if Firm Basis service must be curtailed, curtailment of storage service to Firm Basis Customers shall be done on a pro rata basis according to scheduled quantities. Curtailment of service for (i) wheeling quantities on Hub Services Contracts and Excess Injection and Excess Withdrawal on Firm Basis Contracts, and (ii) all Hub Services other than wheeling, shall be made in the reverse order of the priority for those two categories set forth in Section 4.2, and within each of the two categories, based on the economic value to Moss Bluff in the reverse order of priority set forth in Section 4.2, with the transaction generating the lowest economic value to Moss Bluff being curtailed first. Any ties for Interruptible Service shall be curtailed on a pro rata basis, according to the quantities scheduled for each Customer.

4.3.1.1	On any RRC Curtailment Day, Intrastate Firm Basis Service shall be curtailed in descending order based on the RRC Curtailment Priorities. Upon the occurrence of an RRC Curtailment Event, available capacity will initially be allocated pro rata between Interstate Firm Basis Service and Intrastate Firm Basis Service based on the percentage of firm Interstate scheduled quantities and firm Intrastate scheduled quantities as of the most recent Nomination Cycle. Once the initial allocation between available capacity for Interstate Firm Basis Service and Intrastate Firm Basis Service is established, it will remain in place until the earlier of: (i) the next Timely Nomination Cycle, (ii) any change in the amount of available capacity, or (iii) such time as Moss Bluff shall have determined that the RRC Curtailment Event has ended. During any RRC Curtailment Day, nominations for Intrastate Firm Basis Service will be scheduled in accordance with the RRC Curtailment Priorities based on the Customer End Use Type. 

4.3.2 Moss Bluff shall provide Customer notice of any curtailment as soon as practicable under the circumstances. Such notice shall be made by e-mail or via the LINK(r) System, as appropriate, and shall state the reduced quantities of Gas that Moss Bluff estimates it will be able to park, loan, wheel, store, inject or withdraw and the estimated duration of the curtailment.

4.4 Curtailment Liability. Moss Bluff shall not be liable for any loss or damage to any person or property caused, in whole or in part, by any curtailment of service, except to the extent caused solely by Moss Bluff's gross negligence or willful misconduct. Customer agrees to indemnify Moss Bluff from and against any and all claims resulting from, arising out of, or in any way related to an curtailment of Customer's service, regardless of cause (but not to the extent caused by the gross negligence or willful misconduct of Moss Bluff).

4.5 Excess Injections/Withdrawals. Moss Bluff shall not be obligated on any Gas Day to inject Gas into storage, withdraw Gas from storage, or store Gas for Customer in excess of Customer's MDIQ, MDWQ or MSQ, respectively. However, Customer may request to make injections in excess of its MDIQ and withdrawals in excess of its MDWQ. Such a request by Customer shall be submitted to Moss Bluff by nomination, and shall be received by Moss Bluff in accordance with the nomination and scheduling provisions as set forth in Section 8 of this Statement. In the event that Customer makes such a request, Moss Bluff will authorize the Excess Injection or Excess Withdrawal to the extent Moss Bluff determines, in its discretion, that additional injection or withdrawal flexibility exists during the time period of the request and in accordance with Section 4.2, Interruptible Basis Services.

5. STORAGE OPERATIONS

5.1 Receipts and Deliveries. Customer shall tender or cause to be tendered to Moss Bluff at the Point(s) of Receipt any Gas which Customer desires to have injected into storage plus the applicable Fuel Gas quantity. Customer shall also receive or cause to be received Gas requested to be withdrawn from storage at the Point(s) of Delivery upon tender for delivery by Moss Bluff.

5.2 Operating Conditions. Subject to the operating conditions of Customer's Transporter(s) and the Storage Facilities, Moss Bluff shall receive Gas for injection from Customer at the Point(s) of Receipt and deliver Gas to Customer at the Point(s) of Delivery, as scheduled by Customer from time to time; provided that Moss Bluff shall not be obligated to receive for injection any quantity of Gas (i) in excess of Customer's Maximum Daily Injection Quantity, unless Moss Bluff has authorized an Excess Injection as provided in Section 4.5 above, (ii) in excess of the Maximum Daily Receipt Quantity specified in an exhibit to Customer's Firm Basis Contract or Hub Services Contract, as applicable, or (iii) if the injection would cause the quantity of Gas stored for Customer's account to exceed Customer's Maximum Storage Quantity. Moss Bluff shall not be obligated at any time to deliver to Customer any quantity of Gas that is greater than (i) Customer's Maximum Daily Withdrawal Quantity, unless Moss Bluff has authorized an Excess Withdrawal as provided for in Section 4.5 above, (ii) in excess of the Maximum Daily Delivery Quantity specified in an exhibit to Customer's Firm Basis Contract or Hub Services Contract, as applicable, or (iii) the balance in Customer's Gas Storage Inventory Account.

5.3 In the event that batch flowing nominated volumes of less than 5,000 Dth per Day is deemed operationally impractical by Transporter or Moss Bluff, and should Moss Bluff receive nominations for the injection or withdrawal of gas, which after aggregation with other nominations commencing at the same time and same meter, results in a net metered volume less than or equal to 5,000 Dth per Day, Moss Bluff will attempt, but shall not be required, to schedule such nominations. However, if any single or combination of nominations is scheduled such that the aggregated nominated volumes result in a net metered volume less than or equal to 5,000 Dth per Day, all nominations may be reduced on a pro-rata basis such that the net metered volume will be zero. Moss Bluff will verbally notify the affected Customer(s) within four (4) hours of being notified of changes to nominations which would result in reductions as provided herein.

5.4 Default. Moss Bluff may suspend or terminate service for a breach or default by Customer under a Contract, including without limitation, Customer's breach or default of any part of this Statement.

5.5 Storage Balances.

5.5.1 Prior to the end of the contract term, Customer must physically withdraw all Gas stored by Moss Bluff for Customer's account pursuant to the expiring Contract. If, by the end of the Gas Day that is the last Gas Day of the contract term, Customer has not withdrawn the Gas, then Moss Bluff may take, free and clear of any adverse claims, title to such Gas as Customer was required, but failed, to withdraw; provided, however, that only those quantities not withdrawn shall become the property of Moss Bluff, free and clear of any adverse claims.

5.5.2 If Customer was unable to withdraw its Gas due to an interruption of Customer's withdrawal service during the last ten (10) days before termination, Customer shall be allowed one extra day following the end of the term of Customer's Contract for each day of the interruption of Customer's withdrawal service, or such other time period as agreed upon by Moss Bluff and Customer, to withdraw its Gas.

6. WHEELING OPERATIONS

6.1 Receipts and Deliveries. Customer shall tender or cause to be tendered to Moss Bluff at the Point(s) of Receipt located on its system any Gas which Customer desires to have wheeled plus any applicable Fuel Gas quantity. Customer shall also receive or cause to be received Gas requested to be wheeled at the Point(s) of Delivery located on Moss Bluff's system.

6.2 Operating Conditions. Subject to the operating conditions of the Transporter(s) and the Storage Facilities, Moss Bluff shall receive Gas for Wheeling from Customer at the Point(s) of Receipt and deliver Gas to Customer at the Point(s) of Delivery, as scheduled by Customer from time to time.

6.3 Simultaneous Injections and Withdrawals. In the event that Customer nominates simultaneous injections and withdrawals of Gas on the same Gas Day on its Firm Storage Service Contract or No-Notice Storage Service Contract and to the extent such quantities overlap and either (i) the nominated injection quantity exceeds the difference between the Maximum Storage Quantity specified on Exhibit A of such Contract and Customer's Storage Inventory ("Customer's Remaining Space") or (ii) the nominated withdrawal quantity is greater than Customer's Storage Inventory, that portion of the nominated quantity that exceeds Customer's Remaining Space or Customer's Storage Inventory, as applicable, shall be deemed to be an interruptible wheeling service for scheduling purposes and shall be scheduled according to the provisions of Section 4.2 of this Statement.

6.4 In the event that batch flowing nominated volumes of less than 5,000 Dth per Day is deemed operationally impractical by Transporter or Moss Bluff, and should Moss Bluff receive nominations for the injection or withdrawal of gas, which after aggregation with other nominations commencing at the same time and same meter, results in a net metered volume less than or equal to 5,000 Dth per Day, Moss Bluff will attempt, but shall not be required, to schedule such nominations. However, if any single or combination of nominations is scheduled such that the aggregated nominated volumes result in a net metered volume less than or equal to 5,000 Dth per Day, all nominations may be reduced on a pro-rata basis such that the net metered volume will be zero. Moss Bluff will verbally notify the affected Customer(s) within four (4) hours of being notified of changes to nominations which would result in reductions as provided herein.

7. TITLE TRANSFERS OF GAS IN STORAGE

7.1 Gas Transfer. A Customer may sell Gas from its Gas Storage Inventory Account from one Contract to any other Contract if:

7.1.1 Customer selling Gas initiates a request for Title Transfer via the LINK(r) System identifying the details of the Title Transfer transaction, and Customer purchasing Gas approves or rejects request for Title Transfer within three
(3) Gas Days; and

7.1.2 The Title Transfer results in a Storage Inventory, Park Balance or Loan Balance, as applicable, for each Customer that is equal to or greater than zero and equal to or less than the Maximum Storage Quantity, Maximum Park Quantity or Maximum Loan Quantity, as applicable and as specified on Exhibit A to Customer's Firm Storage Service Contract, Exhibit A to Customer's No-Notice Storage Service Contract, or Exhibit A to Customer's Hub Services Contract, as applicable.

7.1.3 The jurisdictional warranties associated with transferor Customer's Gas will become the warranty obligation of transferee Customer.

7.2 Confirmation. Moss Bluff will recognize the Title Transfer for purposes of computing the balance(s) in each Customer's Gas Storage Inventory Account and applicable Injection and Withdrawal Capacity on a prospective basis and will either approve or reject a Title Transfer request within one (1) Business Day after receipt of such request.

7.3 For each Title Transfer performed pursuant to this section, each Customer shall pay the Title Transfer rate as agreed upon by each Customer and Moss Bluff.

8. NOMINATION

8.1 Nominations. For any Gas Day when Customer desires Moss Bluff to receive and inject Gas into, or to withdraw or wheel and deliver Gas from storage, Customer shall submit, in accordance with the timelines specified in Section 8.3 below, a nomination via the LINK(r) System, unless another form of submittal has been mutually agreed upon by Customer and Moss Bluff, that includes but is not limited to the following information: quantity to be injected or withdrawn, flow date(s), Point of Receipt, Point of Delivery, upstream transportation party (for injections), downstream transportation party (for withdrawals), Customer name and Contract number. Customer's Nom Service Type will be designated as a nomination for either Interstate Service or Intrastate Service based on the Point of Receipt and Point of Delivery included in the nomination, in accordance with the provisions of Section 19.2 below, unless otherwise expressly designated by Customer via the LINK(r) System in accordance with Section 19.2.2 below for service that would otherwise be deemed to be Intrastate Service.  In addition, for Intrastate Firm Basis Service nominations, Customer may designate the Customer End Use Type within the Nom Use Type field via the LINK(r) System, except for when the delivery is into the Moss Bluff storage facility. When a delivery into storage is made, the Nom Use Type field will be configured as "Other".  If Customer does not make such a designation for any particular nomination, the Customer End Use Type will be deemed to be "Other."  If Customer desires no-notice service under a  No-Notice Storage Service Contract, Customer may submit an intraday nomination to Moss Bluff via the LINK(r) System to schedule such no-notice service at any time prior to the date and time at which Customer desires such no-notice service to commence. To the extent that the intraday nomination involves scheduling service for the same day of gas flow, Moss Bluff will schedule such service only if the applicable interconnected parties agree on the hourly flows of the intraday nomination and the intraday nomination otherwise satisfies the limitations under the No-Notice Storage Service Contract. To the extent that the intraday nomination involves scheduling service for the following day, Moss Bluff will schedule such service only if Moss Bluff is able to confirm the receipt and delivery of such Gas at the applicable Point(s) of Receipt and Point(s) of Delivery. All nominations shall be based on a daily quantity.

8.2 Adjustment to Storage Account. Customer shall make available and tender any Gas to be injected hereunder and receive and accept delivery, upon tender by Moss Bluff, of any Gas requested to be withdrawn from storage. Customer's Gas Storage Inventory Account shall be increased or decreased upon injection or withdrawal of Gas from storage, respectively, as adjusted for any applicable Fuel Gas. Customer shall not (unless otherwise authorized by Moss Bluff on a given Gas Day) tender for injection, nor shall Moss Bluff be obligated to receive Gas for injection or to withdraw and deliver Gas from storage, on an hourly basis at rates of flow in excess of 1/24 of Customer's MDRQ, MDIQ, MDDQ or MDWQ.

8.3 Nomination Cycles.

8.3.1 Subject to the provisions of Section 4.1 regarding the scheduling of Intrastate Firm Basis Services on any RRC Curtailment Day, Moss Bluff shall support the following nomination cycles:

a) The Timely Nomination Cycle On the day prior to gas flow:
1:00 p.m.    Nominations leave control of the Customer;
1:15 p.m. Nominations are received by Moss Bluff (including from Title Transfer Tracking Service Providers (TTTSPs));
1:30 p.m.	Moss Bluff sends the Quick Response to the Customer;
4:30 p.m.	Moss Bluff receives completed confirmations from confirming parties;
5:00 p.m.	Customer and point operator receive scheduled quantities from Moss Bluff.
Scheduled quantities resulting from Timely Nominations should be effective at the start of the next Gas Day.

b) The Evening Nomination Cycle On the day prior to gas flow:
6:00 p.m.	Nominations leave control of the Customer;
6:15 p.m.	Nominations	are	received	by	Moss	Bluff (including from TTTSPs);
6:30 p.m.	Moss Bluff sends the Quick Response to the Customer;
8:30 p.m. Moss Bluff receives completed confirmations from confirming parties;
9:00 p.m. Moss Bluff provides scheduled quantities to the affected Customer and point operator, including bumped parties (notice to bumped parties).
Scheduled quantities resulting from Evening Nominations should be effective at the start of the next Gas Day.

c) The Intraday 1 Nomination Cycle On the current Gas Day:
10:00 a.m.   Nominations leave control of the Customer;
10:15 a.m. Nominations are received by Moss Bluff (including from TTTSPs);
10:30 a.m. Moss Bluff sends the Quick Response to the Customer;
12:30 p.m. Moss Bluff receives completed confirmations from confirming parties;
1:00 p.m. TSP provides scheduled quantities to the affected Customer and point operator, including bumped parties (notice to bumped parties).
Scheduled quantities resulting from Intraday 1 Nominations should be effective at 2:00 p.m. on the current Gas Day.

d) The Intraday 2 Nomination Cycle On the current Gas Day:
2:30 p.m.    Nominations leave control of the Customer;
2:45 p.m. Nominations are received by Moss Bluff (including from TTTSPs);
3:00 p.m. Moss Bluff sends the Quick Response to the Customer;
5:00 p.m. Moss Bluff receives completed confirmations from confirming parties;
5:30 p.m. Moss Bluff provides scheduled quantities to the affected Customer and point operator, including bumped parties (notice to bumped parties).
Scheduled quantities resulting from Intraday 2 Nominations should be effective at 6:00 p.m. on the current Gas Day.

e) The Intraday 3 Nomination Cycle On the current Gas Day:
7:00 p.m.	Nominations leave control of the Customer;
7:15 p.m.	Nominations	are	received	by	Moss	Bluff (including from TTTSPs);
7:30 p.m. Moss Bluff sends the Quick Response to the Customer;
9:30 p.m.	Moss Bluff receives completed confirmations from confirming parties;
10:00 p.m.	TSP provides scheduled quantities to the affected Customer and point operator.
Scheduled quantities resulting from Intraday 3 Nominations should be effective at 10:00 p.m. on the current Gas Day.   is not allowed during the Intraday 3 Nomination Cycle.

8.3.2 Nominations will be processed for scheduling in accordance with the scheduling priority levels as described in Section 4.1 of this Statement.

8.3.3 Notices provided to Moss Bluff pursuant to this Section 8 must be submitted via the LINK(r) System, unless another form of submittal has been mutually agreed upon by Customer and Moss Bluff. All notices required to be provided to Customer pursuant to this Section 8 shall be provided via the LINK(r) System. Customer shall provide notice of any changes in deliveries to or receipt from Moss Bluff to Customer's Transporter(s) and shall be responsible for, and shall hold Moss Bluff harmless from, any and all liabilities and expense resulting from any such changes.

8.3.4 In the event Customer does not submit a timely nomination or desires to alter an existing nomination, subject to the provisions of Section 4.1, Customer shall have the right to submit an intraday nomination to revise Customer's scheduled quantities, Point(s) of Receipt and/or Point(s) of Delivery on a prospective basis prior to the end of the Gas Day; provided, however, that such intraday nomination will be processed after all timely nominations have been scheduled. Such intraday nomination shall be implemented by Moss Bluff to the extent and only to the extent that Moss Bluff is able to confirm the receipt and delivery of such Gas at the Point(s) of Receipt and Point(s) of Delivery. The interconnected parties should agree on the hourly flows of the intraday nomination, if not otherwise addressed in the interconnected parties' contract or tariff.

8.3.5 With respect to intraday nominations for reductions in previously scheduled quantities, Moss Bluff may accept any explicitly confirmed quantity, down to and including zero, for such intraday nomination; provided, however, if such intraday nomination requires confirmation from an upstream and/or downstream interconnected pipeline, then any intraday nomination to reduce previously scheduled quantities will be subject to, and limited to, the reduced quantity confirmed by such upstream and/or downstream interconnected pipeline.

8.3.6 A Customer under a No-Notice Storage Service Contract has the option, pursuant to the rights and limitations described in Section 8.1 above, for Customer to increase or decrease its injections or withdrawals of Gas at
primary points specified in Customer's No-Notice Storage Service Contract from existing scheduled quantities, including a nomination of zero, up to Customer's MDIQ or MDWQ, as applicable, without complying with the deadlines for revised nominations under this Section
8. Further, the no-notice option is also limited by the Maximum Daily Receipt Quantities ("MDRO") and Maximum Daily Delivery Quantities ("MDDO") at such points.

8.4 Planned Maintenance. Customer acknowledges that Moss Bluff will, from time to time, engage in routine and normal maintenance of the system, undertake repairs and replacements of lines of pipe, schedule U.S. DOT compliance activities, install taps, make pig runs, test storage fields, test equipment, check or change compressor internals for different flow conditions, or engage in other similar actions affecting the capacity of any portions of Moss Bluff's facilities, Moss Bluff shall issue notices pursuant to this Section 8.4 to inform all Customers of such planned maintenance or other activities that will affect the capacity of its facilities, explaining in detail the action and the facilities affected. Such notice shall be issued via posting on the LINK(r) System. Moss Bluff shall also provide such notification via e-mail communication to those Customers that have provided e-mail address information for at least one contact person, and have requested via Moss Bluff's Web site, e-mail notification of maintenance notices issued by Moss Bluff. A notice issued pursuant to this Section 8.4 will specify the date on which the maintenance will commence and will contain an estimate of the time, duration, and impact of the maintenance activity. Moss Bluff shall exercise due diligence to schedule routine repair and maintenance so as to minimize disruptions of service to Customers but shall have no liability to Customer for such disruption. This provision is in addition to, but not co- extensive with, the force majeure provision contained in Section 18 of this Statement. A notice issued pursuant to this Section 8.4 shall be canceled when such planned maintenance or other activities have been completed.

9. POINT(S) OF RECEIPT AND POINT(S) OF DELIVERY

9.1 Point(s) of Receipt. Customer shall tender all Gas for injection into storage at the Point(s) of Receipt as specified in Customer's Contract. The quantity of Gas tendered by Customer to Moss Bluff for injection into storage shall (i) not exceed at each Point(s) of Receipt the MDRQ for such Point plus the applicable Fuel Gas in effect from time to time, or (ii) not exceed at all Point(s) of Receipt the MDIQ plus applicable Fuel Gas in effect from time to time, without the consent of Moss Bluff.

9.2 Point(s) of Delivery. Moss Bluff shall tender all Gas withdrawn from storage to Customer at the Point(s) of Delivery as specified in Customer's Contract. The quantity of Gas delivered to Customer shall (i) not exceed at each Point(s) of Delivery the MDDQ for such Point in effect from time to time, or (ii) not exceed the MDWQ at all Point(s) of Delivery in effect from time to time, without the consent of Moss Bluff.

9.3 Transportation Guidelines. The rules, guidelines, operational procedures and policies of Customer's Transporter(s), as they may be changed from time to time, shall define and control the manner in which Gas is delivered and received at the Point(s) of Delivery and Point(s) of Receipt. Moss Bluff and Customer each agree to provide to the other, in as prompt a manner as reasonable, all information necessary to permit scheduling pursuant to such requirements. In addition, Moss Bluff will not be required to begin injections or withdrawals for a Customer's account unless and until the nominations provided for in Section 8.1 have been confirmed by Customer's Transporter to Moss Bluff.

9.4 Transportation Imbalances. In the event that Moss Bluff or Customer delivers or causes to be delivered to Customer's Transporter(s) at the Point(s) of Receipt or Point(s) of Delivery a quantity of Gas not equal to the quantity of Gas received or taken by Customer or Moss Bluff, a "Transportation Imbalance" may occur. Provided that Moss Bluff has taken or delivered the quantity of Gas nominated by Customer and scheduled by Customer's Transporter(s), Customer shall be liable for all imbalances under its transportation agreements with Customer's Transporter(s) and shall be required to reimburse Moss Bluff for all charges, penalties, costs, fees and expenses which Moss Bluff is required to pay to Customer's Transporter(s) as a consequence of Customer's actions. The recovery of such penalty amounts shall be on an as-billed basis. Upon notification by Customer or Customer's Transporter(s) that a Transportation Imbalance exists because Moss Bluff failed to deliver or receive the quantity of gas nominated by Customer and scheduled by Customer's Transporter(s), Moss Bluff will endeavor to correct the Transportation Imbalance subject to any restrictions imposed by Customer's Transporter(s) but Moss Bluff shall be solely liable for any charges, penalties, costs, fees and expenses incurred or payable by either party as a result of the Transportation Imbalance. Customer agrees to use its best efforts to prevent or diminish any occurrences of imbalances.

9.5 Costs and Penalties. Customer shall hold Moss Bluff harmless for all costs and penalties which may be assessed by Customer's Transporter(s) under Customer's transportation agreement with Customer's Transporter(s). Customer and Moss Bluff shall cooperate with each other and with Customer's Transporter(s) to verify delivery and receipt of the quantities of Gas delivered hereunder on a timely basis.

9.6 Downstream and Upstream Transportation. Customer shall be responsible for transportation from the Point(s) of Delivery and payment of all transportation charges relating thereto. Customer shall be responsible for transportation to the Point(s) of Receipt and payment of all transportation charges relating thereto.

9.7 Commingling of Gas. From the time Gas is received by Moss Bluff at the Point(s) of Receipt, Moss Bluff shall have the unqualified right to commingle such Gas with other Gas in Moss Bluff's system.

9.8 Accounting Meters. In certain situations, Moss Bluff may use an accounting meter number to represent a physical location on its facilities. A Point of Receipt and/or a Point of Delivery identified on Customer's executed Contract(s) may be designated in the LINK(r) System by means of an accounting meter number and description that differs from the physical meter number and description specified on the Contract. The same rights and obligations exist for both Moss Bluff and Customer regardless of whether a location is identified in Customer's executed Contract by means of a physical meter number or an accounting meter number.

10. QUALITY

10.1 Specifications. The Gas delivered by either party to the other hereunder shall meet the quality specifications of Customer's Transporter which receives or delivers such Gas at the Point(s) of Receipt or Point(s) of Delivery located on Moss Bluff's facilities, as applicable, and unless the quality specifications of such Customer's Transporter are more stringent, shall be of such quality that it shall meet at least the following specifications:

10.1.1 The Gas delivered hereunder shall be commercially free from objectionable odors, dirt, dust, iron particles, gums, gum-forming constituents, gasoline, PCB's, and other solid and/or liquid matter, including but not limited to water, gas treating chemicals and well completion fluids and debris, which may become separated from the Gas during the storage thereof.

10.1.2 The Gas delivered hereunder shall contain not more than one fourth (1/4) of one grain of hydrogen sulfide per one hundred (100) cubic feet, as determined by the cadmium sulfate quantitative test, nor more than twenty (20) grains of total sulfur per one hundred (100) cubic feet.

10.1.3 The Gas delivered hereunder shall not contain more than two-tenths of one percent (0.2%) by volume of oxygen, shall not contain more than three percent (3%) by volume of carbon dioxide, shall not contain more than three (3%) by volume of nitrogen, and shall not contain a combined total of carbon dioxide and nitrogen components of more than four (4%) by volume.

10.1.4 The Gas delivered hereunder shall have a heating value of not less than nine hundred and sixty-seven (967) Btu's per cubic feet and not more than eleven hundred (1100) Btu's per cubic feet.

10.1.5 The Gas delivered hereunder shall have a temperature of not more than one hundred twenty degrees Fahrenheit (120 degrees F), nor less than forty degrees Fahrenheit (40 degrees F).

10.1.6 The Gas delivered hereunder shall have been dehydrated by the tendering party, by any method other than the use of a calcium chloride as desiccant, for removal of entrained water in excess of seven (7) pounds of water per million (1,000,000) cubic feet of Gas as determined by dew-point apparatus approved by the Bureau of Mines or such other apparatus as may be mutually agreed upon.

10.2 Rejection of Gas. Either Moss Bluff or Customer shall be entitled to reject any Gas tendered to it by the other which does not meet the minimum specifications of Section 10.1. Acceptance of such Gas does not constitute any waiver of Moss Bluff's right to refuse to accept similarly nonconforming Gas. In the event Customer delivers Gas containing any substance which harms or could harm Moss Bluff, the Storage Facilities or the facilities of any third party, Moss Bluff shall have the right to immediately suspend taking such Gas and Customer shall indemnify and hold Moss Bluff harmless against any claims or causes of action brought by any person or entity which arise out of or are related to the storage of such Gas and shall reimburse Moss Bluff for any and all damages arising therefrom.

11. PRESSURE AND INJECTION/WITHDRAWAL RATES

11.1 Delivery Pressures. Moss Bluff shall not be required to deliver Gas at pressures in excess of those required by Customer's Transporter(s), in excess of Customer's Transporter(s) maximum allowable operating pressure (MAOP), or in excess of 1000 Psig, whichever is less. Customer shall deliver or cause to be delivered to Moss Bluff all Gas at the Point(s) of Receipt at such pressure as may exist from time to time in the facilities of such Customer's Transporter(s) at such points, but in no event shall Moss Bluff be obligated to accept gas at a pressure in excess of 1,000 Psig or below 550 Psig at the Point(s) of Receipt.

11.2 Receipt and Delivery Rates. Moss Bluff has designed the facilities required to wheel, store, inject and withdraw Gas at the Storage Facilities based on "normal" operating pressures maintained by Customer's Transporter(s) at the Point(s) of Receipt and Point(s) of Delivery with allowances for reasonable fluctuations. In the event that conditions on the interconnected pipeline system(s) of Customer's Transporter(s) vary substantially from this "normal" design condition coincident with high levels of Customer receipt or delivery activity, Moss Bluff's capability to receive or deliver the quantities set forth in its storage contracts may be impaired, and may cause an interruption in service. In such event, services will be allocated pursuant to Section 4 herein. Customer agrees to indemnify and hold Moss Bluff harmless for any loss caused by any such interruption in service.


12. TITLE AND RISK OF LOSS

12.1 Title. Title to the Gas stored by Moss Bluff and delivered to Customer hereunder shall, at all times, be held by Customer. Customer warrants for itself, its successors and assigns, that it will have at the time of delivery of Gas for storage hereunder good title. Customer warrants for itself its successors and assigns, that the Gas it delivers hereunder shall be free and clear of all liens, encumbrances, or claims on the title to the Gas, and that it will indemnify Moss Bluff and save it harmless from all claims, suits, actions, damages, costs and expenses arising directly or indirectly from or with respect to the title to Gas tendered to Moss Bluff hereunder.

12.2 Risk of Loss. As between Customer and Moss Bluff, Customer shall be in control and possession of the Gas prior to delivery to Moss Bluff for injection at the Point(s) of Receipt and after redelivery by Moss Bluff to Customer at the Point(s) of Delivery, and shall indemnify and hold Moss Bluff harmless from any damage or injury caused thereby. Moss Bluff shall be in control and possession of the Gas after the receipt of the same for injection at the Point(s) of Receipt and until redelivery by Moss Bluff to Customer at the Point(s) of Delivery, and shall indemnify and hold Customer harmless from any damage or injury caused thereby, except for damages and injuries caused by the sole negligence of Customer. The risk of loss for all Gas wheeled, injected into, parked or stored in, and loaned or withdrawn from storage shall remain with Customer, and Moss Bluff shall not be liable to Customer for any loss of Gas, except as may be occasioned due to the intentional or grossly negligent acts or omissions by Moss Bluff. Any losses of Gas, unless due to the intentional or grossly negligent acts or omissions of Moss Bluff shall be shared proportionally by all Customers, based on each Customer's Gas Storage Inventory or park balance in relation to the total Gas Storage Inventory or park balance on the day of the loss.

12.3 Insurance. Customer shall be responsible for providing its own insurance coverage with respect to its Gas in the Storage Facility.

13. MEASUREMENT

The unit of measurement for the purpose of receipt and delivery of Gas for any services shall be in terms of MMBtus. The unit of volume for measurement of all quantities of Gas in terms of MCFs and Btu delivered to and received from storage hereunder shall be one (1) cubic foot of Gas at a base temperature of sixty degrees Fahrenheit (60? F) and at an absolute pressure of (14.65) pounds per square inch. All fundamental constants, observations, records, and procedures involved in determining and/or verifying the quantity and other characteristics of Gas delivered hereunder shall, unless otherwise specified herein, be in accordance with the standards prescribed in Report No. 3 of the American Gas Association, as now and from time to time amended or
supplemented. All measurements of Gas shall be determined by calculation into terms of such unit. All quantities given herein, unless expressly stated otherwise, are in terms of such unit. Notwithstanding the foregoing, it is agreed that, for all purposes, the Btu content of the Gas received and delivered by Moss Bluff hereunder shall be measured on a dry basis.

Moss Bluff shall install, maintain and operate, or cause to be installed, maintained and operated, the measurement facilities required hereunder. Said measurement facilities shall be so equipped with orifice meters, recording gauges, or other types of meters of standard make and design commonly acceptable in the industry, as to accomplish in Moss Bluff's sole judgment the accurate measurement of Gas delivered hereunder. The retrieval of data, calibrating and adjustment of meters shall be done by Moss Bluff or its agent.

14. RATES AND CHARGES

Moss Bluff is authorized to charge market-based rates that are individually agreed upon by Customer and Moss Bluff.1 The rates and charges paid by Customer for services provided pursuant to this Statement shall include the applicable rate components described in the applicable Rate Statement and specified in the executed Contract.

15. BILLINGS AND PAYMENTS

15.1 Monthly Statements. Except as otherwise provided herein, on or before the tenth (10th) day of each Month ("Issuing Month"), Moss Bluff shall provide to Customer a statement and an invoice which (a) set forth the Monthly Base Rates for services provided by Moss Bluff to Customer in the preceding Month ("Billed Month"); (b) identify the Point(s) of Receipt and the Point(s) of Delivery at which Customer delivered Gas to, or withdrew Gas from the Storage Facilities for the Billed Month; (c) set forth the balance in Customer's Gas Storage Inventory Account as of 9:00 a.m. of the first Gas Day and the last Gas Day of such Billed Month (adjusted to account for any Fuel Gas retained by Moss Bluff); and (d) set forth such information as may be necessary to support and explain any adjustments made by Moss Bluff (in accordance with Section 15.3 below) in determining the amount billed to Customer for such Billed Month. Such invoice shall be delivered to Customer or its agent by posting Customer's final invoice on Moss Bluff's LINK(r) System and posting a general notice of the availability of the final invoices on Moss Bluff's Informational Postings Web site. Moss Bluff will provide an e-mail notification, if an e-mail address has been designated by Customer, contemporaneously with the posting of the final invoice on Moss Bluff's LINK(r)




1 See Moss Bluff Hub Partners, L.P., Order on Petition for Rate Approval, 80 FERC ? 61,181 (1997).


System. It is the Customer's responsibility to update e-mail address information as necessary. Customer may designate an agent to receive invoices and may designate such agent to receive the e-mail notifications of the availability of Customer's final invoice on Moss Bluff's LINK(r) System.

15.2 Payments. Customer shall pay Moss Bluff by wire transfer in immediately available funds the full amount reflected on the invoice on or before the later of
(a) ten (10) days after Moss Bluff rendered the invoice to Customer, or (b) the twentieth (20th) day of the Issuing Month. If the due date for payment should fall upon a weekend or legal holiday, then such payment shall be made on the Business Day immediately prior thereto. If Customer fails to pay such amounts when due, then interest shall accrue on all unpaid amounts from the date due until paid at a rate of interest per annum equal to the prime interest rate plus two
(2) percentage points. Unless otherwise agreed to in writing by Moss Bluff, Customer shall make payment to Moss Bluff in Houston, Harris County, Texas for all services rendered.

15.3 Billing Adjustments. If an error in the amount billed in any statement rendered by Moss Bluff is discovered by either Moss Bluff or Customer, then Moss Bluff shall use its good faith efforts to correct any such billing error within thirty (30) days of the discovery of such error by Moss Bluff, if Moss Bluff discovers the error, or thirty (30) days of Moss Bluff's receipt of notification of such error from Customer, if the error is discovered by Customer. In the event a dispute arises as to the amount payable in any statement rendered by Moss Bluff hereunder, Customer shall nevertheless pay the total amount payable to Moss Bluff under the statement rendered pending resolution of the dispute. Such payment shall not be deemed to be a waiver of the right by Customer to recoup any overpayment, or by Moss Bluff to recoup any underpayment, in either case with interest thereon at the same rate specified in Section 15.2 above. All statements shall be considered final, and any and all objections thereto shall be deemed waived, unless made in writing within six (6) months of Customer's receipt thereof.

15.4 Right to Audit. Both Moss Bluff and Customer shall have the right, at any reasonable time and at their own expense, to examine and audit the books, records (including measurement, billing and payment) and charts of the other to the extent necessary to verify the accuracy of any statements or charges made under or pursuant to any of the provisions of Customer's Contract. Upon request, Customer shall also make available to Moss Bluff for audit purposes any relevant records of the Transporter(s) to which Customer has access. A formal audit of accounts shall not be made more often than once each Year. Any inaccuracy will be promptly corrected when discovered; provided, however, that neither Moss Bluff nor Customer shall be required to maintain books, records or charts for a period of more than two (2) Years following the end of the Year to which they are applicable. Neither Moss Bluff nor Customer shall have any right to question or contest any charge or credit if the matter is not called to the attention of the other in writing within two (2) Years after the end of the Year in question.

16. NOTICES

Any notice, request, demand, or statement, provided for in Customer's Contract, except as otherwise herein provided, shall be given in writing, delivered in person, by United States Mail, or via e-mail or the LINK(r) System, to the parties hereto at the addresses shown in the executed Contract or at such other addresses as may hereafter be furnished to the other party in writing.

17. TAXES

If at any time Moss Bluff is required to remit any taxes assessed on the Gas pursuant to Customer's Contract, then Moss Bluff shall have the right to collect from Customer such taxes, including any penalties and interest. Customer agrees to reimburse Moss Bluff for the taxes assessed on the Gas stored, parked, wheeled or loaned pursuant to a Contract between Customer and Moss Bluff, including any penalties and interest, within fifteen (15) days of the date of invoice from Moss Bluff. Customer shall furnish Moss Bluff information, satisfactory to Moss Bluff, to enable Moss Bluff to comply with any reports required by state or federal government and agencies. Customer recognizes that Moss Bluff may be required to file federal and state tax returns, and agrees to furnish Moss Bluff with adequate information pertaining to the taxation on the Gas. Customer shall coordinate such filings with Moss Bluff.

18. FORCE MAJEURE

18.1 Notification. In the event Moss Bluff or Customer is rendered unable, in whole or in part, by force majeure, to carry out its respective obligations, other than to make payments due for services rendered hereunder, it is agreed that upon such party giving notice and reasonably full particulars of such force majeure event relied on, then the obligations of the party giving such notice, so far as such obligations are affected by such force majeure, shall be suspended during the continuance of any inability so caused, but for no longer period, provided that such cause shall as far as is reasonably practicable be remedied with all reasonable dispatch by the party claiming force majeure.

18.2 Force Majeure. The term "force majeure" as employed herein shall mean acts of God, governmental action, strikes, lockouts or other industrial disturbances, acts of the public enemy, acts of terror, wars, blockades, insurrections, riots, epidemics, landslides, lighting, earthquakes, fires, hurricanes, tornadoes, storms, storm warnings, floods, washouts, freezes, arrests and restraints of governments and people, civil disturbances, explosions, breakage of, accidents to, or mechanical failure of machinery, equipment, lines of pipe or subsurface storage caverns regardless of how caused, failure of any Transporter(s) to receive or take any quantity of Gas tendered for receipt or delivery at the Point(s) of Receipt or Delivery hereunder, and any other causes, whether of the kind herein enumerated or otherwise, not within the control of the party claiming suspension (including, but not limited to, acts of negligence or willful misconduct of third parties, whether or not under the control employ or supervision of the party claiming suspension) and which by the exercise of due diligence such party is unable to prevent or overcome. Such term shall likewise include: (a) in those instances where either party hereto is required to obtain servitudes, rights-of- way grants, permits or licenses to enable such party to fulfill its obligations hereunder, the inability of such party to acquire, or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such servitudes, rights-of-way grants, permits or licenses; and (b) in those instances where either party hereto is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits or permissions from any governmental agency to enable such party to fulfill its obligations hereunder, the inability of such party, at reasonable cost and after the exercise of reasonable diligence, to furnish such materials and supplies or to secure such permits and permissions.

18.3 Settlement of Strikes. The settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty, and the requirement in Section 18.1 above that any force majeure event shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of any opposing party when such course is inadvisable in the discretion of the party having the difficulty.

19. LAWS AND REGULATION

19.1 Regulatory Authorities. Moss Bluff's services are subject to all present and future valid laws and lawful orders of all regulatory authorities now or hereafter having jurisdiction over the services provided by Moss Bluff. Should Customer or Moss Bluff by force of any such law or regulation imposed at any time during the term of Customer's Contract be rendered unable, wholly or in part, to carry out its obligations under the Contract, other than to make payments due hereunder, the Contract nevertheless shall continue and shall be deemed modified to conform to the requirements of such law or regulation, except as hereinafter provided. The Contract shall be modified to the least extent necessary to conform to such requirements, the primary intent of any such modification being to retain, to the greatest extent possible, the bargain of the Customer's Contract. The Contract is expressly made subject to any and all tariff and other rate filings made by Moss Bluff and approved by any federal or state regulatory body. (Customer agrees to support Moss Bluff in any such tariff or rate filing provided that Moss Bluff does not seek to obtain approval of any minimum rate in excess of those set forth in Customer's Contract). In the event that any regulatory body having jurisdiction over the Contract prohibits Moss Bluff from collecting specific rates for the services provided under the Contract, then Moss Bluff shall have the right to terminate the Contract, anything herein to the contrary notwithstanding.

19.2 Federal Jurisdiction. 

19.2.1 Hinshaw Status.  Moss Bluff is a "Hinshaw" pipeline as defined in Section 1(c) of the Natural Gas Act, 15 U.S.C. ? 717(c) and is therefore exempt from the Natural Gas Act. Customer warrants that it shall take no action or request Moss Bluff to act in any manner which adversely affects Moss Bluff's exemption from Natural Gas Act jurisdiction; provided, however, a Customer may request Moss Bluff to provide service pursuant to Section 311(a)(2) of the Natural Gas Policy Act 15 U.S.C. ? 3371(a)(2) ("Interstate Service"), in which event Customer warrants that it is in compliance with all rules and regulations applicable to such service, including, but not limited to, compliance with the "on behalf of' standard as that standard may be changed from time to time. 

19.2.2 Intrastate Service. Whenever Customer's Gas is:

(i)  both received from and delivered to a point that is not an interconnection between the Storage Facilities and the facilities of an interstate pipeline company; or

(ii)  received from any intrastate pipeline company or interstate pipeline company for injection directly into Moss Bluff storage; or

(iii)  received from any interstate pipeline and delivered to any point that is an interconnection between the Storage Facilities and the facilities of an intrastate pipeline company,  

then, Customer shall (unless Customer shall expressly advise Moss Bluff otherwise in writing at the time of submitting its storage service request to Moss Bluff) be deemed to have represented and warranted to Moss Bluff that all of the Gas received by Moss Bluff or delivered to Customer by Moss Bluff shall have been nominated for Intrastate Service and shall not subject Moss Bluff or its facilities to jurisdiction under the Natural Gas Act. 

19.2.3 Interstate Service.  Whenever Customer's Gas is delivered to or received from a point that is an interconnection between the Storage Facilities and the facilities of an interstate pipeline company, then Customer shall be deemed to have represented and warranted to Moss Bluff that  all of the Gas delivered to Customer by Moss Bluff shall have been nominated for Interstate Service and shall comply with all rules and regulations applicable to Section 311 (a)(2) of the Natural Gas Policy Act 15 U.S.C. ? 3371(a)(2).

20. MISCELLANEOUS

20.1 Assignment. The terms and provisions of this Contract shall be binding upon and inure to the benefit of the successors, assigns, personal representatives and heirs of the respective Customer and Moss Bluff. No assignment shall be made by Customer without prior written consent of Moss Bluff, which consent will not be unreasonably withheld; provided, however, Customer may transfer its interest to any affiliate by assignment, merger or otherwise without prior written consent of Moss Bluff as long as such entity has a credit status which is at least equal to or higher than that of Customer. Customer shall notify Moss Bluff within thirty (30) days that such assignment has occurred.

20.2 Breach of Regulatory Warranty. Moss Bluff shall have no obligation under this Contract if Moss Bluff, in its sole discretion, determines at any time that Customer has breached any applicable representation or warranty referenced above or that the storage service to be provided hereunder does not so qualify. Customer agrees to indemnify and hold Moss Bluff harmless from and against and shall compensate Moss Bluff for any and all actions, damages, costs, losses and expenses sustained by Moss Bluff for any and all actions, damages, costs, losses and expenses sustained by Moss Bluff relative to any breach by Customer of any representation or warranty herein expressed.

20.3 Limitation of Liability. THE PARTIES AGREE THAT LIABILITY FOR ANY DAMAGES OR LOSS INCURRED BY A PARTY RESULTING FROM A PARTY'S PERFORMANCE OF, OR FAILURE TO PERFORM, THE OBLIGATIONS HEREUNDER SHALL BE LIMITED TO DIRECT ACTUAL DAMAGES ONLY, AND THAT SUCH DIRECT ACTUAL DAMAGES SHALL BE THE SOLE AND EXCLUSIVE REMEDY AND ALL OTHER REMEDIES OR DAMAGES AT LAW OR IN EQUITY ARE WAIVED. UNLESS EXPRESSLY HEREIN PROVIDED, NEITHER PARTY SHALL BE LIABLE FOR CONSEQUENTIAL, INCIDENTAL, PUNITIVE, EXEMPLARY, OR INDIRECT DAMAGES, LOST PROFITS OR OTHER BUSINESS INTERRUPTION DAMAGES, BY STATUTE, IN TORT OR CONTRACT, UNDER ANY INDEMNITY PROVISION OR OTHERWISE. IT IS THE INTENT OF THE PARTIES THAT THE LIMITATIONS HEREIN IMPOSED ON REMEDIES AND THE MEASURE OF DAMAGES BE WITHOUT REGARD TO THE CAUSE OR CAUSES RELATED THERETO, INCLUDING THE NEGLIGENCE OF ANY PARTY, WHETHER SUCH NEGLIGENCE BE SOLE, JOINT OR CONCURRENT, OR ACTIVE OR PASSIVE.

20.4 Choice of Law. THE CONTRACT SHALL BE GOVERNED BY AND CONSTRUED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS, EXCLUDING ANY CONFLICTS-OF-LAW RULE OR PRINCIPLE WHICH MIGHT REFER SUCH CONSTRUCTION TO THE LAWS OF
ANOTHER STATE. Each of the parties to the Contract (a) irrevocably submits to the exclusive jurisdiction of any court having jurisdiction sitting in Harris County, Texas, for the purposes of any suit, action or proceeding arising out of or relating to this Contract, and (b) waives, and agrees not to assert any such suit, action or proceeding, any claim that (i) it is not personally subject to the jurisdiction of such court or of any court to which proceedings in such court may be appealed; (ii) such suit, action or proceeding is brought in an inconvenient forum; or, (iii) the venue of such suit, action or proceeding is improper.

21. ACTION ALERTS AND OPERATIONAL FLOW ORDERS

21.1 Circumstances Warranting Issuance. As specified in this Section 21, Moss Bluff shall have the right to issue Action Alerts or Operational Flow Orders ("OFO") that require actions by Customers and/or Customer's Transporter(s), as applicable, in order to (i) alleviate conditions that threaten to impair reliable service, (ii) maintain operations at the pressures required to provide efficient and reliable services, (iii) have adequate gas supplies in the system to deliver on demand, (iv) maintain service to all firm customers and for all firm services, and
(v) maintain the system in balance for the foregoing purposes. Moss Bluff shall lift any effective Action Alert or OFO, promptly upon the cessation of operating conditions that caused the relevant system problem.

21.2 Actions to be Taken to Avoid Issuance. Moss Bluff shall, to the extent reasonably practicable, take all reasonable actions necessary to avoid issuing an Action Alert or OFO. Such actions shall include, in order of priority (i) working with Customer's Transporter(s) to temporarily adjust receipts and/or deliveries at relevant Point(s) of Receipt or Point(s) of Delivery, (ii) working with Customers and/or Customer's Transporter(s), as applicable, to adjust scheduled flows on the system, or (iii) taking any other reasonable action designed to mitigate the system problem. After taking all such reasonable actions to avoid issuing an Action Alert or OFO, Moss Bluff will have the right to issue Action Alerts or OFOs, if necessary, in the circumstances described in Section 21.1.

21.3 Preliminary Notifications/Follow-up Reports. Moss Bluff shall provide, via posting on the Internet Web site, prior notice to all Customers and Customer's Transporter(s) of upcoming system events such as anticipated weather patterns and operational problems that may necessitate the issuance of an Action Alert or OFO.

21.4 Applicability of Action Alert or OFO. Moss Bluff shall make an Action Alert or OFO as localized as is reasonably practicable based on Moss Bluff's good faith and reasonable judgment concerning the situations requiring remediation such that an Action Alert or OFO will be directed first to Customers and/or Customer's Transporter(s), as applicable, causing the problem necessitating the Action Alert or OFO and second, if necessary, to all Customers and/or Customer's Transporter(s), as applicable,. Moss Bluff will tailor the Action Alert or OFO to match the severity of the known or anticipated operational problem requiring remediation as more fully set forth in Sections 21.6 and 21.7. The declaration to the affected parties of Action Alerts and Operational Flow Orders shall describe the conditions and the specific responses required from the affected parties.

21.5 Notice. All Action Alerts and OFOs will be issued via posting on the Internet Web site. Moss Bluff shall also provide such notification via e-mail communication to those Customers and Customer's Transporter(s) that have provided e-mail address information for at least one contact person, and have requested via Moss Bluff's Internet Web site, e-mail notification of critical notices issued by Moss Bluff. The Action Alert or OFO will set forth (i) the date and time of issuance, (ii) the actions Customers and/or Customer's Transporter(s), as applicable, is required to take, (iii) the time by which Customers and/or Customer's Transporter(s), as applicable, must be in compliance with the Action Alert or OFO, (iv) the anticipated duration of the Action Alert or OFO, and (v) any other terms that Moss Bluff may reasonably require to ensure the effectiveness of the Action Alert or OFO. In addition to the other information contemplated by this Section 21.5, such notice shall also include information about the status of operational variables that determine when an Action Alert or OFO will begin and end, and Moss Bluff shall post periodic updates of such information, promptly upon occurrence of any material change in the information. Moss Bluff will post a notice on the Internet Web site informing Customers and Customer's Transporter(s) when any Action Alert or OFO in effect will be lifted and specifying the factors that caused the Action Alert or OFO to be issued and then lifted, to the extent such factors are known.

21.6 Action Alerts. In the event that Moss Bluff determines that due to (i) an ongoing or anticipated weather event, (ii) a known equipment problem, or (iii) the anticipated continuation of a current system operational problem, action is necessary to avoid a situation in which the system integrity is jeopardized or Moss Bluff's ability to render firm service is threatened, Moss Bluff may issue an Action Alert as set out herein to forestall the development of the situation.

21.6.1 Issuance of Alerts. Action Alerts will be noticed in accordance with the procedures set forth in Section 21.5 and Moss Bluff will endeavor to provide a minimum of four hours notice.

21.6.2 Action Alerts can be issued to effect any of the following:

21.6.2.1 restriction of interruptible services;

21.6.2.2 restrictions of deliveries to specific Point(s) of Receipt or Point(s) of Delivery covered by an Operational Balancing Agreement to the aggregate MDRQ or MDDQ under the firm Contracts whose Primary Point(s) of Delivery, which are specified in the Contract, are at the affected locations; and/or

21.6.2.3 forced balancing such that point operators will be required to assure that nominations equal flows or that receipts and deliveries fall within the tolerance level designated in the Action Alert.

21.7 OFOs. In the event that, in Moss Bluff's judgment, immediate action is required to alleviate conditions which threaten to impair reliable firm service, to maintain operations at the pressures required to provide efficient and reliable service, to have adequate gas supplies in the system to deliver on demand, to maintain services to all firm customers and for all firm services, and to maintain the system in balance for the foregoing purposes, Moss Bluff may forego the action described in Section 21.6 and immediately issue an OFO. In the event that (i) Customers and/or Customer's Transporter(s), as applicable, does not respond to an Action Alert, (ii) the actions taken thereunder are insufficient to correct the system problem for which the Action Alert was issued, or (iii) there is insufficient time to carry out the procedures with respect to Action Alerts, Moss Bluff may issue an OFO pursuant to this Section 21.7 or take unilateral action, including the curtailment of firm service, to maintain the operational integrity of Moss Bluff's system. For purposes of this Section 21.7, the operational integrity of Moss Bluff's system shall encompass the integrity of the physical system and the preservation of physical assets and their performance, the overall operating performance of the entire physical system as an entity, and the maintenance (on a reliable and operationally sound basis) of total system deliverability and the quality of gas delivered. Moss Bluff shall post a notice on its Internet Web site specifying the factors that caused the Action Alert or OFO to be issued, to the extent such factors are known. Moss Bluff shall also provide such notification via e-mail communication to those Customers and Customer's Transporter(s) who have submitted a request, and provided e-mail address information for at least one contact person, via Moss Bluff's Internet Web site to receive e-mail notification of critical notices issued by Moss Bluff.

21.8 Termination of Action Alert or OFO. Moss Bluff shall lift any effective Action Alert or OFO promptly upon the cessation of operating conditions that caused the relevant system problem. After Moss Bluff has lifted the Action Alert or the OFO, Moss Bluff shall post a notice on its Internet Web site specifying the factors that caused the Action Alert or OFO to be issued and then lifted, to the extent such factors are known. Moss Bluff shall also provide such notification via e-mail communication to those Customers and Customer's Transporter(s) who have submitted a request, and provided e-mail address information for at least one contact person, via Moss Bluff's Internet Web site to receive e-mail notification of critical notices issued by Moss Bluff.

21.9 Penalties. All quantities tendered to Moss Bluff and/or taken by Customers and/or Customer's Transporter(s), as applicable, on a daily basis in violation of an Action Alert or OFO shall constitute unauthorized receipts or deliveries for which the applicable Action Alert or OFO penalty charge stated below shall be assessed.

21.9.1 Action Alert penalty charge for each Dekatherm of Gas by which Customer and/or Customer's Transporter(s), as applicable, deviated from the requirements of the Action Alert equal to an Action Alert Index Price calculated as 110% of the applicable daily Gas Daily posting for the Transporter on whose pipeline the deviation occurred for the day on which the deviation occurred, multiplied by the quantity by which Customer and/or Customer's Transporter(s), as applicable, deviated from the requirements of the Action Alert.

21.9.2 OFO penalty charge for each Dekatherm of Gas by which Customer and/or Customer's Transporter(s), as applicable, deviated from the requirements of the OFO equal to an OFO Index Price calculated as three (3) times the applicable daily Gas Daily posting for the Transporter on whose pipeline the deviation occurred for the day on which the deviation occurred, multiplied by the quantity by which Customer and/or Customer's Transporter(s), as applicable, deviated from the requirements of the OFO.

21.10 Liability of Moss Bluff. Moss Bluff shall not be liable for any costs incurred by any Customer and/or Customer's Transporter(s), as applicable, in complying with an Action Alert or OFO. Moss Bluff shall not be responsible for any damages that result from any interruption in service that is a result of Customer's and/or Customer's Transporter(s)', as applicable, failure to comply promptly and fully with an Action Alert or OFO, and the non-complying Customer and/or Customer's Transporter(s), as applicable, shall indemnify Moss Bluff against any claims of responsibility. However, Moss Bluff shall use reasonable efforts to minimize any such costs or damages.

21.11 Unilateral Action. In the event that (1) Customers and/or Customer's Transporter(s), as applicable, do not respond to an OFO, or (2) the actions taken thereunder are insufficient to correct the system problem for which the OFO was issued, or (3) there is insufficient time to carry out the procedures with respect to OFOs, Moss Bluff may take unilateral action, including the curtailment of firm service, to maintain the operational integrity of Moss Bluff's system. For purposes of this section, the operational integrity of Moss Bluff's system shall encompass the integrity of the physical system and the preservation of physical assets and their performance, the overall operating performance of the entire physical system as an entity, and the maintenance (on a reliable and operationally sound basis) of total system deliverability and the quality of gas delivered.

22. ELECTRONIC COMMUNICATIONS

22.1 System Description

22.1.1 Moss Bluff provides for interactive electronic communications with its Customers and other parties through the LINK(r) Customer Interface System (hereinafter called the "LINK(r) System"). The LINK(r) System shall be available on a nondiscriminatory basis to any party (such party is referred to herein as the "LINK(r) System Subscriber"), provided that such party (i) has a currently effective Valid Service Agreement, has executed a LINK(r) System Agreement prior to March 11, 2009, or has executed a LINK(r) System Agreement electronically via the LINK(r) System on or after March 11, 2009, (ii) has established its business entity in the LINK(r) System by submitting Contact Information pursuant to Section 22.4.1 below, (iii) has designated a Local Security Administrator pursuant to Section 22.3 below, and (iv) if such party desires to transmit information to or receive information from Moss Bluff via electronic data interchange, has a trading partner agreement along with a related exhibit and worksheet (collectively referred to as the "Trading Partner Agreement") that was executed prior to September 1, 2013, or has requested and executed a Trading Partner Agreement electronically via the LINK(r) System on or after September 1, 2013. A party to a LINK(r) System Agreement or a Trading Partner Agreement is responsible for ensuring that the individual executing such agreement on its behalf has the appropriate authority. Use of the LINK(r) System by such individual is acknowledgement of that authority. Moss Bluff shall not be responsible for verifying the authority of an individual to execute a LINK(r) System Agreement or a Trading Partner Agreement on behalf of a party. For purposes of this Section 22 and the form of LINK(r) System Agreement only, a "Valid Service Agreement" includes:
(a) any service agreement pursuant to any of the Rate Schedules of Algonquin Gas Transmission, LLC;
(b) any service agreement pursuant to any of the Rate Schedules of Big Sandy Pipeline, LLC;
(c) any service agreement pursuant to any of the Rate Schedules of Bobcat Gas Storage;
(c)	any service agreement pursuant to any of the Rate Schedules of East Tennessee Natural Gas, LLC;
(e) any service agreement pursuant to any of the Rate Schedules of Egan Hub Storage, LLC;
(f) any Contract between Customer and Moss Bluff;
(g) any service agreement pursuant to any of the Rate Schedules of Ozark Gas Transmission, L.L.C.;
(h) any service agreement pursuant to any of the Rate Schedules of Saltville Gas Storage Company L.L.C.;
(i) any service agreement pursuant to any of the Rate Schedules of Texas Eastern Transmission, LP; or
(j) a capacity release umbrella agreement between Customer and any of the entities identified herein.
For parties with a LINK(r) System Agreement dated prior to October 3, 2007, such LINK(r) System Agreement is hereby superseded by the provisions of this Section 22. By accessing the LINK(r) System, LINK(r) System Subscriber agrees to comply with the procedures for access to and use of the LINK(r) System as set forth in this Section 22. Moss Bluff reserves the right to implement enhancements to the LINK(r) System at its sole discretion; provided however, all such enhancements when fully operational shall be available to all LINK(r) System Subscribers. Moss Bluff will exercise due diligence to ensure the LINK(r) System operates correctly and will provide timely and non-discriminatory access to on- line LINK(r) System help features and to any information available on the LINK(r) System that LINK(r) System Subscriber is entitled to access.

22.1.2 The LINK(r) System provides on-line help, a search function that permits a LINK(r) System Subscriber to locate information concerning a specific transaction, and menus that permit LINK(r) System Subscribers to separately access the information posted by Moss Bluff on the LINK(r)
System. The LINK(r) System will permit a LINK(r) System Subscriber to electronically download information on transactions from the LINK(r) System and to separate extremely large documents into smaller files prior to such download. Moss Bluff shall maintain and retain daily back- up records of the information displayed on the LINK(r) System and the web site for three years and shall permit LINK(r) System Subscriber to review those records upon request. Completed transactions will remain on the LINK(r) System for at least ninety days after completion and will then be archived. Archived information will be made available by Moss Bluff if possible within two weeks after receipt of a Customer's request for such information. Information on the most recent entries will appear ahead of older information.

22.1.3 LINK(r) System Subscriber shall utilize the LINK(r) System for purposes of:

22.1.3.1 requesting service from Moss Bluff;

22.1.3.2 executing, tracking and amending Contracts between Customer and Moss Bluff;

22.1.3.3 providing nominations and viewing allocations and operational imbalances as a Customer of Moss Bluff;

22.1.3.4 exercising its rights as a Customer of Moss Bluff pursuant to Section 3 of the Statement or submitting a bid for capacity pursuant to such section;

22.1.3.5 viewing and downloading operational data for any gas flow day on the second subsequent gas flow day;

22.1.3.6 viewing Moss Bluff's notice of an Action Alert or an OFO as contemplated by Section 21 of this Statement; and

22.1.3.7 such other functions as may be available on the LINK(r) System from time to time.

22.2 Information. The LINK(r) System and the web site shall provide the best available information about imbalances on a daily basis. The LINK(r) System and the web site also include information allowed or required to be posted thereon by other provisions of this Statement, information that Moss Bluff is required to post pursuant to the Commission's regulations, or other information Moss Bluff chooses to post in furtherance of the operation of its system.

22.3 Local Security Administrators

22.3.1 LINK(r) System Subscriber shall designate one or more persons to perform certain security functions on the LINK(r) System ("Local Security Administrator") by submitting for each such person the Local Security Administrator Designation information via the LINK(r) System using the applicable on-line form, as such form is amended from time to time in the LINK(r) System. LINK(r) System Subscriber shall update Local Security Administrator Designation information via the LINK(r) System as such information changes. The Local Security Administrator shall, via the LINK(r) System, be responsible for (1) identifying those persons who are duly authorized by LINK(r) System Subscriber to use the LINK(r) System to perform one or more of the functions available on the LINK(r) System ("LINK(r) System User"); (2) providing LINK(r) System Users with individualized USERIDs and passwords; 
(3) maintaining LINK(r) System Users' account information; (4) adding and terminating LINK(r) System Users immediately upon a change in status requiring such addition or termination; (5) creating and modifying security rights for LINK(r) System Users; (6) approving or terminating Designation of Affiliated Companies information and Designation of Agency information pursuant to Sections 22.5 and 22.6, respectively; and (7) ensuring that USERIDs are used only as appropriate and as contemplated by this Statement and the LINK(r) System Agreement.

22.3.2 Moss Bluff shall be entitled to rely upon the representation of the LINK(r) System Subscriber's Local Security Administrator that the LINK(r) System User(s) identified by Local Security Administrator may
(i) transmit information to Moss Bluff; (ii) view information posted on the LINK(r) System; and/or (iii) perform the LINK(r) System contracting function in accordance with the security rights granted by Local Security Administrator.

22.4 Authorized Use of LINK(r) System; Confidentiality

22.4.1 LINK(r) System Subscriber shall submit Contact Information to Moss Bluff via the LINK(r) System using the applicable on-line form, as such form is updated from time to time in the LINK(r) System. In addition, LINK(r) System Subscriber shall be required to submit updated Contact Information to Moss Bluff via the LINK(r) System as such information changes. Such revised information shall supersede in its entirety any Contact Information previously submitted to Moss Bluff.

22.4.2 LINK(r) System Subscriber shall not disclose to persons other than Local Security Administrator and LINK(r) System Users that are employed by LINK(r) System Subscriber, or properly designated affiliates or agents of LINK(r) System Subscriber, and shall otherwise keep confidential, all USERIDs and passwords issued by Local Security Administrator. In addition, LINK(r) System Subscriber shall cause Local Security Administrator and LINK(r) System User(s) to refrain from disclosing to any other person, whether or not employed by LINK(r) System Subscriber, and shall otherwise keep confidential, the individualized USERID and password issued to each such LINK(r) System User.

22.4.3 LINK(r) System Subscriber shall be solely responsible for any unauthorized or otherwise improper use of USERIDs and passwords issued by or for its Local Security Administrator, including, but not limited to, the use of such USERIDs and passwords by LINK(r) System Users who are not within LINK(r) System Subscriber's employment or control.

22.4.4 Moss Bluff reserves the right to disable for due cause any USERID issued to any LINK(r) System User. Moss Bluff shall provide notice to LINK(r) System Subscriber, LINK(r) System User and/or Local Security Administrator, as applicable, at the time that the USERID is disabled by Moss Bluff. In addition, upon thirty (30) days prior notice to the LINK(r) System User and the Local Security Administrator, Moss Bluff will disable any USERID that has not been used to access the LINK(r) System for fifteen (15) consecutive months.

22.4.5 LINK(r) System Subscriber shall immediately notify Moss Bluff of the desire to delete a Local Security Administrator of LINK(r) System Subscriber by (i) e-mail to link-help@enbridge.com, or (ii) the submission via the LINK(r) System using the applicable on-line form of revised Local Security Administrator Designation information for such Local Security Administrator indicating the desire for termination. Such revised information shall supersede in its entirety any Local Security Administrator Designation information previously submitted to Moss Bluff for such Local Security Administrator. LINK(r) System Subscriber shall be solely responsible for any unauthorized actions of Local Security Administrator due to LINK(r) System Subscriber's failure to so notify Moss Bluff of the need to delete such Local Security Administrator.

22.4.6 Moss Bluff warrants that, without the express consent of LINK(r) System Subscriber or as otherwise provided in this Statement, no Moss Bluff employee or agent will disclose to any third party any non-public information regarding research performed through the use of the LINK(r) System by LINK(r) System Subscriber.

22.4.7 Any manual forms received by Moss Bluff prior to October 3, 2007, related to Contact Information, Designation of Agency, or Designation of Affiliated Companies, and any Local Security Administrator Designation Forms received by Moss Bluff prior to March 11, 2009, shall remain in full force and effect until the earlier of (i) termination by the LINK(r) System Subscriber or (ii) receipt of superseding information submitted pursuant to this Section 22.

22.5 LINK(r) System Subscriber; Affiliated Companies

22.5.1 If LINK(r) System Subscriber belongs to a group of affiliated companies and requires LINK(r) System access on behalf of one or more of said affiliates, LINK(r) System Subscriber (i) shall, or shall cause one of the affiliates of LINK(r) System Subscriber to, submit to Moss Bluff via the LINK(r) System the Designation of Affiliated Companies information, and (ii) shall cause all other parties included in the affiliation to approve the Designation of Affiliated Companies information via the LINK(r) System. The Designation of Affiliated Companies information shall be submitted and approved via the applicable on-line form, as such form is updated from time to time in the LINK(r) System. The submission pursuant to item (i) herein shall be deemed to be the submitting party's approval of the Designation of Affiliated Companies information.

22.5.2 When Designation of Affiliated Companies information changes, the LINK(r) System Subscriber shall cause revised Designation of Affiliated Companies information to be submitted and approved pursuant to Section 22.5.1 above. Such revised information shall supersede in its entirety any Designation of Affiliated Companies information previously submitted to Moss Bluff. LINK(r) System Subscriber warrants that access consistent with any Designation of Affiliated Companies information submitted and approved by LINK(r) System Subscriber and its affiliates in accordance with Section 22.5.1 above or manually submitted prior to October 3, 2007, pursuant to Section 22.4.7 above is appropriate and authorized. Determining the propriety of such access is the responsibility of LINK(r) System Subscriber and/or its affiliates, but Moss Bluff reserves the right to reject such Designation of Affiliated Companies information if it determines that granting such designation would violate any contractual, legal, or regulatory responsibility of Moss Bluff.

22.5.3 In order for LINK(r) System Users of LINK(r) System Subscriber to access the LINK(r) System on behalf of LINK(r) System Subscriber's affiliates designated pursuant Section 22.5.1 above, LINK(r) System Subscriber and each designated affiliate of LINK(r) System Subscriber must meet the requirements of a LINK(r) System Subscriber set forth in Section 22.1.1 of this Statement.

22.5.4 It is the obligation of the LINK(r) System Subscriber to notify Moss Bluff via the LINK(r) System when a company affiliation terminates, either by (i) submitting a request to terminate a company affiliation via the applicable on-line form, as such form is updated from time to time in the LINK(r) System, or (ii) submitting and approving superseding Designation of Affiliated Companies information in accordance with Section 22.5.1. An affiliate may request a termination of the company affiliation by submitting such request via the LINK(r) System. A request to terminate a company affiliation will be processed by Moss Bluff without consent from the non-requesting party.

22.6 LINK(r) System Subscriber; Agency

22.6.1 If LINK(r) System Subscriber desires to designate one or more persons or entities to act as an agent on behalf of LINK(r) System Subscriber ("Agent"), then for each such Agent, the LINK(r) System Subscriber (i) shall, or shall cause the Agent to, submit to Moss Bluff via the LINK(r) System the Designation of Agency information specifying the rights granted to the Agent and (ii) shall cause the other party to the agency relationship to approve the Designation of Agency information. The Designation of Agency information shall be submitted and approved via the applicable on-line form, as such form is updated from time to time in the LINK(r) System. The submission pursuant to item (i) herein shall be deemed to be the submitting party's approval of the information. Moss Bluff may require that LINK(r) System Subscriber provide additional documentation to confirm that LINK(r) System Subscriber desires Agent to act on its behalf.

22.6.2 In order for LINK(r) System Users of an Agent designated pursuant to Section 22.6.1 above to access the LINK(r) System on behalf of LINK(r) System Subscriber, such Agent must meet the requirements of a LINK(r) System Subscriber set forth in Section 22.1.1 of this Statement.

22.6.3 Moss Bluff may accept and fully rely upon Designation of Agency information submitted and approved in accordance with Section 22.6.1 above or manually submitted prior to October 3, 2007, in accordance with Section 22.4.7 above. Moss Bluff may fully rely upon all communications received from and direction given by Agent with respect to all actions indicated in the approved Designation of Agency information for which Agent is authorized to act on behalf of LINK(r) System Subscriber. Moss Bluff may grant Agent access to LINK(r) System Subscriber's data contained in the LINK(r) System as necessary to perform the functions identified in the approved Designation of Agency information. LINK(r) System Subscriber will defend, indemnify and hold harmless Moss Bluff from and against any and all claims, demands, liabilities and/or actions, and/or any and all resulting loss, costs, damages, and/or expenses (including court costs and reasonable attorney's fees) of any nature whatsoever, that may be asserted against or imposed upon Moss Bluff by any party associated with Moss Bluff's reliance on Designation of Agency information provided pursuant to this Section 22.6.

22.6.4 The rights specified in the approved Designation of Agency information having the latest commencement date shall supersede all prior rights granted by LINK(r) System Subscriber to Agent. In no event can an agency right granted to one Agent be simultaneously granted to another Agent. It is the obligation of the LINK(r) System Subscriber to notify Moss Bluff when an agency relationship changes or terminates, either by
(i) specifying a termination date in the approved Designation of Agency information, (ii) submitting a request to terminate an agency relationship via the LINK(r) System using the applicable on-line form, as such form is updated from time to time in the LINK(r) System, or (iii) submitting and approving superseding Designation of Agency information in accordance with Section 22.6.1. The Agent may request a termination of the agency relationship by submitting such request via the LINK(r) System. A request to terminate an agency relationship will be processed by Moss Bluff without consent from the non-requesting party.

22.6.5 LINK(r) System Subscriber and Agent must re-approve existing Designation of Agency information via the LINK(r) System using the applicable on-line form, as such form is updated from time to time in the LINK(r) System, on an annual basis. If, during this annual re-approval process, either the LINK(r) System Subscriber or the Agent desires a change to the Designation of Agency information, new Designation of Agency information must be submitted and approved in accordance with Section 22.6.1 above. Moss Bluff shall remove the security rights granted to all LINK(r) System Users of Agent pertaining to access granted by LINK(r) System Subscriber pursuant to the Designation of Agency information if LINK(r) System Subscriber and Agent do not re- approve the existing Designation of Agency information or submit and approve updated Designation of Agency information on an annual basis.

22.6.6 Agent is authorized to act on behalf of LINK(r) System Subscriber under any or all of LINK(r) System Subscriber's Contracts with Moss Bluff as such Contracts are effective from time to time, or with respect to any or all meter locations as available from time to time, respectively, as specified in the Designation of Agency information, until LINK(r) System Subscriber properly notifies Moss Bluff that the agency relationship is terminated or superseded in  accordance  with Section 22.6.4 above. The designation of an Agent by a LINK(r) System Subscriber does not provide for an assignment of the rights and obligations of any Contract between Moss Bluff and LINK(r) System Subscriber.

22.7 Liability

22.7.1 Moss Bluff shall not be liable to LINK(r) System Subscriber nor any other party in damages for any act, omission or circumstance related to the LINK(r) System occasioned by or in consequence of an event of Force Majeure as defined in Section 18 of this Statement, that is not within the control of Moss Bluff and which by the exercise of due diligence Moss Bluff is unable to prevent or overcome. To the extent the information displayed on the LINK(r) System is originated solely by Moss Bluff and such information is subsequently determined to be inaccurate, LINK(r) System Subscriber shall not be subject to any penalties otherwise collectable by Moss Bluff based on Customer conduct attributable to such inaccuracy during the period the inaccurate information was displayed on the LINK(r) System.

22.7.2 LINK(r) System Subscriber shall defend, indemnify and hold harmless Moss Bluff from and against any and all claims, demands and/or actions, and any and all resulting loss, costs, damages, and/or expenses (including court costs and reasonable attorney's fees) of any nature whatsoever, that may be asserted against or imposed upon Moss Bluff by any party as a result of the unauthorized or otherwise improper use of any USERID and/or password issued to or by LINK(r) System Subscriber and/or Local Security Administrator or any other unauthorized or improper use of the LINK(r) System by any LINK(r) System User or LINK(r) System Subscriber unless such improper use is the result of Moss Bluff's negligence or willful misconduct, including, but not limited to, distribution of USERIDs or passwords to persons that are not employed by, or agents or affiliates of, LINK(r) System Subscriber.

22.8 Electronic Mail (E-mail) Notification. For system-wide notices of general applicability, any provisions of this Statement requiring that these matters be written or in writing are satisfied by Moss Bluff utilizing electronic transmission through the LINK(r) System in accordance with the procedures for utilization of the LINK(r) System. Critical system-wide notices will be in a separate category from notices that are not critical. Moss Bluff will use electronic mail (e-mail) in order to facilitate certain notifications to Customers as required by this Statement. Customer shall provide Moss Bluff with at least one e-mail address to which these notifications can be sent, and shall be responsible for updating such information as necessary. Moss Bluff shall provide such notifications via e- mail communication to those Customers that have provided such e-mail address information and have requested, via the LINK(r) System, e-mail notification of critical notices issued by Moss Bluff. Customer shall be responsible for providing accurate e-mail notification information to Moss Bluff, including timely updates to such information as necessary. All other provisions, including Contract-specific notices, requiring items or information to be written or in writing remain unchanged unless otherwise agreed by Moss Bluff and Customer.

22.9 Rights to LINK(r) System. Moss Bluff or an affiliate of Moss Bluff is the exclusive proprietor of the programming that generates the LINK(r) System and of all the copyrights and proprietary interests therein, except insofar as any third party (whose materials are made available in the files of the LINK(r) System under license to Moss Bluff or an affiliate of Moss Bluff) possesses a copyright or proprietary interest in such materials, but not of the files of and the information displayed on the LINK(r) System. A LINK(r) System Subscriber will not by virtue of this Section 22 or the executed LINK(r) System Agreement acquire any proprietary interests in the programming that generates the LINK(r) System. As part of Moss Bluff's continuing development of the LINK(r) System, third parties may desire to acquire rights to certain parts of the programming. Moss Bluff will attempt to accommodate, when appropriate, requests by LINK(r) System Subscribers to license these rights for use in the LINK(r) System.

RATE STATEMENT - FIRM STORAGE SERVICE

RATE	UNITS

Total Storage Reservation Fee	Market Based	$/Dth/Month

A monthly charge, as specified in Exhibit A to Customer's Firm Storage Service Contract, multiplied by the Maximum Storage Quantity specified in Exhibit A to Customer's Firm Storage Service Contract.

Injection Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Firm Service Storage Contract, multiplied by the quantity of Customer's Gas injected into the Storage Facilities during a given Month. (less than or equal to the MDIQ specified in Exhibit A to Customer's Firm Storage Service Contract)

Withdrawal Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Firm Storage Service Contract, multiplied by the quantity of Customer's Gas withdrawn from the Storage Facilities during a given Month. (less than or equal to the MDWQ specified in Exhibit A to Customer's Firm Storage Service Contract)

Excess Injection Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Firm Storage Service Contract, multiplied by the quantity of Excess Injection Gas injected into the Storage Facilities during a given Month.

Excess Withdrawal Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Firm Storage Service Contract, multiplied by the quantity of Excess Withdrawal Gas withdrawn from the Storage Facilities during a given Month.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Firm Storage Service Contract

RATE STATEMENT - NO-NOTICE STORAGE SERVICE

RATE	UNITS

Total Storage Reservation Fee	Market Based	$/Dth/Month

A monthly charge, as specified in Exhibit A to Customer's No-Notice Storage Service Contract, multiplied by the Maximum Storage Quantity specified in Exhibit A to Customer's No-Notice Storage Service Contract.

Injection Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's No-Notice Storage Service Contract, multiplied by the quantity of Customer's Gas injected into the Storage Facilities during a given Month. (less than or equal to the MDIQ specified in Exhibit A to Customer's No-Notice Storage Service Contract)

Withdrawal Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's No-Notice Storage Service Contract, multiplied by the quantity of Customer's Gas withdrawn from the Storage Facilities during a given Month. (less than or equal to the MDWQ specified in Exhibit A to Customer's No-Notice Storage Service Contract)

Excess Injection Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's No-Notice Storage Service Contract, multiplied by the quantity of Excess Injection Gas injected into the Storage Facilities during a given Month.

Excess Withdrawal Fee	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's No-Notice Storage Service Contract, multiplied by the quantity of Excess Withdrawal Gas withdrawn from the Storage Facilities during a given Month.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's No-Notice Storage Service Contract

RATE STATEMENT - ENHANCED PARK SERVICE

RATE	UNITS
Enhanced Park Charge	Market Based	$/Dth/time period A charge, as specified in Exhibit A to Customer's Hub Services Contract,
multiplied by the Maximum Park Quantity Specified in Exhibit A to Customer's Hub Services Contract.

Enhanced Park Injection Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas injected into the Storage Facilities during a given Month.

Enhanced Park Withdrawal Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas withdrawn from the Storage Facilities during a given Month.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Hub Services Contract

RATE STATEMENT - ENHANCED LOAN SERVICE

RATE	UNITS

Enhanced Loan Charge	Market Based	$/Dth/time period

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the Maximum Loan Quantity Specified in Exhibit A to Customer's Hub Services Contract.

Enhanced Loan Injection Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas injected into the Storage Facilities during a given Month.

Enhanced Loan Withdrawal Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas withdrawn from the Storage Facilities during a given Month.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Hub Services Contract

RATE STATEMENT - INTERRUPTIBLE PARK SERVICE

RATE	UNITS
Interruptible Park Charge	Market Based	$/Dth/time period A charge, as specified in Exhibit A to Customer's Hub Services Contract,
multiplied by the Maximum Park Quantity Specified in Exhibit A to Customer's Hub Services Contract.

Interruptible Park Injection Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas injected into the Storage Facilities during a given Month.

Interruptible Park Withdrawal Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas withdrawn from the Storage Facilities during a given Month.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Hub Services Contract

RATE STATEMENT - INTERRUPTIBLE WHEELING SERVICE

RATE	UNITS

Interruptible Wheeling Charge	Market Based	$/Dth/time period

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas received and redelivered through Moss Bluff's pipeline header facilities and not associated with injection and withdrawal into the Storage Facilities.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's wheeled quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Hub Services Contract

RATE STATEMENT - INTERRUPTIBLE LOAN SERVICE

RATE	UNITS

Interruptible Loan Charge	Market Based	$/Dth/time period

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the Maximum Loan Quantity Specified in Exhibit A to Customer's Hub Services Contract.

Interruptible Loan Injection Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas injected into the Storage Facilities during a given Month.

Interruptible Loan Withdrawal Charge	Market Based	$/Dth

A charge, as specified in Exhibit A to Customer's Hub Services Contract, multiplied by the quantity of Customer's Gas withdrawn from the Storage Facilities during a given Month.

Fuel Gas	Market Based	$/Dth or
Percentage

The percentage of Gas that Customer shall deliver to Moss Bluff in excess of Customer's injection quantity or the amount in dollars that Customer shall pay to Moss Bluff, as applicable and specified in Exhibit A to Customer's Hub Services Contract</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>27</filing_id>
      <filing_title>Moss Bluff Address Change Filing</filing_title>
      <filing_type>980</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2023-04-18</current_effective_date>
      <ferc_order_date>2023-05-16</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>