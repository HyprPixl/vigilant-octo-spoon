<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001257</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>8</tariff_id>
    <tariff_title>Market-Based Rate Tariff</tariff_title>
    <tariff_export_date>2025-09-16T18:55Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Change to Category 2 Status</record_title>
      <record_content_desc>Tariff 3rd Rev Vol No. 10</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name>Reflects a change to Category 2 status for the northeast region of U.S., and retains Category 1 status for the remainder of the country, pursuant to Commission Staff recommendation in connection with Notice Filing made on April 16, 2012.</record_narrative_name>
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2012-11-10</proposed_effective_date>
      <priority_order>1</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>NSTAR ELECTRIC COMPANY  MARKET-BASED RATE TARIFF  PROVIDING FOR  SALES OF CAPACITY, ENERGY AND/OR ANCILLARY SERVICES  FERC Electric Tariff, Third Revised Volume No. 10                                    NSTAR ELECTRIC COMPANY  MARKET-BASED RATE TARIFF  PROVIDING FOR  SALES OF CAPACITY, ENERGY AND/OR ANCILLARY SERVICES  FERC Electric Tariff, Third Revised Volume No. 10      I. DEFINITIONS  The following words and terms used herein shall be understood to have the following meanings:    1. Buyer:  A purchaser of electric capacity, energy and/or ancillary services under this Tariff.    2. Commission:  Commission means the Federal Energy Regulatory Commission or such successor Federal regulatory agency as may have jurisdiction over this Tariff.    3. Parties:  Parties mean Seller and Buyer that have entered into a transaction pursuant to this Tariff.    4. Seller:   NSTAR Electric Company.    5. Tariff:  Tariff means this market-based rate tariff, as amended from time to time.    6. Transaction:  Transaction means a particular transaction agreed to by the Parties under this Tariff.    II. SALES OF ELECTRIC CAPACITY, ENERGY AND/OR ANCILLARY SERVICES  1. Electric Capacity and Energy:  Seller may sell electric capacity and/or energy to Buyer under this Tariff from time to time at rates, terms and conditions established by the agreement of the Parties.  All such Transactions shall be voluntary.    2. Ancillary Services:  Seller may sell the following ancillary services to Buyer under this Tariff from time to time at rates, terms and conditions established by the agreement of the Parties.  All such Transactions shall be voluntary.    a. ISO New England:  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England Inc.    b. PJM:  Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. ("PJM") and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.    c. NYISO:  Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.    d. CAISO:  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation ("CAISO") and to others that are self-supplying ancillary services to the CAISO.    e. Third-Party Ancillary Services:  Seller offers Regulation Service, Energy Imbalance Service, Spinning Reserves, and Supplemental Reserves].  Sales will not include the following:  (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier; and (3) sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers.    III. RATES  All sales shall be made at rates established by agreement between Seller and Buyer.    IV. OTHER TERMS AND CONDITIONS  All other terms and conditions shall be established by agreement between Seller and Buyer.    V. EFFECTIVE DATE  This Tariff is effective on the date specified by the Commission.    VI. REVISIONS TO THE TARIFF  Seller may file revisions to this Tariff by notifying Buyer in writing and by unilaterally making the appropriate filing with the Commission pursuant to the provisions of Section 205 of the Federal Power Act; provided, however, that such revision shall not affect the rates, terms and conditions of Transactions entered into prior to the date of such revision, unless otherwise agreed by the Parties.    VII. COMPLIANCE WITH THE COMMISSION REGULATIONS  Seller shall comply with the provisions of 18 CFR or Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning sellers market-based rate authority, including orders in which the Commission authorizes seller to engage in affiliate sales under this tariff or otherwise restricts or limits the sellers market-based rate authority.  Failure to comply with the applicable provisions of 18 CFR Part 35, Subpart H, and with any orders of the Commission concerning sellers market-based rate authority, will constitute a violation of this tariff.    VIII. WAIVERS AND AUTHORIZATIONS  Not applicable.    IX. SELLER CATEGORY  Seller is a Category 2 seller, as defined in 18 C.F.R. 35.36(a) , for the northeast region of the United States, and a Category 1 seller, as defined in 18 C.F.R. 35.36(a), for all other regions of the United States.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>15</filing_id>
      <filing_title>Revision to NSTAR Electric MBR Tariff</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id>6</associated_filing_id>
      <associated_record_id>2</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2012-11-10</current_effective_date>
      <ferc_order_date>2012-12-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>