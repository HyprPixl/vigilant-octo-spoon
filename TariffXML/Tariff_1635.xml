<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C000723</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>FERC Electric Tariffs</tariff_title>
    <tariff_export_date>2025-09-16T19:04Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule FERC No. 4</record_title>
      <record_content_desc>Black Start Agreement</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>20</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2012-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AMENDED AND RESTATED

BLACK START SERVICE AGREEMENT

BY AND BETWEEN 

AMEREN SERVICES COMPANY ON BEHALF OF AMEREN ILLINOIS COMPANY 
(d/b/a AMEREN ILLINOIS)

 AND 

DYNEGY MIDWEST GENERATION, LLC

DATED AS OF DECEMBER 27, 2011
 

AMENDED AND RESTATED
BLACK START SERVICE AGREEMENT
BY AND BETWEEN 
AMEREN SERVICES COMPANY ON BEHALF OF AMEREN ILLINOIS COMPANY 
(d/b/a AMEREN ILLINOIS )
AND 
DYNEGY MIDWEST GENERATION, LLC

This Amended and Restated Black Start Service Agreement is entered into as of the 27th day of December 2011, by and between Ameren Services Company, as agent for and on behalf of Ameren Illinois Company, an Illinois corporation d/b/a Ameren Illinois ( Ameren Illinois ), and Dynegy Midwest Generation, LLC, a Delaware limited liability company ( DMG ), for the purpose of DMG providing Black Start Service to Ameren Illinois for purposes of system re-energization and restoration following a system-wide Blackout on the Ameren Illinois Transmission System.

W I T N E S S E T H:

WHEREAS, Ameren Illinois is the owner of the Ameren Illinois T&amp;D System;

WHEREAS, DMG is the owner and operator of certain fossil-fueled generating units that are listed on Schedule A which have the capability to be started without taking electric energy from the Ameren Illinois T&amp;D System;

WHEREAS, such DMG generating units are interconnected to the Ameren Illinois T&amp;D System;

WHEREAS, Ameren Illinois has designated Ameren Services Company as its Agent in the operation of the Ameren Illinois Transmission System;

WHEREAS, Ameren Services Company, as the Transmission Operator of the Ameren Illinois Transmission System, is required to have a restoration plan for re-energization and restoration of the Ameren Illinois Transmission System;

WHEREAS, Ameren Illinois, in conjunction with its Transmission Operator, Ameren Services Company, desires to have DMG provide Black Start Service for purposes of the re-energization and restoration of the Ameren Illinois Transmission System following a system-wide Blackout on the Ameren Illinois Transmission System and DMG desires to provide such Black Start Service;

WHEREAS, Ameren Illinois and DMG have agreed to execute this Agreement in order to establish the terms and conditions of DMG s provision of Black Start Service to Ameren Illinois.



NOW, THEREFORE, in consideration of the mutual representations, covenants, and agreements hereinafter set forth, and intending to be legally bound hereby, Ameren Illinois and DMG covenant and agree as follows:
 
ARTICLE 1
DEFINITIONS AND USAGES

1.1 Definitions.  Whenever used with initial capitalization in this Agreement, the following terms shall have the following meanings:

 Agent  shall mean Ameren Services Company on behalf of Ameren Illinois.

 Agreement  shall mean this Amended and Restated Black Start Service Agreement between Ameren Illinois and DMG, including all Schedules attached hereto, and any amendments hereto or thereto.

 ADR  shall mean Alternative Dispute Resolution.

  Ameren Illinois  shall have the meaning assigned to such term in the first paragraph hereof.

 Ameren Illinois Distribution System  shall mean the facilities owned, controlled, or operated by Ameren Illinois, either jointly or individually, for the purposes of providing distribution services.

 Ameren Illinois Transmission System  shall mean the facilities owned, controlled, or operated by Ameren Illinois, either jointly or individually, for the transmission of power and energy.

 Ameren Illinois T&amp;D System  shall mean the Ameren Illinois Transmission System and the Ameren Illinois Distribution System, collectively.

 Applicable Laws and Regulations  shall mean all duly promulgated applicable federal, state and local laws, regulations, rules, ordinances, codes, decrees, judgments, directives, or judicial or administrative orders, permits and other duly authorized actions of any Governmental Authority.

 Black Start Capable  shall mean an electric generating unit that is capable of being started without electrical energy being supplied from the Ameren Illinois Transmission System or the Ameren Illinois Distribution System.

 Black Start Service  shall mean the services provided by DMG to Ameren Illinois under the terms of this Agreement to deliver electric energy to Ameren Illinois at the Interconnection Point(s) following a Blackout.

 Blackout  shall mean a total or partial loss or interruption of electric power on the Ameren Illinois Transmission System that requires the delivery of electric energy from one or more of the Units to restart Designated Generation Resources to re-energize and restore the Ameren Illinois Transmission System to normal operating condition.

"Breaching Party" shall have the meaning assigned to such term in Section 11.2 of this Agreement.

"Claim" shall have the meaning assigned to such term in Section 10.2.1 of this Agreement.

 Confidential Information  means any plan, specification, pattern, procedure, design, device, list, concept, policy or compilation relating to the present or planned business of a Party regardless of whether such Confidential Information is conveyed orally, electronically, in writing, through inspection, observed by either Party while visiting the premises of the other Party, or otherwise deduced by the other Party.  

"Default" shall have the meaning assigned to such term in Section 11.2 of this Agreement.

 Designated Generation Resource  shall mean the generating unit listed on Schedule A as being the generating resource to be started with electric energy supplied by the applicable Unit or Units.

 Designated Transmission Path  shall mean the direct transmission circuit between the Interconnection Point for the applicable Unit(s) and the Designated Generation Resource as listed on Schedule A. 

 DMG  shall have the meaning assigned to such term in the first paragraph hereof. 

 Effective Date  shall mean the date on which this Agreement becomes effective in accordance with Section 2.1.

 Emergency  shall mean a condition or situation that, in the exercise of reasonable judgment, is deemed imminently likely to: (1) endanger public health, life or property; or (2) adversely affect or impair the Ameren Illinois Transmission System, the Facilities, or the transmission and distribution systems of others to which the Ameren Illinois Transmission System is directly or indirectly connected; provided, however, that conditions or situations caused solely by economic reasons shall not constitute an Emergency.

 Facility  or  Facilities  shall mean the Units and the generation-related assets used, owned and/or leased by DMG in connection with the Units and shall include such generation-related assets acquired by DMG after the Effective Date for use in connection with the Units.

 FERC  shall mean the Federal Energy Regulatory Commission or any successor to the authority thereof. 

 Force Majeure  shall mean an event or occurrence or circumstance beyond the reasonable control of and without the fault or negligence of, and that could not have been avoided by reasonable foresight and/or diligence by, the Party claiming Force Majeure, including, but not limited to, acts of God, labor dispute (including strike), flood, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance, sabotage, acts of public enemy, or explosion, which, in any of the foregoing cases, by the exercise of due diligence, including the taking of actions in accordance with Good Utility Practice, such Party is unable to overcome, and which wholly or in part prevents such Party from performing its obligations under this Agreement.  Mere economic hardship of a Party does not constitute Force Majeure.

 Good Utility Practice  shall mean any of the practices, methods and acts engaged in or approved by a significant portion of the electric industry during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be acceptable practices, methods, or acts generally accepted in the region. Good Utility Practice shall include, but not be limited to, compliance with Applicable Laws and Regulations, applicable standards, the National Electric Safety Code, and the National Electrical Code, as they may be amended from time to time, including the criteria, rules and standards of any successor organizations. 

 Governmental Authority  shall mean any federal, state, local or other governmental regulatory or administrative agency, court, commission, department, board, or other governmental subdivision, legislature, rulemaking board, tribunal, or other governmental authority having jurisdiction over the Parties, their respective facilities, or the respective services they provide.

 ICC  shall mean the Illinois Commerce Commission or any successor to the authority thereof. 

"Indemnified Party" shall have the meaning assigned to such term in Section 10.2.1 of this Agreement.

"Indemnifying Party" shall have the meaning assigned to such term in Section 10.2.1 of this Agreement.

 Interconnection Points  are those points identified as Interconnection Points in the Second Revised Interconnection Agreement by and between Illinois Power Company and Dynegy Midwest Generation, Inc. dated as of November 30, 2000, as revised as of March 29, 2001 and revised as of January 8, 2004, and as such agreement that may be amended from time to time.

 NERC  shall mean North American Electric Reliability Council or any successor to the authority thereof. 

 Net Electric Output  shall mean the total output of electric energy of each Unit identified in Schedule A, net of the auxiliary electric load of the applicable Facility, including transformer and other losses.

"Non-Breaching Party" shall have the meaning assigned to such term in Section 11.2 of this Agreement.

 Parties  shall mean Ameren Illinois and DMG collectively.

 Party  shall mean Ameren Illinois and DMG individually. 

"Permitted Recipient" shall have the meaning assigned to such term in Section 14.3.

 Restoration Plan  shall have the meaning assigned to such term in Section 3.5.

 RTO  shall mean the regional transmission organization, if any, that assumes functional control of the transmission systems of its transmission-owning members, including Ameren Illinois. 

 Schedule  shall mean any of the schedules, designated as Schedule A, attached to this Agreement and which are incorporated herein by reference. 

 SERC  shall mean the SERC Reliability Corporation, a regional reliability organization, or any successor to the authority thereof, or any regional reliability organization of which Ameren Illinois is a member.

  Transmission Providers  shall mean those entities that own, operate, or control facilities used for the transmission of electric energy in interstate commerce and are subject to the requirements of FERC Order No. 888, as amended, either by operation of law or voluntary submission to its requirements.

 Transmission Operator  shall mean Agent or the persons or entity otherwise designated by Ameren Illinois to operate the Ameren Illinois Transmission System and to coordinate the interconnection of the Facilities with the Ameren Illinois Transmission System.

 Units  shall mean those Black Start Capable fossil-fueled generating units listed on Schedule A. 

1.2 Interpretation.  The following terms and conditions shall apply in any interpretation and construction of this Agreement.

Unless preempted by federal law, this Agreement, and the legal relations between the Parties with respect to this Agreement, shall be performed, interpreted and enforced in accordance with internal laws of the State of Illinois without regard to rules concerning conflicts of law that would direct the application of the laws of any other jurisdiction.

This Agreement sets forth the entire understanding and agreement of the Parties as to the subject matter of this Agreement and merges and supersedes all prior written and oral understandings, offers, agreements, commitments, representations, writings, discussions or other communications of every kind between the Parties pertaining to Black Start Service and any such prior agreements, understandings, offers, agreements, commitments, representations, writings, discussions or other communications shall not be used in interpreting or construing this Agreement.

This Agreement may be amended or modified only by a writing executed by the authorized representatives of both Parties.  Any purported amendment or modification that is not in writing and so executed shall be null and void from its inception.

No provision, condition or requirement of this Agreement may be waived except by mutual agreement of the Parties as expressed in writing and signed by both Parties.  No waiver by either Party of the performance of any provision, condition or requirement herein shall be interpreted, construed or deemed to be a waiver of, or in any manner release the other Party from, performance of any other provision, condition or requirement herein; nor shall it be interpreted, construed or deemed to be a waiver of, or in any manner release the other Party from future performance of the same provision, condition, or requirement; nor shall any delay or omission of a Party in exercising any right hereunder in any manner impair the exercise of any such right or any like right accruing to it thereafter.

The headings, captions and titles of this Agreement are inserted for convenience only and shall not be deemed part thereof or be taken into consideration in the interpretation or construction of this Agreement.

Whenever used herein the singular number shall include the plural, the plural shall include the singular, and the use of any gender shall include all genders.

Wherever in this Agreement provision is made for a communication to be "written" or "in writing" this means any hand-written, typewritten or printed communication, including telex, cable and facsimile transmission, provided in accordance with Article 17.

Wherever in this Agreement provision is made for the giving of notice, consent or approval by any person, such notice, consent or approval shall be in writing and the word "notify" shall be construed accordingly, unless the text specifically allows or requires the notice, consent or approval to be given in a form other than writing.

References to day or days are references to calendar days, and unless otherwise noted, specifically include weekends, holidays, or other non-work days.

A reference to an Article, Section, Paragraph or Schedule is, unless otherwise noted, to an Article, Section, Paragraph or Schedule of or to this Agreement.

A reference to any agreement or document is to that agreement or document (including attachments, exhibits and schedules thereto and, where applicable, any of its provisions) as amended, novated, supplemented, assigned or replaced.

A reference to any Party to this Agreement includes its permitted substitutes, successors and assigns.

Where an expression is defined, another part of speech or grammatical form of that expression has a corresponding meaning.

References to "include" and "including" shall be construed as "include, without limitation" and "including, without limitation. 

A reference to any statute, regulation, proclamation, ordinance, or order includes all statutes, regulations, proclamations, ordinances, or orders varying, consolidating, or replacing such statute, regulation, proclamation, ordinance, or order and a reference to a statute includes all regulations, proclamations, ordinances, and orders issued under that statute.

A reference to any authority, association or body whether statutory or otherwise shall, in the event of any such authority, association or body ceasing to exist or being reconstituted, renamed or replaced or the powers or functions thereof being transferred to any other authority, association or body, be deemed to refer respectively to the authority, association or body established or constituted in lieu thereof or as nearly as may be succeeding to the powers or functions thereof.

All Schedules referred to in this Agreement are expressly incorporated herein by reference as if set forth in full, whether or not attached hereto.  In the event of any conflict between the terms and conditions of this Agreement and the terms and conditions of any exhibit, schedule or other documents referenced herein, the terms and conditions of this Agreement shall govern and control.  

If any provision of this Agreement is held to be illegal, invalid, or unenforceable and such invalidity or unenforceability does not have a material and substantial negative impact on the rights, duties and obligations of either Party hereto (a) such provision shall be fully severable, (b) this Agreement shall be construed and enforced as if such illegal, invalid, or unenforceable provision had never comprised a part of this Agreement, and (c) the remaining provisions of this Agreement shall remain in full force and effect and shall not be affected by the illegal, invalid, or unenforceable provision or by its severance from this Agreement.  Furthermore, (i) in lieu of such illegal, invalid, or unenforceable provision, there shall be added automatically as a part of this Agreement a provision as similar in terms to such illegal, invalid, or unenforceable provision as may be possible and as may be legal, valid, and enforceable and (ii) such illegality, invalidity or unenforceability shall not affect the validity or enforceability in that jurisdiction of any other provision of this Agreement nor the validity or enforceability in other jurisdictions of that or any other provision of this Agreement. 

This Agreement shall be considered for all purposes as prepared through the joint efforts of the Parties, and shall not be construed against one Party or the other as a result of the preparation, submittal or other event of negotiation, drafting or execution of this Agreement.

ARTICLE 2
EFFECTIVE DATE; TERM; REGULATORY FILING

2.1 Effective Date.  This Agreement shall be effective on January 1, 2012, subject to acceptance by the FERC.  

2.2 Term.  This Agreement shall continue in effect until the earlier of December 31, 2012 or termination:
by either Party providing thirty (30) days  prior written notice of termination to the other Party; or
pursuant to Article 12; or
upon mutual agreement of the Parties.

Any termination under this Section 2.2 shall not take effect until FERC either authorizes any request for termination of this Agreement in accordance with its terms or accepts a written notice of termination.

2.3 Regulatory Filing.  Following its execution by the Parties, DMG shall file this Agreement with FERC as required by the Federal Power Act.  To the extent deemed necessary by Ameren Illinois, Ameren Illinois may file this Agreement with the ICC following its execution by the Parties.  The Parties agree to reasonably cooperate with each other with respect to such filing and provide any information, including the filing of testimony, reasonably required by the filing Party to comply with applicable filing requirements.  

ARTICLE 3
BLACK START SERVICE

3.1 Purpose of Service.  The Parties acknowledge and agree that the purpose of this Agreement is solely to provide to Ameren Illinois at the Interconnection Points the electric energy necessary to start the Designated Generation Resources following a Blackout and that DMG is assuming no obligations with respect to the Units, the Designated Generation Resources or otherwise except as expressly set forth in this Agreement.

3.2 Service Provided.  Subject to the terms and conditions of this Agreement, DMG shall provide Ameren Illinois with Black Start Service from the Units at the applicable Interconnection Points for the term of this Agreement.

3.3 Other Service Excluded.  Black Start Service as provided for in this Agreement shall not include any other generating, capacity or ancillary services, and the provision of any such services by DMG to Ameren Illinois shall be pursuant to the terms and conditions of a separate agreement(s) for such service(s).

3.4 No Fees or Charges.  DMG shall have no obligation to pay Ameren Illinois any wheeling or other fees, charges or compensation for electric power and/or energy transferred through Ameren Illinois s equipment or facilities pursuant to this Agreement, and Ameren Illinois waives any right it might otherwise have to collect such charges.

3.5 Restoration Plan.  In accordance with NERC Reliability Standards for Emergency Preparedness and Operations, currently EOP-005-1 System Restoration Plans, or additional NERC Reliability Standards, modifications or replacements as those may occur, Ameren Illinois shall develop a plan, consistent with the terms and conditions set forth in this Agreement, including procedures and sequencing of actions and studies, modeling or simulations to confirm same, for re-energization and restoration of the Ameren Illinois Transmission System to normal operation following a Blackout in consultation with DMG ( Restoration Plan ).  Such Restoration Plan shall not obligate DMG to any service or requirements of Black Start Service over and above those set forth in this Agreement.  Upon finalization of the Restoration Plan, Ameren Illinois shall provide DMG a copy of the Restoration Plan, including any studies, modeling or simulations performed in development of the Restoration Plan, as those studies may related to the Units.  In the event that a change is made to the Restoration Plan that affects a Unit, such change to the Restoration Plan shall become effective thirty (30) days after its receipt by DMG; provided, however, if the change to the Restoration Plan requires substantial retraining of DMG personnel to implement, such change shall become effective upon completion of such training.

3.6 Restoration Plan Requirements.  Both Parties acknowledge and agree that DMG acquired the Units from Ameren Illinois and that, although the Units have been sufficiently tested, studied and modeled to be determined to be Black Start Capable, the capabilities of the Units have not been tested, studied or modeled to determine the capabilities of the Units under all conditions.  Consequently, the Parties agree that the following requirements shall be reflected in the Restoration Plan.

3.6.1 Because the Units are not designed to, or capable of, maintaining voltage and frequency on the Ameren Illinois Transmission System by themselves, Ameren Illinois shall ensure that the Designated Transmission Path:

is de-energized and free of any faults prior to issuing any instructions to DMG pursuant to Article 5;

permits a steady state no load voltage of .95 per unit to be maintained by the Unit(s) at the Designated Generation Resource;

has sufficient load connected to it as is necessary to maintain stability and adequate voltage of the Designated Transmission Path once a Unit(s) has begun delivering electric energy to an Interconnection Point(s) of the Designated Transmission Path; and

is the lowest practical impedence transmission path to the applicable Designated Generation Resource.

3.6.2 Each Unit will deliver its Net Electric Output to the applicable Interconnection Point.  Except as permitted pursuant to Paragraph 3.6.1(iii) above, a Unit will not be required to pick up any load other than the auxiliary electric load of the applicable Facility, including transformer and other losses, and starting loads of the Designated Generation Resource(s).  Furthermore, the Unit(s) and the Facilities shall not be solely responsible for (i) re-energizing and/or restoring the Ameren Illinois Transmission System to normal operating condition, (ii) maintaining voltage and frequency on the Ameren Illinois Transmission System, (iii) picking up Ameren Illinois native load, or (iv) restoring transmission paths and interties with other electric transmission systems.  Notwithstanding the immediately preceding sentence, each Unit shall continue to deliver electric energy to the applicable Interconnection Point pursuant to Ameren Illinois s instructions for the duration of the re-energization and restoration of the Ameren Illinois Transmission System following the Blackout.

3.6.3 If any Unit is not able to comply with the requirements of the Restoration Plan, the Party becoming aware of such noncompliance shall notify the other Party in writing.  Following such notification, the Parties shall make a mutual determination of the Unit s ability to comply with the Restoration Plan regarding this parameter as of the date of the initial Black Start Capability verification test pursuant to Section 4.3 for the Unit.  If such determination indicates that a Unit operating parameter did not permit compliance with the Restoration Plan as of the date of such test, the Restoration Plan shall be revised such that the determined capability regarding this parameter as of the date of such test shall become the standard for that Unit in determining compliance with the Restoration Plan.  Notwithstanding the foregoing, DMG, consistent with Good Utility Practice, shall not knowingly cause or through degradation allow the Units to become unable to operate in a manner not in compliance with the Restoration Plan.

3.7 Electric Energy Output.  Ameren Illinois shall have sole responsibility for the Net Electric Output of the Unit(s) providing Black Start Service following its delivery to Ameren Illinois as set forth in Section 5.4 below.

3.8 Compensation for Black Start Service.  Ameren Illinois shall pay DMG for Black Start Service in accordance with Article 6 of this Agreement.

ARTICLE 4
BLACK START REQUIREMENTS AND TESTING

4.1 General.  Subject to the terms and conditions of this Agreement, DMG shall demonstrate the capability of the Unit(s) to provide Black Start Service to the Ameren Illinois Transmission System at the applicable Interconnection Point.

4.2 Black Start Capability Requirements.  Each Unit shall be required to meet the following criteria.

4.2.1 Each Unit shall be Black Start Capable and shall have the ability to start within the time specified on Schedule A for that Unit without the input of electric power from another source that requires the delivery of such electric power over the Ameren Illinois Transmission System or the Ameren Illinois Distribution System.

4.2.2 Each Unit shall have the ability to close into a dead (de-energized) bus.

4.2.3 Each Unit shall have specific procedures for the initiation, maintenance and cessation of Black Start Service pursuant to this Agreement on site. 

4.3 Black Start Capability Testing.  Each Unit shall be tested as required by NERC or SERC Reliability Standards to verify that it meets the requirements set forth in Section 4.2 above.  Black Start Capability tests shall be scheduled by DMG in consultation with Ameren Illinois; provided, however, DMG shall have the right to final determination of test dates and schedules. Ameren Illinois shall, at its own expense, have the right to observe the testing of the Units and DMG shall provide Ameren Illinois notice of each test not less than five (5) business days prior to each initial test and as much notice as practicable of any retest pursuant to Section 4.3.5 below. Ameren Illinois shall own and have sole responsibility for the electric energy output of the Unit(s) during testing and, unless otherwise agreed by the Parties in advance of the test, shall pay DMG for such testing in accordance with Article 6 of this Agreement; provided, however, DMG shall not be entitled to compensation from Ameren Illinois for any test that is not successfully completed.

4.3.1 Black Start Capability tests shall, at a minimum, include:

starting and bringing the Unit to synchronous speed without an electrical feed from the Ameren Illinois T&amp;D System; and
simulating switching needed to connect the Unit to the Interconnection Point  following a Blackout.

4.3.2 The ability of a Unit to close into a dead (de-energized) bus as required under Paragraph 4.2.2 above may be demonstrated by opening the breaker on the high side of the Unit s generator step-up transformer and then closing the generator breaker on the low side of the Unit s generator step-up transformer without the generator breaker tripping open.

4.3.3 If a Unit fails to successfully complete a Black Start Capability test, DMG shall have a seven (7) day grace period within which it may retest the Unit without financial penalty.  If the Unit does not successfully complete a new Black Start Capability test within the seven (7) day grace period immediately following a failed Black Start Capability test, DMG shall not be entitled to compensation from Ameren Illinois for the period from the time of the first unsuccessful test until the Unit successfully completes a Black Start Capability test other than compensation for any test that is successfully completed.

4.3.4 DMG shall provide Ameren Illinois records of all Black Start Capability tests for each Unit.  Such records shall include for each test:

Unit location;
Unit name;
date(s) of the test;
method used to start Unit (diesel, compressed air, high pressure natural gas, etc.);
duration of the test from start of the test until test terminated, including
(a) time test started (de-energization of all sources of AC power to Unit);
(b) time Unit startup initiated;
(c) time Unit reached nominal voltage and frequency;
(d) time breaker closed to energize equipment or load (if applicable); and
(e) time Unit shut down or test concluded/terminated.
whether the Unit was able to start without being connected to the Ameren Illinois T&amp;D System;
whether the Unit was able to close a circuit breaker into a dead (de-energized) bus, if applicable;
if a breaker was closed to energize equipment or load, a description of equipment or load energized;
whether the Unit successfully started;
whether the Unit was able to reach nominal voltage and frequency under no load conditions and capable of supplying power;
an explanation of the cause(s) of any failed test and corrective actions taken; and
unless previously provided, a copy of the black start procedures for the Unit.

ARTICLE 5
BLACK START OPERATIONS AND MAINTENANCE

5.1 General.  Ameren Illinois shall operate, maintain and control the Ameren Illinois Transmission System and DMG shall operate, maintain and control the Units: (i) in a safe and reliable manner; (ii) in accordance with Good Utility Practice; (iii) in accordance with NERC and SERC operational and/or reliability criteria, protocols, and directives applicable to black start operations; and (iv) in accordance with this Agreement.  Consistent with the proceeding sentence, DMG has sole authority to determine whether and to what extent any Unit is available for operation and the extent and timing of any maintenance of the Units.  DMG shall provide to Ameren Illinois reports concerning Unit maintenance as may be reasonably requested by Ameren Illinois.  Notwithstanding anything in this Agreement to the contrary, should it become uneconomical, in DMG s sole opinion and discretion, for DMG to operate, maintain, or use a Unit to provide Black Start Service or otherwise, nothing in this Agreement shall be construed or interpreted to require DMG to continue to operate, or maintain, such Unit, or prohibit DMG from modifying the manner in which the Unit is operated, maintained, or used, even though such action or modification may prevent or adversely impact DMG s ability to provide Black Start Service under this Agreement.  In the event that DMG removes a Unit from operation, or modifies the manner in which the Unit is operated, maintained, or used, in such a manner as to prevent or adversely impact DMG s ability to provide Black Start Service under this Agreement, such Unit shall not be used to calculate the compensation due DMG pursuant to Article 6 until such time as the Unit resumes provision of Black Start Service consistent with the terms and conditions of this Agreement, if ever.

5.2 Request for Black Start Service.  Upon notice from Ameren Illinois of the existence of a Blackout, Ameren Illinois may request that DMG place the start up and operation of the Units under the control of Ameren Illinois s dispatcher or its designated representative for the duration of the re-energization and restoration of the Ameren Illinois Transmission System following the Blackout.  Ameren Illinois s control of a Unit shall be implemented in a manner consistent with the Restoration Plan, Good Utility Practice, safe operating procedures, the design limits and equipment warranties of the Unit, and Applicable Laws and Regulations, including, but not limited to, the emissions limitations for the Unit as reflected in the Unit s air permit, and DMG shall have no obligation to comply with any operational request of Ameren Illinois that is not consistent therewith or that would place any Unit at risk.  In addition, Ameren Illinois shall not unduly discriminate between the Units and other generating facilities providing similar service(s) to the Ameren Illinois Transmission System; provided, however, that nothing in this provision shall require Ameren Illinois to request the start up and operation of a Unit to provide Black Start Service before requesting similar service(s) from other generating facilities connected to the Ameren Illinois Transmission System. 

5.3 Initiation of Black Start Service.  Subject to the requirements and limitations of Section 5.2 above, DMG shall comply with the operational instructions of Ameren Illinois s dispatcher or its designated representative related to Black Start Service for the duration of the re-energization and restoration of the Ameren Illinois Transmission System following the Blackout.  Upon receiving instructions to commence Black Start Service from a particular Unit(s), DMG shall use best efforts to man the Unit(s), prepare for black start operations, start the Unit(s) and be ready to commence generation of electric energy within the time specified in Schedule A. 

5.4 Re-energization.  Upon instructions from Ameren Illinois, DMG shall commence generation of electric energy with the specified Unit(s) and shall deliver same to the Interconnection Point associated with the Unit in question.  Unless otherwise provided in the Restoration Plan, Ameren Illinois shall be responsible for taking all actions necessary to deliver electric energy generated by the Unit(s) from the Interconnection Point to the Designated Generating Resource over the Designated Transmission Path , including maintaining the Designated Transmission Path in a fault free condition, closing of any breakers on the Ameren Illinois Transmission System and balancing connected load on the Designated Transmission Path to maintain stability thereon during and after startup of the Designated Generating Resource. 

5.5 Cessation of Black Start Service.  Upon DMG s receipt of notice from Ameren Illinois s dispatcher or its designated representative that the Ameren Illinois Transmission System has been re-energized and restored to normal operation, DMG shall cease provision of Black Start Service to Ameren Illinois and resume its normal delivery schedule. 

5.6 System Restoration Drills.  DMG shall participate in any drills initiated by Ameren Illinois or its designated representative designed to simulate restoration of the Ameren Illinois Transmission System following a Blackout; provided, however, DMG shall not be required to start or test any Unit(s) in conjunction with such drills.  Ameren Illinois shall coordinate such drills with DMG.

ARTICLE 6
COMPENSATION, BILLING AND PAYMENT

6.1 Compensation.   As compensation for DMG Black Start Service pursuant to this Agreement, Ameren Illinois shall pay DMG each month the amount shown in Schedule A.  

6.2 Invoices.  Within a reasonable time after the first day of each month, DMG shall prepare and promptly deliver to Ameren Illinois an invoice for Black Start Services provided to Ameren Illinois under this Agreement during the preceding month.  Each invoice shall delineate the month in which the Black Start Services were provided, fully describe the Black Start Services rendered, and be itemized to reflect the Black Start Services performed or provided.

6.3 Payment.  Each Black Start Services invoice shall be paid within fifteen (15) days of its receipt by Ameren Illinois.  All payments shall be made by Ameren Illinois in immediately available funds payable to DMG, or by wire transfer to a bank named and account designated by DMG.

6.4 Payment Disputes.  Ameren Illinois shall have until two (2) years after it receives an invoice to contest in good faith the correctness of any charge on such invoice.  If Ameren Illinois disputes an invoice, or an adjustment thereto, Ameren Illinois will, if it has not yet paid such invoice, pay the full amount of the invoice, including the disputed portion thereof and immediately provide DMG with notice of the disputed amount and the basis for such dispute.  DMG will promptly review the dispute, and will notify Ameren Illinois of any error in the invoice and refund the amount, if any, that Ameren Illinois is due as a result of such redetermination.  If Ameren Illinois disagrees with DMG s redetermination, then Ameren Illinois may submit the matter to senior officers of Ameren Illinois and DMG for good faith discussion and resolution of the dispute.  If such senior officers are unable to resolve the dispute following good faith discussions to do so, then either Party may proceed under the provisions of Article 16 for purposes of achieving a final resolution of such dispute.  DMG will make any refunds required hereunder to Ameren Illinois no later than the fifteenth (15th) day after the later of: (i) receipt by Ameren Illinois of such notice of redetermination; (ii) resolution of such dispute by senior officers of Ameren Illinois and DMG; or (iii) final resolution of such dispute pursuant to Article 16.  Refunds by DMG to Ameren Illinois under this Section 6.4 will include interest from the date of the original payment until the date such refund, together with interest thereon, is made, which interest will accrue at the rate provided for in Section 6.6.

6.5 Waiver.  Payment of an invoice shall not relieve Ameren Illinois from any other responsibilities or obligations it has under this Agreement, nor shall such payment constitute a waiver by Ameren Illinois of any claims it may have arising under this Agreement.

6.6 Interest.  Interest on any unpaid amounts shall be at a rate equal to two (2) percentage points above the then effective monthly prime commercial lending rate per annum announced by Citibank, NA, New York, New York office, from time to time; provided, that for any period that such rate exceeds any applicable maximum rate permitted by law, the rate shall equal said applicable maximum rate.  Interest on delinquent amounts shall be calculated from the due date of the bill to the date of payment compounded quarterly.  When payments are made by mail, invoices shall be considered as having been paid on the date of receipt of payment by DMG.
 
6.7 Default.  In the event Ameren Illinois fails to make payment to DMG on or before the due date, as set forth above, and such failure of payment is not corrected within thirty (30) calendar days after DMG notifies Ameren Illinois to cure such failure, a default by said Party shall be deemed to exist and the provisions of Article 11 shall apply.

6.8 Service During Dispute.  In the event of a billing dispute between Ameren Illinois and DMG under Section 6.4, DMG shall continue to provide Black Start Service as long as Ameren Illinois complies with the provisions of Section 6.4.

6.9 Rebilling.  DMG reserves the right to issue a revised invoice in the event the original invoice was inaccurate for any reason, provided such revised invoice is issued within two (2) years following the date on which the invoice to be corrected became due and payable.  All invoiced amounts and payments under an invoice shall be deemed true and correct two (2) years following the date on which the invoice became due and payable and no revision thereof shall be made thereafter.

ARTICLE 7
REPRESENTATIONS AND WARRANTIES

7.1 DMG.  DMG is duly organized and validly existing under the laws of the State of Delaware.  DMG is qualified to do business under the laws of the State of Delaware, is in good standing under the laws of the State of Delaware, has the power and authority to own its properties, to carry on its business as now being conducted, and to enter into this Agreement and the transactions contemplated herein and perform and carry out all covenants and obligations on its part to be performed under and pursuant to this Agreement, and is duly authorized to execute and deliver this Agreement and consummate the transactions contemplated herein.

7.2 Ameren Illinois.  Ameren Illinois is duly organized, validly existing and qualified to do business under the laws of the State of Illinois, is in good standing under its certificate of incorporation and the laws of the State of Illinois, has the corporate authority to own its properties, to carry on its business as now being conducted, and to enter into this Agreement and the transactions contemplated herein and perform and carry out all covenants and obligations on its part to be performed under and pursuant to this Agreement, and is duly authorized to execute and deliver this Agreement and consummate the transactions contemplated herein.

7.3 The Agreement.  This Agreement is the legal, valid and binding obligation of each Party upon its execution by both Parties, and upon its acceptance by the FERC becomes enforceable in accordance with its terms, except as limited by Applicable Laws and Regulations.

ARTICLE 8
ASSIGNMENT AND AGENCY

8.1 Successors and Assigns.  This Agreement, and the rights and obligations created thereby, shall bind and inure to the benefit of the successors and permitted assigns of the Parties hereto.

8.2 Assignments Requiring Consent.  Except as provided in Sections 8.3 and 8.4 below, neither Party shall voluntarily assign its rights nor delegate its duties under this Agreement, or any part of such rights or duties, without the written consent of the other Party, which consent shall not be unreasonably withheld or delayed, and any such assignment or delegation made without such written consent shall be null and void.

8.3 Assignments Not Requiring Consent.  

8.3.1 Either Party may assign its rights or delegate its duties under this Agreement, or any part of such rights or duties, without the written consent of the other Party to any person or entity that purchases or otherwise acquires, directly or indirectly, all or substantially all of the outstanding assets, shares of stock or other ownership interest, as applicable, of the assigning Party;

8.3.2 DMG may assign this Agreement or portion of this Agreement, as applicable, in conjunction with the sale of any Unit or all or any portion of the Facilities not rising to the level of  all or substantially all  of its  assets, stock or other ownership interest without Ameren Illinois s written consent as long as the creditworthiness of the assignee, or any person or entity guaranteeing the assignee s obligations under this Agreement, if any, is equal to or better than that of DMG at the time of the sale, or Ameren Illinois shall receive other adequate assurance, in a form reasonably acceptable to DMG in its sole discretion, of such assignee s ability to fulfill all of the obligations of DMG under this Agreement with respect to such Unit or Facility(ies).  DMG may also assign this Agreement or portion of this Agreement, as applicable, to any wholly-owned direct or indirect affiliate of DMG's parent which acquires DMG or any of the Units or Facilities without the written consent of Ameren Illinois.  

8.3.3 Ameren Illinois may assign this Agreement to any wholly-owned direct or indirect affiliate of Ameren Illinois's parent which acquires Ameren Illinois or all of the Ameren Illinois T&amp;D System or Ameren Illinois s business without the written consent of DMG.  Further, if Ameren Illinois transfers operational control of all or any portion of the Ameren Illinois T&amp;D System to an RTO, Ameren Illinois may assign this Agreement or portion of this Agreement, as applicable, to the RTO without the written consent of DMG, provided the RTO assumes in writing all or the duties and obligations of Ameren Illinois, existing and future, under this Agreement.  The foregoing sentence notwithstanding, nothing contained herein shall limit the DMG s right to defend this Agreement or to challenge such assignment, or the terms or conditions thereof.

8.4 Financing or Refinancing.

8.4.1 Notwithstanding the provisions of Section 8.2, DMG may, without the written consent of Ameren Illinois, assign, transfer, pledge or otherwise dispose of its rights and interests hereunder to any lender, whether as security for amounts payable or otherwise, under a financing, which financing may include without limitation, one or more leases (whether capital, operating, synthetic or otherwise), subleases, mortgages, loans, equity and/or debt issues (including bonds), the proceeds of which are used for purposes of financing or refinancing any or all of the Units or Facilities subject to this Agreement, including upon or pursuant to the exercise of remedies under such financing or refinancing, or by way of assignments, transfers, conveyances of dispositions in lieu thereof.

8.4.2 Ameren Illinois agrees, if requested by DMG, to enter into an agreement (in a form reasonably acceptable to Ameren Illinois) with the lender, pursuant to which Ameren Illinois will acknowledge the creation of security over DMG's rights under this Agreement and agree that, upon breach of this Agreement or any loan documents by DMG or the insolvency of DMG, the lender shall: 

(i) have the right within a reasonable period of time as specified therein to cure any breach of this Agreement, provided the lender agrees to perform DMG's obligations under the Agreement during the cure period; and

(ii) have the right, upon cure any such breach of this Agreement, to assume all the rights and obligations of DMG under this Agreement.

8.5 Obligation of Continued Performance.  Except for assignments that do not require the other Party s written consent, no assignment or transfer of rights or obligations under this Agreement by either Party shall relieve that Party from full liability and financial responsibility for the performance thereof after such transfer or assignment unless and until the transferee or assignee shall agree in writing to assume all of the obligations and duties, existing and future, of the assigning or transferring Party and (i)(a) the non-assigning Party shall have received all amounts then due and payable to it under this Agreement, if any; and (b) the creditworthiness of such assignee, or any person or entity guaranteeing the assignee s obligations under this Agreement, if any, is equal to or better than that of the assignor at the time of the sale, or the non-assigning Party shall have received other adequate assurance of such assignee s ability to fulfill all of the obligations, including monetary obligations, of the assignor under this Agreement, in a form reasonably acceptable to the non-assigning Party in its sole discretion, or (ii) the non-assigning Party has consented in writing to release the assigning Party from liability and financial responsibility for the performance of the assigning Party s obligations under this Agreement, such consent not to be unreasonably withheld. 

8.6. Designation of Agent.  Notwithstanding anything to the contrary in this Agreement, either Party may select or designate, through written notice to the other Party, an agent to perform its obligations and exercise its rights under this Agreement.  Such agency may be cancelled at any time by delivery of written notice so stating to the other Party.

ARTICLE 9
FORCE MAJEURE

9.1 Force Majeure Events.  Notwithstanding anything in this Agreement to the contrary, neither Party shall be liable in damages or otherwise responsible to the other Party for a failure to carry out any of its obligations under this Agreement, other than the obligation to pay an amount when due, if and only to the extent that it is unable to so perform or is prevented from performing by a Force Majeure Event.  Such exclusion from liability shall extend only for the period of time necessitated by such Force Majeure Event.  Nothing herein shall be construed to require any Party to settle a labor dispute, lockout or strike.

9.2 Notice.  The Party claiming Force Majeure shall give notice to the other Party of any Force Majeure Event as soon as reasonably practicable, but not later than two (2) days after the date on which such Party knew of the commencement of the Force Majeure event.

9.3   Procedures for Force Majeure Event.  If a Party claims the occurrence of a Force Majeure Event as a basis for being excused from performance of its obligations under this Agreement, then such Party shall: (i) provide prompt written notice of such Force Majeure Event to the other Party giving an estimation of its expected duration and the probable impact on the performance of its obligations hereunder; (ii) exercise all reasonable efforts to continue to perform its obligations under this Agreement; (iii) expeditiously take all reasonable action to correct or cure the Force Majeure Event; and (iv) provide prompt notice to the other Party of cessation of the Force Majeure Event.  All performance obligations hereunder shall be extended by a period equal to the period during which either Party's obligations were suspended as a result of a Force Majeure Event.

ARTICLE 10
LIABILITY AND INDEMNIFICATION

10.1 Limitation of Liability.  Except as otherwise expressly provided in this Agreement, neither Ameren Illinois nor DMG, nor their respective officers, directors, agents, employees, parents, affiliates, or successors or assigns of any of them, shall be liable to the other Party or its parent, subsidiaries, affiliates, officers, directors, agents, employees, successors or assigns for claims, suits, actions or causes of action for incidental, punitive, special, indirect, or consequential damages (including, without limitation, attorneys  fees or litigation costs, loss of profits or revenue on work not performed, for loss of use of or under-utilization of the other Party s facilities, or loss of use of revenues or loss of anticipated profits), resulting from either Party's performance or non-performance of an obligation imposed on it by this Agreement , including, without limitation, any such damages which are based upon causes of action for breach of contract, tort, breach of warranty or strict liability, save and except to the extent that such damages are caused by the negligence or willful misconduct of Ameren Illinois, or DMG, or their respective officers, directors, agents, employees, parents or affiliates.  The provisions of this Section 10.1 shall survive termination, cancellation, suspension, completion, or expiration of this Agreement. 

10.2 Indemnification.

10.2.1 Mutual Obligation.  Each Party ("Indemnifying Party") shall indemnify, defend and hold the other Party, its parent, affiliated and subsidiary and its and their partners, directors, officers, employees, stockholders, representatives, servants, and agents (including but not limited to contractors and their employees) (each and "Indemnified Party") harmless from and against all liabilities, damages, losses, penalties, claims, demands, costs or expenses (including court costs, reasonable attorneys  fees and other costs of defense), suits and proceedings of any nature whatsoever for any personal injury (including death) or any property damage ("Claim") that occurs or arises out of or otherwise results from or is in any manner connected with the performance or nonperformance of this Agreement by the Indemnifying Party save and except to the extent that such injury or damage is attributable to the gross negligence or willful, wanton or purposeful misconduct of the Indemnified Party.

10.2.2 Indemnification Procedures.

10.2.2.1 Notice.  The Indemnified Party shall give the Indemnifying Party prompt notice of the assertion of a Claim or of the commencement of any action or proceeding with respect to a Claim.  Such notice shall describe the claim in reasonable detail, and shall indicate the amount (estimated if necessary) of the claim that has been, or may be sustained by, the Indemnified Party.  In the event that the Indemnified Party fails to provide prompt notice of a Claim and the Indemnifying Party is actually and materially prejudiced as a result, the Indemnifying Party shall have no further liability under the indemnification provisions of this Agreement with respect to such Claim. 

10.2.2.2 Defense of Claim.  Promptly after receipt by the Indemnifying Party of notice of any Claim or notice of the commencement of any action, administrative or legal proceeding, or investigation with respect to a Claim, the Indemnifying Party shall assume the defense thereof with counsel designated by the Indemnifying Party and satisfactory to the Indemnified Party, such satisfaction not to be unreasonably withheld; provided, however, that if the defendants in any such action include both the Indemnified Party and the Indemnifying Party and the Indemnifying Party shall have reasonably concluded that there may be legal defenses available to the Indemnified Party with respect to a Claim which are different from or additional to, or inconsistent with, those available to the Indemnifying Party, then the Indemnifying Party shall so notify the Indemnified Party and the Indemnified Party shall have the right to select separate counsel to participate in the defense of such Claim on behalf of the Indemnified Party at the expense of the Indemnifying Party.  Except as provided in Section 10.2.2.4 below, neither Party may settle or compromise any claim without the prior consent of the other Party; provided, however, such consent shall not be unreasonably withheld or delayed.

10.2.2.3 Right to Assume Defense.  If a Party believes itself entitled to indemnification under this Agreement with respect to a Claim, and the Indemnifying Party fails or refuses to assume the defense of such Claim after receiving notice of same pursuant to Section 10.2.2.1, the Indemnified Party shall have the right, but not the obligation, to contest or settle such Claim and submit the issue of indemnification for resolution pursuant to Article 16.

10.2.2.4 Indemnified Amount.  In the event that a Party is obligated to indemnify and hold the other Party and its successors and assigns harmless under this Article 10, the amount owing to the Indemnified Party will be the amount of the Indemnified Party s actual out-of-pocket loss net of any insurance proceeds received or other recovery actually received by or applied for the benefit of the Indemnified Party.

10.2.3 Employees.  Each Party shall comply with applicable worker s compensation laws, and the indemnities of this Article 10 shall be fully applicable to all claims and payments arising under such laws.

10.2.4 Survival.  The indemnification obligations of each Party under this Article 10 shall continue in full force and effect regardless of whether this Agreement has either expired or been terminated or canceled.

ARTICLE 11
BREACH, CURE AND DEFAULT

11.1 Breach.  A breach of this Agreement shall occur upon the failure by a Party to perform or observe any material term or condition of this Agreement.  A breach of this Agreement shall include:

11.1.1 The failure to pay any amount when due;

11.1.2 The failure to comply with any material term or condition of this Agreement, including but not limited to any material breach of a representation, warranty or covenant made in this Agreement;

11.1.3 The appointment of a receiver or liquidator or trustee for the Party or of any property of the Party, and such receiver, liquidator or trustee is not discharged within sixty (60) days;

11.1.4 The filing of a case in bankruptcy or any proceeding under any other insolvency law against the Party by a third-party, and such case or proceeding has not been stayed or dismissed within sixty (60) days of filing; or

11.1.5 The filing of a voluntary petition in bankruptcy under any provision of any federal or state bankruptcy law by the Party.

11.2 Cure and Default.  Except for breaches set forth in Sections 11.1.3, 11.1.4, and 11.1.5 above, upon a Party s breach of its obligations under this Agreement, the other Party ( Non-Breaching Party ) shall give the Party in breach ( Breaching Party ) a written notice describing such breach in reasonable detail, including the nature of the breach and, where known and applicable, the steps necessary to cure such breach, and demanding that the Breaching Party cure such breach.  The Breaching Party shall be deemed to be in  Default  of its obligations under this Agreement if: (1) it fails to cure its breach within thirty (30) days after its receipt of such notice, or (2) where the breach is such that it cannot be cured within such thirty-day period, the Breaching Party does not commence in good faith all such steps as are reasonable and appropriate to cure such breach within such thirty-day period and thereafter diligently pursue such action to completion.  Breaches set forth in Sections 11.1.3 and 11.1.4, above shall become a "Default" upon the expiration of the time period set forth in such section. Breaches set forth in Section 11.1.5 above shall become a "Default" immediately upon the occurrence of the breach.

11.3 Right to Compel Performance.  Notwithstanding the foregoing, upon the occurrence of a Default, the non-defaulting Party shall be entitled to (i) commence an action to require the Defaulting Party to remedy such Default and specifically perform its duties and obligations under this Agreement in accordance with the terms and conditions hereof, and (ii) exercise such other rights and remedies as it may have in equity or at law.

ARTICLE 12
TERMINATION OF SERVICE

12.1 Expiration of Term.  Except as otherwise specified in this Article 12, this Agreement may only be terminated at the conclusion of the Term of this Agreement stated in Article 2 hereof.

12.2 Termination Upon Default by DMG.  Subject to the limitations set forth in Section 12.4, in the event of Default by DMG, Ameren Illinois may only terminate this Agreement upon the later of:

12.2.1 Its giving of written notice of termination to DMG and any affected regulatory agency;

12.2.2 The filing at FERC of a notice of termination for the Agreement, which filing must be accepted by FERC; or

12.2.3 The receipt of any other regulatory approvals required for the termination of the Agreement.

12.3 Termination Upon Default by Ameren Illinois.  Subject to the limitations set forth in Section 12.4, in the event of Default by Ameren Illinois, DMG may only terminate this Agreement upon the later of:

12.3.1 Its giving of written notice of termination to Ameren Illinois and any affected regulatory agency;

12.3.2 The filing at FERC of a notice of termination for the Agreement, which filing must be accepted by FERC; or

12.3.3 The receipt of any other regulatory approvals required for the termination of the Agreement.

12.4 Dispute As To Default.  If a Party disputes that it is in Default, no termination of this Agreement may occur absent final resolution of such dispute pursuant to Article 16 and upon the satisfaction of all the conditions stated above in Section 12.2 or 12.3, whichever applies.

12.5 Survival of Rights.  Termination of this Agreement shall not relieve either Party of any of its liabilities and obligations arising hereunder prior to the date such termination becomes effective.  Any provision of this Agreement that by its terms survives termination of this Agreement shall survive such termination.

ARTICLE 13
LABOR RELATIONS

Each Party shall promptly notify the other Party, orally and then in writing, of any labor dispute or anticipated labor dispute of which its management has actual knowledge that might reasonably be expected to affect the operations of the other Party with respect to this Agreement.




ARTICLE 14
CONFIDENTIALITY

14.1 General.  Except as otherwise provided in this Section, each Party shall hold in confidence and shall not disclose to any person Confidential Information, regardless of whether such Confidential Information was conveyed to the Party prior, or subsequent, to the execution of this Agreement.

14.2 Scope. Confidential Information shall not include information that the receiving Party can demonstrate: (1) is generally available to the public other than as a result of a disclosure by the receiving Party; (2) was in the lawful possession of the receiving Party on a non-confidential basis before receiving it from the disclosing Party; (3) was supplied to the receiving Party without restriction by a third Party, who, to the knowledge of the receiving Party, after due inquiry, was under no obligation to the other Party to keep such information confidential; (4) was independently developed by the receiving Party without reference to Confidential Information of the disclosing Party; or (5) was disclosed with the prior written approval of the disclosing Party.

Release of Confidential Information.  Neither Party shall release or disclose any Confidential Information of the other Party: (1) to any persons other than its employees, agents, representatives, RTO, other Transmission Providers, SERC, or NERC (each, a  Permitted Recipient ); provided that: (1) any such disclosure to a Permitted Recipient will be only on a need-to-know basis in connection with this Agreement, and (2) such Permitted Recipient has first been advised of the confidentiality provisions of this Article 14 and has agreed to comply with such provisions, is bound by another confidentiality agreement acceptable to the Parties in their reasonable discretion, or by FERC Standards of Conduct regarding disclosure of information; or (2) as specifically provided in Section 14.7 below.

14.4 Rights. Each Party retains all rights, title and interest in the Confidential Information that each Party discloses to the other Party.  The disclosure by each Party to the other Party of Confidential Information shall not be deemed a waiver by either Party or any other person or entity of the right to protect the Confidential Information from public disclosure.

14.5 No Warranties.  By providing Confidential Information, neither Party makes any warranties or representations as to its accuracy or completeness; provided, however that the Party receiving such Confidential Information shall be entitled to rely on such Confidential Information for the purposes of its performance of this Agreement.  In addition, by supplying Confidential Information, neither Party obligates itself to provide any particular information or Confidential Information to the other Party nor to enter into any further agreements or proceed with any other relationship or joint venture.

14.6 Standard of Care.  Each Party shall use at least the same standard of care to protect Confidential Information it receives as that it uses to protect its own Confidential Information from unauthorized disclosure, publication or dissemination.  Each Party may use Confidential Information solely to fulfill its obligations under this Agreement and not for any other purpose.

14.7 Order of Disclosure.  If a Party is legally required to disclose Confidential Information of the other Party by law, rule, regulation, order or other governmental action, or action of any entity with the right, power, and authority to do so, including but not limited to subpoena, oral deposition, interrogatories, requests for production of documents, or administrative order, that Party shall provide the other Party with prompt notice of such request(s) or requirement(s) so that the other Party may seek an appropriate protective order or waive compliance with the terms of this Agreement.  In the absence of a protective order or waiver, the disclosing Party shall disclose such Confidential Information which in the opinion of its counsel the Party is legally required to disclose.  Each Party will use reasonable efforts to obtain reliable assurance that confidential treatment will be accorded any Confidential Information so furnished.

14.8 Termination of Agreement.  Upon termination of this Agreement for any reason, each Party shall, within thirty (30) days of receipt of a written request from the other Party, destroy, erase or delete (with such destruction, erasure and deletion certified in writing to the other Party) or return to the other Party, without retaining copies thereof, any and all written or tangible Confidential Information received from or on behalf of the other Party.

14.9 Remedies.  The Parties agree that monetary damages would be inadequate to compensate a Party for the other Party s breach of its obligations under this Article 14.  Each Party accordingly agrees that the other Party shall be entitled to equitable relief, by way of injunction or otherwise, for any breach or threatened breach of the obligations of confidentiality imposed by this Article 14, which equitable relief shall be granted without bond or proof of damages, and the receiving Party shall not plead in defense that there would be an adequate remedy at law.  Such remedy shall not be deemed to be an exclusive remedy for the breach of this Article 14, but shall be in addition to all other remedies available at law or in equity.  The Parties further acknowledge and agree that the covenants contained herein are necessary for the protection of legitimate business interests and are reasonable in scope.  No Party, however, shall be liable for indirect, incidental or consequential or punitive damages of any nature or kind resulting from or arising in connection with this Article 14, unless disclosed through a Party s gross negligence or willful, wanton or purposeful conduct.

14.10 Press Releases.  Each Party agrees to coordinate with the other Party all press, news, or other releases to the media related to this Agreement and to allow the other Party to review such releases prior to release.

ARTICLE 15
AUDIT RIGHTS

Subject to the requirements of confidentiality under Article 14 of this Agreement, either Party shall have the right, during normal business hours, and upon prior reasonable notice to the other Party to audit each other s accounts and records pertaining to either Party s performance and/or satisfaction of obligations arising under this Agreement within two (2) years from the date of such performance or satisfaction of such obligation.  Said audit shall be performed at the offices where such accounts and records are maintained and shall be limited to those portions of such accounts and records that relate to obligations under this Agreement.

ARTICLE 16
DISPUTES

16.1  Submission.  Any claim or dispute which either Party may have against the other arising out of the Agreement shall be submitted in writing to the other Party within sixty (60) days after the claim or dispute initially arises.  In the event of a dispute over payment, the Parties shall first utilize the dispute resolution provisions of Section 6.4 before utilizing the provisions of this Article 16.  The submission of any claim or dispute under this Section 16.1 shall include a concise statement of the question or issue in dispute, together with relevant facts and documentation to fully support the claim.

16.2 Alternative Dispute Resolution.  If any such claim or dispute arises, the Parties shall use their best efforts to resolve the claim or dispute, initially through good faith negotiations or upon the failure of such negotiations, through mutually agreed to ADR techniques; however, either Party may terminate its participation in ADR during any stage of ADR and proceed under Section 16.3.

16.3 Arbitration.  If any claim or dispute arising hereunder is not resolved within sixty (60) days after notice thereof to the other Party, either Party may demand in writing the submission of the dispute to binding arbitration in Chicago, Illinois, or some other mutually agreed upon location and shall be heard by one neutral arbitrator under the American Arbitration Association s Commercial Arbitration Rules. 

16.4 Time Limitation.  Unless the Parties otherwise agree, the arbitration process shall be concluded not later than six (6) months after the date that it is initiated and the award of the arbitrator shall be accompanied by a reasoned opinion if requested by either Party.  The arbitrator shall have no authority to award punitive or treble damages or any damages inconsistent with the provisions of this Agreement.  The arbitration shall be conducted as a common law arbitration and the decision of the arbitrator rendered in such a proceeding shall be final.  Judgment may be entered upon it in any court having jurisdiction.

16.5 Procedures.  The procedures for the resolution of disputes set forth herein shall be the sole and exclusive procedures for the resolution of disputes; provided, however, that a Party may seek a preliminary injunction or other preliminary judicial relief if in its judgment such action is necessary to avoid irreparable damage or to preserve the status quo.  Despite such action, the Parties will continue to participate in good faith in the procedures specified herein. All applicable statutes of limitations and defenses based upon the passage of time shall be tolled while the procedures specified herein are pending.  The Parties will take any action, if any, required to effectuate such tolling.  Each Party is required to continue to perform its undisputed obligations under this Agreement pending final resolution of a dispute.  All negotiations pursuant to these procedures for the resolution of disputes will be confidential, and shall be treated as compromise and settlement negotiations for purposes of the Federal Rules of Evidence and state rules of evidence.

ARTICLE 17
NOTICES AND COMMUNICATIONS

17.1 Notices.  All notices required or permitted under this Agreement shall be in writing unless otherwise specified in this Agreement and shall be personally delivered or sent by certified or registered first class mail with postage prepaid, facsimile transmission, or overnight express mail or courier service addressed as follows:

To DMG:     To Ameren Illinois Company:
 Notices      Notices
Dynegy Midwest Generation, LLC  Ameren Illinois Company
604 Pierce Blvd     1901 Chouteau MC635
O Fallon, IL 62269    Saint Louis, MO 63103
Att:  Daniel Thompson  Att:  Maureen Borkowski,
Vice President  Sr. Vice President, Transmission, 
Ameren Services Company

Phone:  (618) 206-5918    Phone:  (314) 554-2050
Fax:      (618) 206-5892    Fax:      (314) 554-6454

and      and

 Dynegy Midwest Generation, LLC  Ameren Services Company
 1000 Louisiana, Suite 5800   1901 Chouteau MC630
 Houston, TX 77002    Saint Louis, MO 63103
 Managing Director    Att:  Transmission Operator
 CoalCo Asset Management

 Phone:  (713) 767-4589    Phone:   (314) 554-2988
       Fax:   (314) 206-0046


All such notices shall be deemed given upon receipt by the addressee.

17.2 Change of Address.  Either Party may change its address and telephone numbers for notices by notice to the other in the manner provided above.

17.3 Oral Notice.  Notwithstanding Section 17.1, any notice hereunder, with respect to an Emergency or other occurrence requiring prompt attention of the Party receiving such notice, or as necessary during day-to-day operations, may be made orally provided that such notice is confirmed in writing promptly thereafter.  Notice in an Emergency, or as necessary during day-to-day operations, shall be provided, (i) if by Ameren Illinois, to a shift leader in the control room at the appropriate Facility, and (ii) if by a Facility, to the Transmission Operator.

ARTICLE 18
MISCELLANEOUS PROVISIONS

18.1 Compliance With Law.  This Agreement and all rights and obligations of the Parties hereunder are subject to all applicable state and federal laws and all applicable duly promulgated orders and regulations and duly authorized actions taken by the executive, legislative or judicial branches of government, or any of their respective agencies, departments, authorities or other instrumentalities having jurisdiction and in performing its obligations under this Agreement each Party shall comply with all such laws, orders and regulations.

18.2 Federal Power Act Rights Preserved.  Nothing contained in this Agreement shall be construed as affecting in any way the ability of any Party to this Agreement to exercise its rights under the Federal Power Act and pursuant to FERC s rules and regulations promulgated thereunder, including but not limited to, each Party s unilateral right to make application to FERC for a change in the rates, terms and/or conditions of this Agreement; provided, however, that the "public interest" standard of review set forth in United Gas Pipe Line Co. v. Mobile Gas Service Corp., 350 U.S. 332 (1956), and Federal Power Commission v. Sierra Pacific Power Co., 350 U.S. 348 (1956) (the  Mobile-Sierra  doctrine), shall not be applicable to either Party s application to FERC for a change in the rates, terms and/or conditions of this Agreement.

18.3 Taxes.  Each Party agrees to pay any and all local, state, federal sales, use, excise or any other taxes which are now, or in the future may be, assessed and legally owed by such Party pertaining to goods provided and/or the services performed under this Agreement.  Each Party shall be responsible for any income taxes that apply to the monies it receives hereunder.

18.4 Relationship of the Parties.  Nothing in this Agreement is intended to create a partnership, joint venture or other joint legal entity making any Party jointly or severally liable for the acts of the other Party. Unless otherwise agreed to in a writing signed by both Parties, neither Party shall have any authority to create or assume in the other Party s name or on its behalf any obligation, express or implied or to act or purport to act as the other Party s agent or legal empowered representative for any purpose whatsoever.  Each Party shall be solely liable for the payment of all wages, taxes, and other costs related to the employment of persons by that Party, including all federal, state, and local income, social security, payroll and employment taxes and statutorily-mandated workers  compensation coverage.  Except as expressly provided for herein, neither Party shall be liable to any third party in any way for any engagement, obligation, commitment, contract, representation or for any negligent act or omission to act of the other Party.

18.5 No Third Party Rights.  No person or Party shall have any rights or interests, direct or indirect, in this Agreement or the services or facilities to be provided hereunder, or both, except the Parties, their successors, and authorized assigns.  The Parties specifically disclaim any intent to create any rights in any person or Party as a third-party beneficiary to this Agreement or to the services or facilities to be provided hereunder, or both.

18.6 Counterparts.  This Agreement may be executed in two or more counterparts, each of which shall be deemed an original but all of which together shall constitute one and the same instrument.
IN WITNESS WHEREOF, the Parties' duly authorized representatives have executed this Agreement as of the Effective Date.

AMEREN SERVICES COMPANY
AS AGENT FOR AND ON BEHALF OF
DYNEGY MIDWEST GENERATION, LLC  AMEREN ILLINOIS COMPANY
d/b/a AMEREN ILLINOIS


By:       By:      
Name:       Name:      
Title:       Title:      
 SCHEDULE A
to
Amended and Restated
Black Start Service Agreement
between
Ameren Services Company, as agent for and on behalf of Illinois Power Company and Dynegy Midwest Generation, LLC
Dated December 27, 2011

Unit
 Fixed Monthly
Charge
 Designated
 Transmission Path
 Designated 
Generation Resource(s)
 Start 
Time
 
 Oglesby 1
 $10,000
 138 kV Line 1516
 Hennepin 1
 90 Minutes   Manned
120 Minutes   Unmanned
 Start Time when Oglesby 1 is first Unit started
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

For any month in which a Unit is called upon to provide Black Start Service Energy Costs shall be calculated as follows:

Energy Costs = (Run Hours) ( (Energy Cost)

where:
For any month in which a Unit is called upon to provide Black Start Service, Run Hours is the greater of 16 hours or the actual run hours of the Unit from start until restoration of the Ameren Illinois Transmission System to normal operation.
Energy Cost is the greater of (i) the average day ahead locational marginal price applicable to the Interconnection Point for the Unit reported by the applicable RTO during the Run Hours in question or (ii) the actual delivered cost of natural gas (expressed in $/MMBtu) consumed during the Run Hours times 17.4 MMBtu/MWH.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>7</filing_id>
      <filing_title>Amended and Restated Black Start Service Agreement</filing_title>
      <filing_type>280</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2012-01-01</current_effective_date>
      <ferc_order_date>2012-02-24</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>FERC Electric Tariff, Volume No. 1</record_title>
      <record_content_desc>Market-Based Rate Tariff</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>10</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2014-08-14</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>DYNEGY MIDWEST GENERATION, LLC
1. Availability:  Dynegy Midwest Generation, LLC ( Seller ) will make wholesale electric energy, capacity, and ancillary services available under this Tariff, except as prohibited below:
 RTO/ISO Specific
MISO:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midcontinent Independent System Operator, Inc. ( MISO ) and to others that are self-supplying ancillary services to MISO.

PJM:  Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. ( PJM ) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection. 
 New York:  Seller offers regulation and frequency response service, and operating reserve service (which includes 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.
 New England:  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England, Inc.
California:  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation ( CAISO ) and to others that are self-supplying ancillary services to the CAISO.
 Southwest Power Pool:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Southwest Power Pool, Inc. ( SPP ) and to others that are self-supplying ancillary services to SPP.
Third Party Provider
Third-party ancillary services:  Seller offers Regulation and Frequency Response Service, Reactive Supply and Voltage Control Service, Energy and Generator Imbalance Service, Operating Reserve-Spinning, and Operating Reserve-Supplemental.  Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; and (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier.  Sales of Operating Reserve-Spinning and Operating Reserve-Supplemental will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except where the Commission has granted authorization. Sales of Regulation and Frequency Response Service and Reactive Supply and Voltage Control Service will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except at rates not to exceed the buying public utility transmission provider s OATT rate for the same service or where the Commission has granted authorization. 
2. Applicability:  This schedule is applicable to all wholesale sales of energy, capacity, and ancillary services by Seller not otherwise subject to a particular rate schedule of Seller.
3. Rates:  All sales shall be made at rates established by agreement between the purchaser and Seller.
4. Other Terms and Conditions:  All other terms and conditions shall be established by agreement between the purchaser and Seller.
5. Compliance with Commission Regulations:  Seller shall comply with the provisions of 18 CFR Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller s market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this Tariff or otherwise restricts or limits the Seller s market-based rate authority.  Failure to comply with the applicable provisions of 18 CFR Part 35, Subpart H, and with any orders of the Commission concerning Seller s market-based rate authority, will constitute a violation of this Tariff.
6. Limitations and Exemptions Regarding Market-Based Rate Authority:  The Commission has granted Seller in Illinova Power Marketing, Inc., 88 FERC   61,189, at 61,650 (1999), the following limitations and exemptions:  (i) waivers of Parts 41, 101 and 141 (except sections 141.14 and 141.15) of the Commission s accounting and periodic reporting requirements, (ii) waivers of Subparts B and C of Part 35 of the Commission s regulations requiring the filing of cost-of-service information, except as to sections 35.12(a), 35.13(b), 35.15, and 35.16, and (iii) blanket authorization for all future issuances of securities or assumptions of liabilities pursuant to Section 204 of the Federal Power Act, 16 U.S.C.   824e, and Part 34 of the Commission s regulations.
7. Seller Category:  Seller is a Category 2 seller, as defined in 18 CFR 35.36(a), in the Central region, and a Category 1 seller, as defined in 18 CFR 35.36(a), in all other regions.
8. Effective Date:  This Tariff shall be effective on and after the date on which the Commission permits it to become effective.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>9</filing_id>
      <filing_title>Revised Market-Based Rate Tariff</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-08-14</current_effective_date>
      <ferc_order_date>2014-10-09</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>5</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule FERC No. 5</record_title>
      <record_content_desc>Reactive Rate Schedule</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>60</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2019-11-01</proposed_effective_date>
      <priority_order>590</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGRlZmYwe1xmb250dGJse1xmMCBUaW1lcyBOZXcgUm9tYW47fXtcZjEgQ2FsaWJyaTt9e1xmMiBUaW1lcyBOZXcgUm9tYW4gQm9sZDt9fXtcY29sb3J0YmxccmVkMFxncmVlbjBcYmx1ZTAgO1xyZWQwXGdyZWVuMFxibHVlMjU1IDtccmVkMjU1XGdyZWVuMjU1XGJsdWUyNTUgO317XCpcbGlzdG92ZXJyaWRldGFibGV9e1xzdHlsZXNoZWV0IHtcc25leHQwXHFsXHNhMTYwXGYxXGZzMjJcY2YwIE5vcm1hbDt9e1wqXGNzMVxjZjAgRGVmYXVsdCBQYXJhZ3JhcGggRm9udDt9e1wqXGNzMlxzYmFzZWRvbjFcY2YwIExpbmUgTnVtYmVyO317XCpcY3MzXHVsXGNmMSBIeXBlcmxpbms7fX1cc2VjdGRcbWFyZ2xzeG4xNDQwXG1hcmdyc3huMTQ0MFxtYXJndHN4bjE0NDBcbWFyZ2JzeG4xNDQwXHBhcmRccGxhaW5ccWNcbm93aWRjdGxwYXJ7XGJcY2YwIERZTkVHWSBNSURXRVNUIEdFTkVSQVRJT04sIExMQ31cYlxwYXJccGFyZFxwbGFpblxxY1xub3dpZGN0bHBhcntcYlxjZjAgUkFURSBTQ0hFRFVMRSBGRVJDIE5PLiA1fVxiXHBhclxwYXJkXHBsYWluXHFqXG5vd2lkY3RscGFyXGJccGFyXHBhcmRccGxhaW5ccWNcbm93aWRjdGxwYXJ7XGJcY2YwIFJlYWN0aXZlIFN1cHBseSBhbmQgVm9sdGFnZSBDb250cm9sIGZyb20gR2VuZXJhdGlvbiBTb3VyY2VzIFNlcnZpY2V9XGJccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJccGFyXHBhcmRccGxhaW5ccWpcZmk3MjBccmkxXHJpbjFcbm93aWRjdGxwYXJcY2JwYXQyXHNsLTI3NFxzbG11bHQwXHNiMTc4e1xjZjAgRHluZWd5IE1pZHdlc3QgR2VuZXJhdGlvbiwgTExDIChETUcpIHByb3ZpZGVzIFJlYWN0aXZlIFN1cHBseSBhbmQgVm9sdGFnZSBDb250cm9sIGZyb219e1xpXGNmMCAgfXtcY2YwIEdlbmVyYXRpb24gU291cmNlcyBTZXJ2aWNlIChSZWFjdGl2ZSBTZXJ2aWNlKSBmcm9tIGl0c317XGlcY2YwICB9e1xjZjAgZ2VuZXJhdGluZyBmYWNpbGl0aWVzIGxvY2F0ZWQgaW4gdGhlIEFtZXJlbiBJbGxpbm9pcyBDb21wYW55IChBbWVyZW4gSWxsaW5vaXMpIGNvbnRyb2wgYXJlYSBhbmQgaW50ZXJjb25uZWN0ZWQgd2l0aCB0aGUgdHJhbnNtaXNzaW9uIHN5c3RlbSBvZiBBbWVyZW4gSWxsaW5vaXMgaW4gb3JkZXIgdG8gYXNzaXN0IGluIG1haW50YWluaW5nIHRyYW5zbWlzc2lvbiB2b2x0YWdlcyB3aXRoaW4gYWNjZXB0YWJsZSBsaW1pdHMgb24gdGhlIH17XGNmMCBNaWRjb250aW5lbnR9e1xjZjAgIEluZGVwZW5kZW50IFN5c3RlbSBPcGVyYXRvciwgSW5jLiAoTUlTTykgb3BlcmF0ZWQgc3lzdGVtfXtcaVxjZjAgLiAgfXtcY2YwIFRoaXMgUmF0ZSBTY2hlZHVsZSBGRVJDIE5vLiA1IHNldHMgZm9ydGggRE1HXHU4MjE3XCc5MnMgcmV2ZW51ZSByZXF1aXJlbWVudHMgZm9yIHRoZSBwcm92aXNpb24gb2YgUmVhY3RpdmUgU2VydmljZSBmcm9tIGl0cyBnZW5lcmF0aW9uIGZhY2lsaXRpZXMgdG8gQW1lcmVuIElsbGlub2lzIGNvbnNpc3RlbnQgd2l0aCBTY2hlZHVsZSAyIG9mIHRoZSBNSVNPIE9wZW4gQWNjZXNzIFRyYW5zbWlzc2lvbiwgRW5lcmd5IGFuZCBPcGVyYXRpbmcgUmVzZXJ2ZSBNYXJrZXRzIFRhcmlmZiAoTUlTTyBUYXJpZmYpLn1ccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJ7XGJcY2YwIFx0YWIgfXtcY2YwIFRoaXMgcmF0ZSBzY2hlZHVsZSBzaGFsbCBiZSBlZmZlY3RpdmUgdXBvbiB0aGUgZGF0ZSBhdXRob3JpemVkIGJ5IHRoZSBGZWRlcmFsIEVuZXJneSBSZWd1bGF0b3J5IENvbW1pc3Npb24gKENvbW1pc3Npb24pLn1ccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJ7XGNmMCBSRVZFTlVFIFJFUVVJUkVNRU5UOn1ccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJ7XGNmMCBUaGUgYW5udWFsIHJldmVudWUgcmVxdWlyZW1lbnQgaXMgJDEsMDMxLDEyMy4yOC4gIFRoZSBtb250aGx5IGNoYXJnZSBpcyAkODUsOTI2Ljk0Ln1ccGFyXHBhcmRccGxhaW5ccWpcbm93aWRjdGxwYXJcY2YwXHBhclxwYXJkXHBsYWluXHFsXG5vd2lkY3RscGFyXGNmMFxwYXJccGFyZFxwbGFpblxxalxub3dpZGN0bHBhcntcY2Fwc1xiXGYyXGNmMCBSZWluc3RhdGVtZW50IG9mIEJhbGR3aW4gVW5pdCAzIHBhcnRpYWwgbW9udGggUmV2ZW51ZSBSZXF1aXJlbWVudDp9XGNhcHNcYlxmMlxjZjBccGFyXHBhcmRccGxhaW5ccWxcbm93aWRjdGxwYXJcY2YwXHBhclxwYXJkXHBsYWluXHFqXHJpMVxyaW4xXG5vd2lkY3RscGFyXGNicGF0MlxzYTI0MFx0eDB7XGNmMCBcdGFiIEluIHRoZSBldmVudCBETUcgc3VibWl0cyB0aGUgUmF0ZSBTY2hlZHVsZSBGRVJDIE5vLiA1IGNvbXBsaWFuY2UgZmlsaW5nIHB1cnN1YW50IHRvIHRoZSBPZmZlciBvZiBTZXR0bGVtZW50IGFwcHJvdmVkIGluIERvY2tldCBOby4gRUwxNy00LTAwMCwgfXtcaVxjZjAgZXQgYWx9e1xjZjAgLiwgTUlTTyBzaGFsbCBpbXBsZW1lbnQgdGhlIHJhdGUgY2hhbmdlIG9uIHRoZSBkYXRlIEJhbGR3aW4gMyBpcyB0byByZXR1cm4gdG8gb3BlcmF0aW9uIGZyb20gaXRzIHN1c3BlbnNpb24gKFJlaW5zdGF0ZW1lbnQgRGF0ZSkuICBJZiB0aGUgUmVpbnN0YXRlbWVudCBEYXRlIGlzIG90aGVyIHRoYW4gdGhlIGZpcnN0IGRheSBvZiB0aGUgbW9udGgsIHRoZSByZXZlbnVlIHJlcXVpcmVtZW50IHNoYWxsIGJlIGEgYmxlbmRlZCByZXZlbnVlIHJlcXVpcmVtZW50IGZvciB0aGUgbW9udGggb2Ygc2VydmljZSBpbiB3aGljaCB0aGUgcmVpbnN0YXRlbWVudCBvY2N1cnJlZCBhcyBmb2xsb3dzOiAgdGhlIHN1bSBvZiAoaSkgdGhlIHRvdGFsIG1vbnRobHkgcmV2ZW51ZSByZXF1aXJlbWVudCBwcmlvciB0byB0aGUgcmF0ZSBjaGFuZ2UgZGl2aWRlZCBieSB0aGUgbnVtYmVyIG9mIGRheXMgaW4gdGhlIG1vbnRoIG9mIHRoZSByZWluc3RhdGVtZW50LCB3aXRoIHRoZSBxdW90aWVudCB0aGVuIG11bHRpcGxpZWQgYnkgdGhlIG51bWJlciBvZiBkYXlzIGluIHRoZSBtb250aCBwcmlvciB0byB0aGUgUmVpbnN0YXRlbWVudCBEYXRlIGFuZCAoaWkpIHRoZSB0b3RhbCBtb250aGx5IHJldmVudWUgcmVxdWlyZW1lbnQgYWZ0ZXIgdGhlIHJhdGUgY2hhbmdlIGRpdmlkZWQgYnkgdGhlIG51bWJlciBvZiBkYXlzIGluIHRoZSBtb250aCBvZiB0aGUgcmVpbnN0YXRlbWVudCwgd2l0aCB0aGUgcXVvdGllbnQgdGhlbiBtdWx0aXBsaWVkIGJ5IHRoZSByZW1haW5pbmcgbnVtYmVyIG9mIGRheXMgaW4gdGhlIG1vbnRoIGZyb20gYW5kIGluY2x1ZGluZyB0aGUgUmVpbnN0YXRlbWVudCBEYXRlLn1cY2YwXHBhclxwYXJkXHBsYWluXHFqXG5vd2lkY3RscGFyXHR4OTBcdHgxODBccGFyfQ==</record_binary_data>
      <record_plain_text>DYNEGY MIDWEST GENERATION, LLC
RATE SCHEDULE FERC NO. 5

Reactive Supply and Voltage Control from Generation Sources Service

Dynegy Midwest Generation, LLC (DMG) provides Reactive Supply and Voltage Control from Generation Sources Service (Reactive Service) from its generating facilities located in the Ameren Illinois Company (Ameren Illinois) control area and interconnected with the transmission system of Ameren Illinois in order to assist in maintaining transmission voltages within acceptable limits on the Midcontinent Independent System Operator, Inc. (MISO) operated system.  This Rate Schedule FERC No. 5 sets forth DMG’s revenue requirements for the provision of Reactive Service from its generation facilities to Ameren Illinois consistent with Schedule 2 of the MISO Open Access Transmission, Energy and Operating Reserve Markets Tariff (MISO Tariff).

	This rate schedule shall be effective upon the date authorized by the Federal Energy Regulatory Commission (Commission).

REVENUE REQUIREMENT:

The annual revenue requirement is $1,031,123.28.  The monthly charge is $85,926.94.


Reinstatement of Baldwin Unit 3 partial month Revenue Requirement:

	In the event DMG submits the Rate Schedule FERC No. 5 compliance filing pursuant to the Offer of Settlement approved in Docket No. EL17-4-000, et al., MISO shall implement the rate change on the date Baldwin 3 is to return to operation from its suspension (Reinstatement Date).  If the Reinstatement Date is other than the first day of the month, the revenue requirement shall be a blended revenue requirement for the month of service in which the reinstatement occurred as follows:  the sum of (i) the total monthly revenue requirement prior to the rate change divided by the number of days in the month of the reinstatement, with the quotient then multiplied by the number of days in the month prior to the Reinstatement Date and (ii) the total monthly revenue requirement after the rate change divided by the number of days in the month of the reinstatement, with the quotient then multiplied by the remaining number of days in the month from and including the Reinstatement Date.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>19</filing_id>
      <filing_title>Rate Schedule 2019</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2019-11-01</current_effective_date>
      <ferc_order_date>2019-10-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>