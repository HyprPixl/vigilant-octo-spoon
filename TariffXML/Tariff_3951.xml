<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C004698</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>Statement of Operating Conditions</tariff_title>
    <tariff_export_date>2025-09-16T20:08Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>NGPA Section 311</record_content_desc>
      <record_version_num>4.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>8388608</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-12-30</proposed_effective_date>
      <priority_order>1000010000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>NET MEXICO PIPELINE PARTNERS, LLC
STATEMENT OF OPERATING CONDITIONS
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE
EFFECTIVE DECEMBER 30, 2024 




NET MEXICO PIPELINE PARTNERS, LLC
STATEMENT OF OPERATING CONDITIONS 
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE
TABLE OF CONTENTS
SECTION	PAGE
1.	INTRODUCTION	1
2.	DEFINITIONS	1
3.	SERVICES	5
4. 	REQUEST FOR SERVICE AGREEMENT	8
5.	GENERAL	10
6.	QUANTITY	13
7.	DELIVERY POINT(S) AND RECEIPT POINT(S)	13
8.	NOMINATIONS AND BALANCING	15
9.	RATES	18
10.	TERM	20
11.	ADDRESSES	21
12.	LAWS AND REGULATIONS	21
13.	PRESSURES AT RECEIPT POINT(S) AND DELIVERY POINT(S) 	22
14	MEASUREMENT	22
15	QUALITY	24
16.	BILLING, ACCOUNTING, AND REPORTS	27
17.	WARRANTIES, LIABILITY, AND INDEMNIFICATIONS	28
18.	FORCE MAJEURE	30
19.	WAIVER OF BREACHES, DEFAULTS, OR RIGHTS	31
20.	REMEDY FOR BREACH	32
21.	MISCELLANEOUS	32




NET MEXICO PIPELINE PARTNERS, LLC
STATEMENT OF OPERATING CONDITIONS
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE
1.	INTRODUCTION
NET MEXICO PIPELINE PARTNERS, LLC (Transporter) is an intrastate pipeline, with facilities located wholly within the state of Texas, and is exempt from the jurisdiction of the Federal Energy Regulatory Commission (FERC) under the Natural Gas Act of 1938 (NGA).  If by providing transportation services under Section 311 of the Natural Gas Policy Act of 1978 (NGPA) and the regulations thereunder, Transporters status as an intrastate pipeline that is exempt from NGA jurisdiction is impacted, altered, or threatened in any way, by virtue of any change in Applicable Law, then Transporter reserves the right to terminate all transportation services under Section 311 of the NGPA and all Service Agreements related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before any such change in Applicable Law takes effect.  In light of the foregoing, Transporter presents this Statement of Operating Conditions under which Transporter will offer NGPA Section 311 transportation service on its system.  Transporter will establish the rates charged for NGPA Section 311 transportation service pursuant to 18 C.F.R. Section 284.123(b)(2) and such current rates are summarized on Exhibit A.  As indicated below, Transporter, in addition to its primary business as an intrastate and NGPA Section 311 provider of transportation services, also uses its pipeline system in connection with the purchase and sale of natural gas for its own account as an on-system supplier and to maximize the utilization of its pipeline system (including utilization of any available unused capacity).  Transporter will use its system to make such purchases and sales and to transport such quantities on either an intrastate or NGPA Section 311 basis, as set forth herein
2.	DEFINITIONS
Except as otherwise specified, the following terms as used herein and in the Service Agreement will be construed to have the following scope and meaning:
(a)	Applicable Law means and includes any statute, license, law, rule, regulation, code, ordinance, judgment, arbitral award, decree, writ, legal requirement or order, of any national, federal, state or local court or other Governmental Authority, and the official, written judicial interpretations thereof, applicable to the parties or the performance of this Statement of Operating Conditions. 
(b)	Authorized Overrun Service is defined in Section 3.4 of this Statement of Operating Conditions.
(c)	Btu means British thermal unit, which is the amount of heat required to raise the temperature of one pound of water from 59 degrees Fahrenheit to 60 degrees Fahrenheit.  
(d)	CCT means Central Clock Time and is defined as current time in the Central Time Zone taking into consideration the seasonal changes back and forth between Daylight Savings and Standard Time.
(e)	Condensate means hydrocarbons that have condensed from the Gas downstream of the Receipt Point(s) and are collected as a liquid at Transporters facilities at or upstream of the Delivery Point(s).
(f)	Day means the period beginning at 9:00 a.m. CCT on each calendar day and ending at 9:00 a.m. CCT on the following calendar day.
(g)	Delivery Point(s) is defined in Section 7.1 of this Statement of Operating Conditions.
(h)	Electric Power Costs shall mean all costs, fees, surcharges and other costs included in billings from third party electric providers for the operation of Transporters electric-powered compressors and other facilities.  
(i)	Electronic Nominations System shall mean an interactive electronic communications system operated by Transporter or a designated contractor for the purpose of receiving and confirming Shipper nominations for the receipt and delivery of volumes to be transported by Transporter under an effective Service Agreement.  
(j)	Effective Date means the first Day of the term of a Service Agreement.
(k) 	Firm or Firm Transportation Service has the meaning described in Section 3.1 of this Statement of Operating Conditions.  
(l)	Fuel means the quantity of Gas determined to be consumed during the transportation of Gas. 
(m)	Fuel Gas Costs shall mean Transporters actual cost to purchase natural gas for operation of Transporters gas-fired compressors.
(n)	Gas means any mixture of gaseous hydrocarbons, or of hydrocarbons and other gases, in a gaseous state, consisting primarily of methane.
(o)	Governmental Authority means applicable national, federal, state, county, municipal, tribal, local and other political subdivision governmental entities, quasi-governmental entities and non-governmental bodies exercising similar powers of authority and all agencies, authorities, departments, instrumentalities, courts, arbitrators and arbitration panels, corporations, commissions, divisions, boards, bureaus, branches, officials and other authorities lawfully exercising or entitled to exercise any administrative, executive, judicial, legislative, police, regulatory or taxing authority or power, or other subdivisions of any of the foregoing having a regulatory interest in or jurisdiction over the services provided pursuant to this Statement of Operating Conditions, Shipper or Transporter. 
(p)	Gross Heating Value means the number of Btu liberated by the complete combustion, at constant pressure, of one cubic foot of Gas at a base temperature of 60 degrees Fahrenheit and a referenced pressure base of 14.73 Psia with air of the same temperature and pressure of the Gas, after products of combustion are cooled to the initial temperature of the Gas, and after the water of the combustion is condensed to the liquid state.  Transporter shall correct the Gross Heating Value of the Gas for the water vapor content of Gas being delivered, but if the water vapor content of the Gas is seven pounds or less per 1,000,000 cubic feet, then the Gas is deemed to be dry and no correction is to be made.
(q)	Guarantor means a party, which has a financial net worth and other financial considerations acceptable to Transporter, that has provided a written agreement, in a form and substance acceptable to Transporter, guaranteeing the performance of Shippers financial obligations under the Service Agreement. 
(r)	Impacted Location is defined in Section 5.4 of this Statement of Operating Conditions.
(s)	Interruptible or Interruptible Transportation Service has the meaning described in Section 3.3 of this Statement of Operating Conditions. 
(t)	Loaning service has the meaning described in Section 3.5(b) of this Statement of Operating Conditions.
(u)	Loss means any actual loss, cost, expense, liability, encumbrance, damage, demand, suit, sanction, claim, cause of action, judgment, lien, fine, or penalty, including court costs and reasonable attorneys fees and costs of investigation and defense.
(v)	Lost and Unaccounted for Gas means the quantity of Gas, expressed in MMBtu, that is released or lost through piping, equipment, operations, measurement losses, or inaccuracies to the extent not adjusted pursuant to measurement procedures in this Statement of Operating Conditions or a Service Agreement, or is vented, flared, or otherwise lost in connection with the operation of Transporters pipeline system.  Transporter shall balance the system on a monthly basis and determine the quantity of documented gas that is Lost and Unaccounted for Gas during the month.  The Lost and Unaccounted for Gas shall be recovered each month pro ratably from all Shippers on a non-discriminatory basis based on the volumes transported on the system during the month.  
(w)	Maximum Daily Contract Quantity or MDCQ means the maximum quantity of Gas in MMBtu, exclusive of applicable Retention Quantities, that Shipper may nominate and deliver to Transporter each Day for Firm Transportation Service (and Secondary Transportation) at a Receipt Point or an aggregate of Receipt Points at a relatively uniform hourly rate over the course of such Day, as specified in a Service Agreement.
(x)	Maximum Hourly Quantity is defined in Section 6.2 of this Statement of Operating Conditions.    
(y)	MMBtu means 1,000,000 Btus.
(z)	Month means a period of time beginning at 9:00 a.m. CCT on the first Day of a calendar month and ending at 9:00 a.m. CCT on the first Day of the following calendar month.
(aa)	Nomination means the quantity of Gas in MMBtu Shipper expects to make available and deliver at each Receipt Point each Day, or portion thereof, and receive at each Delivery Point each Day, or portion thereof.
(bb)	Operational Flow Order is defined in Section 8.5 of this Statement of Operating Conditions.
(cc)	Parking service has the meaning described in Section 3.5(a) of this Statement of Operating Conditions.
(dd)	Primary Delivery Point(s) means those Delivery Point(s) listed in a Shippers Service Agreement for Firm Transportation Service as being Primary Delivery Point(s) and that are assigned a point capacity entitlement.  
(ee)	Primary Receipt Point(s) means those Receipt Point(s) listed in a Shippers Service Agreement for Firm Transportation Service as being Primary Receipt Point(s) and that are assigned a point capacity entitlement.
(ff)	Pro-Rated Share means, with respect to any Shipper, such Shippers proportionate share based on such Shippers and each other Shippers last confirmed Nomination.
(gg)	Psia means pounds per square inch absolute.
(hh)	Psig means pounds per square inch gauge.
(ii)	Receipt Point(s) is defined in Section 7.2 of this Statement of Operating Conditions.
(jj)	Retention Quantities means a Shippers pro rata share of the quantity of any Gas that is actually retained by Transporter for (i) Fuel and (ii) Lost and Unaccounted for Gas.   
(kk)	Scheduled Quantity means the quantity of Gas (up to the MDCQ for Firm Transportation Service), plus any applicable Retention Quantities nominated by a Shipper and scheduled and confirmed by Transporter with the upstream and the downstream pipeline operators.
(ll)	Secondary Delivery Point(s) means those Delivery Point(s) listed in a Shippers Service Agreement for Firm Transportation Service as being Secondary Delivery Point(s). 
(mm)	Secondary Receipt Point(s) means those Receipt Point(s) listed in a Shippers Service Agreement for Firm Transportation Service as being Secondary Receipt Point(s).
(nn)	Secondary Transportation is defined in Section 3.2 of this Statement of Operating Conditions.
(oo)	Service Agreement means the agreement between Transporter and Shipper, pursuant to which Transporter will provide transportation services or park and loan services for Shipper in accordance with the terms and provisions of this Statement of Operating Conditions.
(pp)	Shipper means the party that holds title to and/or all lawful rights to possess the Gas that is being transported and has a fully executed Service Agreement with Transporter.
(qq)	Taxes means gross production, severance, conservation, ad valorem, and similar or other taxes measured by or based upon production, together with all taxes on the right or privilege of ownership of Gas, or upon the handling, transmission, compression, processing, treating, conditioning, distribution, sale, use, delivery, or redelivery of Gas, including all of the foregoing now existing or in the future imposed or promulgated.
(rr)	Thermal Content means with respect to Gas, the product of (i) a volume of Gas and (ii) the Gross Heating Value of such Gas, adjusted to a same pressure base of 14.73 Psia, as expressed in MMBtus; and with respect to Condensate, the product of (x) a volume of Condensate and (y) the Gross Heating Value of such Condensate.
(ss)	Transportation Rates is defined in Section 9.1 of this Statement of Operating Conditions.
3.	SERVICES
	3.1 	Firm Transportation Service.  Firm Transportation Service is the receipt, transportation, and redelivery of Gas on a firm basis, subject, however, to Force Majeure (as defined in Section 18 of this Statement of Operating Conditions); provided, however, that Firm Transportation Service is not subject to interruption, allocation, or proration in favor of any transportation service provided pursuant to and governed by this Statement of Operating Conditions to any other class of customers.
With respect to each daily Nomination of Gas for Firm transportation (and Secondary Transportation) under a Service Agreement, Shipper may nominate a quantity of Gas not to exceed its MDCQ.
	3.2	Secondary Transportation.  Secondary Transportation is the receipt, transportation, and redelivery of Gas on an interruptible basis to/from a secondary point and is provided pursuant to a Shippers executed Service Agreement for Firm Transportation Service.  If a Firm Shipper nominates and transports using Secondary Transportation, then Shipper will pay an incremental reservation charge, which, in combination with the base reservation charge agreed to between Transporter and Shipper, shall not exceed the maximum reservation rate set out in Exhibit A (as well as all applicable usage and other charges), as mutually determined between Transporter and Shipper and as set out in the Shippers Service Agreement for Firm Transportation Service (Additional Reservation Charge).  
	3.3	Interruptible Transportation Service.  Interruptible Transportation Service is the receipt, transportation, and redelivery of Gas on an interruptible basis.  Transporter is contractually entitled, in its discretion, to interrupt, curtail, or suspend the receipt, transportation, or delivery of such Gas at any time and from time to time without liability to any Shipper.
	3.4	Authorized Overrun Service.  Upon request of Shipper at the time it nominates Firm Transportation Service, Transporter may, in its discretion, approve and schedule for receipt or delivery a quantity of Gas in excess of the MDCQ and Shippers Retention Quantities (Authorized Overrun Service). Authorized Overrun Service will be scheduled in accordance with the priorities established in Section 5.4 of this Statement of Operating Conditions.
	3.5	Park and Loan Services.  Any park and loan service that Transporter agrees to provide to a Shipper will be performed in accordance with the applicable terms of this Statement of Operating Conditions, the Service Agreement, and the following:
	(a)	Parking Service
		(i)	A Shipper electing to store (park) Gas to its park account must first obtain approval from Transporter by requesting the quantity of Gas and Receipt Point(s) before nominating a quantity of Gas.  The minimum length of time the Gas may be left in the park account is one Day.  The maximum length of time the Gas may be left in the park account will be determined by Transporter.  Transporter shall credit all such quantities of Gas that are approved for parking to Shippers park account.
		(ii)	A Shipper electing to withdraw (unpark) Gas from its park account must first obtain approval from Transporter by requesting the quantity of Gas and Delivery Point(s), which must be the same point(s) as the Receipt Point(s) nominated under Section 3.5(a)(i) of this Statement of Operating Conditions before nominating a quantity of Gas.  Transporter shall deduct all such quantities of Gas that are approved for withdrawal from Shippers park account.
		(iii)	If the Service Agreement has terminated, then Transporter, in its discretion, may require Shipper to withdraw all or any portion of the Gas quantities parked on Transporters system within 30 Days of Transporters notice to Shipper.  If Shipper fails to nominate for the withdrawal of the quantities specified by Transporter in its notice, then Transporter shall take title to the portion of Shippers parking account that Shipper was instructed to withdraw, free and clear of any adverse claims.  Transporters notice to Shipper may be verbal and in such case must be followed by a written notice within five business Days.
		(iv)	To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the withdrawal of Gas in Shippers park account upon 24 hours notice.  If Shipper has not withdrawn the requested Gas within 48 hours after the time such notice was first given, then Transporter may adjust the Shippers nominations as necessary to maintain the operational integrity of its pipeline system.  If Transporter is unable to maintain the operational integrity of its pipeline system by the adjustment of Shippers nominations after Shipper has failed to withdraw its Gas from its park account, despite the availability of capacity for the withdrawal of such Shipper Gas, then, after thirty (30) Days notice to Shipper, Transporter shall take title to that portion of Shippers park account that Shipper was instructed to withdraw, free and clear of any adverse claims.  At any time prior to the expiration of the thirty (30) Days notice, however, Shipper may withdraw such Shipper Gas in accordance with the terms of this Statement of Operating Conditions.
	(b)	Loaning Service
		(i)	A Shipper electing to withdraw (borrow) Gas from its loan account must first obtain approval from Transporter by requesting the quantity of Gas and Delivery Point(s) before nominating a quantity of Gas.  The minimum length of time the Gas may be withdrawn from the loan account is one Day.  The maximum length of time the Gas may be withdrawn from the loan account will be determined by Transporter.  Transporter shall debit all such quantities of Gas that are approved for withdrawal to Shippers loan account.
		(ii)	A Shipper electing to park (store or re-pay) Gas to its loan account must first obtain approval from Transporter by requesting the quantity of Gas and Receipt Point(s), which must be the same point(s) as the Delivery Point(s) nominated under Section 3.5(b)(i) of this Statement of Operating Conditions before nominating a quantity of Gas.  Transporter shall credit all such quantities of Gas that are approved for park (store or re-pay) to Shippers loan account.
		(iii)	If the Service Agreement has terminated, then Transporter, in its discretion, may require Shipper to repay all, or any portion of the Gas quantities loaned by Transporter within 30 Days of Transporters notice to Shipper.  If Shipper fails to deliver or cause to be delivered the quantities specified by Transporter in its notice, then Transporter will invoice and Shipper shall pay an amount per MMBtu equal to two times the price specified in Inside FERCs Gas Market Report under the listing Tennessee, zone 0 as reported in the first publication for the Month following the date upon which Transporters Notice was issued to Shipper in full satisfaction of the loaned volume. 
		(iv)	To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the repayment of quantities of Gas that have been loaned upon 24 hours notice.  If Shipper has not repaid the requested quantities of Gas that have been loaned within 48 hours after the time such notice was first given, then Transporter will invoice and Shipper shall pay a one-time charge equal to an amount per each MMBtu of loaned Gas that Shipper failed to repay, despite the availability of capacity for the repayment of such Gas, equal to two times the price specified in Inside FERCs Gas Market Report under the listing Tennessee, zone 0 as reported in the first publication for the Month following the date upon which Transporters above 24 hours notice was given to Shipper in full satisfaction of the loaned volume.
4.	REQUEST FOR SERVICE AGREEMENT
	4.1	Request for Service Agreement.  A Service Agreement is required for all services hereunder and will be subject to all terms and provisions of this Statement of Operating Conditions.  Any potential Shipper desiring to obtain services from Transporter after the initial filing of this Statement of Operating Conditions must request a Service Agreement from Transporter.  The request may be in writing, by telephone, or electronic medium.  Shipper shall provide documentation to demonstrate its creditworthiness to the satisfaction of Transporter in accordance with Section 4.3 of this Statement of Operating Conditions.
		Requests for Service Agreement may be sent to:
		NET MEXICO PIPELINE PARTNERS, LLC
		1001 Louisiana Street, Suite 1000
		Houston, TX 77002
		Telephone: (713) 420-4656
		or the email address posted on Transporters website
	4.2	Requirements of Request for Service.  Each request for a Service Agreement must include the following information:
		(a)	Shippers name;
		(b)	a statement identifying the on behalf of entity(ies) that are warranted by Shipper to meet the provisions of the Part 284 Regulations;
		(c)	requested Receipt Point(s) or receipt point area and Delivery Point(s) or delivery point area;
		(d)	Shippers requested Maximum Daily Contract Quantity, if Firm Transportation Service is being requested; 
		(e)	a statement containing information verifiable by Transporter that the minimum transportation quantity of gas to be received or delivered equals at least 750 MMBtu per Day at each Receipt Point and Delivery Point;
		(f)	the type and character of service requested; and
		(g)	the term of the service requested.
	4.3	Credit Approval.  Transporters agreement to execute a Service Agreement or to engage in a specific transaction under a Service Agreement is contingent upon a satisfactory appraisal of Shippers credit by Transporter.  To enable Transporter to conduct such credit appraisal, the potential Shipper or its Guarantor must submit to Transporter the information set forth in subsection (a) below, or such other financial information reasonably acceptable to Transporter, but Transporters receipt of such material will not be deemed acceptance of the request for Service Agreement.  Transporter will apply consistent evaluation practices on a non-discriminatory basis to determine creditworthiness.
		(a)	Each potential Shipper or its Guarantor must provide: (i) a copy of its last two fiscal years of audited financial statements, including balance sheets, income statements, cash flow statements, and accompanying footnotes; (ii) a bank reference; and (iii) at least three trade references indicating that the potential Shippers or Guarantors obligations with third parties are being paid on a prompt basis.  If the potential Shipper cannot provide the above information for itself or its Guarantor, then the potential Shipper must, if applicable, provide that information for its parent company. 
		(b)	If Transporter determines Shippers credit to be unsatisfactory, as tested in a commercially reasonable manner, at any time during the term of any Service Agreement, then Transporter may demand security totaling the sum of three (3) months of service assuming full contract quantity or based on an estimate of historical or projected usage quantities as determined by Transporter or such other sufficient security in a form, an amount, and for the term agreed to or acceptable to Transporter and Shipper or its Guarantor (Adequate Assurance of Performance), including an irrevocable standby letter of credit in a form and from a bank satisfactory to Transporter for services, a prepayment, a security interest in an asset, or a performance bond or guaranty (including the issuer of any such security).
		(c)	Shipper may substitute cash collateral provided under Section 4.3(b) of this Statement of Operating Conditions at any time, with any of the above forms of security.  Transporter shall return the cash collateral to Shipper within two business Days of receipt of the substitute collateral if there is no past due payment due to Transporter.  Transporter may suspend its performance under a Service Agreement until such security is received and if such security is not provided by Shipper within 10 Days from written request from Transporter, Transporter may terminate the Service Agreement; provided, however, that if Shipper provides any credit enhancement to Transporter prior to its termination as provided for in this sentence, then Transporters right to so terminate shall lapse.
		(d)	Transporter shall have the right to suspend performance under a Service Agreement in the event: (i) Shipper or its Guarantor has voluntarily filed for bankruptcy protection under any chapter of the Bankruptcy Code; (ii) Shipper or its Guarantor is the subject of an involuntary petition of bankruptcy under any chapter of the Bankruptcy Code, and such involuntary petition has not been settled or otherwise dismissed within 90 Days of such filing; (iii) Shipper or its Guarantor otherwise becomes insolvent, whether by an inability to meet its debts as they come due in the ordinary course of business or because its liabilities exceed its assets on a balance sheet test; and/or however such insolvency may otherwise be evidenced; (iv) Shipper or its Guarantor fails to timely pay any amounts due and payable under a Service Agreement; or (v) Shipper or its Guarantor fails to provide Adequate Assurance of Performance within two business Days after receipt of written demand for such assurance (which shall include reasonable particulars for the demand and documentation supporting the calculation of such amount demanded).	
	4.4	Rejection of Request.  Transporter shall have the right to reject any request for Service Agreement that does not contain the required information set forth herein and Transporter will have no liability to Shipper or any other entity in connection with such rejection.
	4.5	Service Agreement.  After Shipper has requested a Service Agreement and after Transporter has determined that Shipper is creditworthy, Transporter and Shipper will enter into a Service Agreement, which will incorporate by reference the provisions of this Statement of Operating Conditions.  Neither Transporter nor Shipper will have any obligations to one another until authorized representatives of both Transporter and Shipper have executed a Service Agreement.
	4.6	Additional Facilities.  Transporter shall not be required to construct additional facilities, modify or expand facilities or acquire facilities to provide service.  Any additional facilities (including meters) required to provide service to a Shipper that Transporter agrees in its discretion to provide shall be paid for by such Shipper, unless agreed otherwise.
5.	GENERAL
	5.1	Transporters Obligations.  Transporter will receive all Gas at the Receipt Point(s) up to the Scheduled Quantity as nominated and tendered by Shipper under the terms of this Statement of Operating Conditions and the Service Agreement, transport the Gas and deliver equivalent quantities of Gas, in MMBtu, to Shipper at the Delivery Point(s), less the Retention Quantities as set forth in Section 9.6 of this Statement of Operating Conditions.  Transporters obligations to receive, transport, and deliver Gas to the Delivery Point(s) will be in accordance with the applicable character of service (i.e., Firm, Interruptible or Park and Loan), and are subject to: (i) an event of Force Majeure; (ii) Shippers failure or refusal to deliver Gas to or receive Gas from, Transporter as required under this Statement of Operating Conditions or the Service Agreement; (iii) any Applicable Laws, which limit, prevent, or interfere with Transporters performance; (iv) the requirements of downstream pipelines; and (v) the terms and conditions in this Statement of Operating Conditions and the applicable Service Agreement.  Shipper acknowledges that the quantity of Gas physically received or delivered by Transporter may be different than the Scheduled Quantity and, for those Receipt Point(s) and Delivery Point(s) at which Transporter has operational balancing agreements, the Scheduled Quantity is deemed to have been received or delivered for the account of Shipper, subject to the remaining terms and conditions of this Statement of Operating Conditions and the applicable Service Agreement.  In the event of constraints at a Delivery Point(s) or on a downstream pipeline, Transporter will rely on the downstream partys allocation at the affected Delivery Point(s) and, to the extent Shippers Nominations are reduced, Shipper will be deemed to have failed to receive Gas from Transporter as required hereunder.
	5.2	Interruption of Service.  Transporter will endeavor to advise (by telephone or electronic medium) Shippers dispatcher or authorized representative of an interruption as soon as practicable, either before or after interruption of service, but Transporter will have no liability for any failure to give such notice.  Transporter will not be liable for any Loss to any person or property caused, in whole or in part, by any interruption of any services provided under any Service Agreement.  Shipper will indemnify and hold harmless Transporter, its officers, agents, employees, and contractors from and against any and all Losses resulting from, or arising out of, any interruption or curtailment of any services provided under any Service Agreement.  Should any third party with the right to control the Receipt Point(s), Delivery Point(s), or any other facilities needed for the receipt, transportation, or delivery of Gas hereunder limit or fail to authorize the use of any such facilities to perform services provided hereunder, Transporter will have no obligation hereunder to perform any transportation service, or receive or deliver Gas hereunder.
	5.3	Shippers Obligations.  Shipper will tender the Scheduled Quantity to Transporter at the Receipt Point(s), and accept such Gas, less the Retention Quantities, at the Delivery Point(s).  Shippers obligations set forth in the preceding sentence are subject to: (i) an event of Force Majeure; (ii) Transporters failure or refusal to receive Gas from, or deliver Gas to, Shipper as required under this Statement of Operating Conditions and the Service Agreement; (iii) any Applicable Laws which limit, prevent, or interfere with Shippers performance; and (iv) the terms and conditions in this Statement of Operating Conditions and the applicable Service Agreement.
	5.4	Priority of Service and Scheduling.  From time to time, Transporter may not have sufficient capacity available to accommodate all Nominations through specific Receipt Point(s), specific Delivery Point(s), and/or specific segments of Transporters pipeline system (the Impacted Location).  In such event, with respect to both services provided pursuant to and governed by this Statement of Operating Conditions and intrastate services that are subject to the exclusive jurisdiction of the Texas Railroad Commission, Transporter will schedule and perform service through the Impacted Location in the following order of priority (listed highest to lowest priority order):  
		(a)	 Firm transportation services utilizing Primary Receipt Points to Primary Delivery Points.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers on a pro rata basis based upon all such shippers last nominations of Gas subject to this transportation service prior to the event causing the curtailment.  
		(b)	Secondary transportation utilizing Secondary Receipt Points to the Primary Delivery Point at the international border.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers on a pro rata basis based upon all such shippers last  nominations of Gas subject to this transportation service prior to the event causing the curtailment.
		(c)	Secondary transportation utilizing Secondary Receipt Points to Primary Delivery Points other than at the international border.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers on a pro rata basis based upon all such shippers last  nominations of Gas subject to this transportation service prior to the event causing the curtailment.
		(d)	Secondary transportation utilizing Primary Receipt Points to Secondary Delivery Points.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers on a pro rata basis based upon all such shippers last  nominations of Gas subject to this transportation service prior to the event causing the curtailment.
		(e)	Secondary transportation utilizing Secondary Receipt Points to Secondary Delivery Points.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers on a pro rata basis based upon all such shippers last  nominations of Gas subject to such transportation service prior to the event causing the curtailment.
		(f)	Interruptible transportation services and authorized overrun services.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers so that available capacity, if any, will be awarded to the customer whose transaction provides the greatest economic benefit to Transporter, as determined by rate.  
		(g)	Park and loan services.  If there is capacity available to accommodate some but not all of such nominations, then Transporter shall allocate the capacity through the Impacted Location among such customers in any manner such that the available capacity, if any, will be awarded to the customer whose transaction provides the greatest economic benefit to Transporter, as determined by Transporter based on a total revenue analysis, on a nondiscriminatory basis.
	5.5	Intrastate Service.  In addition to the services provided hereunder pursuant to NGPA Section 311, Transporter offers and performs intrastate transportation services that are subject to the exclusive jurisdiction of the Texas Railroad Commission, and that are exempt from FERCs regulation under the NGPA.  To provide Shippers with flexibility to access intrastate and/or interstate markets, Shippers may contract for both intrastate and NGPA Section 311 service on mutually agreeable terms, including a limitation that Shippers combined usage under the separate intrastate and NGPA Section 311 agreements cannot exceed the Maximum Daily Contract Quantity (MDCQ), if applicable, under the intrastate agreement; provided, however, that Transporters provision of NGPA Section 311 service, without undue discrimination, shall not be conditioned on Shippers subscription to Firm intrastate capacity.  The description of available intrastate services contained herein is provided for informational purposes only and should not be construed to make such intrastate services subject to FERC regulation
6.	QUANTITY

	6.1	Quantity.  Subject to the terms, conditions, and limitations contained herein, Shipper, or Shippers designee, agrees to deliver, or cause to be delivered, to the Receipt Point(s), and Transporter agrees to accept, or cause to be accepted, those daily quantities of Gas scheduled in accordance with Section 8 of this Statement of Operating Conditions and tendered daily at the Receipt Point(s).  Subject to the terms, conditions, and limitations contained herein, and provided that the applicable operational balancing agreement referenced in Section 8.3 of this Statement of Operating Conditions is in full force and effect, Shipper agrees on any Day to accept, or cause to be accepted, at the Delivery Point(s), and Transporter agrees to transport and deliver, or cause to be transported and delivered at the Delivery Point(s), all Gas received from Shipper at the Receipt Point(s) regardless of the Scheduled Quantity for such Day, subject to (i) the available capacity of Transporters pipeline system and Transporters curtailment procedures, (ii) the provisions of any Operational Flow Order, and (iii) Force Majeure.
6.2	Maximum and Minimum Delivery and Receipt Quantities.  The maximum quantity of Gas that Transporter is obligated to receive hereunder at the Receipt Point(s) and deliver hereunder at the Delivery Point(s) during any given hour of any Day is 1/24 of Shippers Scheduled Quantity at an instantaneous standard volumetric flow rate at any point in time during the hour (Maximum Hourly Quantity), unless otherwise specifically provided in the Service Agreement.  With respect to Firm Transportation Service (and Secondary Transportation), Transporter has no obligation to receive, transport, and deliver quantities of Gas hereunder in excess of Shippers MDCQ.  Transporter has no obligation to receive or deliver Gas in quantities exceeding the physical capacity of the Delivery Points or Receipt Points.  If the quantity of Gas tendered at any single Receipt Point(s) or delivered to any Delivery Point(s) is less than 750 MMBtu per Day averaged over a Month, then as to any such Receipt Point(s) or Delivery Point(s), as applicable, Transporter may thereafter terminate the applicable Service Agreement unless Shipper pays the applicable metering fee specified in Section 9.10. 

	6.3	All Quantities in MMBtu.  All quantities of Gas received and delivered under any Service Agreement will be expressed in terms of MMBtu, including calculation of payments, determination of imbalances, and determination of Retention Quantities.
7.	DELIVERY POINT(S) AND RECEIPT POINT(S)
	7.1	Delivery Point(s).  Transporter will deliver Gas to Shipper, or its agent, under this Statement of Operating Conditions and a Service Agreement, to the existing points of interconnection between Transporters pipeline facilities and the pipeline or receipt facilities of other parties at the point(s), or a pool consisting of an aggregate collection of such points, as identified in the Service Agreement (the Delivery Point(s)).  Delivery Point(s) may be modified, or additional Delivery Point(s) may be added to the Service Agreement, by mutual agreement of the parties.  
	7.2	Receipt Point(s).  Shipper will tender Gas for delivery to Transporter under this Statement of Operating Conditions and a Service Agreement from the existing points of interconnection between Transporters pipeline facilities and the pipeline or delivery facilities of other parties at the point(s), or a pool consisting of an aggregate collection of such points, as identified in the Service Agreement (the Receipt Point(s)).  Receipt Point(s) may be modified, or additional Receipt Point(s) may be added to the Service Agreement, by mutual agreement of the parties.  
	7.3	Allocation at Receipt Point(s) and Delivery Point(s).  It is recognized that quantities of Gas may be transported through the Receipt Point(s) and/or the Delivery Point(s) for one or more parties other than Shipper.  If that occurs, the measurement of Gas may involve the allocation of Gas receipts or deliveries.  As between Transporter and Shipper and subject to Section 5.1 of this Statement of Operating Conditions, Transporter will, in its reasonable discretion, determine the allocation of all Gas receipts and deliveries hereunder.  Each of Shipper and Transporter will furnish or cause to be furnished to the other party all data required to accurately account for all Gas received and delivered hereunder
	7.4	Payment of Fees.  Shipper must pay any and all transportation, measurement, testing, compression, or other fees or charges imposed by any third party on deliveries at any Receipt Point(s) or Delivery Point(s).  Notwithstanding the foregoing, if Transporter pays any such fees and charges, then Shipper must reimburse Transporter for any such fees or charges paid by Transporter with respect to Shippers Gas if Transporter has given Shipper written notice of the amount of such fees and charges and Shipper has agreed in writing to reimburse Transporter for such fees and charges.  If Shipper has not given Transporter written notice of its agreement to reimburse Transporter for any such fees and charges, then Transporter will have no obligation to receive Gas for Shipper at any such Receipt Point(s) or deliver Gas for Shipper at any such Delivery Point(s) that may be subject to such fees and charges.
	7.5	Pooling.  Transporter has established a pooling point, which Shippers may nominate to as a Delivery Point and nominate from as a Receipt Point, subject to the terms set out herein.  Transporter may establish additional pooling points at its discretion.  Nominations to and from a pooling point are subject to the same Nomination and confirmation procedures as all other receipts and deliveries as provided for in this Statement of Operating Conditions.  All Nominations to a pooling point and all Nominations from a pooling point must be made under a Shippers Service Agreement as provided for in this Statement of Operating Conditions.  Transporter will not charge a Transportation Rate for Nominations to a pooling point nor will it charge a Transportation Rate for pool-to-pool transfers.  Transporter will charge the applicable Transportation Rate for all Nominations from a pooling point.  All other charges and Retention Quantities will be assessed in accordance with this Statement of Operating Conditions.  A pooling point may not be specified as a Primary Receipt Point or a Primary Delivery Point.  A Shipper shall cause its Nominations to and from a pooling point to be in balance at all times and shall adjust its Nominations to correct any imbalance.  If such an imbalance occurs, Transporter shall have the right to adjust Shippers nominations pursuant to Section 8.4 of this Statement of Operating Conditions.  While no imbalances will be permitted at a pooling point, Gas may be parked or loaned at a pooling point, subject to the provisions of Section 3.5 of this Statement of Operating Conditions.  For scheduling and curtailment purposes, the priority of service for transportation to or from a pooling point is based on the Shippers Service Agreement nominating Gas away from the pooling point.  Gas shall not be confirmed at a pooling point to the extent capacity constraints exist which affect any such receipts or deliveries, applying the priorities set out in this Statement of Operating Conditions.  Transporter is providing pooling point(s) as a convenience and notwithstanding anything herein or in a Service Agreement to the contrary, Transporter expressly reserves the right to discontinue such availability of pooling point(s) in its discretion at any time upon thirty (30) days notice.
8.	NOMINATIONS AND BALANCING
	8.1	Nominations.  Shipper or its agent shall submit the quantity of Gas in MMBtu Shipper expects to make available and deliver at each Receipt Point each Day, or portion thereof, and receive at each Delivery Point each Day, or portion thereof (the Nomination) to Transporter using Shippers designated Electronic Nomination System.  Transporter shall send Shipper a confirmation for each Nomination using the Electronic Nomination System.  Shipper must acknowledge each confirmation using the Electronic Nomination System before any Nomination is considered to be scheduled.  Transporter may waive this requirement for an acknowledgement in its discretion.  Transporter, to the extent it is utilizing for its own account any available unused capacity, shall submit a Nomination for such service in accordance with the same provisions and shall be treated in the same manner as all other Nominations pursuant to the Nomination procedures set forth herein and the scheduling and priority of service provisions of this Statement of Operating Conditions.  Transporter shall confirm Shippers Nomination with upstream and downstream operators in accordance with the provisions of this Statement of Operating Conditions and the Service Agreement using the Electronic Nomination System or other means recognized by the upstream or downstream operator.  Shipper shall notify Transporter of the capacity and path (area that the receipt quantities will be nominated from for the next Day) that Shipper plans to utilize.  The deadline for submitting timely and evening Nominations will follow the NAESB nomination timeline that is in effect at such time. 

Transporter shall accommodate changes in daily nominations on an intraday basis to the extent Transporter is reasonably able to confirm such intraday changes with the affected upstream or downstream interconnected operators. The deadline for submitting Nominations on an intraday basis will follow the NAESB nomination timeline that is in effect at such time.

Transporter and the Shipper agree that the confirmation results reported to Shipper pursuant to the preceding paragraph shall be deemed to be dispositive for the flow day, and shall not be modified without the concurrence of Transporter and Shipper. 

	8.2	Shippers Balancing Obligations.  The maximum quantity of Gas that Transporter is obligated to receive at the Receipt Point(s) and deliver at the Delivery Point(s) during any given hour of any Day is 1/24th of Shippers Scheduled Quantity, unless otherwise provided in the applicable Service Agreement.  Shipper shall balance, on a monthly basis, between Gas received by Transporter at the Receipt Point(s), less the Retention Quantities, and the Gas delivered at the Delivery Point(s).  Shipper must monitor and adjust its Nominations, deliveries, and receipts to maintain the monthly balances between the Receipt Point(s) and Delivery Point(s), and notify Transporter of any imbalances or situations that may cause imbalances.  If Transporter is unable to receive Gas at any Receipt Point in the quantities scheduled, or deliver Gas at any Delivery Point in the quantities scheduled, as provided for herein, then Transporter will notify Shipper as soon as practicable.  Shipper and Transporter shall cooperate with each other to minimize imbalances between the Receipt Point(s) and Delivery Point(s).  If an imbalance exists with respect to Shippers deliveries at the end of any Month (the Monthly Imbalance Amount) and such imbalance results in a cash out of all or part of such Monthly Imbalance Amount pursuant to Transporters operational balancing agreements referenced in Section 8.3 of this Statement of Operating Conditions, then Shipper and Transporter shall keep each other whole for such cashed out amounts.  Any monthly imbalance that is not resolved by means of an operational balancing agreement pursuant to Section 8.3 shall be resolved as follows: (i) net positive or negative monthly imbalances of up to ten percent (10%) of the MDCQ shall be settled in kind during the following month; (ii) net positive or negative imbalances exceeding ten percent (10%) of the MDCQ shall be cashed out during the following month at a rate of 110% (for Gas quantities owed the Transporter) or 90% (for Gas quantities owed the Shipper) of the average daily Tennessee, zone 0 index price published by Platts Gas Daily for the Month during which the imbalance accrued.
	8.3	Agreements with Other Pipelines.  Transporter or its designee will use commercially reasonable efforts to enter into operational balancing agreements or similar arrangements with the operators of the interconnecting pipelines at the Receipt and Delivery Point(s).  Shipper will not be charged a balancing fee as long as such operators or their successors or assigns do not require payment or reimbursement of a balancing fee of any kind.  In all other cases, Transporter shall pass through any such fee to Shipper pursuant to Section 9.7 of this Statement of Operating Conditions.
	8.4	Adjustments for Balance.  Notwithstanding anything in this Statement of Operating Conditions or a Service Agreement to the contrary, Transporter may for operational reasons, at any time and from time to time, with reasonable notice to Shipper if practicable, restrict, interrupt, or reduce its receipts or deliveries of Gas at the Receipt Point(s) or Delivery Point(s), and direct Shipper to make adjustments in its receipts or deliveries, in order to maintain a daily and hourly balance or to correct an imbalance.  If Shipper fails or refuses to follow any such request from Transporter, Transporter may, without liability hereunder, cease accepting or delivering Gas under the Service Agreement until the conditions causing the imbalance are corrected.
	8.5	Operational Flow Order.  If, in Transporters discretion, it is necessary or desirable, Transporter may issue an order to preserve the overall operational balance or integrity of Transporters system (an Operational Flow Order).
		(a)	An Operational Flow Order may be issued if Transporter determines that changes in receipts or deliveries are necessary to maintain overall operational balance of Transporters system or to enable Transporter to provide the services set forth in this Statement of Operating Conditions and a Service Agreement.  The Operational Flow Order will identify with specificity the operational problem to be addressed, the action(s) Shipper must take, the time by which Shipper must take the specified action(s), and the period during which the Operational Flow Order will be in effect.  Transporter will provide as much prior notice as possible, but not less than three hours, to Shipper of actions Shipper must take to comply with an Operational Flow Order; but action by Shipper can be required on less than three hours notice if the nature of the Operational Flow Order is due to safety concerns or to protect the integrity of Transporters pipeline system.
		(b)	An Operational Flow Order may require Shipper to take any of the following actions or similar actions:
			(i)	commence or increase supply inputs into Transporters pipeline system at specific Receipt Point(s) or, alternatively, cease or reduce deliveries from Transporters pipeline system at specific Delivery Point(s), both as directed by Transporter;
			(ii)	cease or reduce supply inputs into Transporters pipeline system at specific Receipt Point(s) or, alternatively, commence or increase deliveries of Gas from Transporters pipeline system at specific Delivery Point(s), both as directed by Transporter;
			(iii)	eliminate any transportation imbalances, as directed by 
Transporter;
			(iv)	conform actual receipts and deliveries to nominated and scheduled receipts and deliveries;
			(v)	delay changes in deliveries up to 24 hours to account for the molecular movement of Gas; and/or
			(vi)	such other actions that are within Shippers control that would 
tend to alleviate the operational situation to be addressed.
		(c)	If Shipper fails to adjust its receipts and/or deliveries in compliance with an Operational Flow Order, then Shipper must pay Transporter a charge equal to the greater of: (i) the highest daily price of gas at the Houston Ship Channel Index as stated in Gas Daily plus $2.00 or if Gas Daily is unavailable another similar publication plus $2.00, or (ii) $10.00 for each MMBtu received or delivered at the Receipt Point(s) or Delivery Point(s) during each hour in which deliveries are greater than 110% or less than 90% of the Scheduled Quantities at the Receipt Point(s) for such hour, less Retention Quantities, while the Operational Flow Order is in effect.  In addition, Transporter may take any action necessary to alleviate the operational situation.  
		(d)	If Shipper fails to abide by an Operational Flow Order issued pursuant to this Section 8.5, then Shipper will also be responsible for any and all damages asserted by any third parties, and will indemnify Transporter against any Losses resulting from, or arising out of, Shippers failure to comply with the Operational Flow Order.
9.	RATES

	9.1	Transportation Rates.  Each Month Shipper will, where applicable, pay Transporter the following charges for transportation services (Transportation Rates):
		(a)	except to the extent discounted by Transporter as set out in the Service Agreement, the Maximum Firm Transportation Service Reservation Rate set out in Exhibit A for each MMBtu of Shippers MDCQ and the Firm Transportation Service Usage Rate for each MMBtu of Gas transported by Transporter during such Month; and
		(b)	except to the extent discounted by Transporter as set out in the Service Agreement, the Maximum Interruptible Transportation Service Rate set out in Exhibit A for each MMBtu of Gas transported by Transporter on an interruptible basis during such Month.
		Unless otherwise provided in the Service Agreement, (i) usage rates will be charged on the quantity of Gas redelivered to Shipper at the Delivery Point(s), and (ii) reservation rates will be applied to the applicable MDCQ as provided in the Service Agreement for each Day on which Shipper is entitled to use such MDCQ.  Transportation Rates and other charges or fees due under this Statement of Operating Conditions and the Service Agreement will be invoiced and payable under Section 16 of this Statement of Operating Conditions.
	9.2	Parking and Loaning Rates.  Each Month Shipper will, where applicable, pay Transporter the following charges for parking and loaning services:
		(a)	except to the extent discounted by Transporter as set out in the Service Agreement, the parking rate set out in Exhibit A for each MMBtu of Gas parked by Transporter for Shipper per Day during such Month; and
		(b)	except to the extent discounted by Transporter as set out in the Service Agreement, the loaning rate set out in Exhibit A for each MMBtu of Gas loaned by Transporter for Shipper per Day during such Month. 
	9.3	Additional Reservation Charge for Secondary Transportation.  Each Month Shipper will, where applicable and as provided for in Section 3.2, pay Transporter for Secondary Transportation the Additional Reservation Charge.  
	9.4	Authorized Overrun Service Rate.  Each Month Shipper will, where applicable, pay Transporter for Authorized Overrun Service the Authorized Overrun Service rate set out in an effective Service Agreement for Firm Transportation Service for each MMBtu of Shippers Gas received in excess of its MDCQ and Retention Quantities.
	9.5	Discounted Rates.  Transporter has the discretion to agree to discount its rates on a non-discriminatory basis.
	9.6	Retention Quantities.  In addition to the Transportation Rates and other charges payable under this Statement of Operating Conditions and a Service Agreement, Transporter will retain the Retention Quantities on a monthly basis.  Retention Quantities are made up of the quantities of Gas that is retained by Transporter for (i) Fuel (which is the quantity of Gas that is consumed during the transportation of Gas, but not purchased) and (ii) Lost and Unaccounted for Gas (i.e., Gas that is released or lost through piping, equipment, operations, measurement losses or inaccuracies or is vented, flared or otherwise lost in connection with operations).  Transporter shall balance the system on a monthly basis and determine the quantity of documented Gas that is consumed during the transportation of Gas for that Month (i.e. Fuel) and the quantity of documented Gas that is lost and unaccounted (i.e., Lost and Unaccounted Gas) during the Month.  For each Month and each Shipper, Transporter shall determine the amount of Gas that was transported on behalf of the Shipper and divide that by the volume of Gas transported on the system as whole.  The resulting percentage shall be such Shippers pro rata share of the Retention Quantities.  To determine such Shippers share of the Retention Quantities for a Month, Transporter shall multiply the Retention Quantities on an aggregate basis by the Shippers pro rata percentage.  Shippers shall not be charged Fuel for Gas deliveries as part of wheeling movements that are effectuated by displacement where Fuel is not consumed.  Transporter will not provide for discounts for Retention Quantities. 
	9.7	Third Party Fees.  In addition to the other charges set forth in the Service Agreement, Shipper shall reimburse Transporter for Shippers Pro-Rated Share of any receipt point, delivery point, balancing fee, or metering fee charged by any third party for receipts or deliveries at the Delivery Point(s), except where such fee results from the negligent action of Transporter.  If any third party with the right to control the Delivery Point(s), or any other facilities needed for the receipt, transportation, or delivery of Gas hereunder fail to authorize the use of any such facilities to perform the services provided herein, then Transporter will have no obligation hereunder to perform any transportation services, or receive or deliver Gas hereunder, where Transporters ability to perform such services is in any way adversely affected by such third partys refusal.
	9.8	Capital Improvements.  From time to time, in order to (i) increase the capacity of Transporters pipeline system to meet a Shippers additional transportation requirements, including by the addition of compression, (ii) meet other operational objectives agreed upon by Transporter and a Shipper, or (iii) comply with Applicable Law, Transporter may, in its discretion, make capital improvements to its pipeline system.  Transporter and Shipper acknowledge and agree that the rates set forth in a Service Agreement are based upon the configuration and capacity of Transporters pipeline system as of the Effective Date of such Service Agreement, and that such rates may, upon agreement of Transporter and a Shipper, be adjusted from time to time to reflect capital improvements made by Transporter, and any resulting services to be provided by Transporters pipeline system.
	9.9	Governmental Charges.  In addition to any other charges required, including by Section 9.7 of this Statement of Operating Conditions, Shipper is liable for and shall pay or reimburse Transporter for all surcharges, fees, charges, and assessments imposed by or on behalf of any Governmental Authority in connection with any services provided and actions taken under this Statement of Operating Conditions or a Service Agreement, or any of the transactions contemplated thereunder.
9.10	Metering Fee.  If the quantity of Gas tendered at any single Receipt Point(s) or Delivery Point(s) is less than 750 MMBtu per Day averaged over a Month, Transporter may, at its election, charge Shipper a metering fee of $350 for such Month with respect to each such Receipt Point or Delivery Point.

9.11	Electric Power Costs.  In addition to the charges set forth above, Shipper shall remit to Transporter each month an amount in cash to reimburse Transporter for Shippers share of the Electric Power Costs incurred during most recent billing month.  The Electric Power Costs incurred will be passed through pro ratably to the Shippers on the basis of volumes transported on the system during the most current billing month. 

 9.12 	Fuel Gas Costs.  In addition to the charges set forth above, Shipper shall remit to Transporter each month an amount in cash to reimburse Transporter for Shippers share of the Fuel Gas Costs incurred during the most recent billing month. The Fuel Gas Costs incurred will be passed through pro ratably to the Shippers consistent with Section 9.6 on the basis of volumes transported on the system during the most current billing month.  The Fuel Gas Costs are separate and apart from the Retention Quantities set forth herein and retained by Transporter.

10.	TERM
The Service Agreement will be effective on the date listed in the Service Agreement as the Effective Date, and will, subject to the terms and provisions of this Statement of Operating Conditions, remain in full force and effect until terminated as set forth in the Service Agreement.  Termination, cancellation, or expiration of the Service Agreement will not extinguish any obligation that accrued before or as a result of the termination, cancellation, or expiration.  If there is an imbalance in the Monthly Imbalance Account on the date of termination of a Service Agreement, then the imbalance quantities will be cashed-out at the average daily Tennessee, zone 0 index price published by Platts Gas Daily for the Month during which the imbalance accrued.
11.	ADDRESSES
	11.1	Addresses of Parties.  Except to the extent that oral notification is expressly permitted by this Statement of Operating Conditions, all notices, requests, demands, statements, and payments provided for in this Statement of Operating Conditions must be given in writing at the addresses of the parties specified in the Service Agreement.
	11.2	Change of Address.  A party may change its address under the Service Agreement by giving 30 Days prior written notice.  Notices and payments will be effective when they are delivered at the appropriate address specified in the Service Agreement, during normal business hours on a business Day.  Notices delivered after business hours or on a weekend or holiday will be effective on the next business Day.
12.	LAWS AND REGULATIONS
Transporters transportation services are subject to all present and future valid laws and lawful orders of all regulatory authorities now or hereafter having jurisdiction over the services or facilities used to provide such services, including the provisions of Subpart C of Part 284 of Title 18 of the Code of Federal Regulations (Part 284 Regulations).  All Service Agreements are expressly made subject to any and all tariff and other rate filings made by Transporter and approved by any federal or state regulatory body as such may be amended from time to time.  Transporter will have the right to propose to the FERC or other governing regulatory body such changes in its rates and terms of service at any times as it deems necessary, and Shippers Service Agreement will be deemed to include any changes that are made effective pursuant to an order, regulation, or provisions of law, without prejudice to Shippers right to protest the same.  In the event of a conflict between (i) this Statement of Operating Conditions and/or the Part 284 Regulations and (ii) the Service Agreement, the terms of the documents shall govern in the priority listed in this sentence.  If any regulatory body having jurisdiction over the Service Agreement subjects Transporters facilities to any greater or different regulation or jurisdiction, by order or otherwise, than that existing on the Effective Date, then Transporter may terminate the Service Agreement, anything herein to the contrary notwithstanding, and Transporter will have no further liability to Shipper or any other entity in connection with such termination.  If any order or regulation of a regulatory body having jurisdiction over the Service Agreement prohibits Transporter from charging or collecting rates specified in the Service Agreement or otherwise imposes conditions on such service, then Shipper and Transporter shall negotiate in good faith to amend and restate the Service Agreement so as (i) to conform to the applicable order or regulation affecting such rates or service conditions and (ii) to maintain the total consideration and quality of service initially agreed upon by Transporter and Shipper, to the maximum extent possible; provided that Transporter shall have the right to terminate, with 30 Days written notice to Shipper, the applicable Service Agreement if Shipper and Transporter are unable to mutually agree to amend and restate the Service Agreement to accomplish the foregoing objectives.
13.	PRESSURES AT RECEIPT POINT(S) AND DELIVERY POINT(S)
	13.1	Pressure at Receipt Point(s).  Shipper (or its designee) will deliver Gas to Transporter at the Receipt Point(s) at pressures sufficient to enter Transporters pipeline system at such points, but Shippers delivery pressure into Transporters system at the Receipt Point(s) may not exceed Transporters maximum allowable operating pressure, as such may vary from time to time, at any such point or cause the pressure at any such point to exceed Transporters maximum allowable operating pressure.  Unless otherwise provided in the Service Agreement, Transporter shall not have any obligation to alter its pipeline pressures, provide compression, or modify its pipeline operations in order to effectuate the receipt or delivery of Gas.  
	13.2	Pressure at Delivery Point(s).  Transporter will deliver Gas to Shipper or Shippers designee at Transporters operating pressure at the Delivery Point(s), as such may vary from time to time.
14.	MEASUREMENT
	14.1	Facilities.  Unless otherwise provided in the Service Agreement, Transporter, or Transporters designee, shall maintain and operate the metering facilities to measure the quantities of Gas delivered at each of the Receipt Point(s) and Delivery Point(s).  Transporter, or Transporters designee, shall determine the Thermal Content of the Gas by the facilities at the Receipt Point(s) and Delivery Point(s).  Such facilities and measurement data with respect to the Gas covered hereby shall at all reasonable times be subject to joint inspection by Shipper and Transporter.  Shipper may, at its own expense, install, maintain, and operate check measuring equipment of standard make using separate taps at the Receipt Point(s) in accordance with the standards set forth in Section 14.4 of this Statement of Operating Conditions.  Check meters shall not interfere with operation of Transporters equipment.  Transporter will have access to Shippers check measuring equipment at all reasonable hours, but only Shipper will calibrate, adjust, operate, and maintain the check measuring equipment.
	14.2	Unit of Measurement.
		(a)	The unit of measurement for the purpose of receipt and delivery of natural gas is one MMBtu.
		(b)	The unit of volume for the purpose of measurement is one Mcf at a pressure of 14.73 Psia and at a temperature of 60 degrees Fahrenheit and the measuring party shall compute the readings and registrations of the metering equipment into such unit of volumes as well as MMBtus.
	14.3	Pressure.  Atmospheric pressure is assumed to be 14.73 Psia.
	14.4	Standards.  The measuring party shall compute all orifice meter quantities in accordance with the American Gas Association (AGA) Measurement Committee Report No. 3 and the American National Standards Institute / American Petroleum Institute (ANSI/API) 2530-1985 or the latest edition as agreed to by Shipper and Transporter (herein referred to as AGA 3).  The measuring party shall compute all turbine meter quantities in accordance with AGA Measurement Committee Report No. 7, Measurement of Natural Gas by Turbine Meter, 2006.  The measuring party shall compute all ultrasonic meter quantities in accordance with AGA Measurement Committee Report No. 9, Measurement of Gas by Multipath Ultrasonic Meters, 2007.  The measuring party shall correct all meter quantities for deviations from the ideal gas laws (supercompressibility) in accordance with AGAs Transmission Measurement Committee Report No. 8, dated November, 1992, or the latest edition.  The actual method employed will be mutually agreed by Shipper and Transporter.
	14.5	Method.  The measuring party shall determine the Gross Heating Value, the specific gravity, and the chemistry of the Gas by use of on-line chromatography as follows: GPA 2145  Physical Constants for Paraffin Hydrocarbons and Other Components of Natural Gas, as amended, GPA 2261  Analysis for Natural Gas and Similar Gaseous Mixtures by Gas Chromatography, as amended, GPA 2172  Calculation of Gross Heating Value, Relative Density, and Compressibility of Natural Gas Mixtures from Compositional Analysis, as amended will be utilized in the calculations.  The measuring party shall incorporate Gas quality into the original flow calculations in the flow computer at periods mutually agreed by Shipper and Transporter.  Shipper and Transporter shall have the option of witnessing the calibrations and calculations performed within the chromatograph.  The measuring party shall operate all chromatographs on a C9+ basis, with the assumed physical properties for the C9+ component to be mutually agreed upon by the parties.  Other components to be quantified include C1, C2, C3, IC4, NC4, IC5, NC5, NeoC5, N2, and CO2.  The measuring party shall perform all calculations for heating value and specific gravity on a normalized basis.  Unnormalized total shall not deviate from 100% by more than 2% unless Shipper and Transporter agree to operate from time to time outside this tolerance.
	14.6	Pulsation.  Shipper and Transporter shall have the right to conduct such pulsation tests on its own facilities as each deems prudent, at its sole risk and expense.  If excessive pulsation is evident, mutually agreed modifications to operation or facility design will be made to reduce the effect of such pulsation.  If pulsation issues cannot be resolved in a mutually agreeable manner, then either party shall have the right to refuse delivery or receipt of Gas.
	14.7	Orifice Meter Tubes.  Each party shall offer all orifice meter tubes to the other party for inspection prior to installation and at those times when cleaning is performed.  All meter tubes must conform to the restrictions of AGA 3, or later editions as agreed by Shipper and Transporter.
	14.8	Electronic Flow Measurement.  If electronic flow measurement is used, then the differential and pressure determining instruments shall have a stated accuracy not to exceed 0.1% of full scale and shall not have a static pressure effect exceeding 0.2% per 1000 Psig.
	14.9	Meter Proving.  All meters must conform to applicable AGA reports and will be calibrated/proven on a schedule, but in no event will the calibration period be in excess of 90 Days.  The measuring party shall provide notification of scheduled calibrations to all interested parties and shall make reasonable efforts to accommodate Shippers and Transporters respective schedules, but calibration will proceed at the scheduled time regardless of attendees.
	14.10	Corrections.  If, after testing, a meter is found to be inaccurate by any amount exceeding 1% at a reading corresponding to the average hourly rate of flow for the period since the last preceding test, then the measuring party shall correct any previous reading of such equipment to zero error for any period of inaccurate reading which is known or definitely agreed upon, but in the case the period is not known or agreed upon, for a period extending over 1/2 of the time elapsed since the last test, not exceeding a correction period of 45 Days.
	14.11	Calibration.  The measuring party shall use a calibration standard of a type and class that is shown by the manufacturers specifications to be twice as accurate as the instrument being calibrated.  The measuring party shall certify all differential and pressure standards once per year to conform to the manufacturers stated accuracy by a National Institute of Standards and Technology traceable standard.
	14.12	Estimation.  If any meter was left out of service or is found to be registering inaccurately, then the measuring party shall determine the quantities of Gas delivered by:
		(a)	correcting the error if the percentage of error is ascertainable by calibration, tests, or mathematical calculations;
		(b)	using the registration of any check equipment, if installed and accurately registering; or
		(c)	estimating the quantity or quality of Gas by the quantity or quality of Gas during the preceding periods under similar conditions provided the equipment was registering accurately at that time.
15.	QUALITY

	15.1	Quality Specifications.  Shipper represents and warrants that all Gas tendered for transportation at the Receipt Point(s) is merchantable Gas and, for each constituent, meets the more stringent of (i) the quality specifications required for the acceptance of Gas by any downstream pipeline, or (ii) Transporters quality specifications set forth below (the Quality Specifications):  
		(a)	have a Gross Heating Value of not less than 1,000 Btu per cubic foot nor more than 1,100 Btu per cubic foot;
(b)	be commercially free of dust, gum, gum-forming constituents, gasoline, liquid hydrocarbons, water and any other substance of any kind that may become separated from the Gas during the handling thereof or that may cause injury to or interference with proper operation of the lines, meters, regulators, or other appliances through which it flows;
		(c)	not contain more than nine grains of total sulfur, nor more than 0.25 grains of hydrogen sulfide per 100 standard cubic feet;
		(d)	not contain more than 0.1% oxygen;
		(e)	not contain more than 2% by volume of carbon dioxide;
		(f)	not contain more than 3% by volume of total inert gases;
		(g)	have a temperature of not more than 120 degrees Fahrenheit nor less than forty degrees Fahrenheit (40°F);
		(h)	not contain more than 7.0 pounds of water vapor per 1,000,000 standard cubic feet; and
		(i)	have a hydrocarbon dew point below forty degrees Fahrenheit (40°F). 
	15.2	Disposal of Liquids.  Transporter shall have the right to gather and dispose of all liquids and Condensate in Transporters pipeline system and retain any proceeds in connection therewith.
	15.3	Nonconforming or Deficient Gas.  If, in the aggregate, the Gas received from the Receipt Point(s) does not conform to the Quality Specifications, then Transporter, in its reasonable discretion, may reject any non-conforming gas received from Shipper at specific Receipt Point(s) as necessary to cause the aggregate quality of gas received from Shipper to meet the Quality Specifications.  Acceptance by Transporter of non-conforming Gas from Shipper at any Receipt Point does not constitute a waiver of the Quality Specifications with respect to such Gas, any other Gas delivered under a Service Agreement in the future, or any claim for damages due to such failure to conform, unless Transporter has agreed in writing to accept such non-conforming Gas and expressly waives its claims for damage resulting therefrom.
	15.4	Odorizing.  Shipper is responsible for odorizing any part of the Gas delivered hereunder at the Delivery Point(s), which is diverted and/or used for any purpose for which odorization is required pursuant to regulations of the Texas Railroad Commission.
	15.5	Treatment, Conditioning, or Blending.  If Shippers Gas fails to conform to any of the Quality Specifications, then Transporter, in its discretion, may accept such off-specification Gas for transportation if Shipper has made arrangements to ensure that such off-specification Gas conforms to the applicable specification, including any arrangements to treat, condition, or blend with other Gas, prior to the Gas reaching the downstream pipeline.  Upon request from Transporter, Shipper shall provide documentation acceptable to Transporter demonstrating that Shipper has made such contractual arrangements for such off-specification Gas on the path for which Shipper has nominated Gas.  This provision should not be construed as a general waiver to Transporters specification and is only available where physical blending, treatment, and/or conditioning of Gas is contracted for and will take place prior to reaching the downstream pipeline whose specifications are to be met and such acceptance and service by Transporter shall not adversely impact markets on Transporters system.
 	15.6	Indemnity.  Shipper agrees to defend, indemnify and hold harmless Transporter from and against all Losses arising out of, resulting from or caused by the delivery of Gas to the Receipt Point(s) that does not conform to the Quality Specifications, unless Transporter has agreed in writing to accept such non-conforming Gas and expressly waives its claims for damage resulting from such acceptance.
	15.7	New Quality Specifications.  Notwithstanding the foregoing, Transporter may from time to time, revise this Statement of Operating Conditions so that the Quality Specifications conform to the specifications of receiving pipelines downstream of the Delivery Point(s).  
15.8	Greenhouse Gas Emissions.  Notwithstanding anything contained in this Statement of Operating Conditions to the contrary, if there is an enactment of, or change in, any law or regulation which, in Transporters determination, results in a Governmental Authority requiring Transporter to hold or acquire emission allowances or their equivalent related to the carbon dioxide content or emissions or the greenhouse gas content or emissions attributable to a Shippers Gas and/or the transportation, and/or storage of such Gas (collectively, Shippers GHG Emissions), then each Shipper shall provide those allowances to Transporter in a timely manner (or indemnify Transporter for any Losses arising out of a Shippers failure to do so).  If a Shipper fails to provide such emission allowances and Transporter incurs an expense to acquire such allowances in the marketplace or otherwise, or if any other additional economic burden is placed on Transporter in connection with or related to Shippers GHG Emissions, including any tax, assessment, or other cost or expense (collectively, Emissions Charges), then such Emissions Charges are fully the responsibility of Shipper.  If Transporter incurs any such Emissions Charges, then Shipper shall reimburse Transporter for the same within 10 Days of receipt of Transporters invoice for the same.
16.	BILLING, ACCOUNTING, AND REPORTS
	16.1	Invoices.  On or before the 10th Day of each calendar Month, Transporter shall render an invoice to Shipper setting forth the total quantity of Gas received hereunder at the Receipt Point(s), the Retention Quantities, and the quantity of Gas delivered hereunder at the Delivery Point(s) during the immediately preceding calendar Month and the charges and rates payable hereunder.  Shipper shall pay Transporter by wire transfer (identifying the invoice number) the full amount payable according to such statement on or before the later of the 25th Day of the Month or fifteen (15) Days following the receipt thereof by Shipper.  If such quantities are estimated for any period and the actual quantity received or delivered hereunder with respect to a Month is determined to be at variance with the estimated quantity theretofore made the basis of billing and payment hereunder, then Transporter shall render corrected invoices to Shipper and Shipper shall pay, or Transporter shall refund or credit to Shipper, as the case may be, the difference between the amount included in the original invoice and the amount due based on the actual quantity received.  If an error is discovered in the amount billed in any invoice rendered by Transporter, then Transporter shall adjust such error within 30 Days of the discovery of the error.  Shipper shall make all payments pursuant to a Service Agreement in United States Dollars, in immediately available funds and without deduction, setoff, or counterclaim to such account or accounts as directed by Transporter.
	16.2	Disputed Amounts.  If a bona-fide dispute arises as to the amount payable in any statement rendered, then Shipper shall pay the undisputed amount payable to Transporter under the statement rendered pending resolution of the dispute.  Such payment is not to be deemed a waiver of the right by Shipper to recoup any overpayment.
	16.3	Interest.  In addition to all other available remedies, if Shipper or Transporter fails to pay any amount when the same becomes due, then the other party is entitled to interest thereon at an annual rate equal to the prime rate as published in the Money Rates section of The Wall Street Journal plus 1.0% (but in no event greater than the maximum rate of non-usurious interest permitted by law) from the date payment is due until the date payment is made, with adjustments in such rate to be made on the same Day as any change in such prime rate.  Any party or its representative may, at all reasonable times, examine the books and records of the other parties to the extent necessary to verify the accuracy of any statement, charge, computation, or demand made under or pursuant to a Service Agreement.  All statements are final as to the parties unless questioned within two years after payment thereof has been made.
	16.4	Audit.  
		(a)	Audits.  No more than once every 12 Months during the term of any Service Agreement, and subject to the confidentiality obligations of the parties, Transporter shall allow Shipper and any auditor designated by Shipper, upon no less than 10 business Days written notice, to review all records, books, files, and electronic records of Transporter relating to the transportation services provided under Shippers Service Agreement and maintained by Transporter (except such materials as are covered by attorney-client privilege or confidentiality obligations to third parties).  Transporter shall provide such auditors as Shipper may designate with reasonable access to Transporters premises solely for the purpose of performing audits or inspections permitted hereunder.  Transporter shall provide to such auditors such reasonable assistance as they may request.  Shipper shall obligate such auditors to protect the confidentiality of and restrict the use of Transporters confidential information to performing the audit contemplated herein.  Transporter shall provide such reasonable audit assistance described above at no charge for one audit per calendar year, but Shipper shall bear all costs and expenses in connection with any audit hereunder.  Transporter shall reply in writing to an audit report within 180 Days after receipt of such report.  If Shipper and Transporter fail or are unable to resolve any audit disputes, then the parties shall resolve the matter using the dispute resolution procedures set forth in Section 21.10(a) of this Statement of Operating Conditions.
		(b)	Terms of Access.  Shipper shall conduct all on-site monitoring and other audits and inspections by auditors and inspectors retained by Shipper pursuant to this Section in such a manner so as not to interfere with the normal operations of Transporter.  While on the premises of Transporter, Shipper shall ensure that auditing personnel observe the rules and requirements of Transporter regarding security and personal or professional conduct and appearance.
		(c)	Cessation of Audit Rights.  Shipper will have up to 24 Months after the close of a calendar year in which to make an audit of Transporters records for such calendar year.  Notwithstanding the foregoing, all rights of access and audit provided hereunder terminate 24 Months after the expiration of the term of the Service Agreement.
17.	WARRANTIES, LIABILITY, AND INDEMNIFICATIONS
	17.1	Title.  Shipper warrants that it owns or has the right to possess all Gas delivered by it hereunder and that it has the right to deliver the same hereunder and that such Gas is free from liens, encumbrances, and adverse claims of every kind.  Shipper hereby agrees to indemnify, defend, and hold harmless Transporter from and against any and all Losses arising out of or related to any breach of the foregoing representation and warranty.  Shipper shall at all times have title to or the right to possess all Gas transported hereunder.
	17.2	Additional Warranties.  Every Shipper executing a Service Agreement represents that:  (i) it has all necessary power and authority to execute, deliver, and perform its obligations under the Service Agreement (ii) the execution, delivery, and performance by it of the Service Agreement and the consummation of the transactions contemplated thereby have been duly authorized by all necessary actions, including corporate, partnership, and shareholder action; (iii) each Service Agreement has been duly executed and delivered and constitutes its legal, valid, and binding obligation enforceable in accordance with its terms; and (iv) the execution, delivery, and performance by it of each Service Agreement and the consummation of the transactions contemplated thereby do not violate any Applicable Law or regulation or its constitutive documents or violate or result in a default under any agreement or instrument binding on it or any of its subsidiaries or assets.
	17.3	Indemnification.
		(a)	Responsibility for Injury or Damage.  As between the parties: (i) Shipper is deemed to be in exclusive control and possession of the Gas and responsible for any injury or damage relating to handling, gathering, transportation, delivery, and receipt of Gas upstream of the Receipt Point(s) and at and downstream of the Delivery Point(s); and (ii) Transporter is deemed to be in exclusive control and possession and responsible for any injury or damage relating to handling, transporting, receipt, and redelivery of Gas at and downstream of the Receipt Point(s) and upstream of the Delivery Point(s).  THE PARTY HAVING CONTROL AND POSSESSION OF GAS UNDER THE PRECEDING SENTENCE (THE INDEMNIFYING PARTY) SHALL RELEASE, DEFEND, INDEMNIFY, AND HOLD THE OTHER PARTY, ITS AFFILIATES, AND ITS AND THEIR RESPECTIVE SHAREHOLDERS, MEMBERS, OFFICERS, DIRECTORS, EMPLOYEES, AND AGENTS (COLLECTIVELY, THE INDEMNIFIED PARTIES) HARMLESS FROM AND AGAINST ALL LOSSES ARISING FROM ACTUAL AND ALLEGED BODILY INJURY, DEATH, AND PROPERTY DAMAGE RELATING TO GAS WHILE SUCH GAS IS IN THE INDEMNIFYING PARTYS CONTROL AND POSSESSION; PROVIDED, HOWEVER, AN INDEMNIFYING PARTY IS NOT OBLIGATED TO RELEASE, DEFEND, INDEMNIFY, OR HOLD ANY INDEMNIFIED PARTY HARMLESS TO THE EXTENT OF SUCH INDEMNIFIED PARTYS OWN NEGLIGENCE, GROSS NEGLIGENCE, OR WILLFUL MISCONDUCT.
		(b)	The indemnity provisions of this Section 17.3 do not apply to Losses for which the indemnity provisions of Sections 15.6, 15.8, 17.1, 17.4, 17.5 or 17.6 of this Statement of Operating Conditions apply.
	17.4	Royalties.  As between Shipper and Transporter, Shipper has the sole and exclusive obligation and liability for and shall make payment to all persons due any proceeds derived from the Gas delivered under a Service Agreement, including royalties, overriding royalties, and similar interests, in accordance with the provisions of the leases or agreements creating those rights to proceeds.  In no event will Transporter have any obligation to those persons due any of those proceeds of production attributable to the Gas delivered under the Service Agreement.  Shipper hereby agrees to indemnify, defend, and hold harmless Transporter from and against any and all Losses arising out of or related to the proceeds of production attributable to the Gas delivered under the Service Agreement.
	17.5	Taxes.  Shipper shall pay and be responsible for all Taxes levied against or with respect to Gas delivered or services provided under the Service Agreement.  Under no circumstances is Transporter liable for such Taxes, unless designated to remit those Taxes on behalf of Shipper by any duly constituted jurisdictional agency having authority to impose such obligations on Transporter, in which event Shipper shall reimburse Transporter for the amount of such Taxes remitted on Shippers behalf upon receipt of an invoice, with corresponding documentation from Transporter setting forth such payments.  Shipper hereby agrees to indemnify, defend, and hold harmless Transporter from and against any and all Taxes levied against or with respect to Gas delivered or services provided under the Service Agreement.
	17.6	Royalty and Taxes Indemnification.  Shipper hereby agrees to defend and indemnify and hold Transporter harmless from and against any and all Losses arising from the payments made by Shipper in accordance with Sections 17.4 and 17.5 of this Statement of Operating Conditions, including Losses arising from claims for the nonpayment, mispayment, or wrongful calculation of those payments.
17.7	Shippers Warranty.  Shipper warrants that, at all times during the term of the Service Agreement, Shipper will commit no act or omission that will cause the transportation service provided to Shipper to fail to comply with all applicable rules and regulations of the applicable regulatory agencies, including the on behalf of provisions of the Part 284 Regulations.

18.	FORCE MAJEURE
	18.1	Effect of Force Majeure.  If either party is rendered unable, wholly or in part, by Force Majeure (as defined below) or other causes herein specified, to carry out its obligations under this Statement of Operating Conditions and a Service Agreement, other than the obligation to make payment of amounts due hereunder, then, on such partys giving notice and reasonably full particulars of such Force Majeure in writing or facsimile or by email to the other party within a reasonable time after the occurrence of the cause relied on, the obligations of the party giving such notice, so far as they are affected by such Force Majeure or other causes herein specified, are suspended during the continuance of any inability so caused, but for no longer period, but the party claiming Force Majeure shall, so far as possible, remedy such cause with all reasonable dispatch.  However, the settlement of strikes or lockouts is entirely within the discretion of the party having the difficulty and the above requirement that any Force Majeure must be remedied with all reasonable dispatch does not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.  During the pendency of an event of Force Majeure, Shipper shall not unless otherwise agreed be relieved of Reservation Charge payment obligations in respect of any service reductions attributable to the Force Majeure.
	18.2	Definition of Force Majeure.  Unless otherwise provided in a Service Agreement, Force Majeure shall mean any act or event that (a) renders the affected party unable to comply with its obligations under the Service Agreement; (b) is beyond the affected partys control and is not the result of the fault or negligence of the affected party, and (c) could not be prevented or avoided by the affected party through the exercise of due diligence and the expenditure of reasonable amounts of money considering the scope of the service being provided.  Subject to the satisfaction of the conditions set forth in the immediately preceding clauses (a) - (b), Force Majeure shall include, without limitation, the following acts or events:  (i) natural phenomena such as storms, floods, lightning, freezes and earthquakes (ii) wars (whether declared or not), terrorist acts, civil disturbances, riots, insurrections, sabotage and commercial embargoes, (iii) transportation disasters, whether maritime, railroad, air or land (iv) fires, (v) inability to obtain rights of way or necessary permits despite reasonable efforts to do so; (vi) acts of a Governmental Authority that have not been voluntarily induced by the affected party or any of its affiliates (with the understanding that neither party shall be deemed to be an affiliate of the other party), and that are not the result of an affected partys noncompliance with its obligations; and (vii) unscheduled maintenance of Transporters system.  Force Majeure shall not include any of the following events:  (a) economic difficulty; (b) change in market conditions; or (c) failures by any of the Subcontractors, except when such failure is caused by an act that meets the requirements of Force Majeure as provided above.  
	18.3	Inspection.  With the exception of the obligations to make payments due hereunder, either Shipper or Transporter may partially or entirely interrupt its performance hereunder for the purpose of making necessary or desirable inspections, alterations, or repairs, which are described as a maintenance event, but only for such time as may be reasonable and unavoidable; and the party requiring such relief shall give to the other party no less than 30 Days notice of its intention to suspend its performance hereunder, except in cases of emergency where such notice is impracticable, and shall endeavor to arrange such interruption so as to inconvenience the other party as little as possible.  If a Force Majeure or maintenance event occurs, then the quantities to be delivered and/or received at the Receipt Point(s) and Delivery Point(s) by Transporter must be balanced with the nominated quantities.
19.	WAIVER OF BREACHES, DEFAULTS, OR RIGHTS
No waiver by either party of any one or more breaches, defaults, or rights under any provisions of this Statement of Operating Conditions or the Service Agreement, operates, or is to be construed, as a waiver of any other breaches, defaults, or rights, whether of a like or of a different character.  By providing written notice to the other party, either party may assert any right not previously asserted hereunder or thereunder or may assert its right to object to a default not previously protested.  Transporter reserves the right to vary its operations from this Statement of Operating Conditions from time to time on a non-discriminatory basis, and the parties agree that if it does so it will not be deemed to have waived its right subsequently to enforce the provisions of this Statement of Operating Conditions.  Variances from the terms of this Statement of Operating Conditions or a Service Agreement, are not be considered to amend or alter the construction or interpretation of the Service Agreement.  Except as specifically provided herein or in the Service Agreement, in the event of any Dispute under this Statement of Operating Conditions or the Service Agreement, the parties shall, notwithstanding the pendency of such Dispute, diligently proceed with the performance of the Service Agreement without prejudice to the rights of either party.
20.	REMEDY FOR BREACH
Except as otherwise specifically provided herein, if either party breaches a material warranty or representation or fails to perform any of the material covenants or obligations imposed upon it in this Statement of Operating Conditions or the Service Agreement (except where such failure is excused or another form of remedy is provided for under the Force Majeure or other provisions hereof or thereof), then the other party may, at its option (without waiving any other remedy for breach hereof), by notice in writing specifying the default that has occurred, indicate such partys intention to terminate the Service Agreement by reason thereof.  The party in default will have 30 Days from receipt of such notice to remedy such material default, and upon failure to do so, the non-defaulting party may elect to immediately terminate the Service Agreement.  Notwithstanding the foregoing, Shippers failure to pay Transporter within a period of 10 Days following Shippers receipt of written notice from Transporter advising of such failure to make payment in full within the time specified previously herein, will be a default that gives Transporter the right to immediately terminate the Service Agreement, unless such failure to pay such amounts is the result of a bona-fide dispute between the parties regarding such amounts and Shipper timely pays all amounts not in dispute.  Such termination will be an additional remedy and will not: (i) prejudice the right of the party not in default to collect any amounts due it for any damage or loss suffered by it, or (ii) waive any other remedy to which the party not in default may be entitled for breach of this Statement of Operating Conditions or the Service Agreement.  
21.	MISCELLANEOUS
	21.1	Assignment and Transfer.  This Statement of Operating Conditions and the Service Agreement are binding upon and will inure to the benefit of the parties and their respective successors, assigns, and legal representatives.  However, Shipper may not assign or transfer the Service Agreement, or any benefit or obligation arising thereunder, without first obtaining Transporters prior written consent, which consent will not be unreasonably withheld, conditioned, or delayed.  Notwithstanding the above, Shipper may transfer its interests, rights, and obligations under the Service Agreement without Transporters consent to (i) any parent, affiliate, or any successor in interest to substantially all of Shippers assets, provided the assignee has creditworthiness equal to or better than Shipper, as determined in Transporters reasonable discretion, or (ii) any individual, bank, trustee, company, or corporation as security for any note, notes, bonds, or other obligations or securities of Shipper.  Any permitted assignment or transfer shall not relieve Shipper of any of its liabilities, obligations, or duties hereunder incurred prior to such assignment.  Any purported transfer or assignment without required consent will be a breach of the Service Agreement.
	21.2	Entirety.  This Statement of Operating Conditions, and each Service Agreement constitute the entire agreement between the parties respecting the subject matter hereof, and there are no prior or contemporaneous agreements or representations affecting such subject matter (whether oral or written) other than those herein or therein expressed.
	21.3	Contract Interpretation. (i) Words that have a well-known technical, trade, or industry meaning have that meaning unless it would conflict with an express provision of this Statement of Operating Conditions, in which case the express provision of this Statement of Operating Conditions controls; (ii) the section headings in this Statement of Operating Conditions have been inserted for the convenience of the parties and shall not define, limit, or extend interpretation of the corresponding Section or Article of this Statement of Operating Conditions; and (iii) the word includes and its syntactical variants mean includes, but is not limited to and corresponding syntactical variant expressions.
	21.4	Waiver.  No waiver by a party of any one or more defaults by the other in the performance of any of the provisions of a Service Agreement shall operate or be construed as a waiver of any future default or defaults whether of a like kind or different nature.
	21.5	No Third Party Beneficiaries.  The provisions of this Statement of Operating Conditions or any Service Agreement shall not impart rights enforceable by any person, firm, or organization not a party or not bound as a party, or not a successor or assignee of party bound to a Service Agreement.
	21.6	No Partnership or Association.  Nothing contained in this Statement of Operating Conditions or a Service Agreement creates an association, trust, partnership, or joint venture or imposes a trust or partnership duty, obligation, or liability on or with regard to either party.
	21.7	Exhibit.  Exhibit A (Statement of Rates) is attached to this Statement of Operating Conditions and is incorporated herein and made a part of this Statement of Operating Conditions. 
	21.8	Counterparts.  The Service Agreement may be executed in a number of counterparts, each of which is to be considered an original.
	21.9	Law.  THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, AND THE RIGHTS OF TRANSPORTER AND SHIPPER HEREUNDER AND THEREUNDER SHALL BE INTERPRETED AND ENFORCED IN ACCORDANCE WITH LAWS OF THE STATE OF TEXAS WITHOUT GIVING EFFECT TO ANY CHOICE OR CONFLICT OF LAW PROVISION OR RULE (WHETHER OF THE STATE OF TEXAS OR ANY OTHER JURISDICTION) THAT WOULD CAUSE THE APPLICATION OF THE LAWS OF ANY JURISDICTION OTHER THAN THE STATE OF TEXAS.
	21.10	Dispute Resolution; Venue.
	UNLESS OTHERWISE PROVIDED IN A SERVICE AGREEMENT, SHIPPER AND TRANSPORTER AGREE TO THE FOLLOWING:

	(a)	With respect to all disputes under or relating to this Statement of Operating Conditions or a Service Agreement (a Dispute), any party wishing to initiate dispute resolution with respect to such a Dispute shall give written notice of the Dispute to the other party (a Dispute Notice). Within five Days after receipt of the Dispute Notice, the parties management representatives shall meet in an attempt to resolve the Dispute. If such representatives cannot resolve the Dispute within 15 Days of receipt of the initial Dispute Notice, then the parties shall refer the Dispute to the parties respective senior executives. Such senior executives shall meet or confer by conference call within five Days after referral of the Dispute to them, and shall have 10 Days thereafter to attempt to fully resolve the Dispute. If the parties are unable to resolve any Dispute within the periods provided in this Section 21.10(a), then either party may, at its discretion, commence litigation as provided in Section 21.10(b) of this Statement of Operating Conditions.

	(b)	TRANSPORTER AND SHIPPER AGREE TO THE JURISDICTION OF THE FEDERAL AND STATE COURTS IN HARRIS COUNTY, TEXAS AND AGREE THAT ANY ACTION, SUIT, OR PROCEEDING CONCERNING, RELATED TO, OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, OR ANY TRANSACTION CONTEMPLATED THEREBY WILL BE BROUGHT ONLY IN A FEDERAL OR STATE COURT IN HARRIS COUNTY, TEXAS AND NEITHER TRANSPORTER NOR SHIPPER MAY RAISE ANY DEFENSE OR OBJECTION OR FILE ANY MOTION BASED ON LACK OF PERSONAL JURISDICTION, IMPROPER VENUE, INCONVENIENCE OF THE FORUM, OR THE LIKE IN ANY CASE FILED IN A FEDERAL OR STATE COURT IN HARRIS COUNTY, TEXAS.

	(c)	TRANSPORTER AND SHIPPER EACH HEREBY WAIVES, TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, ANY RIGHT THAT IT MAY HAVE TO (1) SOVEREIGN IMMUNITY AND (2) TRIAL BY JURY, IN ANY PROCEEDING ARISING OUT OF OR RELATING TO THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT OR ANY TRANSACTION CONTEMPLATED THEREBY.

21.11  LIMITATION ON DAMAGES. EXCEPT FOR DAMAGES THAT ARISE OUT OF A BREACH OF THE WARRANTY CONTAINED IN SECTION 17.7 OR THE QUALITY PROVISIONS CONTAINED IN SECTION 15, IN NO EVENT WILL TRANSPORTER OR SHIPPER BE LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, INCIDENTAL, PUNITIVE, EXEMPLARY, OR CONSEQUENTIAL DAMAGES, INCLUDING THE LOSS OF USE, OR LOST PROFITS, IRRESPECTIVE OF WHETHER CLAIMS OR ACTIONS FOR SUCH DAMAGES ARE BASED ON CONTRACT, TORT, WARRANTY, NEGLIGENCE, STRICT LIABILITY, OR OTHERWISE.




EXHIBIT A
TO
STATEMENT OF OPERATING CONDITIONS

STATEMENT OF RATES
Transporters maximum and minimum rates for transportation service pursuant to Section 311(a)(2) of the NGPA are as follows:

Maximum
Minimum


Firm Transportation Service

Reservation Rate:


Usage Rate:



$0.1318 per MMBtu per Day 

$0.0005 per MMBtu per Day




$0.0005 per MMBtu per Day


$0.0005 per MMBtu per Day 

Authorized Overrun Service
Authorized Overrun Rate:
$0.1323 per MMBtu
$0.0005 per MMBtu
Interruptible Transportation Service
Interruptible Transportation Rate:
$0.1323 per MMBtu
$0.0005 per MMBtu
Park and Loan Service
Parking Rate:
$0.1323 per MMBtu per Day
$0.0005 per MMBtu per Day
Loaning Rate:
$0.1323 per MMBtu per Day
$0.0005 per MMBtu per Day

Retention Quantities	Transporter will retain from each Shipper such Shippers pro rata share of the quantity of any Gas that is actually retained by Transporter for (i) Fuel and (ii) Lost and Unaccounted for Gas   
35</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2139</filing_id>
      <filing_title>Petition for Approval of Rates for Transportation Service under NGPA Section 311</filing_title>
      <filing_type>1300</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-12-30</current_effective_date>
      <ferc_order_date>2025-03-01</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>